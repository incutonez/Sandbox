var vc=Object.defineProperty;var Ms=Object.getOwnPropertySymbols;var gc=Object.prototype.hasOwnProperty,bc=Object.prototype.propertyIsEnumerable;var Ba=(e,t,i)=>t in e?vc(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,Fi=(e,t)=>{for(var i in t||(t={}))gc.call(t,i)&&Ba(e,i,t[i]);if(Ms)for(var i of Ms(t))bc.call(t,i)&&Ba(e,i,t[i]);return e};var St=(e,t,i)=>(Ba(e,typeof t!="symbol"?t+"":t,i),i);const yc=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const d of document.querySelectorAll('link[rel="modulepreload"]'))r(d);new MutationObserver(d=>{for(const a of d)if(a.type==="childList")for(const l of a.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&r(l)}).observe(document,{childList:!0,subtree:!0});function i(d){const a={};return d.integrity&&(a.integrity=d.integrity),d.referrerpolicy&&(a.referrerPolicy=d.referrerpolicy),d.crossorigin==="use-credentials"?a.credentials="include":d.crossorigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function r(d){if(d.ep)return;d.ep=!0;const a=i(d);fetch(d.href,a)}};yc();function Io(e,t){const i=Object.create(null),r=e.split(",");for(let d=0;d<r.length;d++)i[r[d]]=!0;return t?d=>!!i[d.toLowerCase()]:d=>!!i[d]}const wc="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",xc=Io(wc);function sf(e){return!!e||e===""}function bi(e){if(qe(e)){const t={};for(let i=0;i<e.length;i++){const r=e[i],d=mt(r)?kc(r):bi(r);if(d)for(const a in d)t[a]=d[a]}return t}else{if(mt(e))return e;if(vt(e))return e}}const Ac=/;(?![^(]*\))/g,Pc=/:(.+)/;function kc(e){const t={};return e.split(Ac).forEach(i=>{if(i){const r=i.split(Pc);r.length>1&&(t[r[0].trim()]=r[1].trim())}}),t}function Ut(e){let t="";if(mt(e))t=e;else if(qe(e))for(let i=0;i<e.length;i++){const r=Ut(e[i]);r&&(t+=r+" ")}else if(vt(e))for(const i in e)e[i]&&(t+=i+" ");return t.trim()}function Mo(e){if(!e)return null;let{class:t,style:i}=e;return t&&!mt(t)&&(e.class=Ut(t)),i&&(e.style=bi(i)),e}function Nc(e,t){if(e.length!==t.length)return!1;let i=!0;for(let r=0;i&&r<e.length;r++)i=tn(e[r],t[r]);return i}function tn(e,t){if(e===t)return!0;let i=Ts(e),r=Ts(t);if(i||r)return i&&r?e.getTime()===t.getTime():!1;if(i=oi(e),r=oi(t),i||r)return e===t;if(i=qe(e),r=qe(t),i||r)return i&&r?Nc(e,t):!1;if(i=vt(e),r=vt(t),i||r){if(!i||!r)return!1;const d=Object.keys(e).length,a=Object.keys(t).length;if(d!==a)return!1;for(const l in e){const s=e.hasOwnProperty(l),g=t.hasOwnProperty(l);if(s&&!g||!s&&g||!tn(e[l],t[l]))return!1}}return String(e)===String(t)}function To(e,t){return e.findIndex(i=>tn(i,t))}const ur=e=>mt(e)?e:e==null?"":qe(e)||vt(e)&&(e.toString===uf||!Ke(e.toString))?JSON.stringify(e,lf,2):String(e),lf=(e,t)=>t&&t.__v_isRef?lf(e,t.value):Sn(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((i,[r,d])=>(i[`${r} =>`]=d,i),{})}:Hn(t)?{[`Set(${t.size})`]:[...t.values()]}:vt(t)&&!qe(t)&&!cf(t)?String(t):t,at={},En=[],er=()=>{},Ec=()=>!1,Sc=/^on[^a-z]/,pa=e=>Sc.test(e),zo=e=>e.startsWith("onUpdate:"),Zt=Object.assign,Ho=(e,t)=>{const i=e.indexOf(t);i>-1&&e.splice(i,1)},Cc=Object.prototype.hasOwnProperty,$e=(e,t)=>Cc.call(e,t),qe=Array.isArray,Sn=e=>yi(e)==="[object Map]",Hn=e=>yi(e)==="[object Set]",Ts=e=>yi(e)==="[object Date]",Ke=e=>typeof e=="function",mt=e=>typeof e=="string",oi=e=>typeof e=="symbol",vt=e=>e!==null&&typeof e=="object",ff=e=>vt(e)&&Ke(e.then)&&Ke(e.catch),uf=Object.prototype.toString,yi=e=>uf.call(e),Rc=e=>yi(e).slice(8,-1),cf=e=>yi(e)==="[object Object]",Bo=e=>mt(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,Zi=Io(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),ma=e=>{const t=Object.create(null);return i=>t[i]||(t[i]=e(i))},Fc=/-(\w)/g,hr=ma(e=>e.replace(Fc,(t,i)=>i?i.toUpperCase():"")),Oc=/\B([A-Z])/g,ln=ma(e=>e.replace(Oc,"-$1").toLowerCase()),va=ma(e=>e.charAt(0).toUpperCase()+e.slice(1)),Da=ma(e=>e?`on${va(e)}`:""),si=(e,t)=>!Object.is(e,t),Gi=(e,t)=>{for(let i=0;i<e.length;i++)e[i](t)},Xi=(e,t,i)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:i})},qi=e=>{const t=parseFloat(e);return isNaN(t)?e:t};let zs;const Ic=()=>zs||(zs=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{});let or;class Mc{constructor(t=!1){this.active=!0,this.effects=[],this.cleanups=[],!t&&or&&(this.parent=or,this.index=(or.scopes||(or.scopes=[])).push(this)-1)}run(t){if(this.active){const i=or;try{return or=this,t()}finally{or=i}}}on(){or=this}off(){or=this.parent}stop(t){if(this.active){let i,r;for(i=0,r=this.effects.length;i<r;i++)this.effects[i].stop();for(i=0,r=this.cleanups.length;i<r;i++)this.cleanups[i]();if(this.scopes)for(i=0,r=this.scopes.length;i<r;i++)this.scopes[i].stop(!0);if(this.parent&&!t){const d=this.parent.scopes.pop();d&&d!==this&&(this.parent.scopes[this.index]=d,d.index=this.index)}this.active=!1}}}function Tc(e,t=or){t&&t.active&&t.effects.push(e)}const Do=e=>{const t=new Set(e);return t.w=0,t.n=0,t},hf=e=>(e.w&Mr)>0,df=e=>(e.n&Mr)>0,zc=({deps:e})=>{if(e.length)for(let t=0;t<e.length;t++)e[t].w|=Mr},Hc=e=>{const{deps:t}=e;if(t.length){let i=0;for(let r=0;r<t.length;r++){const d=t[r];hf(d)&&!df(d)?d.delete(e):t[i++]=d,d.w&=~Mr,d.n&=~Mr}t.length=i}},_a=new WeakMap;let Xn=0,Mr=1;const $a=30;let Qt;const _r=Symbol(""),eo=Symbol("");class Zo{constructor(t,i=null,r){this.fn=t,this.scheduler=i,this.active=!0,this.deps=[],this.parent=void 0,Tc(this,r)}run(){if(!this.active)return this.fn();let t=Qt,i=Fr;for(;t;){if(t===this)return;t=t.parent}try{return this.parent=Qt,Qt=this,Fr=!0,Mr=1<<++Xn,Xn<=$a?zc(this):Hs(this),this.fn()}finally{Xn<=$a&&Hc(this),Mr=1<<--Xn,Qt=this.parent,Fr=i,this.parent=void 0,this.deferStop&&this.stop()}}stop(){Qt===this?this.deferStop=!0:this.active&&(Hs(this),this.onStop&&this.onStop(),this.active=!1)}}function Hs(e){const{deps:t}=e;if(t.length){for(let i=0;i<t.length;i++)t[i].delete(e);t.length=0}}let Fr=!0;const pf=[];function fn(){pf.push(Fr),Fr=!1}function un(){const e=pf.pop();Fr=e===void 0?!0:e}function Jt(e,t,i){if(Fr&&Qt){let r=_a.get(e);r||_a.set(e,r=new Map);let d=r.get(i);d||r.set(i,d=Do()),mf(d)}}function mf(e,t){let i=!1;Xn<=$a?df(e)||(e.n|=Mr,i=!hf(e)):i=!e.has(Qt),i&&(e.add(Qt),Qt.deps.push(e))}function gr(e,t,i,r,d,a){const l=_a.get(e);if(!l)return;let s=[];if(t==="clear")s=[...l.values()];else if(i==="length"&&qe(e))l.forEach((g,b)=>{(b==="length"||b>=r)&&s.push(g)});else switch(i!==void 0&&s.push(l.get(i)),t){case"add":qe(e)?Bo(i)&&s.push(l.get("length")):(s.push(l.get(_r)),Sn(e)&&s.push(l.get(eo)));break;case"delete":qe(e)||(s.push(l.get(_r)),Sn(e)&&s.push(l.get(eo)));break;case"set":Sn(e)&&s.push(l.get(_r));break}if(s.length===1)s[0]&&to(s[0]);else{const g=[];for(const b of s)b&&g.push(...b);to(Do(g))}}function to(e,t){const i=qe(e)?e:[...e];for(const r of i)r.computed&&Bs(r);for(const r of i)r.computed||Bs(r)}function Bs(e,t){(e!==Qt||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}const Bc=Io("__proto__,__v_isRef,__isVue"),vf=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(oi)),Dc=Go(),Zc=Go(!1,!0),Gc=Go(!0),Ds=jc();function jc(){const e={};return["includes","indexOf","lastIndexOf"].forEach(t=>{e[t]=function(...i){const r=et(this);for(let a=0,l=this.length;a<l;a++)Jt(r,"get",a+"");const d=r[t](...i);return d===-1||d===!1?r[t](...i.map(et)):d}}),["push","pop","shift","unshift","splice"].forEach(t=>{e[t]=function(...i){fn();const r=et(this)[t].apply(this,i);return un(),r}}),e}function Go(e=!1,t=!1){return function(r,d,a){if(d==="__v_isReactive")return!e;if(d==="__v_isReadonly")return e;if(d==="__v_isShallow")return t;if(d==="__v_raw"&&a===(e?t?nh:xf:t?wf:yf).get(r))return r;const l=qe(r);if(!e&&l&&$e(Ds,d))return Reflect.get(Ds,d,a);const s=Reflect.get(r,d,a);return(oi(d)?vf.has(d):Bc(d))||(e||Jt(r,"get",d),t)?s:dt(s)?l&&Bo(d)?s:s.value:vt(s)?e?Ui(s):Zr(s):s}}const Vc=gf(),Lc=gf(!0);function gf(e=!1){return function(i,r,d,a){let l=i[r];if(li(l)&&dt(l)&&!dt(d))return!1;if(!e&&!li(d)&&(ro(d)||(d=et(d),l=et(l)),!qe(i)&&dt(l)&&!dt(d)))return l.value=d,!0;const s=qe(i)&&Bo(r)?Number(r)<i.length:$e(i,r),g=Reflect.set(i,r,d,a);return i===et(a)&&(s?si(d,l)&&gr(i,"set",r,d):gr(i,"add",r,d)),g}}function Yc(e,t){const i=$e(e,t);e[t];const r=Reflect.deleteProperty(e,t);return r&&i&&gr(e,"delete",t,void 0),r}function Jc(e,t){const i=Reflect.has(e,t);return(!oi(t)||!vf.has(t))&&Jt(e,"has",t),i}function Xc(e){return Jt(e,"iterate",qe(e)?"length":_r),Reflect.ownKeys(e)}const bf={get:Dc,set:Vc,deleteProperty:Yc,has:Jc,ownKeys:Xc},qc={get:Gc,set(e,t){return!0},deleteProperty(e,t){return!0}},Uc=Zt({},bf,{get:Zc,set:Lc}),jo=e=>e,ga=e=>Reflect.getPrototypeOf(e);function Oi(e,t,i=!1,r=!1){e=e.__v_raw;const d=et(e),a=et(t);i||(t!==a&&Jt(d,"get",t),Jt(d,"get",a));const{has:l}=ga(d),s=r?jo:i?Jo:fi;if(l.call(d,t))return s(e.get(t));if(l.call(d,a))return s(e.get(a));e!==d&&e.get(t)}function Ii(e,t=!1){const i=this.__v_raw,r=et(i),d=et(e);return t||(e!==d&&Jt(r,"has",e),Jt(r,"has",d)),e===d?i.has(e):i.has(e)||i.has(d)}function Mi(e,t=!1){return e=e.__v_raw,!t&&Jt(et(e),"iterate",_r),Reflect.get(e,"size",e)}function Zs(e){e=et(e);const t=et(this);return ga(t).has.call(t,e)||(t.add(e),gr(t,"add",e,e)),this}function Gs(e,t){t=et(t);const i=et(this),{has:r,get:d}=ga(i);let a=r.call(i,e);a||(e=et(e),a=r.call(i,e));const l=d.call(i,e);return i.set(e,t),a?si(t,l)&&gr(i,"set",e,t):gr(i,"add",e,t),this}function js(e){const t=et(this),{has:i,get:r}=ga(t);let d=i.call(t,e);d||(e=et(e),d=i.call(t,e)),r&&r.call(t,e);const a=t.delete(e);return d&&gr(t,"delete",e,void 0),a}function Vs(){const e=et(this),t=e.size!==0,i=e.clear();return t&&gr(e,"clear",void 0,void 0),i}function Ti(e,t){return function(r,d){const a=this,l=a.__v_raw,s=et(l),g=t?jo:e?Jo:fi;return!e&&Jt(s,"iterate",_r),l.forEach((b,c)=>r.call(d,g(b),g(c),a))}}function zi(e,t,i){return function(...r){const d=this.__v_raw,a=et(d),l=Sn(a),s=e==="entries"||e===Symbol.iterator&&l,g=e==="keys"&&l,b=d[e](...r),c=i?jo:t?Jo:fi;return!t&&Jt(a,"iterate",g?eo:_r),{next(){const{value:h,done:u}=b.next();return u?{value:h,done:u}:{value:s?[c(h[0]),c(h[1])]:c(h),done:u}},[Symbol.iterator](){return this}}}}function kr(e){return function(...t){return e==="delete"?!1:this}}function Wc(){const e={get(a){return Oi(this,a)},get size(){return Mi(this)},has:Ii,add:Zs,set:Gs,delete:js,clear:Vs,forEach:Ti(!1,!1)},t={get(a){return Oi(this,a,!1,!0)},get size(){return Mi(this)},has:Ii,add:Zs,set:Gs,delete:js,clear:Vs,forEach:Ti(!1,!0)},i={get(a){return Oi(this,a,!0)},get size(){return Mi(this,!0)},has(a){return Ii.call(this,a,!0)},add:kr("add"),set:kr("set"),delete:kr("delete"),clear:kr("clear"),forEach:Ti(!0,!1)},r={get(a){return Oi(this,a,!0,!0)},get size(){return Mi(this,!0)},has(a){return Ii.call(this,a,!0)},add:kr("add"),set:kr("set"),delete:kr("delete"),clear:kr("clear"),forEach:Ti(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(a=>{e[a]=zi(a,!1,!1),i[a]=zi(a,!0,!1),t[a]=zi(a,!1,!0),r[a]=zi(a,!0,!0)}),[e,i,t,r]}const[Kc,Qc,_c,$c]=Wc();function Vo(e,t){const i=t?e?$c:_c:e?Qc:Kc;return(r,d,a)=>d==="__v_isReactive"?!e:d==="__v_isReadonly"?e:d==="__v_raw"?r:Reflect.get($e(i,d)&&d in r?i:r,d,a)}const eh={get:Vo(!1,!1)},th={get:Vo(!1,!0)},rh={get:Vo(!0,!1)},yf=new WeakMap,wf=new WeakMap,xf=new WeakMap,nh=new WeakMap;function ih(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function ah(e){return e.__v_skip||!Object.isExtensible(e)?0:ih(Rc(e))}function Zr(e){return li(e)?e:Lo(e,!1,bf,eh,yf)}function oh(e){return Lo(e,!1,Uc,th,wf)}function Ui(e){return Lo(e,!0,qc,rh,xf)}function Lo(e,t,i,r,d){if(!vt(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const a=d.get(e);if(a)return a;const l=ah(e);if(l===0)return e;const s=new Proxy(e,l===2?r:i);return d.set(e,s),s}function Cn(e){return li(e)?Cn(e.__v_raw):!!(e&&e.__v_isReactive)}function li(e){return!!(e&&e.__v_isReadonly)}function ro(e){return!!(e&&e.__v_isShallow)}function Af(e){return Cn(e)||li(e)}function et(e){const t=e&&e.__v_raw;return t?et(t):e}function Yo(e){return Xi(e,"__v_skip",!0),e}const fi=e=>vt(e)?Zr(e):e,Jo=e=>vt(e)?Ui(e):e;function Pf(e){Fr&&Qt&&(e=et(e),mf(e.dep||(e.dep=Do())))}function kf(e,t){e=et(e),e.dep&&to(e.dep)}function dt(e){return!!(e&&e.__v_isRef===!0)}function We(e){return sh(e,!1)}function sh(e,t){return dt(e)?e:new lh(e,t)}class lh{constructor(t,i){this.__v_isShallow=i,this.dep=void 0,this.__v_isRef=!0,this._rawValue=i?t:et(t),this._value=i?t:fi(t)}get value(){return Pf(this),this._value}set value(t){t=this.__v_isShallow?t:et(t),si(t,this._rawValue)&&(this._rawValue=t,this._value=this.__v_isShallow?t:fi(t),kf(this))}}function Ye(e){return dt(e)?e.value:e}const fh={get:(e,t,i)=>Ye(Reflect.get(e,t,i)),set:(e,t,i,r)=>{const d=e[t];return dt(d)&&!dt(i)?(d.value=i,!0):Reflect.set(e,t,i,r)}};function Nf(e){return Cn(e)?e:new Proxy(e,fh)}class uh{constructor(t,i,r){this._object=t,this._key=i,this._defaultValue=r,this.__v_isRef=!0}get value(){const t=this._object[this._key];return t===void 0?this._defaultValue:t}set value(t){this._object[this._key]=t}}function Rr(e,t,i){const r=e[t];return dt(r)?r:new uh(e,t,i)}class ch{constructor(t,i,r,d){this._setter=i,this.dep=void 0,this.__v_isRef=!0,this._dirty=!0,this.effect=new Zo(t,()=>{this._dirty||(this._dirty=!0,kf(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!d,this.__v_isReadonly=r}get value(){const t=et(this);return Pf(t),(t._dirty||!t._cacheable)&&(t._dirty=!1,t._value=t.effect.run()),t._value}set value(t){this._setter(t)}}function hh(e,t,i=!1){let r,d;const a=Ke(e);return a?(r=e,d=er):(r=e.get,d=e.set),new ch(r,d,a||!d,i)}const Kn=[];function Ef(e,...t){fn();const i=Kn.length?Kn[Kn.length-1].component:null,r=i&&i.appContext.config.warnHandler,d=dh();if(r)vr(r,i,11,[e+t.join(""),i&&i.proxy,d.map(({vnode:a})=>`at <${nu(i,a.type)}>`).join(`
`),d]);else{const a=[`[Vue warn]: ${e}`,...t];d.length&&a.push(`
`,...ph(d)),console.warn(...a)}un()}function dh(){let e=Kn[Kn.length-1];if(!e)return[];const t=[];for(;e;){const i=t[0];i&&i.vnode===e?i.recurseCount++:t.push({vnode:e,recurseCount:0});const r=e.component&&e.component.parent;e=r&&r.vnode}return t}function ph(e){const t=[];return e.forEach((i,r)=>{t.push(...r===0?[]:[`
`],...mh(i))}),t}function mh({vnode:e,recurseCount:t}){const i=t>0?`... (${t} recursive calls)`:"",r=e.component?e.component.parent==null:!1,d=` at <${nu(e.component,e.type,r)}`,a=">"+i;return e.props?[d,...vh(e.props),a]:[d+a]}function vh(e){const t=[],i=Object.keys(e);return i.slice(0,3).forEach(r=>{t.push(...Sf(r,e[r]))}),i.length>3&&t.push(" ..."),t}function Sf(e,t,i){return mt(t)?(t=JSON.stringify(t),i?t:[`${e}=${t}`]):typeof t=="number"||typeof t=="boolean"||t==null?i?t:[`${e}=${t}`]:dt(t)?(t=Sf(e,et(t.value),!0),i?t:[`${e}=Ref<`,t,">"]):Ke(t)?[`${e}=fn${t.name?`<${t.name}>`:""}`]:(t=et(t),i?t:[`${e}=`,t])}function vr(e,t,i,r){let d;try{d=r?e(...r):e()}catch(a){ba(a,t,i)}return d}function tr(e,t,i,r){if(Ke(e)){const a=vr(e,t,i,r);return a&&ff(a)&&a.catch(l=>{ba(l,t,i)}),a}const d=[];for(let a=0;a<e.length;a++)d.push(tr(e[a],t,i,r));return d}function ba(e,t,i,r=!0){const d=t?t.vnode:null;if(t){let a=t.parent;const l=t.proxy,s=i;for(;a;){const b=a.ec;if(b){for(let c=0;c<b.length;c++)if(b[c](e,l,s)===!1)return}a=a.parent}const g=t.appContext.config.errorHandler;if(g){vr(g,null,10,[e,l,s]);return}}gh(e,i,d,r)}function gh(e,t,i,r=!0){console.error(e)}let Wi=!1,no=!1;const Lt=[];let pr=0;const Qn=[];let qn=null,wn=0;const _n=[];let Sr=null,xn=0;const Cf=Promise.resolve();let Xo=null,io=null;function Wr(e){const t=Xo||Cf;return e?t.then(this?e.bind(this):e):t}function bh(e){let t=pr+1,i=Lt.length;for(;t<i;){const r=t+i>>>1;ui(Lt[r])<e?t=r+1:i=r}return t}function Rf(e){(!Lt.length||!Lt.includes(e,Wi&&e.allowRecurse?pr+1:pr))&&e!==io&&(e.id==null?Lt.push(e):Lt.splice(bh(e.id),0,e),Ff())}function Ff(){!Wi&&!no&&(no=!0,Xo=Cf.then(Mf))}function yh(e){const t=Lt.indexOf(e);t>pr&&Lt.splice(t,1)}function Of(e,t,i,r){qe(e)?i.push(...e):(!t||!t.includes(e,e.allowRecurse?r+1:r))&&i.push(e),Ff()}function wh(e){Of(e,qn,Qn,wn)}function xh(e){Of(e,Sr,_n,xn)}function ya(e,t=null){if(Qn.length){for(io=t,qn=[...new Set(Qn)],Qn.length=0,wn=0;wn<qn.length;wn++)qn[wn]();qn=null,wn=0,io=null,ya(e,t)}}function If(e){if(ya(),_n.length){const t=[...new Set(_n)];if(_n.length=0,Sr){Sr.push(...t);return}for(Sr=t,Sr.sort((i,r)=>ui(i)-ui(r)),xn=0;xn<Sr.length;xn++)Sr[xn]();Sr=null,xn=0}}const ui=e=>e.id==null?1/0:e.id;function Mf(e){no=!1,Wi=!0,ya(e),Lt.sort((i,r)=>ui(i)-ui(r));const t=er;try{for(pr=0;pr<Lt.length;pr++){const i=Lt[pr];i&&i.active!==!1&&vr(i,null,14)}}finally{pr=0,Lt.length=0,If(),Wi=!1,Xo=null,(Lt.length||Qn.length||_n.length)&&Mf(e)}}function Ah(e,t,...i){if(e.isUnmounted)return;const r=e.vnode.props||at;let d=i;const a=t.startsWith("update:"),l=a&&t.slice(7);if(l&&l in r){const c=`${l==="modelValue"?"model":l}Modifiers`,{number:h,trim:u}=r[c]||at;u&&(d=i.map(o=>o.trim())),h&&(d=i.map(qi))}let s,g=r[s=Da(t)]||r[s=Da(hr(t))];!g&&a&&(g=r[s=Da(ln(t))]),g&&tr(g,e,6,d);const b=r[s+"Once"];if(b){if(!e.emitted)e.emitted={};else if(e.emitted[s])return;e.emitted[s]=!0,tr(b,e,6,d)}}function Tf(e,t,i=!1){const r=t.emitsCache,d=r.get(e);if(d!==void 0)return d;const a=e.emits;let l={},s=!1;if(!Ke(e)){const g=b=>{const c=Tf(b,t,!0);c&&(s=!0,Zt(l,c))};!i&&t.mixins.length&&t.mixins.forEach(g),e.extends&&g(e.extends),e.mixins&&e.mixins.forEach(g)}return!a&&!s?(r.set(e,null),null):(qe(a)?a.forEach(g=>l[g]=null):Zt(l,a),r.set(e,l),l)}function wa(e,t){return!e||!pa(t)?!1:(t=t.slice(2).replace(/Once$/,""),$e(e,t[0].toLowerCase()+t.slice(1))||$e(e,ln(t))||$e(e,t))}let It=null,zf=null;function Ki(e){const t=It;return It=e,zf=e&&e.type.__scopeId||null,t}function ut(e,t=It,i){if(!t||e._n)return e;const r=(...d)=>{r._d&&$s(-1);const a=Ki(t),l=e(...d);return Ki(a),r._d&&$s(1),l};return r._n=!0,r._c=!0,r._d=!0,r}function Za(e){const{type:t,vnode:i,proxy:r,withProxy:d,props:a,propsOptions:[l],slots:s,attrs:g,emit:b,render:c,renderCache:h,data:u,setupState:o,ctx:n,inheritAttrs:m}=e;let y,f;const v=Ki(e);try{if(i.shapeFlag&4){const w=d||r;y=lr(c.call(w,w,h,a,o,u,n)),f=g}else{const w=t;y=lr(w.length>1?w(a,{attrs:g,slots:s,emit:b}):w(a,null)),f=t.props?g:Ph(g)}}catch(w){ei.length=0,ba(w,e,1),y=Le(Tr)}let p=y;if(f&&m!==!1){const w=Object.keys(f),{shapeFlag:A}=p;w.length&&A&7&&(l&&w.some(zo)&&(f=kh(f,l)),p=On(p,f))}return i.dirs&&(p=On(p),p.dirs=p.dirs?p.dirs.concat(i.dirs):i.dirs),i.transition&&(p.transition=i.transition),y=p,Ki(v),y}const Ph=e=>{let t;for(const i in e)(i==="class"||i==="style"||pa(i))&&((t||(t={}))[i]=e[i]);return t},kh=(e,t)=>{const i={};for(const r in e)(!zo(r)||!(r.slice(9)in t))&&(i[r]=e[r]);return i};function Nh(e,t,i){const{props:r,children:d,component:a}=e,{props:l,children:s,patchFlag:g}=t,b=a.emitsOptions;if(t.dirs||t.transition)return!0;if(i&&g>=0){if(g&1024)return!0;if(g&16)return r?Ls(r,l,b):!!l;if(g&8){const c=t.dynamicProps;for(let h=0;h<c.length;h++){const u=c[h];if(l[u]!==r[u]&&!wa(b,u))return!0}}}else return(d||s)&&(!s||!s.$stable)?!0:r===l?!1:r?l?Ls(r,l,b):!0:!!l;return!1}function Ls(e,t,i){const r=Object.keys(t);if(r.length!==Object.keys(e).length)return!0;for(let d=0;d<r.length;d++){const a=r[d];if(t[a]!==e[a]&&!wa(i,a))return!0}return!1}function Eh({vnode:e,parent:t},i){for(;t&&t.subTree===e;)(e=t.vnode).el=i,t=t.parent}const Sh=e=>e.__isSuspense;function Ch(e,t){t&&t.pendingBranch?qe(e)?t.effects.push(...e):t.effects.push(e):xh(e)}function xa(e,t){if(Nt){let i=Nt.provides;const r=Nt.parent&&Nt.parent.provides;r===i&&(i=Nt.provides=Object.create(r)),i[e]=t}}function $r(e,t,i=!1){const r=Nt||It;if(r){const d=r.parent==null?r.vnode.appContext&&r.vnode.appContext.provides:r.parent.provides;if(d&&e in d)return d[e];if(arguments.length>1)return i&&Ke(t)?t.call(r.proxy):t}}function Hf(e,t){return qo(e,null,t)}const Ys={};function tt(e,t,i){return qo(e,t,i)}function qo(e,t,{immediate:i,deep:r,flush:d,onTrack:a,onTrigger:l}=at){const s=Nt;let g,b=!1,c=!1;if(dt(e)?(g=()=>e.value,b=ro(e)):Cn(e)?(g=()=>e,r=!0):qe(e)?(c=!0,b=e.some(f=>Cn(f)||ro(f)),g=()=>e.map(f=>{if(dt(f))return f.value;if(Cn(f))return Kr(f);if(Ke(f))return vr(f,s,2)})):Ke(e)?t?g=()=>vr(e,s,2):g=()=>{if(!(s&&s.isUnmounted))return h&&h(),tr(e,s,3,[u])}:g=er,t&&r){const f=g;g=()=>Kr(f())}let h,u=f=>{h=y.onStop=()=>{vr(f,s,4)}};if(hi)return u=er,t?i&&tr(t,s,3,[g(),c?[]:void 0,u]):g(),er;let o=c?[]:Ys;const n=()=>{if(!!y.active)if(t){const f=y.run();(r||b||(c?f.some((v,p)=>si(v,o[p])):si(f,o)))&&(h&&h(),tr(t,s,3,[f,o===Ys?void 0:o,u]),o=f)}else y.run()};n.allowRecurse=!!t;let m;d==="sync"?m=n:d==="post"?m=()=>jt(n,s&&s.suspense):m=()=>wh(n);const y=new Zo(g,m);return t?i?n():o=y.run():d==="post"?jt(y.run.bind(y),s&&s.suspense):y.run(),()=>{y.stop(),s&&s.scope&&Ho(s.scope.effects,y)}}function Rh(e,t,i){const r=this.proxy,d=mt(e)?e.includes(".")?Bf(r,e):()=>r[e]:e.bind(r,r);let a;Ke(t)?a=t:(a=t.handler,i=t);const l=Nt;In(this);const s=qo(d,a.bind(r),i);return l?In(l):en(),s}function Bf(e,t){const i=t.split(".");return()=>{let r=e;for(let d=0;d<i.length&&r;d++)r=r[i[d]];return r}}function Kr(e,t){if(!vt(e)||e.__v_skip||(t=t||new Set,t.has(e)))return e;if(t.add(e),dt(e))Kr(e.value,t);else if(qe(e))for(let i=0;i<e.length;i++)Kr(e[i],t);else if(Hn(e)||Sn(e))e.forEach(i=>{Kr(i,t)});else if(cf(e))for(const i in e)Kr(e[i],t);return e}function cn(e){return Ke(e)?{setup:e,name:e.name}:e}const $n=e=>!!e.type.__asyncLoader,Df=e=>e.type.__isKeepAlive;function Fh(e,t){Zf(e,"a",t)}function Oh(e,t){Zf(e,"da",t)}function Zf(e,t,i=Nt){const r=e.__wdc||(e.__wdc=()=>{let d=i;for(;d;){if(d.isDeactivated)return;d=d.parent}return e()});if(Aa(t,r,i),i){let d=i.parent;for(;d&&d.parent;)Df(d.parent.vnode)&&Ih(r,t,i,d),d=d.parent}}function Ih(e,t,i,r){const d=Aa(t,e,r,!0);Uo(()=>{Ho(r[t],d)},i)}function Aa(e,t,i=Nt,r=!1){if(i){const d=i[e]||(i[e]=[]),a=t.__weh||(t.__weh=(...l)=>{if(i.isUnmounted)return;fn(),In(i);const s=tr(t,i,e,l);return en(),un(),s});return r?d.unshift(a):d.push(a),a}}const Ar=e=>(t,i=Nt)=>(!hi||e==="sp")&&Aa(e,t,i),Mh=Ar("bm"),hn=Ar("m"),Th=Ar("bu"),Gf=Ar("u"),wi=Ar("bum"),Uo=Ar("um"),zh=Ar("sp"),Hh=Ar("rtg"),Bh=Ar("rtc");function Dh(e,t=Nt){Aa("ec",e,t)}function Dt(e,t){const i=It;if(i===null)return e;const r=Na(i)||i.proxy,d=e.dirs||(e.dirs=[]);for(let a=0;a<t.length;a++){let[l,s,g,b=at]=t[a];Ke(l)&&(l={mounted:l,updated:l}),l.deep&&Kr(s),d.push({dir:l,instance:r,value:s,oldValue:void 0,arg:g,modifiers:b})}return e}function Jr(e,t,i,r){const d=e.dirs,a=t&&t.dirs;for(let l=0;l<d.length;l++){const s=d[l];a&&(s.oldValue=a[l].value);let g=s.dir[r];g&&(fn(),tr(g,i,8,[e.el,s,e,t]),un())}}const Wo="components",Zh="directives";function rt(e,t){return Qo(Wo,e,!0,t)||e}const jf=Symbol();function Ko(e){return mt(e)?Qo(Wo,e,!1)||e:e||jf}function Js(e){return Qo(Zh,e)}function Qo(e,t,i=!0,r=!1){const d=It||Nt;if(d){const a=d.type;if(e===Wo){const s=ru(a,!1);if(s&&(s===t||s===hr(t)||s===va(hr(t))))return a}const l=Xs(d[e]||a[e],t)||Xs(d.appContext[e],t);return!l&&r?a:l}}function Xs(e,t){return e&&(e[t]||e[hr(t)]||e[va(hr(t))])}function br(e,t,i,r){let d;const a=i&&i[r];if(qe(e)||mt(e)){d=new Array(e.length);for(let l=0,s=e.length;l<s;l++)d[l]=t(e[l],l,void 0,a&&a[l])}else if(typeof e=="number"){d=new Array(e);for(let l=0;l<e;l++)d[l]=t(l+1,l,void 0,a&&a[l])}else if(vt(e))if(e[Symbol.iterator])d=Array.from(e,(l,s)=>t(l,s,void 0,a&&a[s]));else{const l=Object.keys(e);d=new Array(l.length);for(let s=0,g=l.length;s<g;s++){const b=l[s];d[s]=t(e[b],b,s,a&&a[s])}}else d=[];return i&&(i[r]=d),d}function _o(e,t){for(let i=0;i<t.length;i++){const r=t[i];if(qe(r))for(let d=0;d<r.length;d++)e[r[d].name]=r[d].fn;else r&&(e[r.name]=r.fn)}return e}function st(e,t,i={},r,d){if(It.isCE||It.parent&&$n(It.parent)&&It.parent.isCE)return Le("slot",t==="default"?null:{name:t},r&&r());let a=e[t];a&&a._c&&(a._d=!1),Ue();const l=a&&Vf(a(i)),s=Rt(wt,{key:i.key||`_${t}`},l||(r?r():[]),l&&e._===1?64:-2);return!d&&s.scopeId&&(s.slotScopeIds=[s.scopeId+"-s"]),a&&a._c&&(a._d=!0),s}function Vf(e){return e.some(t=>$i(t)?!(t.type===Tr||t.type===wt&&!Vf(t.children)):!0)?e:null}const ao=e=>e?eu(e)?Na(e)||e.proxy:ao(e.parent):null,Qi=Zt(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>ao(e.parent),$root:e=>ao(e.root),$emit:e=>e.emit,$options:e=>Yf(e),$forceUpdate:e=>e.f||(e.f=()=>Rf(e.update)),$nextTick:e=>e.n||(e.n=Wr.bind(e.proxy)),$watch:e=>Rh.bind(e)}),Gh={get({_:e},t){const{ctx:i,setupState:r,data:d,props:a,accessCache:l,type:s,appContext:g}=e;let b;if(t[0]!=="$"){const o=l[t];if(o!==void 0)switch(o){case 1:return r[t];case 2:return d[t];case 4:return i[t];case 3:return a[t]}else{if(r!==at&&$e(r,t))return l[t]=1,r[t];if(d!==at&&$e(d,t))return l[t]=2,d[t];if((b=e.propsOptions[0])&&$e(b,t))return l[t]=3,a[t];if(i!==at&&$e(i,t))return l[t]=4,i[t];oo&&(l[t]=0)}}const c=Qi[t];let h,u;if(c)return t==="$attrs"&&Jt(e,"get",t),c(e);if((h=s.__cssModules)&&(h=h[t]))return h;if(i!==at&&$e(i,t))return l[t]=4,i[t];if(u=g.config.globalProperties,$e(u,t))return u[t]},set({_:e},t,i){const{data:r,setupState:d,ctx:a}=e;return d!==at&&$e(d,t)?(d[t]=i,!0):r!==at&&$e(r,t)?(r[t]=i,!0):$e(e.props,t)||t[0]==="$"&&t.slice(1)in e?!1:(a[t]=i,!0)},has({_:{data:e,setupState:t,accessCache:i,ctx:r,appContext:d,propsOptions:a}},l){let s;return!!i[l]||e!==at&&$e(e,l)||t!==at&&$e(t,l)||(s=a[0])&&$e(s,l)||$e(r,l)||$e(Qi,l)||$e(d.config.globalProperties,l)},defineProperty(e,t,i){return i.get!=null?e._.accessCache[t]=0:$e(i,"value")&&this.set(e,t,i.value,null),Reflect.defineProperty(e,t,i)}};let oo=!0;function jh(e){const t=Yf(e),i=e.proxy,r=e.ctx;oo=!1,t.beforeCreate&&qs(t.beforeCreate,e,"bc");const{data:d,computed:a,methods:l,watch:s,provide:g,inject:b,created:c,beforeMount:h,mounted:u,beforeUpdate:o,updated:n,activated:m,deactivated:y,beforeDestroy:f,beforeUnmount:v,destroyed:p,unmounted:w,render:A,renderTracked:x,renderTriggered:k,errorCaptured:N,serverPrefetch:E,expose:S,inheritAttrs:R,components:M,directives:j,filters:O}=t;if(b&&Vh(b,r,null,e.appContext.config.unwrapInjectedRef),l)for(const B in l){const z=l[B];Ke(z)&&(r[B]=z.bind(i))}if(d){const B=d.call(i,i);vt(B)&&(e.data=Zr(B))}if(oo=!0,a)for(const B in a){const z=a[B],G=Ke(z)?z.bind(i,i):Ke(z.get)?z.get.bind(i,i):er,U=!Ke(z)&&Ke(z.set)?z.set.bind(i):er,ie=Je({get:G,set:U});Object.defineProperty(r,B,{enumerable:!0,configurable:!0,get:()=>ie.value,set:oe=>ie.value=oe})}if(s)for(const B in s)Lf(s[B],r,i,B);if(g){const B=Ke(g)?g.call(i):g;Reflect.ownKeys(B).forEach(z=>{xa(z,B[z])})}c&&qs(c,e,"c");function J(B,z){qe(z)?z.forEach(G=>B(G.bind(i))):z&&B(z.bind(i))}if(J(Mh,h),J(hn,u),J(Th,o),J(Gf,n),J(Fh,m),J(Oh,y),J(Dh,N),J(Bh,x),J(Hh,k),J(wi,v),J(Uo,w),J(zh,E),qe(S))if(S.length){const B=e.exposed||(e.exposed={});S.forEach(z=>{Object.defineProperty(B,z,{get:()=>i[z],set:G=>i[z]=G})})}else e.exposed||(e.exposed={});A&&e.render===er&&(e.render=A),R!=null&&(e.inheritAttrs=R),M&&(e.components=M),j&&(e.directives=j)}function Vh(e,t,i=er,r=!1){qe(e)&&(e=so(e));for(const d in e){const a=e[d];let l;vt(a)?"default"in a?l=$r(a.from||d,a.default,!0):l=$r(a.from||d):l=$r(a),dt(l)&&r?Object.defineProperty(t,d,{enumerable:!0,configurable:!0,get:()=>l.value,set:s=>l.value=s}):t[d]=l}}function qs(e,t,i){tr(qe(e)?e.map(r=>r.bind(t.proxy)):e.bind(t.proxy),t,i)}function Lf(e,t,i,r){const d=r.includes(".")?Bf(i,r):()=>i[r];if(mt(e)){const a=t[e];Ke(a)&&tt(d,a)}else if(Ke(e))tt(d,e.bind(i));else if(vt(e))if(qe(e))e.forEach(a=>Lf(a,t,i,r));else{const a=Ke(e.handler)?e.handler.bind(i):t[e.handler];Ke(a)&&tt(d,a,e)}}function Yf(e){const t=e.type,{mixins:i,extends:r}=t,{mixins:d,optionsCache:a,config:{optionMergeStrategies:l}}=e.appContext,s=a.get(t);let g;return s?g=s:!d.length&&!i&&!r?g=t:(g={},d.length&&d.forEach(b=>_i(g,b,l,!0)),_i(g,t,l)),a.set(t,g),g}function _i(e,t,i,r=!1){const{mixins:d,extends:a}=t;a&&_i(e,a,i,!0),d&&d.forEach(l=>_i(e,l,i,!0));for(const l in t)if(!(r&&l==="expose")){const s=Lh[l]||i&&i[l];e[l]=s?s(e[l],t[l]):t[l]}return e}const Lh={data:Us,props:qr,emits:qr,methods:qr,computed:qr,beforeCreate:Tt,created:Tt,beforeMount:Tt,mounted:Tt,beforeUpdate:Tt,updated:Tt,beforeDestroy:Tt,beforeUnmount:Tt,destroyed:Tt,unmounted:Tt,activated:Tt,deactivated:Tt,errorCaptured:Tt,serverPrefetch:Tt,components:qr,directives:qr,watch:Jh,provide:Us,inject:Yh};function Us(e,t){return t?e?function(){return Zt(Ke(e)?e.call(this,this):e,Ke(t)?t.call(this,this):t)}:t:e}function Yh(e,t){return qr(so(e),so(t))}function so(e){if(qe(e)){const t={};for(let i=0;i<e.length;i++)t[e[i]]=e[i];return t}return e}function Tt(e,t){return e?[...new Set([].concat(e,t))]:t}function qr(e,t){return e?Zt(Zt(Object.create(null),e),t):t}function Jh(e,t){if(!e)return t;if(!t)return e;const i=Zt(Object.create(null),e);for(const r in t)i[r]=Tt(e[r],t[r]);return i}function Xh(e,t,i,r=!1){const d={},a={};Xi(a,Pa,1),e.propsDefaults=Object.create(null),Jf(e,t,d,a);for(const l in e.propsOptions[0])l in d||(d[l]=void 0);i?e.props=r?d:oh(d):e.type.props?e.props=d:e.props=a,e.attrs=a}function qh(e,t,i,r){const{props:d,attrs:a,vnode:{patchFlag:l}}=e,s=et(d),[g]=e.propsOptions;let b=!1;if((r||l>0)&&!(l&16)){if(l&8){const c=e.vnode.dynamicProps;for(let h=0;h<c.length;h++){let u=c[h];if(wa(e.emitsOptions,u))continue;const o=t[u];if(g)if($e(a,u))o!==a[u]&&(a[u]=o,b=!0);else{const n=hr(u);d[n]=lo(g,s,n,o,e,!1)}else o!==a[u]&&(a[u]=o,b=!0)}}}else{Jf(e,t,d,a)&&(b=!0);let c;for(const h in s)(!t||!$e(t,h)&&((c=ln(h))===h||!$e(t,c)))&&(g?i&&(i[h]!==void 0||i[c]!==void 0)&&(d[h]=lo(g,s,h,void 0,e,!0)):delete d[h]);if(a!==s)for(const h in a)(!t||!$e(t,h)&&!0)&&(delete a[h],b=!0)}b&&gr(e,"set","$attrs")}function Jf(e,t,i,r){const[d,a]=e.propsOptions;let l=!1,s;if(t)for(let g in t){if(Zi(g))continue;const b=t[g];let c;d&&$e(d,c=hr(g))?!a||!a.includes(c)?i[c]=b:(s||(s={}))[c]=b:wa(e.emitsOptions,g)||(!(g in r)||b!==r[g])&&(r[g]=b,l=!0)}if(a){const g=et(i),b=s||at;for(let c=0;c<a.length;c++){const h=a[c];i[h]=lo(d,g,h,b[h],e,!$e(b,h))}}return l}function lo(e,t,i,r,d,a){const l=e[i];if(l!=null){const s=$e(l,"default");if(s&&r===void 0){const g=l.default;if(l.type!==Function&&Ke(g)){const{propsDefaults:b}=d;i in b?r=b[i]:(In(d),r=b[i]=g.call(null,t),en())}else r=g}l[0]&&(a&&!s?r=!1:l[1]&&(r===""||r===ln(i))&&(r=!0))}return r}function Xf(e,t,i=!1){const r=t.propsCache,d=r.get(e);if(d)return d;const a=e.props,l={},s=[];let g=!1;if(!Ke(e)){const c=h=>{g=!0;const[u,o]=Xf(h,t,!0);Zt(l,u),o&&s.push(...o)};!i&&t.mixins.length&&t.mixins.forEach(c),e.extends&&c(e.extends),e.mixins&&e.mixins.forEach(c)}if(!a&&!g)return r.set(e,En),En;if(qe(a))for(let c=0;c<a.length;c++){const h=hr(a[c]);Ws(h)&&(l[h]=at)}else if(a)for(const c in a){const h=hr(c);if(Ws(h)){const u=a[c],o=l[h]=qe(u)||Ke(u)?{type:u}:u;if(o){const n=_s(Boolean,o.type),m=_s(String,o.type);o[0]=n>-1,o[1]=m<0||n<m,(n>-1||$e(o,"default"))&&s.push(h)}}}const b=[l,s];return r.set(e,b),b}function Ws(e){return e[0]!=="$"}function Ks(e){const t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:e===null?"null":""}function Qs(e,t){return Ks(e)===Ks(t)}function _s(e,t){return qe(t)?t.findIndex(i=>Qs(i,e)):Ke(t)&&Qs(t,e)?0:-1}const qf=e=>e[0]==="_"||e==="$stable",$o=e=>qe(e)?e.map(lr):[lr(e)],Uh=(e,t,i)=>{if(t._n)return t;const r=ut((...d)=>$o(t(...d)),i);return r._c=!1,r},Uf=(e,t,i)=>{const r=e._ctx;for(const d in e){if(qf(d))continue;const a=e[d];if(Ke(a))t[d]=Uh(d,a,r);else if(a!=null){const l=$o(a);t[d]=()=>l}}},Wf=(e,t)=>{const i=$o(t);e.slots.default=()=>i},Wh=(e,t)=>{if(e.vnode.shapeFlag&32){const i=t._;i?(e.slots=et(t),Xi(t,"_",i)):Uf(t,e.slots={})}else e.slots={},t&&Wf(e,t);Xi(e.slots,Pa,1)},Kh=(e,t,i)=>{const{vnode:r,slots:d}=e;let a=!0,l=at;if(r.shapeFlag&32){const s=t._;s?i&&s===1?a=!1:(Zt(d,t),!i&&s===1&&delete d._):(a=!t.$stable,Uf(t,d)),l=t}else t&&(Wf(e,t),l={default:1});if(a)for(const s in d)!qf(s)&&!(s in l)&&delete d[s]};function Kf(){return{app:null,config:{isNativeTag:Ec,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Qh=0;function _h(e,t){return function(r,d=null){Ke(r)||(r=Object.assign({},r)),d!=null&&!vt(d)&&(d=null);const a=Kf(),l=new Set;let s=!1;const g=a.app={_uid:Qh++,_component:r,_props:d,_container:null,_context:a,_instance:null,version:v0,get config(){return a.config},set config(b){},use(b,...c){return l.has(b)||(b&&Ke(b.install)?(l.add(b),b.install(g,...c)):Ke(b)&&(l.add(b),b(g,...c))),g},mixin(b){return a.mixins.includes(b)||a.mixins.push(b),g},component(b,c){return c?(a.components[b]=c,g):a.components[b]},directive(b,c){return c?(a.directives[b]=c,g):a.directives[b]},mount(b,c,h){if(!s){const u=Le(r,d);return u.appContext=a,c&&t?t(u,b):e(u,b,h),s=!0,g._container=b,b.__vue_app__=g,Na(u.component)||u.component.proxy}},unmount(){s&&(e(null,g._container),delete g._container.__vue_app__)},provide(b,c){return a.provides[b]=c,g}};return g}}function fo(e,t,i,r,d=!1){if(qe(e)){e.forEach((u,o)=>fo(u,t&&(qe(t)?t[o]:t),i,r,d));return}if($n(r)&&!d)return;const a=r.shapeFlag&4?Na(r.component)||r.component.proxy:r.el,l=d?null:a,{i:s,r:g}=e,b=t&&t.r,c=s.refs===at?s.refs={}:s.refs,h=s.setupState;if(b!=null&&b!==g&&(mt(b)?(c[b]=null,$e(h,b)&&(h[b]=null)):dt(b)&&(b.value=null)),Ke(g))vr(g,s,12,[l,c]);else{const u=mt(g),o=dt(g);if(u||o){const n=()=>{if(e.f){const m=u?c[g]:g.value;d?qe(m)&&Ho(m,a):qe(m)?m.includes(a)||m.push(a):u?(c[g]=[a],$e(h,g)&&(h[g]=c[g])):(g.value=[a],e.k&&(c[e.k]=g.value))}else u?(c[g]=l,$e(h,g)&&(h[g]=l)):o&&(g.value=l,e.k&&(c[e.k]=l))};l?(n.id=-1,jt(n,i)):n()}}}const jt=Ch;function $h(e){return e0(e)}function e0(e,t){const i=Ic();i.__VUE__=!0;const{insert:r,remove:d,patchProp:a,createElement:l,createText:s,createComment:g,setText:b,setElementText:c,parentNode:h,nextSibling:u,setScopeId:o=er,cloneNode:n,insertStaticContent:m}=e,y=(q,K,Y,$=null,te=null,L=null,T=!1,F=null,X=!!K.dynamicChildren)=>{if(q===K)return;q&&!Vn(q,K)&&($=fe(q),ae(q,te,L,!0),q=null),K.patchFlag===-2&&(X=!1,K.dynamicChildren=null);const{type:H,ref:I,shapeFlag:C}=K;switch(H){case es:f(q,K,Y,$);break;case Tr:v(q,K,Y,$);break;case Ga:q==null&&p(K,Y,$,T);break;case wt:j(q,K,Y,$,te,L,T,F,X);break;default:C&1?x(q,K,Y,$,te,L,T,F,X):C&6?O(q,K,Y,$,te,L,T,F,X):(C&64||C&128)&&H.process(q,K,Y,$,te,L,T,F,X,he)}I!=null&&te&&fo(I,q&&q.ref,L,K||q,!K)},f=(q,K,Y,$)=>{if(q==null)r(K.el=s(K.children),Y,$);else{const te=K.el=q.el;K.children!==q.children&&b(te,K.children)}},v=(q,K,Y,$)=>{q==null?r(K.el=g(K.children||""),Y,$):K.el=q.el},p=(q,K,Y,$)=>{[q.el,q.anchor]=m(q.children,K,Y,$,q.el,q.anchor)},w=({el:q,anchor:K},Y,$)=>{let te;for(;q&&q!==K;)te=u(q),r(q,Y,$),q=te;r(K,Y,$)},A=({el:q,anchor:K})=>{let Y;for(;q&&q!==K;)Y=u(q),d(q),q=Y;d(K)},x=(q,K,Y,$,te,L,T,F,X)=>{T=T||K.type==="svg",q==null?k(K,Y,$,te,L,T,F,X):S(q,K,te,L,T,F,X)},k=(q,K,Y,$,te,L,T,F)=>{let X,H;const{type:I,props:C,shapeFlag:Q,transition:le,patchFlag:ge,dirs:ye}=q;if(q.el&&n!==void 0&&ge===-1)X=q.el=n(q.el);else{if(X=q.el=l(q.type,L,C&&C.is,C),Q&8?c(X,q.children):Q&16&&E(q.children,X,null,$,te,L&&I!=="foreignObject",T,F),ye&&Jr(q,null,$,"created"),C){for(const Se in C)Se!=="value"&&!Zi(Se)&&a(X,Se,null,C[Se],L,q.children,$,te,re);"value"in C&&a(X,"value",null,C.value),(H=C.onVnodeBeforeMount)&&ir(H,$,q)}N(X,q,q.scopeId,T,$)}ye&&Jr(q,null,$,"beforeMount");const Ne=(!te||te&&!te.pendingBranch)&&le&&!le.persisted;Ne&&le.beforeEnter(X),r(X,K,Y),((H=C&&C.onVnodeMounted)||Ne||ye)&&jt(()=>{H&&ir(H,$,q),Ne&&le.enter(X),ye&&Jr(q,null,$,"mounted")},te)},N=(q,K,Y,$,te)=>{if(Y&&o(q,Y),$)for(let L=0;L<$.length;L++)o(q,$[L]);if(te){let L=te.subTree;if(K===L){const T=te.vnode;N(q,T,T.scopeId,T.slotScopeIds,te.parent)}}},E=(q,K,Y,$,te,L,T,F,X=0)=>{for(let H=X;H<q.length;H++){const I=q[H]=F?Cr(q[H]):lr(q[H]);y(null,I,K,Y,$,te,L,T,F)}},S=(q,K,Y,$,te,L,T)=>{const F=K.el=q.el;let{patchFlag:X,dynamicChildren:H,dirs:I}=K;X|=q.patchFlag&16;const C=q.props||at,Q=K.props||at;let le;Y&&Xr(Y,!1),(le=Q.onVnodeBeforeUpdate)&&ir(le,Y,K,q),I&&Jr(K,q,Y,"beforeUpdate"),Y&&Xr(Y,!0);const ge=te&&K.type!=="foreignObject";if(H?R(q.dynamicChildren,H,F,Y,$,ge,L):T||G(q,K,F,null,Y,$,ge,L,!1),X>0){if(X&16)M(F,K,C,Q,Y,$,te);else if(X&2&&C.class!==Q.class&&a(F,"class",null,Q.class,te),X&4&&a(F,"style",C.style,Q.style,te),X&8){const ye=K.dynamicProps;for(let Ne=0;Ne<ye.length;Ne++){const Se=ye[Ne],Ie=C[Se],Oe=Q[Se];(Oe!==Ie||Se==="value")&&a(F,Se,Ie,Oe,te,q.children,Y,$,re)}}X&1&&q.children!==K.children&&c(F,K.children)}else!T&&H==null&&M(F,K,C,Q,Y,$,te);((le=Q.onVnodeUpdated)||I)&&jt(()=>{le&&ir(le,Y,K,q),I&&Jr(K,q,Y,"updated")},$)},R=(q,K,Y,$,te,L,T)=>{for(let F=0;F<K.length;F++){const X=q[F],H=K[F],I=X.el&&(X.type===wt||!Vn(X,H)||X.shapeFlag&70)?h(X.el):Y;y(X,H,I,null,$,te,L,T,!0)}},M=(q,K,Y,$,te,L,T)=>{if(Y!==$){for(const F in $){if(Zi(F))continue;const X=$[F],H=Y[F];X!==H&&F!=="value"&&a(q,F,H,X,T,K.children,te,L,re)}if(Y!==at)for(const F in Y)!Zi(F)&&!(F in $)&&a(q,F,Y[F],null,T,K.children,te,L,re);"value"in $&&a(q,"value",Y.value,$.value)}},j=(q,K,Y,$,te,L,T,F,X)=>{const H=K.el=q?q.el:s(""),I=K.anchor=q?q.anchor:s("");let{patchFlag:C,dynamicChildren:Q,slotScopeIds:le}=K;le&&(F=F?F.concat(le):le),q==null?(r(H,Y,$),r(I,Y,$),E(K.children,Y,I,te,L,T,F,X)):C>0&&C&64&&Q&&q.dynamicChildren?(R(q.dynamicChildren,Q,Y,te,L,T,F),(K.key!=null||te&&K===te.subTree)&&Qf(q,K,!0)):G(q,K,Y,I,te,L,T,F,X)},O=(q,K,Y,$,te,L,T,F,X)=>{K.slotScopeIds=F,q==null?K.shapeFlag&512?te.ctx.activate(K,Y,$,T,X):V(K,Y,$,te,L,T,X):J(q,K,X)},V=(q,K,Y,$,te,L,T)=>{const F=q.component=s0(q,$,te);if(Df(q)&&(F.ctx.renderer=he),f0(F),F.asyncDep){if(te&&te.registerDep(F,B),!q.el){const X=F.subTree=Le(Tr);v(null,X,K,Y)}return}B(F,q,K,Y,te,L,T)},J=(q,K,Y)=>{const $=K.component=q.component;if(Nh(q,K,Y))if($.asyncDep&&!$.asyncResolved){z($,K,Y);return}else $.next=K,yh($.update),$.update();else K.el=q.el,$.vnode=K},B=(q,K,Y,$,te,L,T)=>{const F=()=>{if(q.isMounted){let{next:I,bu:C,u:Q,parent:le,vnode:ge}=q,ye=I,Ne;Xr(q,!1),I?(I.el=ge.el,z(q,I,T)):I=ge,C&&Gi(C),(Ne=I.props&&I.props.onVnodeBeforeUpdate)&&ir(Ne,le,I,ge),Xr(q,!0);const Se=Za(q),Ie=q.subTree;q.subTree=Se,y(Ie,Se,h(Ie.el),fe(Ie),q,te,L),I.el=Se.el,ye===null&&Eh(q,Se.el),Q&&jt(Q,te),(Ne=I.props&&I.props.onVnodeUpdated)&&jt(()=>ir(Ne,le,I,ge),te)}else{let I;const{el:C,props:Q}=K,{bm:le,m:ge,parent:ye}=q,Ne=$n(K);if(Xr(q,!1),le&&Gi(le),!Ne&&(I=Q&&Q.onVnodeBeforeMount)&&ir(I,ye,K),Xr(q,!0),C&&ce){const Se=()=>{q.subTree=Za(q),ce(C,q.subTree,q,te,null)};Ne?K.type.__asyncLoader().then(()=>!q.isUnmounted&&Se()):Se()}else{const Se=q.subTree=Za(q);y(null,Se,Y,$,q,te,L),K.el=Se.el}if(ge&&jt(ge,te),!Ne&&(I=Q&&Q.onVnodeMounted)){const Se=K;jt(()=>ir(I,ye,Se),te)}(K.shapeFlag&256||ye&&$n(ye.vnode)&&ye.vnode.shapeFlag&256)&&q.a&&jt(q.a,te),q.isMounted=!0,K=Y=$=null}},X=q.effect=new Zo(F,()=>Rf(H),q.scope),H=q.update=()=>X.run();H.id=q.uid,Xr(q,!0),H()},z=(q,K,Y)=>{K.component=q;const $=q.vnode.props;q.vnode=K,q.next=null,qh(q,K.props,$,Y),Kh(q,K.children,Y),fn(),ya(void 0,q.update),un()},G=(q,K,Y,$,te,L,T,F,X=!1)=>{const H=q&&q.children,I=q?q.shapeFlag:0,C=K.children,{patchFlag:Q,shapeFlag:le}=K;if(Q>0){if(Q&128){ie(H,C,Y,$,te,L,T,F,X);return}else if(Q&256){U(H,C,Y,$,te,L,T,F,X);return}}le&8?(I&16&&re(H,te,L),C!==H&&c(Y,C)):I&16?le&16?ie(H,C,Y,$,te,L,T,F,X):re(H,te,L,!0):(I&8&&c(Y,""),le&16&&E(C,Y,$,te,L,T,F,X))},U=(q,K,Y,$,te,L,T,F,X)=>{q=q||En,K=K||En;const H=q.length,I=K.length,C=Math.min(H,I);let Q;for(Q=0;Q<C;Q++){const le=K[Q]=X?Cr(K[Q]):lr(K[Q]);y(q[Q],le,Y,null,te,L,T,F,X)}H>I?re(q,te,L,!0,!1,C):E(K,Y,$,te,L,T,F,X,C)},ie=(q,K,Y,$,te,L,T,F,X)=>{let H=0;const I=K.length;let C=q.length-1,Q=I-1;for(;H<=C&&H<=Q;){const le=q[H],ge=K[H]=X?Cr(K[H]):lr(K[H]);if(Vn(le,ge))y(le,ge,Y,null,te,L,T,F,X);else break;H++}for(;H<=C&&H<=Q;){const le=q[C],ge=K[Q]=X?Cr(K[Q]):lr(K[Q]);if(Vn(le,ge))y(le,ge,Y,null,te,L,T,F,X);else break;C--,Q--}if(H>C){if(H<=Q){const le=Q+1,ge=le<I?K[le].el:$;for(;H<=Q;)y(null,K[H]=X?Cr(K[H]):lr(K[H]),Y,ge,te,L,T,F,X),H++}}else if(H>Q)for(;H<=C;)ae(q[H],te,L,!0),H++;else{const le=H,ge=H,ye=new Map;for(H=ge;H<=Q;H++){const Me=K[H]=X?Cr(K[H]):lr(K[H]);Me.key!=null&&ye.set(Me.key,H)}let Ne,Se=0;const Ie=Q-ge+1;let Oe=!1,Fe=0;const Ee=new Array(Ie);for(H=0;H<Ie;H++)Ee[H]=0;for(H=le;H<=C;H++){const Me=q[H];if(Se>=Ie){ae(Me,te,L,!0);continue}let Z;if(Me.key!=null)Z=ye.get(Me.key);else for(Ne=ge;Ne<=Q;Ne++)if(Ee[Ne-ge]===0&&Vn(Me,K[Ne])){Z=Ne;break}Z===void 0?ae(Me,te,L,!0):(Ee[Z-ge]=H+1,Z>=Fe?Fe=Z:Oe=!0,y(Me,K[Z],Y,null,te,L,T,F,X),Se++)}const Ze=Oe?t0(Ee):En;for(Ne=Ze.length-1,H=Ie-1;H>=0;H--){const Me=ge+H,Z=K[Me],ve=Me+1<I?K[Me+1].el:$;Ee[H]===0?y(null,Z,Y,ve,te,L,T,F,X):Oe&&(Ne<0||H!==Ze[Ne]?oe(Z,Y,ve,2):Ne--)}}},oe=(q,K,Y,$,te=null)=>{const{el:L,type:T,transition:F,children:X,shapeFlag:H}=q;if(H&6){oe(q.component.subTree,K,Y,$);return}if(H&128){q.suspense.move(K,Y,$);return}if(H&64){T.move(q,K,Y,he);return}if(T===wt){r(L,K,Y);for(let C=0;C<X.length;C++)oe(X[C],K,Y,$);r(q.anchor,K,Y);return}if(T===Ga){w(q,K,Y);return}if($!==2&&H&1&&F)if($===0)F.beforeEnter(L),r(L,K,Y),jt(()=>F.enter(L),te);else{const{leave:C,delayLeave:Q,afterLeave:le}=F,ge=()=>r(L,K,Y),ye=()=>{C(L,()=>{ge(),le&&le()})};Q?Q(L,ge,ye):ye()}else r(L,K,Y)},ae=(q,K,Y,$=!1,te=!1)=>{const{type:L,props:T,ref:F,children:X,dynamicChildren:H,shapeFlag:I,patchFlag:C,dirs:Q}=q;if(F!=null&&fo(F,null,Y,q,!0),I&256){K.ctx.deactivate(q);return}const le=I&1&&Q,ge=!$n(q);let ye;if(ge&&(ye=T&&T.onVnodeBeforeUnmount)&&ir(ye,K,q),I&6)_(q.component,Y,$);else{if(I&128){q.suspense.unmount(Y,$);return}le&&Jr(q,null,K,"beforeUnmount"),I&64?q.type.remove(q,K,Y,te,he,$):H&&(L!==wt||C>0&&C&64)?re(H,K,Y,!1,!0):(L===wt&&C&384||!te&&I&16)&&re(X,K,Y),$&&W(q)}(ge&&(ye=T&&T.onVnodeUnmounted)||le)&&jt(()=>{ye&&ir(ye,K,q),le&&Jr(q,null,K,"unmounted")},Y)},W=q=>{const{type:K,el:Y,anchor:$,transition:te}=q;if(K===wt){ee(Y,$);return}if(K===Ga){A(q);return}const L=()=>{d(Y),te&&!te.persisted&&te.afterLeave&&te.afterLeave()};if(q.shapeFlag&1&&te&&!te.persisted){const{leave:T,delayLeave:F}=te,X=()=>T(Y,L);F?F(q.el,L,X):X()}else L()},ee=(q,K)=>{let Y;for(;q!==K;)Y=u(q),d(q),q=Y;d(K)},_=(q,K,Y)=>{const{bum:$,scope:te,update:L,subTree:T,um:F}=q;$&&Gi($),te.stop(),L&&(L.active=!1,ae(T,q,K,Y)),F&&jt(F,K),jt(()=>{q.isUnmounted=!0},K),K&&K.pendingBranch&&!K.isUnmounted&&q.asyncDep&&!q.asyncResolved&&q.suspenseId===K.pendingId&&(K.deps--,K.deps===0&&K.resolve())},re=(q,K,Y,$=!1,te=!1,L=0)=>{for(let T=L;T<q.length;T++)ae(q[T],K,Y,$,te)},fe=q=>q.shapeFlag&6?fe(q.component.subTree):q.shapeFlag&128?q.suspense.next():u(q.anchor||q.el),pe=(q,K,Y)=>{q==null?K._vnode&&ae(K._vnode,null,null,!0):y(K._vnode||null,q,K,null,null,null,Y),If(),K._vnode=q},he={p:y,um:ae,m:oe,r:W,mt:V,mc:E,pc:G,pbc:R,n:fe,o:e};let se,ce;return t&&([se,ce]=t(he)),{render:pe,hydrate:se,createApp:_h(pe,se)}}function Xr({effect:e,update:t},i){e.allowRecurse=t.allowRecurse=i}function Qf(e,t,i=!1){const r=e.children,d=t.children;if(qe(r)&&qe(d))for(let a=0;a<r.length;a++){const l=r[a];let s=d[a];s.shapeFlag&1&&!s.dynamicChildren&&((s.patchFlag<=0||s.patchFlag===32)&&(s=d[a]=Cr(d[a]),s.el=l.el),i||Qf(l,s))}}function t0(e){const t=e.slice(),i=[0];let r,d,a,l,s;const g=e.length;for(r=0;r<g;r++){const b=e[r];if(b!==0){if(d=i[i.length-1],e[d]<b){t[r]=d,i.push(r);continue}for(a=0,l=i.length-1;a<l;)s=a+l>>1,e[i[s]]<b?a=s+1:l=s;b<e[i[a]]&&(a>0&&(t[r]=i[a-1]),i[a]=r)}}for(a=i.length,l=i[a-1];a-- >0;)i[a]=l,l=t[l];return i}const r0=e=>e.__isTeleport,wt=Symbol(void 0),es=Symbol(void 0),Tr=Symbol(void 0),Ga=Symbol(void 0),ei=[];let _t=null;function Ue(e=!1){ei.push(_t=e?null:[])}function n0(){ei.pop(),_t=ei[ei.length-1]||null}let ci=1;function $s(e){ci+=e}function _f(e){return e.dynamicChildren=ci>0?_t||En:null,n0(),ci>0&&_t&&_t.push(e),e}function nt(e,t,i,r,d,a){return _f(_e(e,t,i,r,d,a,!0))}function Rt(e,t,i,r,d){return _f(Le(e,t,i,r,d,!0))}function $i(e){return e?e.__v_isVNode===!0:!1}function Vn(e,t){return e.type===t.type&&e.key===t.key}const Pa="__vInternal",$f=({key:e})=>e!=null?e:null,ji=({ref:e,ref_key:t,ref_for:i})=>e!=null?mt(e)||dt(e)||Ke(e)?{i:It,r:e,k:t,f:!!i}:e:null;function _e(e,t=null,i=null,r=0,d=null,a=e===wt?0:1,l=!1,s=!1){const g={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&$f(t),ref:t&&ji(t),scopeId:zf,slotScopeIds:null,children:i,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:a,patchFlag:r,dynamicProps:d,dynamicChildren:null,appContext:null};return s?(ts(g,i),a&128&&e.normalize(g)):i&&(g.shapeFlag|=mt(i)?8:16),ci>0&&!l&&_t&&(g.patchFlag>0||a&6)&&g.patchFlag!==32&&_t.push(g),g}const Le=i0;function i0(e,t=null,i=null,r=0,d=null,a=!1){if((!e||e===jf)&&(e=Tr),$i(e)){const s=On(e,t,!0);return i&&ts(s,i),ci>0&&!a&&_t&&(s.shapeFlag&6?_t[_t.indexOf(e)]=s:_t.push(s)),s.patchFlag|=-2,s}if(m0(e)&&(e=e.__vccOpts),t){t=ka(t);let{class:s,style:g}=t;s&&!mt(s)&&(t.class=Ut(s)),vt(g)&&(Af(g)&&!qe(g)&&(g=Zt({},g)),t.style=bi(g))}const l=mt(e)?1:Sh(e)?128:r0(e)?64:vt(e)?4:Ke(e)?2:0;return _e(e,t,i,r,d,l,a,!0)}function ka(e){return e?Af(e)||Pa in e?Zt({},e):e:null}function On(e,t,i=!1){const{props:r,ref:d,patchFlag:a,children:l}=e,s=t?xi(r||{},t):r;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:s,key:s&&$f(s),ref:t&&t.ref?i&&d?qe(d)?d.concat(ji(t)):[d,ji(t)]:ji(t):d,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:l,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==wt?a===-1?16:a|16:a,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&On(e.ssContent),ssFallback:e.ssFallback&&On(e.ssFallback),el:e.el,anchor:e.anchor}}function ea(e=" ",t=0){return Le(es,null,e,t)}function Ot(e="",t=!1){return t?(Ue(),Rt(Tr,null,e)):Le(Tr,null,e)}function lr(e){return e==null||typeof e=="boolean"?Le(Tr):qe(e)?Le(wt,null,e.slice()):typeof e=="object"?Cr(e):Le(es,null,String(e))}function Cr(e){return e.el===null||e.memo?e:On(e)}function ts(e,t){let i=0;const{shapeFlag:r}=e;if(t==null)t=null;else if(qe(t))i=16;else if(typeof t=="object")if(r&65){const d=t.default;d&&(d._c&&(d._d=!1),ts(e,d()),d._c&&(d._d=!0));return}else{i=32;const d=t._;!d&&!(Pa in t)?t._ctx=It:d===3&&It&&(It.slots._===1?t._=1:(t._=2,e.patchFlag|=1024))}else Ke(t)?(t={default:t,_ctx:It},i=32):(t=String(t),r&64?(i=16,t=[ea(t)]):i=8);e.children=t,e.shapeFlag|=i}function xi(...e){const t={};for(let i=0;i<e.length;i++){const r=e[i];for(const d in r)if(d==="class")t.class!==r.class&&(t.class=Ut([t.class,r.class]));else if(d==="style")t.style=bi([t.style,r.style]);else if(pa(d)){const a=t[d],l=r[d];l&&a!==l&&!(qe(a)&&a.includes(l))&&(t[d]=a?[].concat(a,l):l)}else d!==""&&(t[d]=r[d])}return t}function ir(e,t,i,r=null){tr(e,t,7,[i,r])}const a0=Kf();let o0=0;function s0(e,t,i){const r=e.type,d=(t?t.appContext:e.appContext)||a0,a={uid:o0++,vnode:e,type:r,parent:t,appContext:d,root:null,next:null,subTree:null,effect:null,update:null,scope:new Mc(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(d.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Xf(r,d),emitsOptions:Tf(r,d),emit:null,emitted:null,propsDefaults:at,inheritAttrs:r.inheritAttrs,ctx:at,data:at,props:at,attrs:at,slots:at,refs:at,setupState:at,setupContext:null,suspense:i,suspenseId:i?i.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return a.ctx={_:a},a.root=t?t.root:a,a.emit=Ah.bind(null,a),e.ce&&e.ce(a),a}let Nt=null;const l0=()=>Nt||It,In=e=>{Nt=e,e.scope.on()},en=()=>{Nt&&Nt.scope.off(),Nt=null};function eu(e){return e.vnode.shapeFlag&4}let hi=!1;function f0(e,t=!1){hi=t;const{props:i,children:r}=e.vnode,d=eu(e);Xh(e,i,d,t),Wh(e,r);const a=d?u0(e,t):void 0;return hi=!1,a}function u0(e,t){const i=e.type;e.accessCache=Object.create(null),e.proxy=Yo(new Proxy(e.ctx,Gh));const{setup:r}=i;if(r){const d=e.setupContext=r.length>1?h0(e):null;In(e),fn();const a=vr(r,e,0,[e.props,d]);if(un(),en(),ff(a)){if(a.then(en,en),t)return a.then(l=>{el(e,l,t)}).catch(l=>{ba(l,e,0)});e.asyncDep=a}else el(e,a,t)}else tu(e,t)}function el(e,t,i){Ke(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:vt(t)&&(e.setupState=Nf(t)),tu(e,i)}let tl;function tu(e,t,i){const r=e.type;if(!e.render){if(!t&&tl&&!r.render){const d=r.template;if(d){const{isCustomElement:a,compilerOptions:l}=e.appContext.config,{delimiters:s,compilerOptions:g}=r,b=Zt(Zt({isCustomElement:a,delimiters:s},l),g);r.render=tl(d,b)}}e.render=r.render||er}In(e),fn(),jh(e),un(),en()}function c0(e){return new Proxy(e.attrs,{get(t,i){return Jt(e,"get","$attrs"),t[i]}})}function h0(e){const t=r=>{e.exposed=r||{}};let i;return{get attrs(){return i||(i=c0(e))},slots:e.slots,emit:e.emit,expose:t}}function Na(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(Nf(Yo(e.exposed)),{get(t,i){if(i in t)return t[i];if(i in Qi)return Qi[i](e)}}))}const d0=/(?:^|[-_])(\w)/g,p0=e=>e.replace(d0,t=>t.toUpperCase()).replace(/[-_]/g,"");function ru(e,t=!0){return Ke(e)?e.displayName||e.name:e.name||t&&e.__name}function nu(e,t,i=!1){let r=ru(t);if(!r&&t.__file){const d=t.__file.match(/([^/\\]+)\.\w+$/);d&&(r=d[1])}if(!r&&e&&e.parent){const d=a=>{for(const l in a)if(a[l]===t)return l};r=d(e.components||e.parent.type.components)||d(e.appContext.components)}return r?p0(r):i?"App":"Anonymous"}function m0(e){return Ke(e)&&"__vccOpts"in e}const Je=(e,t)=>hh(e,t,hi);function Mn(e,t,i){const r=arguments.length;return r===2?vt(t)&&!qe(t)?$i(t)?Le(e,null,[t]):Le(e,t):Le(e,null,t):(r>3?i=Array.prototype.slice.call(arguments,2):r===3&&$i(i)&&(i=[i]),Le(e,t,i))}const v0="3.2.37",g0="http://www.w3.org/2000/svg",Ur=typeof document!="undefined"?document:null,rl=Ur&&Ur.createElement("template"),b0={insert:(e,t,i)=>{t.insertBefore(e,i||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,i,r)=>{const d=t?Ur.createElementNS(g0,e):Ur.createElement(e,i?{is:i}:void 0);return e==="select"&&r&&r.multiple!=null&&d.setAttribute("multiple",r.multiple),d},createText:e=>Ur.createTextNode(e),createComment:e=>Ur.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>Ur.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},cloneNode(e){const t=e.cloneNode(!0);return"_value"in e&&(t._value=e._value),t},insertStaticContent(e,t,i,r,d,a){const l=i?i.previousSibling:t.lastChild;if(d&&(d===a||d.nextSibling))for(;t.insertBefore(d.cloneNode(!0),i),!(d===a||!(d=d.nextSibling)););else{rl.innerHTML=r?`<svg>${e}</svg>`:e;const s=rl.content;if(r){const g=s.firstChild;for(;g.firstChild;)s.appendChild(g.firstChild);s.removeChild(g)}t.insertBefore(s,i)}return[l?l.nextSibling:t.firstChild,i?i.previousSibling:t.lastChild]}};function y0(e,t,i){const r=e._vtc;r&&(t=(t?[t,...r]:[...r]).join(" ")),t==null?e.removeAttribute("class"):i?e.setAttribute("class",t):e.className=t}function w0(e,t,i){const r=e.style,d=mt(i);if(i&&!d){for(const a in i)uo(r,a,i[a]);if(t&&!mt(t))for(const a in t)i[a]==null&&uo(r,a,"")}else{const a=r.display;d?t!==i&&(r.cssText=i):t&&e.removeAttribute("style"),"_vod"in e&&(r.display=a)}}const nl=/\s*!important$/;function uo(e,t,i){if(qe(i))i.forEach(r=>uo(e,t,r));else if(i==null&&(i=""),t.startsWith("--"))e.setProperty(t,i);else{const r=x0(e,t);nl.test(i)?e.setProperty(ln(r),i.replace(nl,""),"important"):e[r]=i}}const il=["Webkit","Moz","ms"],ja={};function x0(e,t){const i=ja[t];if(i)return i;let r=hr(t);if(r!=="filter"&&r in e)return ja[t]=r;r=va(r);for(let d=0;d<il.length;d++){const a=il[d]+r;if(a in e)return ja[t]=a}return t}const al="http://www.w3.org/1999/xlink";function A0(e,t,i,r,d){if(r&&t.startsWith("xlink:"))i==null?e.removeAttributeNS(al,t.slice(6,t.length)):e.setAttributeNS(al,t,i);else{const a=xc(t);i==null||a&&!sf(i)?e.removeAttribute(t):e.setAttribute(t,a?"":i)}}function P0(e,t,i,r,d,a,l){if(t==="innerHTML"||t==="textContent"){r&&l(r,d,a),e[t]=i==null?"":i;return}if(t==="value"&&e.tagName!=="PROGRESS"&&!e.tagName.includes("-")){e._value=i;const g=i==null?"":i;(e.value!==g||e.tagName==="OPTION")&&(e.value=g),i==null&&e.removeAttribute(t);return}let s=!1;if(i===""||i==null){const g=typeof e[t];g==="boolean"?i=sf(i):i==null&&g==="string"?(i="",s=!0):g==="number"&&(i=0,s=!0)}try{e[t]=i}catch{}s&&e.removeAttribute(t)}const[iu,k0]=(()=>{let e=Date.now,t=!1;if(typeof window!="undefined"){Date.now()>document.createEvent("Event").timeStamp&&(e=performance.now.bind(performance));const i=navigator.userAgent.match(/firefox\/(\d+)/i);t=!!(i&&Number(i[1])<=53)}return[e,t]})();let co=0;const N0=Promise.resolve(),E0=()=>{co=0},S0=()=>co||(N0.then(E0),co=iu());function mr(e,t,i,r){e.addEventListener(t,i,r)}function C0(e,t,i,r){e.removeEventListener(t,i,r)}function R0(e,t,i,r,d=null){const a=e._vei||(e._vei={}),l=a[t];if(r&&l)l.value=r;else{const[s,g]=F0(t);if(r){const b=a[t]=O0(r,d);mr(e,s,b,g)}else l&&(C0(e,s,l,g),a[t]=void 0)}}const ol=/(?:Once|Passive|Capture)$/;function F0(e){let t;if(ol.test(e)){t={};let i;for(;i=e.match(ol);)e=e.slice(0,e.length-i[0].length),t[i[0].toLowerCase()]=!0}return[ln(e.slice(2)),t]}function O0(e,t){const i=r=>{const d=r.timeStamp||iu();(k0||d>=i.attached-1)&&tr(I0(r,i.value),t,5,[r])};return i.value=e,i.attached=S0(),i}function I0(e,t){if(qe(t)){const i=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{i.call(e),e._stopped=!0},t.map(r=>d=>!d._stopped&&r&&r(d))}else return t}const sl=/^on[a-z]/,M0=(e,t,i,r,d=!1,a,l,s,g)=>{t==="class"?y0(e,r,d):t==="style"?w0(e,i,r):pa(t)?zo(t)||R0(e,t,i,r,l):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):T0(e,t,r,d))?P0(e,t,r,a,l,s,g):(t==="true-value"?e._trueValue=r:t==="false-value"&&(e._falseValue=r),A0(e,t,r,d))};function T0(e,t,i,r){return r?!!(t==="innerHTML"||t==="textContent"||t in e&&sl.test(t)&&Ke(i)):t==="spellcheck"||t==="draggable"||t==="translate"||t==="form"||t==="list"&&e.tagName==="INPUT"||t==="type"&&e.tagName==="TEXTAREA"||sl.test(t)&&mt(i)?!1:t in e}const zr=e=>{const t=e.props["onUpdate:modelValue"]||!1;return qe(t)?i=>Gi(t,i):t};function z0(e){e.target.composing=!0}function ll(e){const t=e.target;t.composing&&(t.composing=!1,t.dispatchEvent(new Event("input")))}const fl={created(e,{modifiers:{lazy:t,trim:i,number:r}},d){e._assign=zr(d);const a=r||d.props&&d.props.type==="number";mr(e,t?"change":"input",l=>{if(l.target.composing)return;let s=e.value;i&&(s=s.trim()),a&&(s=qi(s)),e._assign(s)}),i&&mr(e,"change",()=>{e.value=e.value.trim()}),t||(mr(e,"compositionstart",z0),mr(e,"compositionend",ll),mr(e,"change",ll))},mounted(e,{value:t}){e.value=t==null?"":t},beforeUpdate(e,{value:t,modifiers:{lazy:i,trim:r,number:d}},a){if(e._assign=zr(a),e.composing||document.activeElement===e&&e.type!=="range"&&(i||r&&e.value.trim()===t||(d||e.type==="number")&&qi(e.value)===t))return;const l=t==null?"":t;e.value!==l&&(e.value=l)}},H0={deep:!0,created(e,t,i){e._assign=zr(i),mr(e,"change",()=>{const r=e._modelValue,d=Tn(e),a=e.checked,l=e._assign;if(qe(r)){const s=To(r,d),g=s!==-1;if(a&&!g)l(r.concat(d));else if(!a&&g){const b=[...r];b.splice(s,1),l(b)}}else if(Hn(r)){const s=new Set(r);a?s.add(d):s.delete(d),l(s)}else l(au(e,a))})},mounted:ul,beforeUpdate(e,t,i){e._assign=zr(i),ul(e,t,i)}};function ul(e,{value:t,oldValue:i},r){e._modelValue=t,qe(t)?e.checked=To(t,r.props.value)>-1:Hn(t)?e.checked=t.has(r.props.value):t!==i&&(e.checked=tn(t,au(e,!0)))}const B0={created(e,{value:t},i){e.checked=tn(t,i.props.value),e._assign=zr(i),mr(e,"change",()=>{e._assign(Tn(e))})},beforeUpdate(e,{value:t,oldValue:i},r){e._assign=zr(r),t!==i&&(e.checked=tn(t,r.props.value))}},D0={deep:!0,created(e,{value:t,modifiers:{number:i}},r){const d=Hn(t);mr(e,"change",()=>{const a=Array.prototype.filter.call(e.options,l=>l.selected).map(l=>i?qi(Tn(l)):Tn(l));e._assign(e.multiple?d?new Set(a):a:a[0])}),e._assign=zr(r)},mounted(e,{value:t}){cl(e,t)},beforeUpdate(e,t,i){e._assign=zr(i)},updated(e,{value:t}){cl(e,t)}};function cl(e,t){const i=e.multiple;if(!(i&&!qe(t)&&!Hn(t))){for(let r=0,d=e.options.length;r<d;r++){const a=e.options[r],l=Tn(a);if(i)qe(t)?a.selected=To(t,l)>-1:a.selected=t.has(l);else if(tn(Tn(a),t)){e.selectedIndex!==r&&(e.selectedIndex=r);return}}!i&&e.selectedIndex!==-1&&(e.selectedIndex=-1)}}function Tn(e){return"_value"in e?e._value:e.value}function au(e,t){const i=t?"_trueValue":"_falseValue";return i in e?e[i]:t}const Z0={created(e,t,i){Hi(e,t,i,null,"created")},mounted(e,t,i){Hi(e,t,i,null,"mounted")},beforeUpdate(e,t,i,r){Hi(e,t,i,r,"beforeUpdate")},updated(e,t,i,r){Hi(e,t,i,r,"updated")}};function G0(e,t){switch(e){case"SELECT":return D0;case"TEXTAREA":return fl;default:switch(t){case"checkbox":return H0;case"radio":return B0;default:return fl}}}function Hi(e,t,i,r,d){const l=G0(e.tagName,i.props&&i.props.type)[d];l&&l(e,t,i,r)}const j0=["ctrl","shift","alt","meta"],V0={stop:e=>e.stopPropagation(),prevent:e=>e.preventDefault(),self:e=>e.target!==e.currentTarget,ctrl:e=>!e.ctrlKey,shift:e=>!e.shiftKey,alt:e=>!e.altKey,meta:e=>!e.metaKey,left:e=>"button"in e&&e.button!==0,middle:e=>"button"in e&&e.button!==1,right:e=>"button"in e&&e.button!==2,exact:(e,t)=>j0.some(i=>e[`${i}Key`]&&!t.includes(i))},Va=(e,t)=>(i,...r)=>{for(let d=0;d<t.length;d++){const a=V0[t[d]];if(a&&a(i,t))return}return e(i,...r)},L0={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},ta=(e,t)=>i=>{if(!("key"in i))return;const r=ln(i.key);if(t.some(d=>d===r||L0[d]===r))return e(i)},Yt={beforeMount(e,{value:t},{transition:i}){e._vod=e.style.display==="none"?"":e.style.display,i&&t?i.beforeEnter(e):Ln(e,t)},mounted(e,{value:t},{transition:i}){i&&t&&i.enter(e)},updated(e,{value:t,oldValue:i},{transition:r}){!t!=!i&&(r?t?(r.beforeEnter(e),Ln(e,!0),r.enter(e)):r.leave(e,()=>{Ln(e,!1)}):Ln(e,t))},beforeUnmount(e,{value:t}){Ln(e,t)}};function Ln(e,t){e.style.display=t?e._vod:"none"}const Y0=Zt({patchProp:M0},b0);let hl;function J0(){return hl||(hl=$h(Y0))}const X0=(...e)=>{const t=J0().createApp(...e),{mount:i}=t;return t.mount=r=>{const d=q0(r);if(!d)return;const a=t._component;!Ke(a)&&!a.render&&!a.template&&(a.template=d.innerHTML),d.innerHTML="";const l=i(d,!1,d instanceof SVGElement);return d instanceof Element&&(d.removeAttribute("v-cloak"),d.setAttribute("data-v-app","")),l},t};function q0(e){return mt(e)?document.querySelector(e):e}var U0=Object.defineProperty,W0=(e,t,i)=>t in e?U0(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,Vt=(e,t,i)=>(W0(e,typeof t!="symbol"?t+"":t,i),i),dl,pl;const ou=String.prototype;ou.capitalize=function(){return`${this[0].toUpperCase()}${this.substring(1).toLowerCase()}`};ou.equals=function(e){return this.toLowerCase()===(e==null?void 0:e.toLowerCase())};class Bn{constructor(t,i=!0){Array.isArray(t)?t.forEach((r,d)=>{const a=this.valueToKey(r);i?this[a]=d:this[a]=r}):Object.assign(this,t)}valueToKey(t){return String(t).split(/(?=[A-Z])|-/).map(i=>i.capitalize()).join("")}get count(){return this.keys.length}get keys(){return Object.keys(this)}get values(){return Object.keys(this).map(t=>this[t])}get options(){return Object.keys(this).map(t=>({id:this[t],value:t}))}toString(){const t=[];return Object.keys(this).forEach(r=>{const d=typeof this[r];t.push(`* @property {${d.capitalize()}} ${r}`)}),`/**
`+t.join(`
`)+`
 */`}}const zt=new Bn(["January","February","March","April","May","June","July","August","September","October","November","December"]),ho=new Bn(["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]),Gr=Date.prototype,ml=zt.count,K0=ho.count;Gr.getWeekStart=function(e={}){const{year:t=this.getFullYear(),yearOffset:i=0,month:r=this.getMonth(),dateOffset:d=0,isEnd:a=!1,startingDay:l=ho.Monday,isWeek:s=!0}=e;let{monthOffset:g=0,date:b=this.getDate()}=e;!s&&a&&(g=1,b=0);const c=new Date(t+i,r+g,b+d);if(s){const h=c.getDay();l<h?c.setDate(c.getDate()-(h-l)):l>h&&c.setDate(c.getDate()-(h+(K0-l))),a&&c.setDate(c.getDate()+ho.Saturday)}return c};Gr.getMonthStart=function(e={}){return e.isWeek=e.isWeek||!1,e.date=1,this.getWeekStart(e)};Gr.getMonthEnd=function(e={}){return e.isEnd=!0,this.getMonthStart(e)};Gr.getYearStart=function(e={}){return e.month=zt.January,this.getMonthStart(e)};Gr.getYearEnd=function(e={}){return e.isEnd=!0,e.month=zt.December,this.getMonthStart(e)};Gr.getQuarterStart=function(e={}){const{isEnd:t=!1}=e;let{month:i=this.getMonth()}=e;if(i=i+(e.monthOffset||0),i<0||i>zt.December){const r=i<0?-1:1,d=Math.abs(i)/ml,a=r===-1?Math.ceil(d):Math.floor(d);i-=a*ml*r,e.yearOffset=(e.yearOffset||0)+a*r}return i<zt.April?i=t?zt.March:zt.January:i<zt.July?i=t?zt.June:zt.April:i<zt.October?i=t?zt.September:zt.July:i=t?zt.December:zt.October,e.month=i,e.monthOffset=0,this.getMonthStart(e)};Gr.getQuarterEnd=function(e={}){return e.isEnd=!0,this.getQuarterStart(e)};Gr.toMMDDYYYY=function(){return Intl.DateTimeFormat("en-US",{month:"2-digit",day:"2-digit",year:"numeric"}).format(this)};function Q0(e){return e===void 0}function _0(e){return e===null}function rn(e){return e!=null}function bt(e){return Q0(e)||_0(e)||su(e)&&isNaN(e)||e===""||Or(e)&&e.length===0||di(e)&&Object.values(e).length===0}function $0(e){return typeof e=="string"}function su(e){return typeof e=="number"}function ed(e){return typeof e=="boolean"}function td(e){return e instanceof Date}function Or(e){return Array.isArray(e)}function dr(e){return Or(e)?e:[e]}function di(e){return(e==null?void 0:e.constructor)===Object}function rd(e){return typeof e=="function"}function vl(e,t){return e===t||e.contains(t)}function rs(e,t=2){if(rn(e))return e=su(e)?e:parseFloat(e),+e.toFixed(t)}function lu(e){return rs(e,0)}function fu(e){return ed(e)||!rn(e)?e:e==="false"||e==="0"?!1:!!e}function nd(e){return td(e)?e:(e=new Date(e),isNaN(e)?void 0:e)}function ns(e){try{return JSON.parse(e)}catch{console.error(`value could not be parse ${e}`);return}}function id(e){if(rn(e))return Or(e)?e:ns(e)}function ad(e){if(rn(e))return di(e)?e:ns(e)}function uu(e){if(rn(e))return $0(e)?e:String(e)}function od(e){return ns(JSON.stringify(e))}function sd(e,t,i=-1){return e===t?0:e<t?i:-1*i}const is=Array.prototype;is.remove=function(e){if(!bt(e)){e=dr(e);for(const t of e){let i=t;rd(i)||(i=d=>d===t);const r=this.findIndex(i);r!==-1&&this.splice(r,1)}}};is.add=function(e,t=this.length){return this.splice(t,0,e),e};is.addUnique=function(e,t){const i=this.find(r=>r===e);return i||(this.add(e,t),e)};/**
  * vee-validate v4.5.11
  * (c) 2022 Abdelrahman Awad
  * @license MIT
  */function nn(e){return typeof e=="function"}function ra(e){return e==null}const zn=e=>e!==null&&!!e&&typeof e=="object"&&!Array.isArray(e);function cu(e){return Number(e)>=0}function ld(e){const t=parseFloat(e);return isNaN(t)?e:t}const hu={};function Dn(e,t){ud(e,t),hu[e]=t}function fd(e){return hu[e]}function ud(e,t){if(!nn(t))throw new Error(`Extension Error: The validator '${e}' must be a function.`)}const dn=Symbol("vee-validate-form"),cd=Symbol("vee-validate-field-instance"),Vi=Symbol("Default empty value");function po(e){return nn(e)&&!!e.__locatorRef}function hd(e){return["input","textarea","select"].includes(e)}function dd(e,t){return hd(e)&&t.type==="file"}function ti(e){return!!e&&nn(e.validate)}function pi(e){return e==="checkbox"||e==="radio"}function pd(e){return zn(e)||Array.isArray(e)}function md(e){return Array.isArray(e)?e.length===0:zn(e)&&Object.keys(e).length===0}function Ea(e){return/^\[.+\]$/i.test(e)}function vd(e){return du(e)&&e.multiple}function du(e){return e.tagName==="SELECT"}function gd(e,t){const i=![!1,null,void 0,0].includes(t.multiple)&&!Number.isNaN(t.multiple);return e==="select"&&"multiple"in t&&i}function bd(e,t){return gd(e,t)||dd(e,t)}function yd(e){return as(e)&&e.target&&"submit"in e.target}function as(e){return e?!!(typeof Event!="undefined"&&nn(Event)&&e instanceof Event||e&&e.srcElement):!1}function mo(e,t){return t in e&&e[t]!==Vi}function os(e){return Ea(e)?e.replace(/\[|\]/gi,""):e}function Pt(e,t,i){return e?Ea(t)?e[os(t)]:(t||"").split(/\.|\[(\d+)\]/).filter(Boolean).reduce((d,a)=>pd(d)&&a in d?d[a]:i,e):i}function An(e,t,i){if(Ea(t)){e[os(t)]=i;return}const r=t.split(/\.|\[(\d+)\]/).filter(Boolean);let d=e;for(let a=0;a<r.length;a++){if(a===r.length-1){d[r[a]]=i;return}(!(r[a]in d)||ra(d[r[a]]))&&(d[r[a]]=cu(r[a+1])?[]:{}),d=d[r[a]]}}function La(e,t){if(Array.isArray(e)&&cu(t)){e.splice(Number(t),1);return}zn(e)&&delete e[t]}function Ya(e,t){if(Ea(t)){delete e[os(t)];return}const i=t.split(/\.|\[(\d+)\]/).filter(Boolean);let r=e;for(let a=0;a<i.length;a++){if(a===i.length-1){La(r,i[a]);break}if(!(i[a]in r)||ra(r[i[a]]))break;r=r[i[a]]}const d=i.map((a,l)=>Pt(e,i.slice(0,l).join(".")));for(let a=d.length-1;a>=0;a--)if(!!md(d[a])){if(a===0){La(e,i[0]);continue}La(d[a-1],i[a-1])}}function Ft(e){return Object.keys(e)}function Ai(e,t=void 0){const i=l0();return(i==null?void 0:i.provides[e])||$r(e,t)}function gl(e){Ef(`[vee-validate]: ${e}`)}function vo(e,t,i){if(Array.isArray(e)){const r=[...e],d=r.indexOf(t);return d>=0?r.splice(d,1):r.push(t),r}return e===t?i:t}function wd(e,t=0){let i=null,r=[];return function(...d){return i&&window.clearTimeout(i),i=window.setTimeout(()=>{const a=e(...d);r.forEach(l=>l(a)),r=[]},t),new Promise(a=>r.push(a))}}const Sa=(e,t,i)=>t.slots.default?typeof e=="string"||!e?t.slots.default(i()):{default:()=>{var r,d;return(d=(r=t.slots).default)===null||d===void 0?void 0:d.call(r,i())}}:t.slots.default;function Ja(e){if(pu(e))return e._value}function pu(e){return"_value"in e}function ss(e){if(!as(e))return e;const t=e.target;if(pi(t.type)&&pu(t))return Ja(t);if(t.type==="file"&&t.files)return Array.from(t.files);if(vd(t))return Array.from(t.options).filter(i=>i.selected&&!i.disabled).map(Ja);if(du(t)){const i=Array.from(t.options).find(r=>r.selected);return i?Ja(i):t.value}return t.value}function mu(e){const t={};return Object.defineProperty(t,"_$$isNormalized",{value:!0,writable:!1,enumerable:!1,configurable:!1}),e?zn(e)&&e._$$isNormalized?e:zn(e)?Object.keys(e).reduce((i,r)=>{const d=xd(e[r]);return e[r]!==!1&&(i[r]=bl(d)),i},t):typeof e!="string"?t:e.split("|").reduce((i,r)=>{const d=Ad(r);return d.name&&(i[d.name]=bl(d.params)),i},t):t}function xd(e){return e===!0?[]:Array.isArray(e)||zn(e)?e:[e]}function bl(e){const t=i=>typeof i=="string"&&i[0]==="@"?Pd(i.slice(1)):i;return Array.isArray(e)?e.map(t):e instanceof RegExp?[e]:Object.keys(e).reduce((i,r)=>(i[r]=t(e[r]),i),{})}const Ad=e=>{let t=[];const i=e.split(":")[0];return e.includes(":")&&(t=e.split(":").slice(1).join(":").split(",")),{name:i,params:t}};function Pd(e){const t=i=>Pt(i,e)||i[e];return t.__locatorRef=e,t}function kd(e){return Array.isArray(e)?e.filter(po):Ft(e).filter(t=>po(e[t])).map(t=>e[t])}const Nd={generateMessage:({field:e})=>`${e} is not valid.`,bails:!0,validateOnBlur:!0,validateOnChange:!0,validateOnInput:!1,validateOnModelUpdate:!0};let go=Object.assign({},Nd);const ls=()=>go,Ed=e=>{go=Object.assign(Object.assign({},go),e)},Sd=Ed;async function vu(e,t,i={}){const r=i==null?void 0:i.bails,d={name:(i==null?void 0:i.name)||"{field}",rules:t,bails:r!=null?r:!0,formData:(i==null?void 0:i.values)||{}},l=(await Cd(d,e)).errors;return{errors:l,valid:!l.length}}async function Cd(e,t){if(ti(e.rules))return Rd(t,e.rules,{bails:e.bails});if(nn(e.rules)||Array.isArray(e.rules)){const l={field:e.name,form:e.formData,value:t},s=Array.isArray(e.rules)?e.rules:[e.rules],g=s.length,b=[];for(let c=0;c<g;c++){const u=await s[c](t,l);if(typeof u!="string"&&u)continue;const n=typeof u=="string"?u:gu(l);if(b.push(n),e.bails)return{errors:b}}return{errors:b}}const i=Object.assign(Object.assign({},e),{rules:mu(e.rules)}),r=[],d=Object.keys(i.rules),a=d.length;for(let l=0;l<a;l++){const s=d[l],g=await Fd(i,t,{name:s,params:i.rules[s]});if(g.error&&(r.push(g.error),e.bails))return{errors:r}}return{errors:r}}async function Rd(e,t,i){var r;return{errors:await t.validate(e,{abortEarly:(r=i.bails)!==null&&r!==void 0?r:!0}).then(()=>[]).catch(a=>{if(a.name==="ValidationError")return a.errors;throw a})}}async function Fd(e,t,i){const r=fd(i.name);if(!r)throw new Error(`No such validator '${i.name}' exists.`);const d=Od(i.params,e.formData),a={field:e.name,value:t,form:e.formData,rule:Object.assign(Object.assign({},i),{params:d})},l=await r(t,d,a);return typeof l=="string"?{error:l}:{error:l?void 0:gu(a)}}function gu(e){const t=ls().generateMessage;return t?t(e):"Field is invalid"}function Od(e,t){const i=r=>po(r)?r(t):r;return Array.isArray(e)?e.map(i):Object.keys(e).reduce((r,d)=>(r[d]=i(e[d]),r),{})}async function Id(e,t){const i=await e.validate(t,{abortEarly:!1}).then(()=>[]).catch(a=>{if(a.name!=="ValidationError")throw a;return a.inner||[]}),r={},d={};for(const a of i){const l=a.errors;r[a.path]={valid:!l.length,errors:l},l.length&&(d[a.path]=l[0])}return{valid:!i.length,results:r,errors:d}}async function Md(e,t,i){const d=Ft(e).map(async b=>{var c,h,u;const o=await vu(Pt(t,b),e[b],{name:((c=i==null?void 0:i.names)===null||c===void 0?void 0:c[b])||b,values:t,bails:(u=(h=i==null?void 0:i.bailsMap)===null||h===void 0?void 0:h[b])!==null&&u!==void 0?u:!0});return Object.assign(Object.assign({},o),{path:b})});let a=!0;const l=await Promise.all(d),s={},g={};for(const b of l)s[b.path]={valid:b.valid,errors:b.errors},b.valid||(a=!1,g[b.path]=b.errors[0]);return{valid:a,results:s,errors:g}}function yl(e,t,i){typeof i.value=="object"&&(i.value=yt(i.value)),!i.enumerable||i.get||i.set||!i.configurable||!i.writable||t==="__proto__"?Object.defineProperty(e,t,i):e[t]=i.value}function yt(e){if(typeof e!="object")return e;var t=0,i,r,d,a=Object.prototype.toString.call(e);if(a==="[object Object]"?d=Object.create(e.__proto__||null):a==="[object Array]"?d=Array(e.length):a==="[object Set]"?(d=new Set,e.forEach(function(l){d.add(yt(l))})):a==="[object Map]"?(d=new Map,e.forEach(function(l,s){d.set(yt(s),yt(l))})):a==="[object Date]"?d=new Date(+e):a==="[object RegExp]"?d=new RegExp(e.source,e.flags):a==="[object DataView]"?d=new e.constructor(yt(e.buffer)):a==="[object ArrayBuffer]"?d=e.slice(0):a.slice(-6)==="Array]"&&(d=new e.constructor(e)),d){for(r=Object.getOwnPropertySymbols(e);t<r.length;t++)yl(d,r[t],Object.getOwnPropertyDescriptor(e,r[t]));for(t=0,r=Object.getOwnPropertyNames(e);t<r.length;t++)Object.hasOwnProperty.call(d,i=r[t])&&d[i]===e[i]||yl(d,i,Object.getOwnPropertyDescriptor(e,i))}return d||e}var na=function e(t,i){if(t===i)return!0;if(t&&i&&typeof t=="object"&&typeof i=="object"){if(t.constructor!==i.constructor)return!1;var r,d,a;if(Array.isArray(t)){if(r=t.length,r!=i.length)return!1;for(d=r;d--!==0;)if(!e(t[d],i[d]))return!1;return!0}if(t instanceof Map&&i instanceof Map){if(t.size!==i.size)return!1;for(d of t.entries())if(!i.has(d[0]))return!1;for(d of t.entries())if(!e(d[1],i.get(d[0])))return!1;return!0}if(t instanceof Set&&i instanceof Set){if(t.size!==i.size)return!1;for(d of t.entries())if(!i.has(d[0]))return!1;return!0}if(ArrayBuffer.isView(t)&&ArrayBuffer.isView(i)){if(r=t.length,r!=i.length)return!1;for(d=r;d--!==0;)if(t[d]!==i[d])return!1;return!0}if(t.constructor===RegExp)return t.source===i.source&&t.flags===i.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===i.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===i.toString();if(a=Object.keys(t),r=a.length,r!==Object.keys(i).length)return!1;for(d=r;d--!==0;)if(!Object.prototype.hasOwnProperty.call(i,a[d]))return!1;for(d=r;d--!==0;){var l=a[d];if(!e(t[l],i[l]))return!1}return!0}return t!==t&&i!==i};let wl=0;function Td(e,t){const{value:i,initialValue:r,setInitialValue:d}=zd(e,t.modelValue,!t.standalone),{errorMessage:a,errors:l,setErrors:s}=Bd(e,!t.standalone),g=Hd(i,r,l),b=wl>=Number.MAX_SAFE_INTEGER?0:++wl;function c(h){var u;"value"in h&&(i.value=h.value),"errors"in h&&s(h.errors),"touched"in h&&(g.touched=(u=h.touched)!==null&&u!==void 0?u:g.touched),"initialValue"in h&&d(h.initialValue)}return{id:b,path:e,value:i,initialValue:r,meta:g,errors:l,errorMessage:a,setState:c}}function zd(e,t,i){const r=i?Ai(dn,void 0):void 0,d=We(Ye(t));function a(){return r?Pt(r.meta.value.initialValues,Ye(e),Ye(d)):Ye(d)}function l(c){if(!r){d.value=c;return}r.setFieldInitialValue(Ye(e),c)}const s=Je(a);if(!r)return{value:We(a()),initialValue:s,setInitialValue:l};const g=t?Ye(t):Pt(r.values,Ye(e),Ye(s));return r.stageInitialValue(Ye(e),g),{value:Je({get(){return Pt(r.values,Ye(e))},set(c){r.setFieldValue(Ye(e),c)}}),initialValue:s,setInitialValue:l}}function Hd(e,t,i){const r=Zr({touched:!1,pending:!1,valid:!0,validated:!!Ye(i).length,initialValue:Je(()=>Ye(t)),dirty:Je(()=>!na(Ye(e),Ye(t)))});return tt(i,d=>{r.valid=!d.length},{immediate:!0,flush:"sync"}),r}function Bd(e,t){const i=t?Ai(dn,void 0):void 0;function r(a){return a?Array.isArray(a)?a:[a]:[]}if(!i){const a=We([]);return{errors:a,errorMessage:Je(()=>a.value[0]),setErrors:l=>{a.value=r(l)}}}const d=Je(()=>i.errorBag.value[Ye(e)]||[]);return{errors:d,errorMessage:Je(()=>d.value[0]),setErrors:a=>{i.setFieldErrorBag(Ye(e),r(a))}}}function bu(e,t,i){return pi(i==null?void 0:i.type)?Gd(e,t,i):yu(e,t,i)}function yu(e,t,i){const{initialValue:r,validateOnMount:d,bails:a,type:l,checkedValue:s,label:g,validateOnValueUpdate:b,uncheckedValue:c,standalone:h}=Dd(Ye(e),i),u=h?void 0:Ai(dn);let o=!1;const{id:n,value:m,initialValue:y,meta:f,setState:v,errors:p,errorMessage:w}=Td(e,{modelValue:r,standalone:h}),A=()=>{f.touched=!0},x=Je(()=>{let U=Ye(t);const ie=Ye(u==null?void 0:u.schema);return ie&&!ti(ie)&&(U=Zd(ie,Ye(e))||U),ti(U)||nn(U)||Array.isArray(U)?U:mu(U)});async function k(U){var ie,oe;return u!=null&&u.validateSchema?(ie=(await u.validateSchema(U)).results[Ye(e)])!==null&&ie!==void 0?ie:{valid:!0,errors:[]}:vu(m.value,x.value,{name:Ye(g)||Ye(e),values:(oe=u==null?void 0:u.values)!==null&&oe!==void 0?oe:{},bails:a})}async function N(){f.pending=!0,f.validated=!0;const U=await k("validated-only");return o&&(U.valid=!0,U.errors=[]),v({errors:U.errors}),f.pending=!1,U}async function E(){const U=await k("silent");return o&&(U.valid=!0),f.valid=U.valid,U}function S(U){return!(U!=null&&U.mode)||(U==null?void 0:U.mode)==="force"||(U==null?void 0:U.mode)==="validated-only"?N():E()}const R=(U,ie=!0)=>{const oe=ss(U);m.value=oe,!b&&ie&&N()};hn(()=>{if(d)return N();(!u||!u.validateSchema)&&E()});function M(U){f.touched=U}let j;function O(){j=tt(m,b?N:E,{deep:!0})}O();function V(U){var ie;j==null||j();const oe=U&&"value"in U?U.value:y.value;v({value:yt(oe),initialValue:yt(oe),touched:(ie=U==null?void 0:U.touched)!==null&&ie!==void 0?ie:!1,errors:(U==null?void 0:U.errors)||[]}),f.pending=!1,f.validated=!1,E(),Wr(()=>{O()})}function J(U){m.value=U}function B(U){v({errors:Array.isArray(U)?U:[U]})}const z={id:n,name:e,label:g,value:m,meta:f,errors:p,errorMessage:w,type:l,checkedValue:s,uncheckedValue:c,bails:a,resetField:V,handleReset:()=>V(),validate:S,handleChange:R,handleBlur:A,setState:v,setTouched:M,setErrors:B,setValue:J};if(xa(cd,z),dt(t)&&typeof Ye(t)!="function"&&tt(t,(U,ie)=>{na(U,ie)||(f.validated?N():E())},{deep:!0}),!u)return z;u.register(z),wi(()=>{o=!0,u.unregister(z)});const G=Je(()=>{const U=x.value;return!U||nn(U)||ti(U)||Array.isArray(U)?{}:Object.keys(U).reduce((ie,oe)=>{const ae=kd(U[oe]).map(W=>W.__locatorRef).reduce((W,ee)=>{const _=Pt(u.values,ee)||u.values[ee];return _!==void 0&&(W[ee]=_),W},{});return Object.assign(ie,ae),ie},{})});return tt(G,(U,ie)=>{if(!Object.keys(U).length)return;!na(U,ie)&&(f.validated?N():E())}),z}function Dd(e,t){const i=()=>({initialValue:void 0,validateOnMount:!1,bails:!0,rules:"",label:e,validateOnValueUpdate:!0,standalone:!1});if(!t)return i();const r="valueProp"in t?t.valueProp:t.checkedValue;return Object.assign(Object.assign(Object.assign({},i()),t||{}),{checkedValue:r})}function Zd(e,t){if(!!e)return e[t]}function Gd(e,t,i){const r=i!=null&&i.standalone?void 0:Ai(dn),d=i==null?void 0:i.checkedValue,a=i==null?void 0:i.uncheckedValue;function l(s){const g=s.handleChange,b=Je(()=>{const h=Ye(s.value),u=Ye(d);return Array.isArray(h)?h.includes(u):u===h});function c(h,u=!0){var o,n;if(b.value===((n=(o=h)===null||o===void 0?void 0:o.target)===null||n===void 0?void 0:n.checked))return;let m=ss(h);r||(m=vo(Ye(s.value),Ye(d),Ye(a))),g(m,u)}return wi(()=>{b.value&&c(Ye(d),!1)}),Object.assign(Object.assign({},s),{checked:b,checkedValue:d,uncheckedValue:a,handleChange:c})}return l(yu(e,t,i))}cn({name:"Field",inheritAttrs:!1,props:{as:{type:[String,Object],default:void 0},name:{type:String,required:!0},rules:{type:[Object,String,Function],default:void 0},validateOnMount:{type:Boolean,default:!1},validateOnBlur:{type:Boolean,default:void 0},validateOnChange:{type:Boolean,default:void 0},validateOnInput:{type:Boolean,default:void 0},validateOnModelUpdate:{type:Boolean,default:void 0},bails:{type:Boolean,default:()=>ls().bails},label:{type:String,default:void 0},uncheckedValue:{type:null,default:void 0},modelValue:{type:null,default:Vi},modelModifiers:{type:null,default:()=>({})},"onUpdate:modelValue":{type:null,default:void 0},standalone:{type:Boolean,default:!1}},setup(e,t){const i=Rr(e,"rules"),r=Rr(e,"name"),d=Rr(e,"label"),a=Rr(e,"uncheckedValue"),l=mo(e,"onUpdate:modelValue"),{errors:s,value:g,errorMessage:b,validate:c,handleChange:h,handleBlur:u,setTouched:o,resetField:n,handleReset:m,meta:y,checked:f,setErrors:v}=bu(r,i,{validateOnMount:e.validateOnMount,bails:e.bails,standalone:e.standalone,type:t.attrs.type,initialValue:Ld(e,t),checkedValue:t.attrs.value,uncheckedValue:a,label:d,validateOnValueUpdate:!1}),p=l?function(S,R=!0){h(S,R),t.emit("update:modelValue",g.value)}:h,w=E=>{pi(t.attrs.type)||(g.value=ss(E))},A=l?function(S){w(S),t.emit("update:modelValue",g.value)}:w,x=Je(()=>{const{validateOnInput:E,validateOnChange:S,validateOnBlur:R,validateOnModelUpdate:M}=jd(e),j=[u,t.attrs.onBlur,R?c:void 0].filter(Boolean),O=[z=>p(z,E),t.attrs.onInput].filter(Boolean),V=[z=>p(z,S),t.attrs.onChange].filter(Boolean),J={name:e.name,onBlur:j,onInput:O,onChange:V};J["onUpdate:modelValue"]=z=>p(z,M),pi(t.attrs.type)&&f?J.checked=f.value:J.value=g.value;const B=xl(e,t);return bd(B,t.attrs)&&delete J.value,J}),k=Rr(e,"modelValue");tt(k,E=>{E===Vi&&g.value===void 0||E!==Vd(g.value,e.modelModifiers)&&(g.value=E===Vi?void 0:E,c())});function N(){return{field:x.value,value:g.value,meta:y,errors:s.value,errorMessage:b.value,validate:c,resetField:n,handleChange:p,handleInput:A,handleReset:m,handleBlur:u,setTouched:o,setErrors:v}}return t.expose({setErrors:v,setTouched:o,reset:n,validate:c,handleChange:h}),()=>{const E=Ko(xl(e,t)),S=Sa(E,t,N);return E?Mn(E,Object.assign(Object.assign({},t.attrs),x.value),S):S}}});function xl(e,t){let i=e.as||"";return!e.as&&!t.slots.default&&(i="input"),i}function jd(e){var t,i,r,d;const{validateOnInput:a,validateOnChange:l,validateOnBlur:s,validateOnModelUpdate:g}=ls();return{validateOnInput:(t=e.validateOnInput)!==null&&t!==void 0?t:a,validateOnChange:(i=e.validateOnChange)!==null&&i!==void 0?i:l,validateOnBlur:(r=e.validateOnBlur)!==null&&r!==void 0?r:s,validateOnModelUpdate:(d=e.validateOnModelUpdate)!==null&&d!==void 0?d:g}}function Vd(e,t){return t.number?ld(e):e}function Ld(e,t){return pi(t.attrs.type)?mo(e,"modelValue")?e.modelValue:void 0:mo(e,"modelValue")?e.modelValue:t.attrs.value}let Yd=0;function Jd(e){const t=Yd++;let i=!1;const r=We({}),d=We(!1),a=We(0),l={},s=Zr(yt(Ye(e==null?void 0:e.initialValues)||{})),{errorBag:g,setErrorBag:b,setFieldErrorBag:c}=Ud(e==null?void 0:e.initialErrors),h=Je(()=>Ft(g.value).reduce((se,ce)=>{const q=g.value[ce];return q&&q.length&&(se[ce]=q[0]),se},{}));function u(se){const ce=r.value[se];return Array.isArray(ce)?ce[0]:ce}function o(se){return!!r.value[se]}const n=Je(()=>Ft(r.value).reduce((se,ce)=>{const q=u(ce);return q&&(se[ce]=Ye(q.label||q.name)||""),se},{})),m=Je(()=>Ft(r.value).reduce((se,ce)=>{var q;const K=u(ce);return K&&(se[ce]=(q=K.bails)!==null&&q!==void 0?q:!0),se},{})),y=Object.assign({},(e==null?void 0:e.initialErrors)||{}),{initialValues:f,originalInitialValues:v,setInitialValues:p}=qd(r,s,e==null?void 0:e.initialValues),w=Xd(r,s,f,h),A=e==null?void 0:e.validationSchema,x={formId:t,fieldsByPath:r,values:s,errorBag:g,errors:h,schema:A,submitCount:a,meta:w,isSubmitting:d,fieldArraysLookup:l,validateSchema:Ye(A)?pe:void 0,validate:ie,register:G,unregister:U,setFieldErrorBag:c,validateField:oe,setFieldValue:M,setValues:j,setErrors:R,setFieldError:S,setFieldTouched:O,setTouched:V,resetForm:J,handleSubmit:ae,stageInitialValue:_,unsetInitialValue:ee,setFieldInitialValue:W};function k(se){return Array.isArray(se)}function N(se,ce){return Array.isArray(se)?se.forEach(ce):ce(se)}function E(se){Object.values(r.value).forEach(ce=>{!ce||N(ce,se)})}function S(se,ce){c(se,ce)}function R(se){b(se)}function M(se,ce,{force:q}={force:!1}){var K;const Y=r.value[se],$=yt(ce);if(!Y){An(s,se,$);return}if(k(Y)&&((K=Y[0])===null||K===void 0?void 0:K.type)==="checkbox"&&!Array.isArray(ce)){const L=yt(vo(Pt(s,se)||[],ce,void 0));An(s,se,L);return}let te=ce;!k(Y)&&Y.type==="checkbox"&&!q&&!i&&(te=yt(vo(Pt(s,se),ce,Ye(Y.uncheckedValue)))),An(s,se,te)}function j(se){Ft(s).forEach(ce=>{delete s[ce]}),Ft(se).forEach(ce=>{M(ce,se[ce])}),Object.values(l).forEach(ce=>ce&&ce.reset())}function O(se,ce){const q=r.value[se];q&&N(q,K=>K.setTouched(ce))}function V(se){Ft(se).forEach(ce=>{O(ce,!!se[ce])})}function J(se){i=!0,se!=null&&se.values?(p(se.values),j(se==null?void 0:se.values)):(p(v.value),j(v.value)),E(ce=>ce.resetField()),se!=null&&se.touched&&V(se.touched),R((se==null?void 0:se.errors)||{}),a.value=(se==null?void 0:se.submitCount)||0,Wr(()=>{i=!1})}function B(se,ce){const q=Yo(se),K=ce;if(!r.value[K]){r.value[K]=q;return}const Y=r.value[K];Y&&!Array.isArray(Y)&&(r.value[K]=[Y]),r.value[K]=[...r.value[K],q]}function z(se,ce){const q=ce,K=r.value[q];if(!!K){if(!k(K)&&se.id===K.id){delete r.value[q];return}if(k(K)){const Y=K.findIndex($=>$.id===se.id);if(Y===-1)return;if(K.splice(Y,1),K.length===1){r.value[q]=K[0];return}K.length||delete r.value[q]}}}function G(se){const ce=Ye(se.name);B(se,ce),dt(se.name)&&tt(se.name,async(K,Y)=>{await Wr(),z(se,Y),B(se,K),(h.value[Y]||h.value[K])&&(S(Y,void 0),oe(K)),await Wr(),o(Y)||Ya(s,Y)});const q=Ye(se.errorMessage);q&&(y==null?void 0:y[ce])!==q&&oe(ce),delete y[ce]}function U(se){const ce=Ye(se.name);z(se,ce),Wr(()=>{o(ce)||(S(ce,void 0),Ya(s,ce))})}async function ie(se){if(E(Y=>Y.meta.validated=!0),x.validateSchema)return x.validateSchema((se==null?void 0:se.mode)||"force");const ce=await Promise.all(Object.values(r.value).map(Y=>{const $=Array.isArray(Y)?Y[0]:Y;return $?$.validate(se).then(te=>({key:Ye($.name),valid:te.valid,errors:te.errors})):Promise.resolve({key:"",valid:!0,errors:[]})})),q={},K={};for(const Y of ce)q[Y.key]={valid:Y.valid,errors:Y.errors},Y.errors.length&&(K[Y.key]=Y.errors[0]);return{valid:ce.every(Y=>Y.valid),results:q,errors:K}}async function oe(se){const ce=r.value[se];return ce?Array.isArray(ce)?ce.map(q=>q.validate())[0]:ce.validate():(Ef(`field with name ${se} was not found`),Promise.resolve({errors:[],valid:!0}))}function ae(se,ce){return function(K){return K instanceof Event&&(K.preventDefault(),K.stopPropagation()),V(Ft(r.value).reduce((Y,$)=>(Y[$]=!0,Y),{})),d.value=!0,a.value++,ie().then(Y=>{if(Y.valid&&typeof se=="function")return se(yt(s),{evt:K,setErrors:R,setFieldError:S,setTouched:V,setFieldTouched:O,setValues:j,setFieldValue:M,resetForm:J});!Y.valid&&typeof ce=="function"&&ce({values:yt(s),evt:K,errors:Y.errors,results:Y.results})}).then(Y=>(d.value=!1,Y),Y=>{throw d.value=!1,Y})}}function W(se,ce){An(f.value,se,yt(ce))}function ee(se){Ya(f.value,se)}function _(se,ce){An(s,se,ce),W(se,ce)}async function re(){const se=Ye(A);return se?ti(se)?await Id(se,s):await Md(se,s,{names:n.value,bailsMap:m.value}):{valid:!0,results:{},errors:{}}}const fe=wd(re,5);async function pe(se){const ce=await fe(),q=x.fieldsByPath.value||{},K=Ft(x.errorBag.value);return[...new Set([...Ft(ce.results),...Ft(q),...K])].reduce(($,te)=>{const L=q[te],T=(ce.results[te]||{errors:[]}).errors,F={errors:T,valid:!T.length};if($.results[te]=F,F.valid||($.errors[te]=F.errors[0]),!L)return S(te,T),$;if(N(L,H=>H.meta.valid=F.valid),se==="silent")return $;const X=Array.isArray(L)?L.some(H=>H.meta.validated):L.meta.validated;return se==="validated-only"&&!X||N(L,H=>H.setState({errors:F.errors})),$},{valid:ce.valid,results:{},errors:{}})}const he=ae((se,{evt:ce})=>{yd(ce)&&ce.target.submit()});return hn(()=>{if(e!=null&&e.initialErrors&&R(e.initialErrors),e!=null&&e.initialTouched&&V(e.initialTouched),e!=null&&e.validateOnMount){ie();return}x.validateSchema&&x.validateSchema("silent")}),dt(A)&&tt(A,()=>{var se;(se=x.validateSchema)===null||se===void 0||se.call(x,"validated-only")}),xa(dn,x),{errors:h,meta:w,values:s,isSubmitting:d,submitCount:a,validate:ie,validateField:oe,handleReset:()=>J(),resetForm:J,handleSubmit:ae,submitForm:he,setFieldError:S,setErrors:R,setFieldValue:M,setValues:j,setFieldTouched:O,setTouched:V}}function Xd(e,t,i,r){const d={touched:"some",pending:"some",valid:"every"},a=Je(()=>!na(t,Ye(i)));function l(){const g=Object.values(e.value).flat(1).filter(Boolean);return Ft(d).reduce((b,c)=>{const h=d[c];return b[c]=g[h](u=>u.meta[c]),b},{})}const s=Zr(l());return Hf(()=>{const g=l();s.touched=g.touched,s.valid=g.valid,s.pending=g.pending}),Je(()=>Object.assign(Object.assign({initialValues:Ye(i)},s),{valid:s.valid&&!Ft(r.value).length,dirty:a.value}))}function qd(e,t,i){const r=We(yt(Ye(i))||{}),d=We(yt(Ye(i))||{});function a(l,s=!1){r.value=yt(l),d.value=yt(l),s&&Ft(e.value).forEach(g=>{const b=e.value[g],c=Array.isArray(b)?b.some(u=>u.meta.touched):b==null?void 0:b.meta.touched;if(!b||c)return;const h=Pt(r.value,g);An(t,g,yt(h))})}return dt(i)&&tt(i,l=>{a(l,!0)},{deep:!0}),{initialValues:r,originalInitialValues:d,setInitialValues:a}}function Ud(e){const t=We({});function i(a){return Array.isArray(a)?a:a?[a]:[]}function r(a,l){if(!l){delete t.value[a];return}t.value[a]=i(l)}function d(a){t.value=Ft(a).reduce((l,s)=>{const g=a[s];return g&&(l[s]=i(g)),l},{})}return e&&d(e),{errorBag:t,setErrorBag:d,setFieldErrorBag:r}}cn({name:"Form",inheritAttrs:!1,props:{as:{type:String,default:"form"},validationSchema:{type:Object,default:void 0},initialValues:{type:Object,default:void 0},initialErrors:{type:Object,default:void 0},initialTouched:{type:Object,default:void 0},validateOnMount:{type:Boolean,default:!1},onSubmit:{type:Function,default:void 0},onInvalidSubmit:{type:Function,default:void 0}},setup(e,t){const i=Rr(e,"initialValues"),r=Rr(e,"validationSchema"),{errors:d,values:a,meta:l,isSubmitting:s,submitCount:g,validate:b,validateField:c,handleReset:h,resetForm:u,handleSubmit:o,submitForm:n,setErrors:m,setFieldError:y,setFieldValue:f,setValues:v,setFieldTouched:p,setTouched:w}=Jd({validationSchema:r.value?r:void 0,initialValues:i,initialErrors:e.initialErrors,initialTouched:e.initialTouched,validateOnMount:e.validateOnMount}),A=e.onSubmit?o(e.onSubmit,e.onInvalidSubmit):n;function x(E){as(E)&&E.preventDefault(),h(),typeof t.attrs.onReset=="function"&&t.attrs.onReset()}function k(E,S){return o(typeof E=="function"&&!S?E:S,e.onInvalidSubmit)(E)}function N(){return{meta:l.value,errors:d.value,values:a,isSubmitting:s.value,submitCount:g.value,validate:b,validateField:c,handleSubmit:k,handleReset:h,submitForm:n,setErrors:m,setFieldError:y,setFieldValue:f,setValues:v,setFieldTouched:p,setTouched:w,resetForm:u}}return t.expose({setFieldError:y,setErrors:m,setFieldValue:f,setValues:v,setFieldTouched:p,setTouched:w,resetForm:u,validate:b,validateField:c}),function(){const S=e.as==="form"?e.as:Ko(e.as),R=Sa(S,t,N);if(!e.as)return R;const M=e.as==="form"?{novalidate:!0}:{};return Mn(S,Object.assign(Object.assign(Object.assign({},M),t.attrs),{onSubmit:A,onReset:x}),R)}}});let Wd=0;function Kd(e){const t=Wd++,i=Ai(dn,void 0),r=We([]),d=()=>{},a={fields:Ui(r),remove:d,push:d,swap:d,insert:d,update:d,replace:d,prepend:d};if(!i)return gl("FieldArray requires being a child of `<Form/>` or `useForm` being called before it. Array fields may not work correctly"),a;if(!Ye(e))return gl("FieldArray requires a field path to be provided, did you forget to pass the `name` prop?"),a;let l=0;function s(){const f=Pt(i==null?void 0:i.values,Ye(e),[]);r.value=f.map(b),g()}s();function g(){const f=r.value.length;for(let v=0;v<f;v++){const p=r.value[v];p.isFirst=v===0,p.isLast=v===f-1}}function b(f){const v=l++;return{key:v,value:Je(()=>{const w=Pt(i==null?void 0:i.values,Ye(e),[]),A=r.value.findIndex(x=>x.key===v);return A===-1?f:w[A]}),isFirst:!1,isLast:!1}}function c(f){const v=Ye(e),p=Pt(i==null?void 0:i.values,v);if(!p||!Array.isArray(p))return;const w=[...p];w.splice(f,1),i==null||i.unsetInitialValue(v+`[${f}]`),i==null||i.setFieldValue(v,w),r.value.splice(f,1),g()}function h(f){const v=Ye(e),p=Pt(i==null?void 0:i.values,v),w=ra(p)?[]:p;if(!Array.isArray(w))return;const A=[...w];A.push(f),i==null||i.stageInitialValue(v+`[${A.length-1}]`,f),i==null||i.setFieldValue(v,A),r.value.push(b(f)),g()}function u(f,v){const p=Ye(e),w=Pt(i==null?void 0:i.values,p);if(!Array.isArray(w)||!(f in w)||!(v in w))return;const A=[...w],x=[...r.value],k=A[f];A[f]=A[v],A[v]=k;const N=x[f];x[f]=x[v],x[v]=N,i==null||i.setFieldValue(p,A),r.value=x,g()}function o(f,v){const p=Ye(e),w=Pt(i==null?void 0:i.values,p);if(!Array.isArray(w)||w.length<f)return;const A=[...w],x=[...r.value];A.splice(f,0,v),x.splice(f,0,b(v)),i==null||i.setFieldValue(p,A),r.value=x,g()}function n(f){const v=Ye(e);i==null||i.setFieldValue(v,f),s()}function m(f,v){const p=Ye(e),w=Pt(i==null?void 0:i.values,p);!Array.isArray(w)||w.length-1<f||i==null||i.setFieldValue(`${p}[${f}]`,v)}function y(f){const v=Ye(e),p=Pt(i==null?void 0:i.values,v),w=ra(p)?[]:p;if(!Array.isArray(w))return;const A=[f,...w];i==null||i.stageInitialValue(v+`[${A.length-1}]`,f),i==null||i.setFieldValue(v,A),r.value.unshift(b(f)),g()}return i.fieldArraysLookup[t]={reset:s},wi(()=>{delete i.fieldArraysLookup[t]}),{fields:Ui(r),remove:c,push:h,swap:u,insert:o,update:m,replace:n,prepend:y}}cn({name:"FieldArray",inheritAttrs:!1,props:{name:{type:String,required:!0}},setup(e,t){const{push:i,remove:r,swap:d,insert:a,replace:l,update:s,prepend:g,fields:b}=Kd(Rr(e,"name"));function c(){return{fields:b.value,push:i,remove:r,swap:d,insert:a,update:s,replace:l,prepend:g}}return t.expose({push:i,remove:r,swap:d,insert:a,update:s,replace:l,prepend:g}),()=>Sa(void 0,t,c)}});cn({name:"ErrorMessage",props:{as:{type:String,default:void 0},name:{type:String,required:!0}},setup(e,t){const i=$r(dn,void 0),r=Je(()=>i==null?void 0:i.errors.value[e.name]);function d(){return{message:r.value}}return()=>{if(!r.value)return;const a=e.as?Ko(e.as):e.as,l=Sa(a,t,d),s=Object.assign({role:"alert"},t.attrs);return!a&&(Array.isArray(l)||!l)&&(l==null?void 0:l.length)?l:(Array.isArray(l)||!l)&&!(l!=null&&l.length)?Mn(a||"span",s,r.value):Mn(a,s,l)}}});const qt=new Bn(["String","Integer","Decimal","Boolean","Date","Model","Collection","Array","Object"]);function Qd(e,t){const{type:i}=t;if(rn(i))switch(i){case qt.Integer:e=mn(lu(e),t,0);break;case Number:case qt.Decimal:e=mn(rs(e,t.precision),t,0);break;case Boolean:case qt.Boolean:e=mn(fu(e),t,!1);break;case Date:case qt.Date:e=mn(nd(e),t,null);break;case qt.Collection:e=t.collection?new t.collection(e):new Pi(e,t.model);break;case qt.Model:e=new t.model(e);break;case Array:case qt.Array:e=id(e);break;case Object:case qt.Object:e=mn(ad(e),t,{});break;case String:case qt.String:e=mn(uu(e),t,"");break;default:e!=null||(e=t.defaultValue),rn(e)&&!(e instanceof i)&&(e=new i(e));break}return e}function mn(e,t,i){return bt(e)&&(e="defaultValue"in t?t.defaultValue:i),e}class _d{constructor(t){Vt(this,"isModel",!0),Vt(this,"_snapshot",null),Vt(this,"_fields",null),Vt(this,"_trackChanges",!1),t!=null||(t={});for(const{name:i}of this.fields)i in t||(t[i]=null);this.set(t)}get TrackChanges(){return this._trackChanges}set TrackChanges(t){this._trackChanges=t,this.commit()}getDefaultFields(){return[]}get fields(){let t=this._fields;return t||(this.fields=t=this.getDefaultFields()),t}set fields(t){this._fields=t}reset(){this.set(this._snapshot)}commit(){this.TrackChanges?this._snapshot=this.getData():delete this._snapshot}set(t,i=!1){i&&this.reset();for(const r in t){const d=this.fields.find(a=>a.name===r);d?this[d.name]=Qd(t[d.name],d):(this.fields.push({name:r,custom:!0}),this[r]=t[r])}}clone(t){return new this.constructor(this.getData(t))}getData({include:t,exclude:i}={}){const r={},d=[...this.fields];t&&t.forEach(a=>d.push({name:a})),this._visited=!0;for(const a of d){const{name:l}=a;if(i&&i.indexOf(l)!==-1)continue;const s=this[l];(s==null?void 0:s.isModel)||(s==null?void 0:s.isCollection)?s._visited||(r[l]=s.getData({include:t,exclude:i})):Or(s)||di(s)?r[l]=od(s):r[l]=s}return delete this._visited,r}static toClassDescription(){const t=[];return new this().fields.forEach(r=>{let{type:d}=r;return qt.values.includes(d)?d===qt.Collection?d=`Collection<${r.model.name}>`:d===qt.Model&&(d=`${r.model.name}`):d=d.name,t.push(`* @property {${d}} ${r.name}`)}),`/**
`+t.join(`
`)+`
 */`}}const vn="groupKey",Yn="groupDisplay",$d="list-item-selected";class Pi extends Array{constructor(t,i=_d){super(),Vt(this,"isCollection",!0),Vt(this,"_idField","id"),Vt(this,"_displayField","value"),Vt(this,"_records",[]),Vt(this,"_groups",null),Vt(this,"_filters",[]),Vt(this,"_sorters",[]),Vt(this,"parent",null),Vt(this,dl,null),Vt(this,pl,null),t!=null||(t={}),this.suspend(!0),this.model=t.model||i,delete t.model,Or(t)?this.records=t:Object.assign(this,t),this.suspend(),this.init()}clear(){this.length=0}add(t,{clear:i=!1,suppress:r=!1}={}){bt(t)||(t=dr(t),this.suspend(r),this.records=i?t:this.records.concat(t),this.suspend())}clearFilters(){this.filters=[]}sum(t){return this.records.reduce((i,r)=>i+r[t])}addFilters(t,{suppress:i=!1}={}){bt(t)||(t=dr(t),this.suspend(i),this.filters=this.filters.concat(t),this.suspend())}removeFilters(t,i){if(!bt(t)){t=dr(t);for(const r of t)this.filters.remove(({id:d})=>d===r);this.suspend(i),this.init(),this.suspend()}}suspend(t){this._suspended=t}addSorters(t,{suppress:i=!1}={}){bt(t)||(t=dr(t),this.suspend(i),this.sorters=this.sorters.concat(t),this.suspend())}removeSorters(t,{suppress:i=!1}={}){if(!bt(t)){t=dr(t);for(const r of t)this.sorters.remove(({id:d})=>d===r);this.suspend(i),this.init(),this.suspend()}}group({key:t,display:i},r=this.records){this.clear();const d={};r.forEach(a=>{const l=a[t],s=d[l];s?s.records.push(a):d[l]={[vn]:l,records:[a]}});for(const{[vn]:a,records:l}of Object.values(d)){const s=new Pi({records:l,parent:this});s[Yn]=i?i(s):a,this[vn]=t,this.push(s)}this.sort({property:Yn},!1)}find(t){return this.records.find(t)}sort(t=this.sorters,i=!0){!t||this._suspended||(t=dr(t),t.forEach(r=>{if(di(r)){const{property:d,direction:a=-1}=r;r=(l,s)=>sd(l[d],s[d],a)}i?this.records.sort(r):super.sort(r)}))}init(){if(this._suspended)return;const{groups:t,filters:i}=this;let{records:r}=this;if(!bt(i)){let d=[];i.forEach((a,l)=>{l===0||a.or||(r=d,d=[]);let s=a.fn;if(!s){let{value:g}=a;const{property:b,exact:c=!1}=a;c||(g=new RegExp(g,"i")),s=h=>{const u=h[b];return c?u===g:g.test(u)}}r.forEach(g=>{s(g)&&d.push(g)})}),r=d}if(t){let d=this;for(let a=0;a<t.length;a++)if(a===0)this.group(t[a],r);else{let l=[];d.forEach(s=>{s.group(t[a]),l=l.concat(s)}),d=l}}else this.clear(),r.forEach(d=>this.push(d)),this.sort()}getOptionId(t){if(t)return Or(t)?t[Yn]:t[this.idField]}getOptionDisplay(t){if(t)return Or(t)?t[Yn]:t[this.displayField]}getOptionCls(t,i){if(this.isGrouped)return"group-wrapper";const r=["list-item"],{idField:d}=this,a=t[d];for(const l of i)if(a===l[d]){r.push($d);break}return r}clone(t){const{groups:i,idField:r,displayField:d,sorters:a,filters:l,model:s}=this;return new this.constructor({idField:r,displayField:d,groups:i,sorters:a,filters:l,model:s,records:this.getData(t)})}getData(t){const i=[];return this._visited=!0,this.forEach(r=>{const d=dr(r.getData(t));i.push(...d)}),delete this._visited,i}get first(){return this[0]}get last(){return this[this.length-1]}set sorters(t){t==null||t.map((i,r)=>(i.id||(i.id=r),i)),this._sorters=t,this.sort()}get sorters(){return this._sorters}set filters(t){t==null||t.map((i,r)=>(i.id||(i.id=r),i)),this._filters=t,this.init()}get filters(){return this._filters}set records(t){const i=[],{model:r}=this;t.forEach(d=>{d.isModel?i.push(d):i.push(new r(d))}),this._records=i,this.init()}get records(){return this._records}set groups(t){bt(t)?this[vn]=null:di(t)&&(t=[t]),this._groups=t,this.init()}get groups(){return this._groups}get idField(){var t;return((t=this.parent)==null?void 0:t.idField)||this._idField}set idField(t){this._idField=t}get displayField(){var t;return((t=this.parent)==null?void 0:t.displayField)||this._displayField}set displayField(t){this._displayField=t}get isGrouped(){return!bt(this[vn])}static get[(dl=vn,pl=Yn,Symbol.species)](){return Array}}/*!
 * Font Awesome Free 6.1.1 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2022 Fonticons, Inc.
 */var ep={prefix:"fas",iconName:"chevron-down",icon:[448,512,[],"f078","M224 416c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L224 338.8l169.4-169.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-192 192C240.4 412.9 232.2 416 224 416z"]},tp={prefix:"fas",iconName:"minus",icon:[448,512,[8722,10134,8211,"subtract"],"f068","M400 288h-352c-17.69 0-32-14.32-32-32.01s14.31-31.99 32-31.99h352c17.69 0 32 14.3 32 31.99S417.7 288 400 288z"]},rp={prefix:"fas",iconName:"plus",icon:[448,512,[10133,61543,"add"],"2b","M432 256c0 17.69-14.33 32.01-32 32.01H256v144c0 17.69-14.33 31.99-32 31.99s-32-14.3-32-31.99v-144H48c-17.67 0-32-14.32-32-32.01s14.33-31.99 32-31.99H192v-144c0-17.69 14.33-32.01 32-32.01s32 14.32 32 32.01v144h144C417.7 224 432 238.3 432 256z"]},np={prefix:"fas",iconName:"square",icon:[448,512,[9723,9724,61590,9632],"f0c8","M0 96C0 60.65 28.65 32 64 32H384C419.3 32 448 60.65 448 96V416C448 451.3 419.3 480 384 480H64C28.65 480 0 451.3 0 416V96z"]},ip={prefix:"fas",iconName:"triangle-exclamation",icon:[512,512,[9888,"exclamation-triangle","warning"],"f071","M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z"]},ap=ip,op={prefix:"fas",iconName:"window-restore",icon:[512,512,[],"f2d2","M432 64H208C199.2 64 192 71.16 192 80V96H128V80C128 35.82 163.8 0 208 0H432C476.2 0 512 35.82 512 80V304C512 348.2 476.2 384 432 384H416V320H432C440.8 320 448 312.8 448 304V80C448 71.16 440.8 64 432 64zM0 192C0 156.7 28.65 128 64 128H320C355.3 128 384 156.7 384 192V448C384 483.3 355.3 512 320 512H64C28.65 512 0 483.3 0 448V192zM96 256H288C305.7 256 320 241.7 320 224C320 206.3 305.7 192 288 192H96C78.33 192 64 206.3 64 224C64 241.7 78.33 256 96 256z"]},sp={prefix:"fas",iconName:"xmark",icon:[320,512,[128473,10005,10006,10060,215,"close","multiply","remove","times"],"f00d","M310.6 361.4c12.5 12.5 12.5 32.75 0 45.25C304.4 412.9 296.2 416 288 416s-16.38-3.125-22.62-9.375L160 301.3L54.63 406.6C48.38 412.9 40.19 416 32 416S15.63 412.9 9.375 406.6c-12.5-12.5-12.5-32.75 0-45.25l105.4-105.4L9.375 150.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L160 210.8l105.4-105.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-105.4 105.4L310.6 361.4z"]},lp={AlertTriangle:ap,PickerDown:ep,Close:sp,Plus:rp,Maximize:np,Minus:tp,Restore:op};(function(){try{var e=document.createElement("style");e.innerText='*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}:before,:after{--tw-content: ""}html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:Open Sans}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input:-ms-input-placeholder,textarea:-ms-input-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}*,:before,:after{--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.field-number input{-moz-appearance:textfield}.field-number input::-webkit-outer-spin-button,.field-number input::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}.field-tags-wrapper-collapse,.field-tags-wrapper-expand,.field-tags-wrapper{margin-top:.25rem;margin-right:.25rem;display:inline-block;border-radius:.25rem;border-width:1px;--tw-bg-opacity: 1;background-color:rgb(229 231 235 / var(--tw-bg-opacity));padding:.25rem;font-size:.75rem;line-height:1rem;--tw-text-opacity: 1;color:rgb(75 85 99 / var(--tw-text-opacity))}.field-tags-wrapper-collapse,.field-tags-wrapper-expand{cursor:pointer;font-weight:700}.fields-tags-close-icon{margin-left:.25rem;display:inline-block;cursor:pointer}.fields-tags-close-icon:hover{--tw-text-opacity: 1;color:rgb(153 27 27 / var(--tw-text-opacity))}.base-dialog-body{flex:1 1 0%;padding:.5rem}.overlay-container{pointer-events:auto;position:absolute}.view-dialog{top:0px;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;width:100%;--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity));--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow);height:calc(100% - 2.25rem)}.pointer-events-auto{pointer-events:auto}.invisible{visibility:hidden}.absolute{position:absolute}.relative{position:relative}.sticky{position:-webkit-sticky;position:sticky}.top-24{top:6rem}.top-0{top:0px}.right-0{right:0px}.bottom-0{bottom:0px}.z-10{z-index:10}.mx-2{margin-left:.5rem;margin-right:.5rem}.box-border{box-sizing:border-box}.inline-block{display:inline-block}.flex{display:flex}.list-item{display:list-item}.h-64{height:16rem}.h-full{height:100%}.h-8{height:2rem}.h-6{height:1.5rem}.h-36{height:9rem}.w-48{width:12rem}.w-24{width:6rem}.w-full{width:100%}.w-32{width:8rem}.w-auto{width:auto}.w-6{width:1.5rem}.w-14{width:3.5rem}.flex-1{flex:1 1 0%}.cursor-help{cursor:help}.cursor-pointer{cursor:pointer}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.flex-row-reverse{flex-direction:row-reverse}.flex-col{flex-direction:column}.flex-col-reverse{flex-direction:column-reverse}.flex-wrap{flex-wrap:wrap}.items-center{align-items:center}.items-stretch{align-items:stretch}.space-x-0>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(0px * var(--tw-space-x-reverse));margin-left:calc(0px * calc(1 - var(--tw-space-x-reverse)))}.space-x-1>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.25rem * var(--tw-space-x-reverse));margin-left:calc(.25rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-3>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.75rem * var(--tw-space-x-reverse));margin-left:calc(.75rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1rem * var(--tw-space-x-reverse));margin-left:calc(1rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-5>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1.25rem * var(--tw-space-x-reverse));margin-left:calc(1.25rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-6>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1.5rem * var(--tw-space-x-reverse));margin-left:calc(1.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-7>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1.75rem * var(--tw-space-x-reverse));margin-left:calc(1.75rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-8>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(2rem * var(--tw-space-x-reverse));margin-left:calc(2rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-9>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(2.25rem * var(--tw-space-x-reverse));margin-left:calc(2.25rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-10>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(2.5rem * var(--tw-space-x-reverse));margin-left:calc(2.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-11>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(2.75rem * var(--tw-space-x-reverse));margin-left:calc(2.75rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-12>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(3rem * var(--tw-space-x-reverse));margin-left:calc(3rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-14>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(3.5rem * var(--tw-space-x-reverse));margin-left:calc(3.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-16>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(4rem * var(--tw-space-x-reverse));margin-left:calc(4rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-20>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(5rem * var(--tw-space-x-reverse));margin-left:calc(5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-24>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(6rem * var(--tw-space-x-reverse));margin-left:calc(6rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-28>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(7rem * var(--tw-space-x-reverse));margin-left:calc(7rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-32>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(8rem * var(--tw-space-x-reverse));margin-left:calc(8rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-36>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(9rem * var(--tw-space-x-reverse));margin-left:calc(9rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-40>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(10rem * var(--tw-space-x-reverse));margin-left:calc(10rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-44>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(11rem * var(--tw-space-x-reverse));margin-left:calc(11rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-48>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(12rem * var(--tw-space-x-reverse));margin-left:calc(12rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-52>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(13rem * var(--tw-space-x-reverse));margin-left:calc(13rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-56>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(14rem * var(--tw-space-x-reverse));margin-left:calc(14rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-60>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(15rem * var(--tw-space-x-reverse));margin-left:calc(15rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-64>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(16rem * var(--tw-space-x-reverse));margin-left:calc(16rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-72>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(18rem * var(--tw-space-x-reverse));margin-left:calc(18rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-80>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(20rem * var(--tw-space-x-reverse));margin-left:calc(20rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-96>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(24rem * var(--tw-space-x-reverse));margin-left:calc(24rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-px>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1px * var(--tw-space-x-reverse));margin-left:calc(1px * calc(1 - var(--tw-space-x-reverse)))}.space-x-0\\.5>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.125rem * var(--tw-space-x-reverse));margin-left:calc(.125rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-1\\.5>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.375rem * var(--tw-space-x-reverse));margin-left:calc(.375rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-2\\.5>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.625rem * var(--tw-space-x-reverse));margin-left:calc(.625rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-3\\.5>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.875rem * var(--tw-space-x-reverse));margin-left:calc(.875rem * calc(1 - var(--tw-space-x-reverse)))}.space-y-0>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(0px * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(0px * var(--tw-space-y-reverse))}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.25rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.25rem * var(--tw-space-y-reverse))}.space-y-2>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.5rem * var(--tw-space-y-reverse))}.space-y-3>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.75rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.75rem * var(--tw-space-y-reverse))}.space-y-4>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}.space-y-5>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1.25rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1.25rem * var(--tw-space-y-reverse))}.space-y-6>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1.5rem * var(--tw-space-y-reverse))}.space-y-7>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1.75rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1.75rem * var(--tw-space-y-reverse))}.space-y-8>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(2rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(2rem * var(--tw-space-y-reverse))}.space-y-9>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(2.25rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(2.25rem * var(--tw-space-y-reverse))}.space-y-10>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(2.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(2.5rem * var(--tw-space-y-reverse))}.space-y-11>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(2.75rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(2.75rem * var(--tw-space-y-reverse))}.space-y-12>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(3rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(3rem * var(--tw-space-y-reverse))}.space-y-14>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(3.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(3.5rem * var(--tw-space-y-reverse))}.space-y-16>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(4rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(4rem * var(--tw-space-y-reverse))}.space-y-20>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(5rem * var(--tw-space-y-reverse))}.space-y-24>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(6rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(6rem * var(--tw-space-y-reverse))}.space-y-28>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(7rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(7rem * var(--tw-space-y-reverse))}.space-y-32>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(8rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(8rem * var(--tw-space-y-reverse))}.space-y-36>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(9rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(9rem * var(--tw-space-y-reverse))}.space-y-40>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(10rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(10rem * var(--tw-space-y-reverse))}.space-y-44>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(11rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(11rem * var(--tw-space-y-reverse))}.space-y-48>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(12rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(12rem * var(--tw-space-y-reverse))}.space-y-52>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(13rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(13rem * var(--tw-space-y-reverse))}.space-y-56>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(14rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(14rem * var(--tw-space-y-reverse))}.space-y-60>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(15rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(15rem * var(--tw-space-y-reverse))}.space-y-64>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(16rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(16rem * var(--tw-space-y-reverse))}.space-y-72>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(18rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(18rem * var(--tw-space-y-reverse))}.space-y-80>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(20rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(20rem * var(--tw-space-y-reverse))}.space-y-96>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(24rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(24rem * var(--tw-space-y-reverse))}.space-y-px>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1px * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1px * var(--tw-space-y-reverse))}.space-y-0\\.5>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.125rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.125rem * var(--tw-space-y-reverse))}.space-y-1\\.5>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.375rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.375rem * var(--tw-space-y-reverse))}.space-y-2\\.5>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.625rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.625rem * var(--tw-space-y-reverse))}.space-y-3\\.5>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.875rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.875rem * var(--tw-space-y-reverse))}.space-y-reverse>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 1}.space-x-reverse>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 1}.overflow-auto{overflow:auto}.text-ellipsis{text-overflow:ellipsis}.text-clip{text-overflow:clip}.rounded{border-radius:.25rem}.rounded-sm{border-radius:.125rem}.border{border-width:1px}.border-b-2{border-bottom-width:2px}.border-t{border-top-width:1px}.border-gray-300{--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity))}.bg-slate-800{--tw-bg-opacity: 1;background-color:rgb(30 41 59 / var(--tw-bg-opacity))}.bg-slate-700{--tw-bg-opacity: 1;background-color:rgb(51 65 85 / var(--tw-bg-opacity))}.bg-blue-200{--tw-bg-opacity: 1;background-color:rgb(191 219 254 / var(--tw-bg-opacity))}.bg-slate-100{--tw-bg-opacity: 1;background-color:rgb(241 245 249 / var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-white{--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.bg-slate-500{--tw-bg-opacity: 1;background-color:rgb(100 116 139 / var(--tw-bg-opacity))}.p-2{padding:.5rem}.px-2{padding-left:.5rem;padding-right:.5rem}.py-0\\.5{padding-top:.125rem;padding-bottom:.125rem}.py-0{padding-top:0;padding-bottom:0}.py-1{padding-top:.25rem;padding-bottom:.25rem}.pr-2{padding-right:.5rem}.pb-1{padding-bottom:.25rem}.pl-1{padding-left:.25rem}.pl-0\\.5{padding-left:.125rem}.pl-0{padding-left:0}.pr-1{padding-right:.25rem}.pr-0{padding-right:0}.text-left{text-align:left}.text-center{text-align:center}.text-right{text-align:right}.text-justify{text-align:justify}.indent-px{text-indent:1px}.text-xs{font-size:.75rem;line-height:1rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-base{font-size:1rem;line-height:1.5rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-2xl{font-size:1.5rem;line-height:2rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-4xl{font-size:2.25rem;line-height:2.5rem}.text-5xl{font-size:3rem;line-height:1}.text-6xl{font-size:3.75rem;line-height:1}.text-7xl{font-size:4.5rem;line-height:1}.text-8xl{font-size:6rem;line-height:1}.text-9xl{font-size:8rem;line-height:1}.font-semibold{font-weight:600}.font-normal{font-weight:400}.leading-7{line-height:1.75rem}.leading-6{line-height:1.5rem}.text-inherit{color:inherit}.text-current{color:currentColor}.text-transparent{color:transparent}.text-black{--tw-text-opacity: 1;color:rgb(0 0 0 / var(--tw-text-opacity))}.text-white{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity))}.text-slate-50{--tw-text-opacity: 1;color:rgb(248 250 252 / var(--tw-text-opacity))}.text-slate-100{--tw-text-opacity: 1;color:rgb(241 245 249 / var(--tw-text-opacity))}.text-slate-200{--tw-text-opacity: 1;color:rgb(226 232 240 / var(--tw-text-opacity))}.text-slate-300{--tw-text-opacity: 1;color:rgb(203 213 225 / var(--tw-text-opacity))}.text-slate-400{--tw-text-opacity: 1;color:rgb(148 163 184 / var(--tw-text-opacity))}.text-slate-500{--tw-text-opacity: 1;color:rgb(100 116 139 / var(--tw-text-opacity))}.text-slate-600{--tw-text-opacity: 1;color:rgb(71 85 105 / var(--tw-text-opacity))}.text-slate-700{--tw-text-opacity: 1;color:rgb(51 65 85 / var(--tw-text-opacity))}.text-slate-800{--tw-text-opacity: 1;color:rgb(30 41 59 / var(--tw-text-opacity))}.text-slate-900{--tw-text-opacity: 1;color:rgb(15 23 42 / var(--tw-text-opacity))}.text-gray-50{--tw-text-opacity: 1;color:rgb(249 250 251 / var(--tw-text-opacity))}.text-gray-100{--tw-text-opacity: 1;color:rgb(243 244 246 / var(--tw-text-opacity))}.text-gray-200{--tw-text-opacity: 1;color:rgb(229 231 235 / var(--tw-text-opacity))}.text-gray-300{--tw-text-opacity: 1;color:rgb(209 213 219 / var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity: 1;color:rgb(107 114 128 / var(--tw-text-opacity))}.text-gray-600{--tw-text-opacity: 1;color:rgb(75 85 99 / var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity: 1;color:rgb(55 65 81 / var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity: 1;color:rgb(31 41 55 / var(--tw-text-opacity))}.text-gray-900{--tw-text-opacity: 1;color:rgb(17 24 39 / var(--tw-text-opacity))}.text-zinc-50{--tw-text-opacity: 1;color:rgb(250 250 250 / var(--tw-text-opacity))}.text-zinc-100{--tw-text-opacity: 1;color:rgb(244 244 245 / var(--tw-text-opacity))}.text-zinc-200{--tw-text-opacity: 1;color:rgb(228 228 231 / var(--tw-text-opacity))}.text-zinc-300{--tw-text-opacity: 1;color:rgb(212 212 216 / var(--tw-text-opacity))}.text-zinc-400{--tw-text-opacity: 1;color:rgb(161 161 170 / var(--tw-text-opacity))}.text-zinc-500{--tw-text-opacity: 1;color:rgb(113 113 122 / var(--tw-text-opacity))}.text-zinc-600{--tw-text-opacity: 1;color:rgb(82 82 91 / var(--tw-text-opacity))}.text-zinc-700{--tw-text-opacity: 1;color:rgb(63 63 70 / var(--tw-text-opacity))}.text-zinc-800{--tw-text-opacity: 1;color:rgb(39 39 42 / var(--tw-text-opacity))}.text-zinc-900{--tw-text-opacity: 1;color:rgb(24 24 27 / var(--tw-text-opacity))}.text-neutral-50{--tw-text-opacity: 1;color:rgb(250 250 250 / var(--tw-text-opacity))}.text-neutral-100{--tw-text-opacity: 1;color:rgb(245 245 245 / var(--tw-text-opacity))}.text-neutral-200{--tw-text-opacity: 1;color:rgb(229 229 229 / var(--tw-text-opacity))}.text-neutral-300{--tw-text-opacity: 1;color:rgb(212 212 212 / var(--tw-text-opacity))}.text-neutral-400{--tw-text-opacity: 1;color:rgb(163 163 163 / var(--tw-text-opacity))}.text-neutral-500{--tw-text-opacity: 1;color:rgb(115 115 115 / var(--tw-text-opacity))}.text-neutral-600{--tw-text-opacity: 1;color:rgb(82 82 82 / var(--tw-text-opacity))}.text-neutral-700{--tw-text-opacity: 1;color:rgb(64 64 64 / var(--tw-text-opacity))}.text-neutral-800{--tw-text-opacity: 1;color:rgb(38 38 38 / var(--tw-text-opacity))}.text-neutral-900{--tw-text-opacity: 1;color:rgb(23 23 23 / var(--tw-text-opacity))}.text-stone-50{--tw-text-opacity: 1;color:rgb(250 250 249 / var(--tw-text-opacity))}.text-stone-100{--tw-text-opacity: 1;color:rgb(245 245 244 / var(--tw-text-opacity))}.text-stone-200{--tw-text-opacity: 1;color:rgb(231 229 228 / var(--tw-text-opacity))}.text-stone-300{--tw-text-opacity: 1;color:rgb(214 211 209 / var(--tw-text-opacity))}.text-stone-400{--tw-text-opacity: 1;color:rgb(168 162 158 / var(--tw-text-opacity))}.text-stone-500{--tw-text-opacity: 1;color:rgb(120 113 108 / var(--tw-text-opacity))}.text-stone-600{--tw-text-opacity: 1;color:rgb(87 83 78 / var(--tw-text-opacity))}.text-stone-700{--tw-text-opacity: 1;color:rgb(68 64 60 / var(--tw-text-opacity))}.text-stone-800{--tw-text-opacity: 1;color:rgb(41 37 36 / var(--tw-text-opacity))}.text-stone-900{--tw-text-opacity: 1;color:rgb(28 25 23 / var(--tw-text-opacity))}.text-red-50{--tw-text-opacity: 1;color:rgb(254 242 242 / var(--tw-text-opacity))}.text-red-100{--tw-text-opacity: 1;color:rgb(254 226 226 / var(--tw-text-opacity))}.text-red-200{--tw-text-opacity: 1;color:rgb(254 202 202 / var(--tw-text-opacity))}.text-red-300{--tw-text-opacity: 1;color:rgb(252 165 165 / var(--tw-text-opacity))}.text-red-400{--tw-text-opacity: 1;color:rgb(248 113 113 / var(--tw-text-opacity))}.text-red-500{--tw-text-opacity: 1;color:rgb(239 68 68 / var(--tw-text-opacity))}.text-red-600{--tw-text-opacity: 1;color:rgb(220 38 38 / var(--tw-text-opacity))}.text-red-700{--tw-text-opacity: 1;color:rgb(185 28 28 / var(--tw-text-opacity))}.text-red-800{--tw-text-opacity: 1;color:rgb(153 27 27 / var(--tw-text-opacity))}.text-red-900{--tw-text-opacity: 1;color:rgb(127 29 29 / var(--tw-text-opacity))}.text-orange-50{--tw-text-opacity: 1;color:rgb(255 247 237 / var(--tw-text-opacity))}.text-orange-100{--tw-text-opacity: 1;color:rgb(255 237 213 / var(--tw-text-opacity))}.text-orange-200{--tw-text-opacity: 1;color:rgb(254 215 170 / var(--tw-text-opacity))}.text-orange-300{--tw-text-opacity: 1;color:rgb(253 186 116 / var(--tw-text-opacity))}.text-orange-400{--tw-text-opacity: 1;color:rgb(251 146 60 / var(--tw-text-opacity))}.text-orange-500{--tw-text-opacity: 1;color:rgb(249 115 22 / var(--tw-text-opacity))}.text-orange-600{--tw-text-opacity: 1;color:rgb(234 88 12 / var(--tw-text-opacity))}.text-orange-700{--tw-text-opacity: 1;color:rgb(194 65 12 / var(--tw-text-opacity))}.text-orange-800{--tw-text-opacity: 1;color:rgb(154 52 18 / var(--tw-text-opacity))}.text-orange-900{--tw-text-opacity: 1;color:rgb(124 45 18 / var(--tw-text-opacity))}.text-amber-50{--tw-text-opacity: 1;color:rgb(255 251 235 / var(--tw-text-opacity))}.text-amber-100{--tw-text-opacity: 1;color:rgb(254 243 199 / var(--tw-text-opacity))}.text-amber-200{--tw-text-opacity: 1;color:rgb(253 230 138 / var(--tw-text-opacity))}.text-amber-300{--tw-text-opacity: 1;color:rgb(252 211 77 / var(--tw-text-opacity))}.text-amber-400{--tw-text-opacity: 1;color:rgb(251 191 36 / var(--tw-text-opacity))}.text-amber-500{--tw-text-opacity: 1;color:rgb(245 158 11 / var(--tw-text-opacity))}.text-amber-600{--tw-text-opacity: 1;color:rgb(217 119 6 / var(--tw-text-opacity))}.text-amber-700{--tw-text-opacity: 1;color:rgb(180 83 9 / var(--tw-text-opacity))}.text-amber-800{--tw-text-opacity: 1;color:rgb(146 64 14 / var(--tw-text-opacity))}.text-amber-900{--tw-text-opacity: 1;color:rgb(120 53 15 / var(--tw-text-opacity))}.text-yellow-50{--tw-text-opacity: 1;color:rgb(254 252 232 / var(--tw-text-opacity))}.text-yellow-100{--tw-text-opacity: 1;color:rgb(254 249 195 / var(--tw-text-opacity))}.text-yellow-200{--tw-text-opacity: 1;color:rgb(254 240 138 / var(--tw-text-opacity))}.text-yellow-300{--tw-text-opacity: 1;color:rgb(253 224 71 / var(--tw-text-opacity))}.text-yellow-400{--tw-text-opacity: 1;color:rgb(250 204 21 / var(--tw-text-opacity))}.text-yellow-500{--tw-text-opacity: 1;color:rgb(234 179 8 / var(--tw-text-opacity))}.text-yellow-600{--tw-text-opacity: 1;color:rgb(202 138 4 / var(--tw-text-opacity))}.text-yellow-700{--tw-text-opacity: 1;color:rgb(161 98 7 / var(--tw-text-opacity))}.text-yellow-800{--tw-text-opacity: 1;color:rgb(133 77 14 / var(--tw-text-opacity))}.text-yellow-900{--tw-text-opacity: 1;color:rgb(113 63 18 / var(--tw-text-opacity))}.text-lime-50{--tw-text-opacity: 1;color:rgb(247 254 231 / var(--tw-text-opacity))}.text-lime-100{--tw-text-opacity: 1;color:rgb(236 252 203 / var(--tw-text-opacity))}.text-lime-200{--tw-text-opacity: 1;color:rgb(217 249 157 / var(--tw-text-opacity))}.text-lime-300{--tw-text-opacity: 1;color:rgb(190 242 100 / var(--tw-text-opacity))}.text-lime-400{--tw-text-opacity: 1;color:rgb(163 230 53 / var(--tw-text-opacity))}.text-lime-500{--tw-text-opacity: 1;color:rgb(132 204 22 / var(--tw-text-opacity))}.text-lime-600{--tw-text-opacity: 1;color:rgb(101 163 13 / var(--tw-text-opacity))}.text-lime-700{--tw-text-opacity: 1;color:rgb(77 124 15 / var(--tw-text-opacity))}.text-lime-800{--tw-text-opacity: 1;color:rgb(63 98 18 / var(--tw-text-opacity))}.text-lime-900{--tw-text-opacity: 1;color:rgb(54 83 20 / var(--tw-text-opacity))}.text-green-50{--tw-text-opacity: 1;color:rgb(240 253 244 / var(--tw-text-opacity))}.text-green-100{--tw-text-opacity: 1;color:rgb(220 252 231 / var(--tw-text-opacity))}.text-green-200{--tw-text-opacity: 1;color:rgb(187 247 208 / var(--tw-text-opacity))}.text-green-300{--tw-text-opacity: 1;color:rgb(134 239 172 / var(--tw-text-opacity))}.text-green-400{--tw-text-opacity: 1;color:rgb(74 222 128 / var(--tw-text-opacity))}.text-green-500{--tw-text-opacity: 1;color:rgb(34 197 94 / var(--tw-text-opacity))}.text-green-600{--tw-text-opacity: 1;color:rgb(22 163 74 / var(--tw-text-opacity))}.text-green-700{--tw-text-opacity: 1;color:rgb(21 128 61 / var(--tw-text-opacity))}.text-green-800{--tw-text-opacity: 1;color:rgb(22 101 52 / var(--tw-text-opacity))}.text-green-900{--tw-text-opacity: 1;color:rgb(20 83 45 / var(--tw-text-opacity))}.text-emerald-50{--tw-text-opacity: 1;color:rgb(236 253 245 / var(--tw-text-opacity))}.text-emerald-100{--tw-text-opacity: 1;color:rgb(209 250 229 / var(--tw-text-opacity))}.text-emerald-200{--tw-text-opacity: 1;color:rgb(167 243 208 / var(--tw-text-opacity))}.text-emerald-300{--tw-text-opacity: 1;color:rgb(110 231 183 / var(--tw-text-opacity))}.text-emerald-400{--tw-text-opacity: 1;color:rgb(52 211 153 / var(--tw-text-opacity))}.text-emerald-500{--tw-text-opacity: 1;color:rgb(16 185 129 / var(--tw-text-opacity))}.text-emerald-600{--tw-text-opacity: 1;color:rgb(5 150 105 / var(--tw-text-opacity))}.text-emerald-700{--tw-text-opacity: 1;color:rgb(4 120 87 / var(--tw-text-opacity))}.text-emerald-800{--tw-text-opacity: 1;color:rgb(6 95 70 / var(--tw-text-opacity))}.text-emerald-900{--tw-text-opacity: 1;color:rgb(6 78 59 / var(--tw-text-opacity))}.text-teal-50{--tw-text-opacity: 1;color:rgb(240 253 250 / var(--tw-text-opacity))}.text-teal-100{--tw-text-opacity: 1;color:rgb(204 251 241 / var(--tw-text-opacity))}.text-teal-200{--tw-text-opacity: 1;color:rgb(153 246 228 / var(--tw-text-opacity))}.text-teal-300{--tw-text-opacity: 1;color:rgb(94 234 212 / var(--tw-text-opacity))}.text-teal-400{--tw-text-opacity: 1;color:rgb(45 212 191 / var(--tw-text-opacity))}.text-teal-500{--tw-text-opacity: 1;color:rgb(20 184 166 / var(--tw-text-opacity))}.text-teal-600{--tw-text-opacity: 1;color:rgb(13 148 136 / var(--tw-text-opacity))}.text-teal-700{--tw-text-opacity: 1;color:rgb(15 118 110 / var(--tw-text-opacity))}.text-teal-800{--tw-text-opacity: 1;color:rgb(17 94 89 / var(--tw-text-opacity))}.text-teal-900{--tw-text-opacity: 1;color:rgb(19 78 74 / var(--tw-text-opacity))}.text-cyan-50{--tw-text-opacity: 1;color:rgb(236 254 255 / var(--tw-text-opacity))}.text-cyan-100{--tw-text-opacity: 1;color:rgb(207 250 254 / var(--tw-text-opacity))}.text-cyan-200{--tw-text-opacity: 1;color:rgb(165 243 252 / var(--tw-text-opacity))}.text-cyan-300{--tw-text-opacity: 1;color:rgb(103 232 249 / var(--tw-text-opacity))}.text-cyan-400{--tw-text-opacity: 1;color:rgb(34 211 238 / var(--tw-text-opacity))}.text-cyan-500{--tw-text-opacity: 1;color:rgb(6 182 212 / var(--tw-text-opacity))}.text-cyan-600{--tw-text-opacity: 1;color:rgb(8 145 178 / var(--tw-text-opacity))}.text-cyan-700{--tw-text-opacity: 1;color:rgb(14 116 144 / var(--tw-text-opacity))}.text-cyan-800{--tw-text-opacity: 1;color:rgb(21 94 117 / var(--tw-text-opacity))}.text-cyan-900{--tw-text-opacity: 1;color:rgb(22 78 99 / var(--tw-text-opacity))}.text-sky-50{--tw-text-opacity: 1;color:rgb(240 249 255 / var(--tw-text-opacity))}.text-sky-100{--tw-text-opacity: 1;color:rgb(224 242 254 / var(--tw-text-opacity))}.text-sky-200{--tw-text-opacity: 1;color:rgb(186 230 253 / var(--tw-text-opacity))}.text-sky-300{--tw-text-opacity: 1;color:rgb(125 211 252 / var(--tw-text-opacity))}.text-sky-400{--tw-text-opacity: 1;color:rgb(56 189 248 / var(--tw-text-opacity))}.text-sky-500{--tw-text-opacity: 1;color:rgb(14 165 233 / var(--tw-text-opacity))}.text-sky-600{--tw-text-opacity: 1;color:rgb(2 132 199 / var(--tw-text-opacity))}.text-sky-700{--tw-text-opacity: 1;color:rgb(3 105 161 / var(--tw-text-opacity))}.text-sky-800{--tw-text-opacity: 1;color:rgb(7 89 133 / var(--tw-text-opacity))}.text-sky-900{--tw-text-opacity: 1;color:rgb(12 74 110 / var(--tw-text-opacity))}.text-blue-50{--tw-text-opacity: 1;color:rgb(239 246 255 / var(--tw-text-opacity))}.text-blue-100{--tw-text-opacity: 1;color:rgb(219 234 254 / var(--tw-text-opacity))}.text-blue-200{--tw-text-opacity: 1;color:rgb(191 219 254 / var(--tw-text-opacity))}.text-blue-300{--tw-text-opacity: 1;color:rgb(147 197 253 / var(--tw-text-opacity))}.text-blue-400{--tw-text-opacity: 1;color:rgb(96 165 250 / var(--tw-text-opacity))}.text-blue-500{--tw-text-opacity: 1;color:rgb(59 130 246 / var(--tw-text-opacity))}.text-blue-600{--tw-text-opacity: 1;color:rgb(37 99 235 / var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity: 1;color:rgb(29 78 216 / var(--tw-text-opacity))}.text-blue-800{--tw-text-opacity: 1;color:rgb(30 64 175 / var(--tw-text-opacity))}.text-blue-900{--tw-text-opacity: 1;color:rgb(30 58 138 / var(--tw-text-opacity))}.text-indigo-50{--tw-text-opacity: 1;color:rgb(238 242 255 / var(--tw-text-opacity))}.text-indigo-100{--tw-text-opacity: 1;color:rgb(224 231 255 / var(--tw-text-opacity))}.text-indigo-200{--tw-text-opacity: 1;color:rgb(199 210 254 / var(--tw-text-opacity))}.text-indigo-300{--tw-text-opacity: 1;color:rgb(165 180 252 / var(--tw-text-opacity))}.text-indigo-400{--tw-text-opacity: 1;color:rgb(129 140 248 / var(--tw-text-opacity))}.text-indigo-500{--tw-text-opacity: 1;color:rgb(99 102 241 / var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity: 1;color:rgb(79 70 229 / var(--tw-text-opacity))}.text-indigo-700{--tw-text-opacity: 1;color:rgb(67 56 202 / var(--tw-text-opacity))}.text-indigo-800{--tw-text-opacity: 1;color:rgb(55 48 163 / var(--tw-text-opacity))}.text-indigo-900{--tw-text-opacity: 1;color:rgb(49 46 129 / var(--tw-text-opacity))}.text-violet-50{--tw-text-opacity: 1;color:rgb(245 243 255 / var(--tw-text-opacity))}.text-violet-100{--tw-text-opacity: 1;color:rgb(237 233 254 / var(--tw-text-opacity))}.text-violet-200{--tw-text-opacity: 1;color:rgb(221 214 254 / var(--tw-text-opacity))}.text-violet-300{--tw-text-opacity: 1;color:rgb(196 181 253 / var(--tw-text-opacity))}.text-violet-400{--tw-text-opacity: 1;color:rgb(167 139 250 / var(--tw-text-opacity))}.text-violet-500{--tw-text-opacity: 1;color:rgb(139 92 246 / var(--tw-text-opacity))}.text-violet-600{--tw-text-opacity: 1;color:rgb(124 58 237 / var(--tw-text-opacity))}.text-violet-700{--tw-text-opacity: 1;color:rgb(109 40 217 / var(--tw-text-opacity))}.text-violet-800{--tw-text-opacity: 1;color:rgb(91 33 182 / var(--tw-text-opacity))}.text-violet-900{--tw-text-opacity: 1;color:rgb(76 29 149 / var(--tw-text-opacity))}.text-purple-50{--tw-text-opacity: 1;color:rgb(250 245 255 / var(--tw-text-opacity))}.text-purple-100{--tw-text-opacity: 1;color:rgb(243 232 255 / var(--tw-text-opacity))}.text-purple-200{--tw-text-opacity: 1;color:rgb(233 213 255 / var(--tw-text-opacity))}.text-purple-300{--tw-text-opacity: 1;color:rgb(216 180 254 / var(--tw-text-opacity))}.text-purple-400{--tw-text-opacity: 1;color:rgb(192 132 252 / var(--tw-text-opacity))}.text-purple-500{--tw-text-opacity: 1;color:rgb(168 85 247 / var(--tw-text-opacity))}.text-purple-600{--tw-text-opacity: 1;color:rgb(147 51 234 / var(--tw-text-opacity))}.text-purple-700{--tw-text-opacity: 1;color:rgb(126 34 206 / var(--tw-text-opacity))}.text-purple-800{--tw-text-opacity: 1;color:rgb(107 33 168 / var(--tw-text-opacity))}.text-purple-900{--tw-text-opacity: 1;color:rgb(88 28 135 / var(--tw-text-opacity))}.text-fuchsia-50{--tw-text-opacity: 1;color:rgb(253 244 255 / var(--tw-text-opacity))}.text-fuchsia-100{--tw-text-opacity: 1;color:rgb(250 232 255 / var(--tw-text-opacity))}.text-fuchsia-200{--tw-text-opacity: 1;color:rgb(245 208 254 / var(--tw-text-opacity))}.text-fuchsia-300{--tw-text-opacity: 1;color:rgb(240 171 252 / var(--tw-text-opacity))}.text-fuchsia-400{--tw-text-opacity: 1;color:rgb(232 121 249 / var(--tw-text-opacity))}.text-fuchsia-500{--tw-text-opacity: 1;color:rgb(217 70 239 / var(--tw-text-opacity))}.text-fuchsia-600{--tw-text-opacity: 1;color:rgb(192 38 211 / var(--tw-text-opacity))}.text-fuchsia-700{--tw-text-opacity: 1;color:rgb(162 28 175 / var(--tw-text-opacity))}.text-fuchsia-800{--tw-text-opacity: 1;color:rgb(134 25 143 / var(--tw-text-opacity))}.text-fuchsia-900{--tw-text-opacity: 1;color:rgb(112 26 117 / var(--tw-text-opacity))}.text-pink-50{--tw-text-opacity: 1;color:rgb(253 242 248 / var(--tw-text-opacity))}.text-pink-100{--tw-text-opacity: 1;color:rgb(252 231 243 / var(--tw-text-opacity))}.text-pink-200{--tw-text-opacity: 1;color:rgb(251 207 232 / var(--tw-text-opacity))}.text-pink-300{--tw-text-opacity: 1;color:rgb(249 168 212 / var(--tw-text-opacity))}.text-pink-400{--tw-text-opacity: 1;color:rgb(244 114 182 / var(--tw-text-opacity))}.text-pink-500{--tw-text-opacity: 1;color:rgb(236 72 153 / var(--tw-text-opacity))}.text-pink-600{--tw-text-opacity: 1;color:rgb(219 39 119 / var(--tw-text-opacity))}.text-pink-700{--tw-text-opacity: 1;color:rgb(190 24 93 / var(--tw-text-opacity))}.text-pink-800{--tw-text-opacity: 1;color:rgb(157 23 77 / var(--tw-text-opacity))}.text-pink-900{--tw-text-opacity: 1;color:rgb(131 24 67 / var(--tw-text-opacity))}.text-rose-50{--tw-text-opacity: 1;color:rgb(255 241 242 / var(--tw-text-opacity))}.text-rose-100{--tw-text-opacity: 1;color:rgb(255 228 230 / var(--tw-text-opacity))}.text-rose-200{--tw-text-opacity: 1;color:rgb(254 205 211 / var(--tw-text-opacity))}.text-rose-300{--tw-text-opacity: 1;color:rgb(253 164 175 / var(--tw-text-opacity))}.text-rose-400{--tw-text-opacity: 1;color:rgb(251 113 133 / var(--tw-text-opacity))}.text-rose-500{--tw-text-opacity: 1;color:rgb(244 63 94 / var(--tw-text-opacity))}.text-rose-600{--tw-text-opacity: 1;color:rgb(225 29 72 / var(--tw-text-opacity))}.text-rose-700{--tw-text-opacity: 1;color:rgb(190 18 60 / var(--tw-text-opacity))}.text-rose-800{--tw-text-opacity: 1;color:rgb(159 18 57 / var(--tw-text-opacity))}.text-rose-900{--tw-text-opacity: 1;color:rgb(136 19 55 / var(--tw-text-opacity))}.text-opacity-0{--tw-text-opacity: 0}.text-opacity-5{--tw-text-opacity: .05}.text-opacity-10{--tw-text-opacity: .1}.text-opacity-20{--tw-text-opacity: .2}.text-opacity-25{--tw-text-opacity: .25}.text-opacity-30{--tw-text-opacity: .3}.text-opacity-40{--tw-text-opacity: .4}.text-opacity-50{--tw-text-opacity: .5}.text-opacity-60{--tw-text-opacity: .6}.text-opacity-70{--tw-text-opacity: .7}.text-opacity-75{--tw-text-opacity: .75}.text-opacity-80{--tw-text-opacity: .8}.text-opacity-90{--tw-text-opacity: .9}.text-opacity-95{--tw-text-opacity: .95}.text-opacity-100{--tw-text-opacity: 1}.shadow{--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-top{--tw-shadow: 0 -1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 -1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.blur{--tw-blur: blur(8px);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.drop-shadow{--tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / .1)) drop-shadow(0 1px 1px rgb(0 0 0 / .06));filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}body,html,#app{height:100%;width:100%}#app{position:relative;display:flex;height:100%;width:100%;flex-direction:column;align-items:stretch;font-size:1rem;line-height:1.5rem;font-family:Open Sans,Helvetica,Arial,sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.focus-within\\:outline:focus-within{outline-style:solid}.focus-within\\:outline-2:focus-within{outline-width:2px}.hover\\:bg-slate-600:hover{--tw-bg-opacity: 1;background-color:rgb(71 85 105 / var(--tw-bg-opacity))}.hover\\:bg-blue-300:hover{--tw-bg-opacity: 1;background-color:rgb(147 197 253 / var(--tw-bg-opacity))}.hover\\:bg-slate-300:hover{--tw-bg-opacity: 1;background-color:rgb(203 213 225 / var(--tw-bg-opacity))}.hover\\:text-blue-400:hover{--tw-text-opacity: 1;color:rgb(96 165 250 / var(--tw-text-opacity))}.group:hover .group-hover\\:visible{visibility:visible}@font-face{font-family:Open Sans;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,) format("woff");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:Open Sans;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,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) format("woff");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:Open Sans;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,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) format("woff2"),url(data:font/woff;base64,) format("woff");unicode-range:U+1F00-1FFF}@font-face{font-family:Open Sans;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,) format("woff");unicode-range:U+0370-03FF}@font-face{font-family:Open Sans;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,) format("woff");unicode-range:U+0590-05FF,U+200C-2010,U+20AA,U+25CC,U+FB1D-FB4F}@font-face{font-family:Open Sans;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,) format("woff");unicode-range:U+0102-0103,U+0110-0111,U+0128-0129,U+0168-0169,U+01A0-01A1,U+01AF-01B0,U+1EA0-1EF9,U+20AB}@font-face{font-family:Open Sans;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,) format("woff");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:Open Sans;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,) format("woff");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}.tooltip-base[data-v-d35d8fc6]{visibility:hidden;position:absolute;z-index:10;width:8rem;cursor:help;border-width:1px;--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity));padding:.5rem;font-family:Open Sans;font-size:.875rem;line-height:1.25rem;font-weight:400;--tw-text-opacity: 1;color:rgb(0 0 0 / var(--tw-text-opacity));--tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / .1)) drop-shadow(0 1px 1px rgb(0 0 0 / .06));filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.group:hover .tooltip-base[data-v-d35d8fc6]{visibility:visible}.base-label{font-size:.875rem;line-height:1.25rem;font-weight:600;text-transform:uppercase;--tw-text-opacity: 1;color:rgb(71 85 105 / var(--tw-text-opacity))}.list-item-empty{padding:.25rem .5rem;--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity))}.list-item{cursor:pointer;padding:.25rem .5rem}.list-item:hover{--tw-bg-opacity: 1;background-color:rgb(203 213 225 / var(--tw-bg-opacity))}.list-item.list-item-selected,.list-item:hover{box-shadow:inset 2px 0 #3b82f6}.list-item.list-item-selected{--tw-bg-opacity: 1;background-color:rgb(219 234 254 / var(--tw-bg-opacity));--tw-text-opacity: 1;color:rgb(29 78 216 / var(--tw-text-opacity))}.group{height:2rem;padding-left:.5rem;padding-right:.5rem;font-size:.875rem;line-height:2rem;--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity))}.group-wrapper:not(:first-child){border-top-width:1px}.base-icon[data-v-50cc951a]{display:inline-block}.toolbar[data-v-50cc951a]{cursor:pointer}.blue[data-v-50cc951a]{--tw-text-opacity: 1;color:rgb(30 64 175 / var(--tw-text-opacity))}.blue[data-v-50cc951a]:hover{--tw-text-opacity: 1;color:rgb(96 165 250 / var(--tw-text-opacity))}.base-button .base-button-text[data-v-e765be52]{display:flex}.base-button.default[data-v-e765be52]{position:relative;--tw-bg-opacity: 1;background-color:rgb(191 219 254 / var(--tw-bg-opacity));padding:.125rem .5rem;--tw-shadow: 0 1px 2px 0 rgb(0 0 0 / .05);--tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.base-button.default[data-v-e765be52]:hover{--tw-bg-opacity: 1;background-color:rgb(147 197 253 / var(--tw-bg-opacity))}.base-button.default.toggled[data-v-e765be52],.base-button.default[data-v-e765be52]:focus-within{--tw-bg-opacity: 1;background-color:rgb(96 165 250 / var(--tw-bg-opacity))}.base-button.default .base-button-text[data-v-e765be52]{font-size:.875rem;line-height:1.25rem;text-transform:uppercase}.base-button.lg[data-v-e765be52]{height:2rem}.base-button.lg .base-button-text[data-v-e765be52]{font-size:1rem;line-height:1.5rem}.base-button.xl[data-v-e765be52]{height:3rem}.base-button.rounded[data-v-e765be52]{border-radius:.125rem}.base-button.circular[data-v-e765be52]{border-radius:9999px}.base-field[data-v-d06880ce]{display:flex}.base-field.left[data-v-d06880ce]{flex-direction:row}.base-field.left[data-v-d06880ce]>:not([hidden])~:not([hidden]),.base-field.right[data-v-d06880ce]>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}.base-field.right[data-v-d06880ce]{flex-direction:row-reverse}.base-field.right[data-v-d06880ce]>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 1 }.base-field.top[data-v-d06880ce]{flex-direction:column}.base-field.top[data-v-d06880ce]>:not([hidden])~:not([hidden]),.base-field.down[data-v-d06880ce]>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.25rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.25rem * var(--tw-space-y-reverse))}.base-field.down[data-v-d06880ce]{flex-direction:column-reverse}.base-field.down[data-v-d06880ce]>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 1 }[data-v-d06880ce] .base-label{line-height:1.5rem}.field-text[data-v-d06880ce]{position:relative;display:flex;border-radius:.125rem;border-width:1px;--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:rgb(241 245 249 / var(--tw-bg-opacity))}.field-text[data-v-d06880ce]:focus-within{outline-style:solid;outline-width:2px;outline-color:#3b82f6}.field-text input[data-v-d06880ce]:not([type=checkbox]){background-color:transparent;padding-left:.25rem;padding-right:.25rem}.field-text input[data-v-d06880ce]:not([type=checkbox]):focus{outline:2px solid transparent;outline-offset:2px}.field-invalid[data-v-d06880ce]:focus-within{outline-style:solid;outline-width:2px;outline-color:#ef4444}.field-invalid[data-v-d06880ce]:not(:focus-within){--tw-border-opacity: 1;border-color:rgb(239 68 68 / var(--tw-border-opacity))}.checkbox[data-v-92dd509a] .field-text{display:flex;height:1.5rem;width:1.5rem;cursor:pointer;align-items:center}.checkbox[data-v-92dd509a] .field-text input{height:100%;width:100%;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;border-radius:.125rem;border-width:1px}.checkbox[data-v-92dd509a] .field-text input:checked:after{display:inline-block;height:100%;width:100%;text-align:center;font-size:1.25rem;line-height:1.25rem;content:"\\2714"}[data-v-26d0b8f0] .field-text .field-text-input{padding-left:.25rem;padding-right:.125rem}[data-v-55140278] .field-text .field-text-input{padding-left:.125rem;padding-right:.25rem}.field-combo-box-list-wrapper[data-v-7a5ae1ca]{pointer-events:auto;position:absolute;top:6rem;z-index:10;height:9rem;width:100%;overflow:auto;border-radius:.25rem;border-width:1px;--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity));text-indent:1px;--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.field-combo-box-picker[data-v-7a5ae1ca]{position:absolute;top:0px;right:0px;box-sizing:border-box;cursor:pointer;padding-right:.5rem;font-size:.75rem;line-height:1.5rem}.field-combo-box-picker[data-v-7a5ae1ca]:hover{--tw-text-opacity: 1;color:rgb(37 99 235 / var(--tw-text-opacity))}.multi-select[data-v-7a5ae1ca] .field-text-input{margin-top:.25rem}.multi-select[data-v-7a5ae1ca] .field-text{flex-direction:column;padding-bottom:.25rem;padding-left:.25rem}.multi-select.tags-below[data-v-7a5ae1ca] .field-text{flex-direction:column-reverse}.multi-select.tags-inline[data-v-7a5ae1ca] .field-text{flex-direction:row}[data-v-7a5ae1ca] .field-text{box-sizing:border-box;flex-wrap:wrap;padding-right:1.25rem}[data-v-7a5ae1ca] .field-text-input{width:100%;flex:1 1 0%}.base-dialog[data-v-25732f10]{display:flex;height:100%;width:100%;flex-direction:column}.header-blue .base-dialog-header[data-v-25732f10]{--tw-bg-opacity: 1;background-color:rgb(51 65 85 / var(--tw-bg-opacity));--tw-text-opacity: 1;color:rgb(245 245 244 / var(--tw-text-opacity))}.header-blue .toolbar[data-v-25732f10]:hover{--tw-text-opacity: 1;color:rgb(214 211 209 / var(--tw-text-opacity))}.base-dialog-header[data-v-25732f10]{display:flex;padding:.25rem .5rem}.base-dialog-header-title[data-v-25732f10]{flex:1 1 0%}.base-dialog-header-toolbar[data-v-25732f10]>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}',document.head.appendChild(e)}catch(t){console.error("vite-plugin-css-injected-by-js",t)}})();/**
* vee-validate v4.5.11
* (c) 2022 Abdelrahman Awad
* @license MIT
*/function Al(e){return typeof e=="function"}const fp=e=>e!==null&&!!e&&typeof e=="object"&&!Array.isArray(e);function Pl(e,t){return e.replace(/(\d:)?{([^}]+)}/g,function(i,r,d){if(!r||!t.params)return d in t?t[d]:t.params&&d in t.params?t.params[d]:`{${d}}`;if(!Array.isArray(t.params))return d in t.params?t.params[d]:`{${d}}`;const a=Number(r.replace(":",""));return a in t.params?t.params[a]:`${r}{${d}}`})}function wu(e,t){return Object.keys(t).forEach(i=>{if(fp(t[i])){e[i]||(e[i]={}),wu(e[i],t[i]);return}e[i]=t[i]}),e}class up{constructor(t,i){this.container={},this.locale=t,this.merge(i)}resolve(t){return this.format(this.locale,t)}getLocaleDefault(t,i){var r,d,a,l,s;return((a=(d=(r=this.container[t])===null||r===void 0?void 0:r.fields)===null||d===void 0?void 0:d[i])===null||a===void 0?void 0:a._default)||((s=(l=this.container[t])===null||l===void 0?void 0:l.messages)===null||s===void 0?void 0:s._default)}format(t,i){var r,d,a,l,s,g,b,c;let h;const{field:u,rule:o,form:n}=i,m=(a=(d=(r=this.container[t])===null||r===void 0?void 0:r.names)===null||d===void 0?void 0:d[u])!==null&&a!==void 0?a:u;return o?(h=((g=(s=(l=this.container[t])===null||l===void 0?void 0:l.fields)===null||s===void 0?void 0:s[u])===null||g===void 0?void 0:g[o.name])||((c=(b=this.container[t])===null||b===void 0?void 0:b.messages)===null||c===void 0?void 0:c[o.name]),h||(h=this.getLocaleDefault(t,u)||`${m} is not valid`),Al(h)?h(i):Pl(h,Object.assign(Object.assign({},n),{field:m,params:o.params}))):(h=this.getLocaleDefault(t,u)||`${m} is not valid`,Al(h)?h(i):Pl(h,Object.assign(Object.assign({},n),{field:m})))}merge(t){wu(this.container,t)}}let gn;function cp(e,t){gn||(gn=new up("en",{}));const i=r=>gn.resolve(r);return typeof e=="string"?(gn.locale=e,t&&gn.merge({[e]:t}),i):(gn.merge(e),i)}const hp=/^\s+$/;Sd({generateMessage:cp("en",{messages:{required:"Value is required",minLength:"Value is too short",maxLength:"Value is too long",minValue:"Value is too small",maxValue:"Value is too large",whitespace:"Value is only whitespaces"}})});Dn("required",e=>bt(e)===!1);Dn("minLength",(e,[t])=>e.length>=t);Dn("maxLength",(e,[t])=>e.length<=t);Dn("minValue",(e,[t])=>bt(e)||e>=t);Dn("maxValue",(e,[t])=>bt(e)||e<=t);Dn("whitespace",e=>!hp.test(e));class xu extends HTMLElement{constructor(){super(),document.body.appendChild(this)}add(t){this.appendChild(t)}remove(t){this.removeChild(t)}}customElements.define("overlay-manager",xu);const dp={mounted(e,t){document.addEventListener("mousedown",t.value)},unmounted(e,t){document.removeEventListener("mousedown",t.value)}},pp={mounted(e,t){document.addEventListener("scroll",t.value,!0)},unmounted(e,t){document.removeEventListener("scroll",t.value,!0)}};var mp={install(e){const t=new xu;e.provide("OverlayManager",t),e.config.globalProperties.Icon=lp,e.directive("mousedown-document",dp),e.directive("scroll-document",pp)}};const Au=String.prototype;Au.capitalize=function(){return`${this[0].toUpperCase()}${this.substring(1).toLowerCase()}`};Au.equals=function(e){return this.toLowerCase()===(e==null?void 0:e.toLowerCase())};class ki{constructor(t,i=!0){Array.isArray(t)?t.forEach((r,d)=>{const a=this.valueToKey(r);i?this[a]=d:this[a]=r}):Object.assign(this,t)}valueToKey(t){return String(t).split(/(?=[A-Z])|-/).map(i=>i.capitalize()).join("")}get count(){return this.keys.length}get keys(){return Object.keys(this)}get values(){return Object.keys(this).map(t=>this[t])}get options(){return Object.keys(this).map(t=>({id:this[t],value:t}))}toString(){const t=[];return Object.keys(this).forEach(r=>{const d=typeof this[r];t.push(`* @property {${d.capitalize()}} ${r}`)}),`/**
`+t.join(`
`)+`
 */`}}const Ht=new ki(["January","February","March","April","May","June","July","August","September","October","November","December"]),bo=new ki(["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]),jr=Date.prototype,kl=Ht.count,vp=bo.count;jr.getWeekStart=function(e={}){const{year:t=this.getFullYear(),yearOffset:i=0,month:r=this.getMonth(),dateOffset:d=0,isEnd:a=!1,startingDay:l=bo.Monday,isWeek:s=!0}=e;let{monthOffset:g=0,date:b=this.getDate()}=e;!s&&a&&(g=1,b=0);const c=new Date(t+i,r+g,b+d);if(s){const h=c.getDay();l<h?c.setDate(c.getDate()-(h-l)):l>h&&c.setDate(c.getDate()-(h+(vp-l))),a&&c.setDate(c.getDate()+bo.Saturday)}return c};jr.getMonthStart=function(e={}){return e.isWeek=e.isWeek||!1,e.date=1,this.getWeekStart(e)};jr.getMonthEnd=function(e={}){return e.isEnd=!0,this.getMonthStart(e)};jr.getYearStart=function(e={}){return e.month=Ht.January,this.getMonthStart(e)};jr.getYearEnd=function(e={}){return e.isEnd=!0,e.month=Ht.December,this.getMonthStart(e)};jr.getQuarterStart=function(e={}){const{isEnd:t=!1}=e;let{month:i=this.getMonth()}=e;if(i=i+(e.monthOffset||0),i<0||i>Ht.December){const r=i<0?-1:1,d=Math.abs(i)/kl,a=r===-1?Math.ceil(d):Math.floor(d);i-=a*kl*r,e.yearOffset=(e.yearOffset||0)+a*r}return i<Ht.April?i=t?Ht.March:Ht.January:i<Ht.July?i=t?Ht.June:Ht.April:i<Ht.October?i=t?Ht.September:Ht.July:i=t?Ht.December:Ht.October,e.month=i,e.monthOffset=0,this.getMonthStart(e)};jr.getQuarterEnd=function(e={}){return e.isEnd=!0,this.getQuarterStart(e)};jr.toMMDDYYYY=function(){return Intl.DateTimeFormat("en-US",{month:"2-digit",day:"2-digit",year:"numeric"}).format(this)};function gp(e){return e===void 0}function bp(e){return e===null}function an(e){return e!=null}function kt(e){return gp(e)||bp(e)||ku(e)&&isNaN(e)||e===""||cr(e)&&e.length===0||Hr(e)&&Object.values(e).length===0}function Pu(e){return typeof e=="string"}function ku(e){return typeof e=="number"}function yp(e){return typeof e=="boolean"}function wp(e){return e instanceof Date}function cr(e){return Array.isArray(e)}function sr(e){return cr(e)?e:[e]}function Hr(e){return(e==null?void 0:e.constructor)===Object}function xp(e){return typeof e=="function"}function Nu(e,t=2){if(an(e))return e=ku(e)?e:parseFloat(e),+e.toFixed(t)}function Ap(e){return Nu(e,0)}function Pp(e){return yp(e)||!an(e)?e:e==="false"||e==="0"?!1:!!e}function kp(e){return wp(e)?e:(e=new Date(e),isNaN(e)?void 0:e)}function fs(e){try{return JSON.parse(e)}catch{console.error(`value could not be parse ${e}`);return}}function Np(e){if(an(e))return cr(e)?e:fs(e)}function Ep(e){if(an(e))return Hr(e)?e:fs(e)}function Sp(e){if(an(e))return Pu(e)?e:String(e)}function Cp(e){return fs(JSON.stringify(e))}function Rp(e,t,i=-1){return e===t?0:e<t?i:-1*i}const us=Array.prototype;us.remove=function(e){if(!kt(e)){e=sr(e);for(const t of e){let i=t;xp(i)||(i=d=>d===t);const r=this.findIndex(i);r!==-1&&this.splice(r,1)}}};us.add=function(e,t=this.length){return this.splice(t,0,e),e};us.addUnique=function(e,t){const i=this.find(r=>r===e);return i||(this.add(e,t),e)};const Bt=new ki(["String","Integer","Decimal","Boolean","Date","Model","Collection","Array","Object"]);function Fp(e,t){const{type:i}=t;if(an(i))switch(i){case Bt.Integer:e=bn(Ap(e),t,0);break;case Number:case Bt.Decimal:e=bn(Nu(e,t.precision),t,0);break;case Boolean:case Bt.Boolean:e=bn(Pp(e),t,!1);break;case Date:case Bt.Date:e=bn(kp(e),t,null);break;case Bt.Collection:e=t.collection?new t.collection(e):new Ca(e,t.model);break;case Bt.Model:e=new t.model(e);break;case Array:case Bt.Array:e=Np(e);break;case Object:case Bt.Object:e=bn(Ep(e),t,{});break;case String:case Bt.String:e=bn(Sp(e),t,"");break;default:e!=null||(e=t.defaultValue),an(e)&&!(e instanceof i)&&(e=new i(e));break}return e}function bn(e,t,i){return kt(e)&&(e="defaultValue"in t?t.defaultValue:i),e}class Vr{constructor(t){St(this,"isModel",!0);St(this,"_snapshot",null);St(this,"_fields",null);St(this,"_trackChanges",!1);t!=null||(t={});for(const{name:i}of this.fields)i in t||(t[i]=null);this.set(t)}get TrackChanges(){return this._trackChanges}set TrackChanges(t){this._trackChanges=t,this.commit()}getDefaultFields(){return[]}get fields(){let t=this._fields;return t||(this.fields=t=this.getDefaultFields()),t}set fields(t){this._fields=t}reset(){this.set(this._snapshot)}commit(){this.TrackChanges?this._snapshot=this.getData():delete this._snapshot}set(t,i=!1){i&&this.reset();for(const r in t){const d=this.fields.find(a=>a.name===r);d?this[d.name]=Fp(t[d.name],d):(this.fields.push({name:r,custom:!0}),this[r]=t[r])}}clone(t){return new this.constructor(this.getData(t))}getData({include:t,exclude:i}={}){const r={},d=[...this.fields];t&&t.forEach(a=>d.push({name:a})),this._visited=!0;for(const a of d){const{name:l}=a;if(i&&i.indexOf(l)!==-1)continue;const s=this[l];(s==null?void 0:s.isModel)||(s==null?void 0:s.isCollection)?s._visited||(r[l]=s.getData({include:t,exclude:i})):cr(s)||Hr(s)?r[l]=Cp(s):r[l]=s}return delete this._visited,r}static toClassDescription(){const t=[];return new this().fields.forEach(r=>{let{type:d}=r;return Bt.values.includes(d)?d===Bt.Collection?d=`Collection<${r.model.name}>`:d===Bt.Model&&(d=`${r.model.name}`):d=d.name,t.push(`* @property {${d}} ${r.name}`)}),`/**
`+t.join(`
`)+`
 */`}}const yn="groupKey",Jn="groupDisplay",Op="list-item-selected";var t2,r2;class Ca extends Array{constructor(i,r=Vr){super();St(this,"isCollection",!0);St(this,"_idField","id");St(this,"_displayField","value");St(this,"_records",[]);St(this,"_groups",null);St(this,"_filters",[]);St(this,"_sorters",[]);St(this,"parent",null);St(this,t2,null);St(this,r2,null);i!=null||(i={}),this.suspend(!0),this.model=i.model||r,delete i.model,cr(i)?this.records=i:Object.assign(this,i),this.suspend(),this.init()}clear(){this.length=0}add(i,{clear:r=!1,suppress:d=!1}={}){kt(i)||(i=sr(i),this.suspend(d),this.records=r?i:this.records.concat(i),this.suspend())}clearFilters(){this.filters=[]}sum(i){return this.records.reduce((r,d)=>r+d[i])}addFilters(i,{suppress:r=!1}={}){kt(i)||(i=sr(i),this.suspend(r),this.filters=this.filters.concat(i),this.suspend())}removeFilters(i,r){if(!kt(i)){i=sr(i);for(const d of i)this.filters.remove(({id:a})=>a===d);this.suspend(r),this.init(),this.suspend()}}suspend(i){this._suspended=i}addSorters(i,{suppress:r=!1}={}){kt(i)||(i=sr(i),this.suspend(r),this.sorters=this.sorters.concat(i),this.suspend())}removeSorters(i,{suppress:r=!1}={}){if(!kt(i)){i=sr(i);for(const d of i)this.sorters.remove(({id:a})=>a===d);this.suspend(r),this.init(),this.suspend()}}group({key:i,display:r},d=this.records){this.clear();const a={};d.forEach(l=>{const s=l[i],g=a[s];g?g.records.push(l):a[s]={[yn]:s,records:[l]}});for(const{[yn]:l,records:s}of Object.values(a)){const g=new Ca({records:s,parent:this});g[Jn]=r?r(g):l,this[yn]=i,this.push(g)}this.sort({property:Jn},!1)}find(i){return this.records.find(i)}sort(i=this.sorters,r=!0){!i||this._suspended||(i=sr(i),i.forEach(d=>{if(Hr(d)){const{property:a,direction:l=-1}=d;d=(s,g)=>Rp(s[a],g[a],l)}r?this.records.sort(d):super.sort(d)}))}init(){if(this._suspended)return;const{groups:i,filters:r}=this;let{records:d}=this;if(!kt(r)){let a=[];r.forEach((l,s)=>{s===0||l.or||(d=a,a=[]);let g=l.fn;if(!g){let{value:b}=l;const{property:c,exact:h=!1}=l;h||(b=new RegExp(b,"i")),g=u=>{const o=u[c];return h?o===b:b.test(o)}}d.forEach(b=>{g(b)&&a.push(b)})}),d=a}if(i){let a=this;for(let l=0;l<i.length;l++)if(l===0)this.group(i[l],d);else{let s=[];a.forEach(g=>{g.group(i[l]),s=s.concat(g)}),a=s}}else this.clear(),d.forEach(a=>this.push(a)),this.sort()}getOptionId(i){if(i)return cr(i)?i[Jn]:i[this.idField]}getOptionDisplay(i){if(i)return cr(i)?i[Jn]:i[this.displayField]}getOptionCls(i,r){if(this.isGrouped)return"group-wrapper";const d=["list-item"],{idField:a}=this,l=i[a];for(const s of r)if(l===s[a]){d.push(Op);break}return d}clone(i){const{groups:r,idField:d,displayField:a,sorters:l,filters:s,model:g}=this;return new this.constructor({idField:d,displayField:a,groups:r,sorters:l,filters:s,model:g,records:this.getData(i)})}getData(i){const r=[];return this._visited=!0,this.forEach(d=>{const a=sr(d.getData(i));r.push(...a)}),delete this._visited,r}get first(){return this[0]}get last(){return this[this.length-1]}set sorters(i){i==null||i.map((r,d)=>(r.id||(r.id=d),r)),this._sorters=i,this.sort()}get sorters(){return this._sorters}set filters(i){i==null||i.map((r,d)=>(r.id||(r.id=d),r)),this._filters=i,this.init()}get filters(){return this._filters}set records(i){const r=[],{model:d}=this;i.forEach(a=>{a.isModel?r.push(a):r.push(new d(a))}),this._records=r,this.init()}get records(){return this._records}set groups(i){kt(i)?this[yn]=null:Hr(i)&&(i=[i]),this._groups=i,this.init()}get groups(){return this._groups}get idField(){var i;return((i=this.parent)==null?void 0:i.idField)||this._idField}set idField(i){this._idField=i}get displayField(){var i;return((i=this.parent)==null?void 0:i.displayField)||this._displayField}set displayField(i){this._displayField=i}get isGrouped(){return!kt(this[yn])}static get[(t2=yn,r2=Jn,Symbol.species)](){return Array}}class Ip extends Vr{getTrackChanges(){return!1}}class pn extends Ca{constructor(t=[],i=Ip){var g,b;let r;const d=[];Hr(t)?(r=t.records||[],delete t.records,(g=t.model)!=null||(t.model=i),(b=t.sorters)!=null||(t.sorters=[{property:"value"}])):r=t,super(t);const{displayField:a,idField:l}=this;if(cr(r))r.forEach((c,h)=>{var u;Hr(c)||(c={[a]:c}),(u=c[l])!=null||(c[l]=h),d.push(c)});else for(const c in r)d.push({[a]:c,[l]:r[c]});this.records=d;const s={};this.forEach(c=>s[c[a]]=c[l]),Object.assign(this,s)}getKey(t){const{idField:i}=this,r=this.find(d=>d[i]===t);return r==null?void 0:r[this.displayField]}getValue(t){const{displayField:i}=this,r=this.find(d=>d[i]===t);return r==null?void 0:r[this.idField]}findRecord(t){const{idField:i}=this;return this.find(r=>r[i]===t)}toClassDescription(){return this.sort([{property:this.displayField}],!1),`/**
${this.map(i=>` * @property {${(typeof i[this.idField]).capitalize()}} ${i[this.displayField]}`).join(`
`)}
 */`}}class Mp extends Vr{get backgroundStyle(){return this.id===Te.None?"":`background-color: #${this.id};`}}const Te=new pn({model:Mp,records:{None:"Transparent",Black:"000000",Blue:"0000bc",BlueLight:"6888ff",BluePure:"0000FF",BlueWater:"2038ec",Brown:"c84c0c",BrownButter:"ac7c00",BrownDark:"503000",BrownLight:"f8b800",Gray:"7c7c7c",Green:"00a800",GreenDark:"005800",GreenLight:"58f898",GreenPure:"00FF00",Lime:"b8f818",Orange:"FFA044",OrangeDark:"e45c10",Peach:"fcd8a8",PurpleLight:"b8b8f8",Q1C1Accent:"008088",Q1C1Door:"183c5c",Red:"F83800",RedPure:"FF0000",Tan:"FFEFA6",Teal:"008888",TealLight:"00e8d8",TealDark:"004058",White:"fcfcfc",WhitePure:"FFFFFF"}}),De=new pn(["Block","Bush","Castle","CastleBottomLeft","CastleBottomRight","CastleSand","CastleTop","CastleTopAlt","CastleTopLeft","CastleTopLeftAlt","CastleTopRight","CastleTopRightAlt","Dock","Door","DoorClosedX","DoorClosedY","DoorLockedX","DoorLockedY","DoorUnlockedX","DoorUnlockedY","Fire","FireAlt","Grave","GroundTile","None","PondBottom","PondBottomLeft","PondBottomRight","PondCenter","PondCenterLeft","PondCenterRight","PondTop","PondTopLeft","PondTopRight","Rock","SandBottom","SandBottomLeft","SandBottomRight","SandCenter","SandCenterLeft","SandCenterRight","SandTop","SandTopLeft","SandTopRight","SolidColor","StairsDown","StairsKeep","StairsUp","Statue","Statue1","Statue2","Transition","TreeBottomLeft","TreeBottomRight","TreeTop","TreeTopLeft","TreeTopRight","WallBottom","WallBottomLeft","WallBottomRight","WallHoleX","WallHoleY","WallKeep","WallLeftX","WallLeftY","WallLeftYFlip","WallRightX","WallRightY","WallRightYFlip","WallTop","WallTopLeft","WallTopRight","WallX","WallY","Water","WaterBottomLeft","WaterBottomRight","WaterTopLeft","WaterTopRight"]),Nl=/^[0-9a-f]+$/i;class Eu extends Vr{getDefaultFields(){return[{name:"Target",type:String},{name:"Value",type:String}]}constructor(t,i){Hr(t)?{Target:t,Value:i}=t:cr(t)&&([t,i]=t),t&&!Nl.test(t)&&(t=Te.getValue(t)),i&&!Nl.test(i)&&(i=Te.getValue(i)),super({Target:t,Value:i})}getConfig(){const{Target:t,Value:i}=this;if(!(t===i||!i))return[Te.getKey(t),Te.getKey(i)]}}function Su(e){return Array.isArray(e)}function mi(e){return e==null||e===""||Su(e)&&e.length===0}function ia(e,t){const i=[];return Su(t)?e.forEach(r=>{const d={};t.forEach(a=>d[a]=r[a]),i.push(d)}):e.forEach(r=>i.push(r[t])),i}var ot=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function Bi(e){throw new Error('Could not dynamically require "'+e+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var ri={exports:{}};(function(e,t){if((typeof i=="undefined"||!i)&&typeof self!="undefined")var i=self;(function(r){e.exports=r()})(function(){return function(){function r(d,a,l){function s(c,h){if(!a[c]){if(!d[c]){var u=typeof Bi=="function"&&Bi;if(!h&&u)return u(c,!0);if(g)return g(c,!0);var o=new Error("Cannot find module '"+c+"'");throw o.code="MODULE_NOT_FOUND",o}var n=a[c]={exports:{}};d[c][0].call(n.exports,function(m){var y=d[c][1][m];return s(y||m)},n,n.exports,r,d,a,l)}return a[c].exports}for(var g=typeof Bi=="function"&&Bi,b=0;b<l.length;b++)s(l[b]);return s}return r}()({1:[function(r,d,a){function l(s){if(Array.isArray(s))return s}d.exports=l},{}],2:[function(r,d,a){function l(s){if(Array.isArray(s)){for(var g=0,b=new Array(s.length);g<s.length;g++)b[g]=s[g];return b}}d.exports=l},{}],3:[function(r,d,a){function l(s){if(s===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return s}d.exports=l},{}],4:[function(r,d,a){function l(s,g){if(!(s instanceof g))throw new TypeError("Cannot call a class as a function")}d.exports=l},{}],5:[function(r,d,a){var l=r("./setPrototypeOf");function s(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch{return!1}}function g(b,c,h){return s()?d.exports=g=Reflect.construct:d.exports=g=function(o,n,m){var y=[null];y.push.apply(y,n);var f=Function.bind.apply(o,y),v=new f;return m&&l(v,m.prototype),v},g.apply(null,arguments)}d.exports=g},{"./setPrototypeOf":18}],6:[function(r,d,a){function l(g,b){for(var c=0;c<b.length;c++){var h=b[c];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(g,h.key,h)}}function s(g,b,c){return b&&l(g.prototype,b),c&&l(g,c),g}d.exports=s},{}],7:[function(r,d,a){function l(s,g,b){return g in s?Object.defineProperty(s,g,{value:b,enumerable:!0,configurable:!0,writable:!0}):s[g]=b,s}d.exports=l},{}],8:[function(r,d,a){function l(){return d.exports=l=Object.assign||function(s){for(var g=1;g<arguments.length;g++){var b=arguments[g];for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(s[c]=b[c])}return s},l.apply(this,arguments)}d.exports=l},{}],9:[function(r,d,a){function l(s){return d.exports=l=Object.setPrototypeOf?Object.getPrototypeOf:function(b){return b.__proto__||Object.getPrototypeOf(b)},l(s)}d.exports=l},{}],10:[function(r,d,a){var l=r("./setPrototypeOf");function s(g,b){if(typeof b!="function"&&b!==null)throw new TypeError("Super expression must either be null or a function");g.prototype=Object.create(b&&b.prototype,{constructor:{value:g,writable:!0,configurable:!0}}),b&&l(g,b)}d.exports=s},{"./setPrototypeOf":18}],11:[function(r,d,a){function l(s){return s&&s.__esModule?s:{default:s}}d.exports=l},{}],12:[function(r,d,a){var l=r("../helpers/typeof");function s(){if(typeof WeakMap!="function")return null;var b=new WeakMap;return s=function(){return b},b}function g(b){if(b&&b.__esModule)return b;if(b===null||l(b)!=="object"&&typeof b!="function")return{default:b};var c=s();if(c&&c.has(b))return c.get(b);var h={},u=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in b)if(Object.prototype.hasOwnProperty.call(b,o)){var n=u?Object.getOwnPropertyDescriptor(b,o):null;n&&(n.get||n.set)?Object.defineProperty(h,o,n):h[o]=b[o]}return h.default=b,c&&c.set(b,h),h}d.exports=g},{"../helpers/typeof":21}],13:[function(r,d,a){function l(s){if(Symbol.iterator in Object(s)||Object.prototype.toString.call(s)==="[object Arguments]")return Array.from(s)}d.exports=l},{}],14:[function(r,d,a){function l(s,g){if(Symbol.iterator in Object(s)||Object.prototype.toString.call(s)==="[object Arguments]"){var b=[],c=!0,h=!1,u=void 0;try{for(var o=s[Symbol.iterator](),n;!(c=(n=o.next()).done)&&(b.push(n.value),!(g&&b.length===g));c=!0);}catch(m){h=!0,u=m}finally{try{!c&&o.return!=null&&o.return()}finally{if(h)throw u}}return b}}d.exports=l},{}],15:[function(r,d,a){function l(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}d.exports=l},{}],16:[function(r,d,a){function l(){throw new TypeError("Invalid attempt to spread non-iterable instance")}d.exports=l},{}],17:[function(r,d,a){var l=r("../helpers/typeof"),s=r("./assertThisInitialized");function g(b,c){return c&&(l(c)==="object"||typeof c=="function")?c:s(b)}d.exports=g},{"../helpers/typeof":21,"./assertThisInitialized":3}],18:[function(r,d,a){function l(s,g){return d.exports=l=Object.setPrototypeOf||function(c,h){return c.__proto__=h,c},l(s,g)}d.exports=l},{}],19:[function(r,d,a){var l=r("./arrayWithHoles"),s=r("./iterableToArrayLimit"),g=r("./nonIterableRest");function b(c,h){return l(c)||s(c,h)||g()}d.exports=b},{"./arrayWithHoles":1,"./iterableToArrayLimit":14,"./nonIterableRest":15}],20:[function(r,d,a){var l=r("./arrayWithoutHoles"),s=r("./iterableToArray"),g=r("./nonIterableSpread");function b(c){return l(c)||s(c)||g()}d.exports=b},{"./arrayWithoutHoles":2,"./iterableToArray":13,"./nonIterableSpread":16}],21:[function(r,d,a){function l(g){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?l=function(c){return typeof c}:l=function(c){return c&&typeof Symbol=="function"&&c.constructor===Symbol&&c!==Symbol.prototype?"symbol":typeof c},l(g)}function s(g){return typeof Symbol=="function"&&l(Symbol.iterator)==="symbol"?d.exports=s=function(c){return l(c)}:d.exports=s=function(c){return c&&typeof Symbol=="function"&&c.constructor===Symbol&&c!==Symbol.prototype?"symbol":l(c)},s(g)}d.exports=s},{}],22:[function(r,d,a){d.exports=r("regenerator-runtime")},{"regenerator-runtime":153}],23:[function(r,d,a){var l=r("./src/converter");function s(g,b){var c=new l(g,b);return function(h){return c.convert(h)}}s.BIN="01",s.OCT="01234567",s.DEC="0123456789",s.HEX="0123456789abcdef",d.exports=s},{"./src/converter":24}],24:[function(r,d,a){function l(s,g){if(!s||!g||!s.length||!g.length)throw new Error("Bad alphabet");this.srcAlphabet=s,this.dstAlphabet=g}l.prototype.convert=function(s){var g,b,c,h={},u=this.srcAlphabet.length,o=this.dstAlphabet.length,n=s.length,m=typeof s=="string"?"":[];if(!this.isValid(s))throw new Error('Number "'+s+'" contains of non-alphabetic digits ('+this.srcAlphabet+")");if(this.srcAlphabet===this.dstAlphabet)return s;for(g=0;g<n;g++)h[g]=this.srcAlphabet.indexOf(s[g]);do{for(b=0,c=0,g=0;g<n;g++)b=b*u+h[g],b>=o?(h[c++]=parseInt(b/o,10),b=b%o):c>0&&(h[c++]=0);n=c,m=this.dstAlphabet.slice(b,b+1).concat(m)}while(c!==0);return m},l.prototype.isValid=function(s){for(var g=0;g<s.length;++g)if(this.srcAlphabet.indexOf(s[g])===-1)return!1;return!0},d.exports=l},{}],25:[function(r,d,a){(function(l){var s=r("object-assign");/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */function g(B,z){if(B===z)return 0;for(var G=B.length,U=z.length,ie=0,oe=Math.min(G,U);ie<oe;++ie)if(B[ie]!==z[ie]){G=B[ie],U=z[ie];break}return G<U?-1:U<G?1:0}function b(B){return l.Buffer&&typeof l.Buffer.isBuffer=="function"?l.Buffer.isBuffer(B):!!(B!=null&&B._isBuffer)}var c=r("util/"),h=Object.prototype.hasOwnProperty,u=Array.prototype.slice,o=function(){return function(){}.name==="foo"}();function n(B){return Object.prototype.toString.call(B)}function m(B){return b(B)||typeof l.ArrayBuffer!="function"?!1:typeof ArrayBuffer.isView=="function"?ArrayBuffer.isView(B):B?!!(B instanceof DataView||B.buffer&&B.buffer instanceof ArrayBuffer):!1}var y=d.exports=k,f=/\s*function\s+([^\(\s]*)\s*/;function v(B){if(!!c.isFunction(B)){if(o)return B.name;var z=B.toString(),G=z.match(f);return G&&G[1]}}y.AssertionError=function(z){this.name="AssertionError",this.actual=z.actual,this.expected=z.expected,this.operator=z.operator,z.message?(this.message=z.message,this.generatedMessage=!1):(this.message=A(this),this.generatedMessage=!0);var G=z.stackStartFunction||x;if(Error.captureStackTrace)Error.captureStackTrace(this,G);else{var U=new Error;if(U.stack){var ie=U.stack,oe=v(G),ae=ie.indexOf(`
`+oe);if(ae>=0){var W=ie.indexOf(`
`,ae+1);ie=ie.substring(W+1)}this.stack=ie}}},c.inherits(y.AssertionError,Error);function p(B,z){return typeof B=="string"?B.length<z?B:B.slice(0,z):B}function w(B){if(o||!c.isFunction(B))return c.inspect(B);var z=v(B),G=z?": "+z:"";return"[Function"+G+"]"}function A(B){return p(w(B.actual),128)+" "+B.operator+" "+p(w(B.expected),128)}function x(B,z,G,U,ie){throw new y.AssertionError({message:G,actual:B,expected:z,operator:U,stackStartFunction:ie})}y.fail=x;function k(B,z){B||x(B,!0,z,"==",y.ok)}y.ok=k,y.equal=function(z,G,U){z!=G&&x(z,G,U,"==",y.equal)},y.notEqual=function(z,G,U){z==G&&x(z,G,U,"!=",y.notEqual)},y.deepEqual=function(z,G,U){N(z,G,!1)||x(z,G,U,"deepEqual",y.deepEqual)},y.deepStrictEqual=function(z,G,U){N(z,G,!0)||x(z,G,U,"deepStrictEqual",y.deepStrictEqual)};function N(B,z,G,U){if(B===z)return!0;if(b(B)&&b(z))return g(B,z)===0;if(c.isDate(B)&&c.isDate(z))return B.getTime()===z.getTime();if(c.isRegExp(B)&&c.isRegExp(z))return B.source===z.source&&B.global===z.global&&B.multiline===z.multiline&&B.lastIndex===z.lastIndex&&B.ignoreCase===z.ignoreCase;if((B===null||typeof B!="object")&&(z===null||typeof z!="object"))return G?B===z:B==z;if(m(B)&&m(z)&&n(B)===n(z)&&!(B instanceof Float32Array||B instanceof Float64Array))return g(new Uint8Array(B.buffer),new Uint8Array(z.buffer))===0;if(b(B)!==b(z))return!1;U=U||{actual:[],expected:[]};var ie=U.actual.indexOf(B);return ie!==-1&&ie===U.expected.indexOf(z)?!0:(U.actual.push(B),U.expected.push(z),S(B,z,G,U))}function E(B){return Object.prototype.toString.call(B)=="[object Arguments]"}function S(B,z,G,U){if(B==null||z===null||z===void 0)return!1;if(c.isPrimitive(B)||c.isPrimitive(z))return B===z;if(G&&Object.getPrototypeOf(B)!==Object.getPrototypeOf(z))return!1;var ie=E(B),oe=E(z);if(ie&&!oe||!ie&&oe)return!1;if(ie)return B=u.call(B),z=u.call(z),N(B,z,G);var ae=J(B),W=J(z),ee,_;if(ae.length!==W.length)return!1;for(ae.sort(),W.sort(),_=ae.length-1;_>=0;_--)if(ae[_]!==W[_])return!1;for(_=ae.length-1;_>=0;_--)if(ee=ae[_],!N(B[ee],z[ee],G,U))return!1;return!0}y.notDeepEqual=function(z,G,U){N(z,G,!1)&&x(z,G,U,"notDeepEqual",y.notDeepEqual)},y.notDeepStrictEqual=R;function R(B,z,G){N(B,z,!0)&&x(B,z,G,"notDeepStrictEqual",R)}y.strictEqual=function(z,G,U){z!==G&&x(z,G,U,"===",y.strictEqual)},y.notStrictEqual=function(z,G,U){z===G&&x(z,G,U,"!==",y.notStrictEqual)};function M(B,z){if(!B||!z)return!1;if(Object.prototype.toString.call(z)=="[object RegExp]")return z.test(B);try{if(B instanceof z)return!0}catch{}return Error.isPrototypeOf(z)?!1:z.call({},B)===!0}function j(B){var z;try{B()}catch(G){z=G}return z}function O(B,z,G,U){var ie;if(typeof z!="function")throw new TypeError('"block" argument must be a function');typeof G=="string"&&(U=G,G=null),ie=j(z),U=(G&&G.name?" ("+G.name+").":".")+(U?" "+U:"."),B&&!ie&&x(ie,G,"Missing expected exception"+U);var oe=typeof U=="string",ae=!B&&c.isError(ie),W=!B&&ie&&!G;if((ae&&oe&&M(ie,G)||W)&&x(ie,G,"Got unwanted exception"+U),B&&ie&&G&&!M(ie,G)||!B&&ie)throw ie}y.throws=function(B,z,G){O(!0,B,z,G)},y.doesNotThrow=function(B,z,G){O(!1,B,z,G)},y.ifError=function(B){if(B)throw B};function V(B,z){B||x(B,!0,z,"==",V)}y.strict=s(V,y,{equal:y.strictEqual,deepEqual:y.deepStrictEqual,notEqual:y.notStrictEqual,notDeepEqual:y.notDeepStrictEqual}),y.strict.strict=y.strict;var J=Object.keys||function(B){var z=[];for(var G in B)h.call(B,G)&&z.push(G);return z}}).call(this,typeof ot!="undefined"?ot:typeof self!="undefined"?self:typeof i!="undefined"?i:{})},{"object-assign":84,"util/":28}],26:[function(r,d,a){typeof Object.create=="function"?d.exports=function(s,g){s.super_=g,s.prototype=Object.create(g.prototype,{constructor:{value:s,enumerable:!1,writable:!0,configurable:!0}})}:d.exports=function(s,g){s.super_=g;var b=function(){};b.prototype=g.prototype,s.prototype=new b,s.prototype.constructor=s}},{}],27:[function(r,d,a){d.exports=function(s){return s&&typeof s=="object"&&typeof s.copy=="function"&&typeof s.fill=="function"&&typeof s.readUInt8=="function"}},{}],28:[function(r,d,a){(function(l,s){var g=/%[sdj%]/g;a.format=function(W){if(!S(W)){for(var ee=[],_=0;_<arguments.length;_++)ee.push(h(arguments[_]));return ee.join(" ")}for(var _=1,re=arguments,fe=re.length,pe=String(W).replace(g,function(se){if(se==="%%")return"%";if(_>=fe)return se;switch(se){case"%s":return String(re[_++]);case"%d":return Number(re[_++]);case"%j":try{return JSON.stringify(re[_++])}catch{return"[Circular]"}default:return se}}),he=re[_];_<fe;he=re[++_])k(he)||!O(he)?pe+=" "+he:pe+=" "+h(he);return pe},a.deprecate=function(W,ee){if(M(s.process))return function(){return a.deprecate(W,ee).apply(this,arguments)};if(l.noDeprecation===!0)return W;var _=!1;function re(){if(!_){if(l.throwDeprecation)throw new Error(ee);l.traceDeprecation?console.trace(ee):console.error(ee),_=!0}return W.apply(this,arguments)}return re};var b={},c;a.debuglog=function(W){if(M(c)&&(c={}.NODE_DEBUG||""),W=W.toUpperCase(),!b[W])if(new RegExp("\\b"+W+"\\b","i").test(c)){var ee=l.pid;b[W]=function(){var _=a.format.apply(a,arguments);console.error("%s %d: %s",W,ee,_)}}else b[W]=function(){};return b[W]};function h(W,ee){var _={seen:[],stylize:o};return arguments.length>=3&&(_.depth=arguments[2]),arguments.length>=4&&(_.colors=arguments[3]),x(ee)?_.showHidden=ee:ee&&a._extend(_,ee),M(_.showHidden)&&(_.showHidden=!1),M(_.depth)&&(_.depth=2),M(_.colors)&&(_.colors=!1),M(_.customInspect)&&(_.customInspect=!0),_.colors&&(_.stylize=u),m(_,W,_.depth)}a.inspect=h,h.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},h.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"};function u(W,ee){var _=h.styles[ee];return _?"\x1B["+h.colors[_][0]+"m"+W+"\x1B["+h.colors[_][1]+"m":W}function o(W,ee){return W}function n(W){var ee={};return W.forEach(function(_,re){ee[_]=!0}),ee}function m(W,ee,_){if(W.customInspect&&ee&&B(ee.inspect)&&ee.inspect!==a.inspect&&!(ee.constructor&&ee.constructor.prototype===ee)){var re=ee.inspect(_,W);return S(re)||(re=m(W,re,_)),re}var fe=y(W,ee);if(fe)return fe;var pe=Object.keys(ee),he=n(pe);if(W.showHidden&&(pe=Object.getOwnPropertyNames(ee)),J(ee)&&(pe.indexOf("message")>=0||pe.indexOf("description")>=0))return f(ee);if(pe.length===0){if(B(ee)){var se=ee.name?": "+ee.name:"";return W.stylize("[Function"+se+"]","special")}if(j(ee))return W.stylize(RegExp.prototype.toString.call(ee),"regexp");if(V(ee))return W.stylize(Date.prototype.toString.call(ee),"date");if(J(ee))return f(ee)}var ce="",q=!1,K=["{","}"];if(A(ee)&&(q=!0,K=["[","]"]),B(ee)){var Y=ee.name?": "+ee.name:"";ce=" [Function"+Y+"]"}if(j(ee)&&(ce=" "+RegExp.prototype.toString.call(ee)),V(ee)&&(ce=" "+Date.prototype.toUTCString.call(ee)),J(ee)&&(ce=" "+f(ee)),pe.length===0&&(!q||ee.length==0))return K[0]+ce+K[1];if(_<0)return j(ee)?W.stylize(RegExp.prototype.toString.call(ee),"regexp"):W.stylize("[Object]","special");W.seen.push(ee);var $;return q?$=v(W,ee,_,he,pe):$=pe.map(function(te){return p(W,ee,_,he,te,q)}),W.seen.pop(),w($,ce,K)}function y(W,ee){if(M(ee))return W.stylize("undefined","undefined");if(S(ee)){var _="'"+JSON.stringify(ee).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return W.stylize(_,"string")}if(E(ee))return W.stylize(""+ee,"number");if(x(ee))return W.stylize(""+ee,"boolean");if(k(ee))return W.stylize("null","null")}function f(W){return"["+Error.prototype.toString.call(W)+"]"}function v(W,ee,_,re,fe){for(var pe=[],he=0,se=ee.length;he<se;++he)ae(ee,String(he))?pe.push(p(W,ee,_,re,String(he),!0)):pe.push("");return fe.forEach(function(ce){ce.match(/^\d+$/)||pe.push(p(W,ee,_,re,ce,!0))}),pe}function p(W,ee,_,re,fe,pe){var he,se,ce;if(ce=Object.getOwnPropertyDescriptor(ee,fe)||{value:ee[fe]},ce.get?ce.set?se=W.stylize("[Getter/Setter]","special"):se=W.stylize("[Getter]","special"):ce.set&&(se=W.stylize("[Setter]","special")),ae(re,fe)||(he="["+fe+"]"),se||(W.seen.indexOf(ce.value)<0?(k(_)?se=m(W,ce.value,null):se=m(W,ce.value,_-1),se.indexOf(`
`)>-1&&(pe?se=se.split(`
`).map(function(q){return"  "+q}).join(`
`).substr(2):se=`
`+se.split(`
`).map(function(q){return"   "+q}).join(`
`))):se=W.stylize("[Circular]","special")),M(he)){if(pe&&fe.match(/^\d+$/))return se;he=JSON.stringify(""+fe),he.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(he=he.substr(1,he.length-2),he=W.stylize(he,"name")):(he=he.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),he=W.stylize(he,"string"))}return he+": "+se}function w(W,ee,_){var re=W.reduce(function(fe,pe){return pe.indexOf(`
`)>=0,fe+pe.replace(/\u001b\[\d\d?m/g,"").length+1},0);return re>60?_[0]+(ee===""?"":ee+`
 `)+" "+W.join(`,
  `)+" "+_[1]:_[0]+ee+" "+W.join(", ")+" "+_[1]}function A(W){return Array.isArray(W)}a.isArray=A;function x(W){return typeof W=="boolean"}a.isBoolean=x;function k(W){return W===null}a.isNull=k;function N(W){return W==null}a.isNullOrUndefined=N;function E(W){return typeof W=="number"}a.isNumber=E;function S(W){return typeof W=="string"}a.isString=S;function R(W){return typeof W=="symbol"}a.isSymbol=R;function M(W){return W===void 0}a.isUndefined=M;function j(W){return O(W)&&G(W)==="[object RegExp]"}a.isRegExp=j;function O(W){return typeof W=="object"&&W!==null}a.isObject=O;function V(W){return O(W)&&G(W)==="[object Date]"}a.isDate=V;function J(W){return O(W)&&(G(W)==="[object Error]"||W instanceof Error)}a.isError=J;function B(W){return typeof W=="function"}a.isFunction=B;function z(W){return W===null||typeof W=="boolean"||typeof W=="number"||typeof W=="string"||typeof W=="symbol"||typeof W=="undefined"}a.isPrimitive=z,a.isBuffer=r("./support/isBuffer");function G(W){return Object.prototype.toString.call(W)}function U(W){return W<10?"0"+W.toString(10):W.toString(10)}var ie=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function oe(){var W=new Date,ee=[U(W.getHours()),U(W.getMinutes()),U(W.getSeconds())].join(":");return[W.getDate(),ie[W.getMonth()],ee].join(" ")}a.log=function(){console.log("%s - %s",oe(),a.format.apply(a,arguments))},a.inherits=r("inherits"),a._extend=function(W,ee){if(!ee||!O(ee))return W;for(var _=Object.keys(ee),re=_.length;re--;)W[_[re]]=ee[_[re]];return W};function ae(W,ee){return Object.prototype.hasOwnProperty.call(W,ee)}}).call(this,r("_process"),typeof ot!="undefined"?ot:typeof self!="undefined"?self:typeof i!="undefined"?i:{})},{"./support/isBuffer":27,_process:133,inherits:26}],29:[function(r,d,a){a.byteLength=o,a.toByteArray=m,a.fromByteArray=v;for(var l=[],s=[],g=typeof Uint8Array!="undefined"?Uint8Array:Array,b="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",c=0,h=b.length;c<h;++c)l[c]=b[c],s[b.charCodeAt(c)]=c;s["-".charCodeAt(0)]=62,s["_".charCodeAt(0)]=63;function u(p){var w=p.length;if(w%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var A=p.indexOf("=");A===-1&&(A=w);var x=A===w?0:4-A%4;return[A,x]}function o(p){var w=u(p),A=w[0],x=w[1];return(A+x)*3/4-x}function n(p,w,A){return(w+A)*3/4-A}function m(p){var w,A=u(p),x=A[0],k=A[1],N=new g(n(p,x,k)),E=0,S=k>0?x-4:x,R;for(R=0;R<S;R+=4)w=s[p.charCodeAt(R)]<<18|s[p.charCodeAt(R+1)]<<12|s[p.charCodeAt(R+2)]<<6|s[p.charCodeAt(R+3)],N[E++]=w>>16&255,N[E++]=w>>8&255,N[E++]=w&255;return k===2&&(w=s[p.charCodeAt(R)]<<2|s[p.charCodeAt(R+1)]>>4,N[E++]=w&255),k===1&&(w=s[p.charCodeAt(R)]<<10|s[p.charCodeAt(R+1)]<<4|s[p.charCodeAt(R+2)]>>2,N[E++]=w>>8&255,N[E++]=w&255),N}function y(p){return l[p>>18&63]+l[p>>12&63]+l[p>>6&63]+l[p&63]}function f(p,w,A){for(var x,k=[],N=w;N<A;N+=3)x=(p[N]<<16&16711680)+(p[N+1]<<8&65280)+(p[N+2]&255),k.push(y(x));return k.join("")}function v(p){for(var w,A=p.length,x=A%3,k=[],N=16383,E=0,S=A-x;E<S;E+=N)k.push(f(p,E,E+N>S?S:E+N));return x===1?(w=p[A-1],k.push(l[w>>2]+l[w<<4&63]+"==")):x===2&&(w=(p[A-2]<<8)+p[A-1],k.push(l[w>>10]+l[w>>4&63]+l[w<<2&63]+"=")),k.join("")}},{}],30:[function(r,d,a){var l=r("./lib/encoder"),s=r("./lib/decoder");d.exports={encode:l,decode:s}},{"./lib/decoder":31,"./lib/encoder":32}],31:[function(r,d,a){(function(l){function s(g,b){if(this.pos=0,this.buffer=g,this.is_with_alpha=!!b,this.bottom_up=!0,this.flag=this.buffer.toString("utf-8",0,this.pos+=2),this.flag!="BM")throw new Error("Invalid BMP File");this.parseHeader(),this.parseRGBA()}s.prototype.parseHeader=function(){if(this.fileSize=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.reserved=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.offset=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.headerSize=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.width=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.height=this.buffer.readInt32LE(this.pos),this.pos+=4,this.planes=this.buffer.readUInt16LE(this.pos),this.pos+=2,this.bitPP=this.buffer.readUInt16LE(this.pos),this.pos+=2,this.compress=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.rawSize=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.hr=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.vr=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.colors=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.importantColors=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.bitPP===16&&this.is_with_alpha&&(this.bitPP=15),this.bitPP<15){var g=this.colors===0?1<<this.bitPP:this.colors;this.palette=new Array(g);for(var b=0;b<g;b++){var c=this.buffer.readUInt8(this.pos++),h=this.buffer.readUInt8(this.pos++),u=this.buffer.readUInt8(this.pos++),o=this.buffer.readUInt8(this.pos++);this.palette[b]={red:u,green:h,blue:c,quad:o}}}this.height<0&&(this.height*=-1,this.bottom_up=!1)},s.prototype.parseRGBA=function(){var g="bit"+this.bitPP,b=this.width*this.height*4;this.data=new l(b),this[g]()},s.prototype.bit1=function(){for(var g=Math.ceil(this.width/8),b=g%4,c=this.height>=0?this.height-1:-this.height,c=this.height-1;c>=0;c--){for(var h=this.bottom_up?c:this.height-1-c,u=0;u<g;u++)for(var o=this.buffer.readUInt8(this.pos++),n=h*this.width*4+u*8*4,m=0;m<8&&u*8+m<this.width;m++){var y=this.palette[o>>7-m&1];this.data[n+m*4]=0,this.data[n+m*4+1]=y.blue,this.data[n+m*4+2]=y.green,this.data[n+m*4+3]=y.red}b!=0&&(this.pos+=4-b)}},s.prototype.bit4=function(){if(this.compress==2){let N=function(E){var S=this.palette[E];this.data[g]=0,this.data[g+1]=S.blue,this.data[g+2]=S.green,this.data[g+3]=S.red,g+=4};var k=N;this.data.fill(255);for(var g=0,b=this.bottom_up?this.height-1:0,c=!1;g<this.data.length;){var h=this.buffer.readUInt8(this.pos++),u=this.buffer.readUInt8(this.pos++);if(h==0)if(u==0){this.bottom_up?b--:b++,g=b*this.width*4,c=!1;continue}else{if(u==1)break;if(u==2){var o=this.buffer.readUInt8(this.pos++),n=this.buffer.readUInt8(this.pos++);this.bottom_up?b-=n:b+=n,g+=n*this.width*4+o*4}else{for(var m=this.buffer.readUInt8(this.pos++),y=0;y<u;y++)c?N.call(this,m&15):N.call(this,(m&240)>>4),y&1&&y+1<u&&(m=this.buffer.readUInt8(this.pos++)),c=!c;(u+1>>1&1)==1&&this.pos++}}else for(var y=0;y<h;y++)c?N.call(this,u&15):N.call(this,(u&240)>>4),c=!c}}else for(var f=Math.ceil(this.width/2),v=f%4,n=this.height-1;n>=0;n--){for(var p=this.bottom_up?n:this.height-1-n,o=0;o<f;o++){var u=this.buffer.readUInt8(this.pos++),g=p*this.width*4+o*2*4,w=u>>4,A=u&15,x=this.palette[w];if(this.data[g]=0,this.data[g+1]=x.blue,this.data[g+2]=x.green,this.data[g+3]=x.red,o*2+1>=this.width)break;x=this.palette[A],this.data[g+4]=0,this.data[g+4+1]=x.blue,this.data[g+4+2]=x.green,this.data[g+4+3]=x.red}v!=0&&(this.pos+=4-v)}},s.prototype.bit8=function(){if(this.compress==1){let w=function(A){var x=this.palette[A];this.data[g]=0,this.data[g+1]=x.blue,this.data[g+2]=x.green,this.data[g+3]=x.red,g+=4};var p=w;this.data.fill(255);for(var g=0,b=this.bottom_up?this.height-1:0;g<this.data.length;){var c=this.buffer.readUInt8(this.pos++),h=this.buffer.readUInt8(this.pos++);if(c==0)if(h==0){this.bottom_up?b--:b++,g=b*this.width*4;continue}else{if(h==1)break;if(h==2){var u=this.buffer.readUInt8(this.pos++),o=this.buffer.readUInt8(this.pos++);this.bottom_up?b-=o:b+=o,g+=o*this.width*4+u*4}else{for(var n=0;n<h;n++){var m=this.buffer.readUInt8(this.pos++);w.call(this,m)}h&!0&&this.pos++}}else for(var n=0;n<c;n++)w.call(this,h)}}else for(var y=this.width%4,o=this.height-1;o>=0;o--){for(var f=this.bottom_up?o:this.height-1-o,u=0;u<this.width;u++){var h=this.buffer.readUInt8(this.pos++),g=f*this.width*4+u*4;if(h<this.palette.length){var v=this.palette[h];this.data[g]=0,this.data[g+1]=v.blue,this.data[g+2]=v.green,this.data[g+3]=v.red}else this.data[g]=0,this.data[g+1]=255,this.data[g+2]=255,this.data[g+3]=255}y!=0&&(this.pos+=4-y)}},s.prototype.bit15=function(){for(var g=this.width%3,b=parseInt("11111",2),c=b,h=this.height-1;h>=0;h--){for(var u=this.bottom_up?h:this.height-1-h,o=0;o<this.width;o++){var n=this.buffer.readUInt16LE(this.pos);this.pos+=2;var m=(n&c)/c*255|0,y=(n>>5&c)/c*255|0,f=(n>>10&c)/c*255|0,v=n>>15?255:0,p=u*this.width*4+o*4;this.data[p]=v,this.data[p+1]=m,this.data[p+2]=y,this.data[p+3]=f}this.pos+=g}},s.prototype.bit16=function(){var g=this.width%2*2;this.maskRed=31744,this.maskGreen=992,this.maskBlue=31,this.mask0=0,this.compress==3&&(this.maskRed=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.maskGreen=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.maskBlue=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.mask0=this.buffer.readUInt32LE(this.pos),this.pos+=4);for(var b=[0,0,0],c=0;c<16;c++)this.maskRed>>c&1&&b[0]++,this.maskGreen>>c&1&&b[1]++,this.maskBlue>>c&1&&b[2]++;b[1]+=b[0],b[2]+=b[1],b[0]=8-b[0],b[1]-=8,b[2]-=8;for(var h=this.height-1;h>=0;h--){for(var u=this.bottom_up?h:this.height-1-h,o=0;o<this.width;o++){var n=this.buffer.readUInt16LE(this.pos);this.pos+=2;var m=(n&this.maskBlue)<<b[0],y=(n&this.maskGreen)>>b[1],f=(n&this.maskRed)>>b[2],v=u*this.width*4+o*4;this.data[v]=0,this.data[v+1]=m,this.data[v+2]=y,this.data[v+3]=f}this.pos+=g}},s.prototype.bit24=function(){for(var g=this.height-1;g>=0;g--){for(var b=this.bottom_up?g:this.height-1-g,c=0;c<this.width;c++){var h=this.buffer.readUInt8(this.pos++),u=this.buffer.readUInt8(this.pos++),o=this.buffer.readUInt8(this.pos++),n=b*this.width*4+c*4;this.data[n]=0,this.data[n+1]=h,this.data[n+2]=u,this.data[n+3]=o}this.pos+=this.width%4}},s.prototype.bit32=function(){if(this.compress==3){this.maskRed=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.maskGreen=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.maskBlue=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.mask0=this.buffer.readUInt32LE(this.pos),this.pos+=4;for(var g=this.height-1;g>=0;g--)for(var b=this.bottom_up?g:this.height-1-g,c=0;c<this.width;c++){var h=this.buffer.readUInt8(this.pos++),u=this.buffer.readUInt8(this.pos++),o=this.buffer.readUInt8(this.pos++),n=this.buffer.readUInt8(this.pos++),m=b*this.width*4+c*4;this.data[m]=h,this.data[m+1]=u,this.data[m+2]=o,this.data[m+3]=n}}else for(var g=this.height-1;g>=0;g--)for(var b=this.bottom_up?g:this.height-1-g,c=0;c<this.width;c++){var u=this.buffer.readUInt8(this.pos++),o=this.buffer.readUInt8(this.pos++),n=this.buffer.readUInt8(this.pos++),h=this.buffer.readUInt8(this.pos++),m=b*this.width*4+c*4;this.data[m]=h,this.data[m+1]=u,this.data[m+2]=o,this.data[m+3]=n}},s.prototype.getData=function(){return this.data},d.exports=function(g){var b=new s(g);return b}}).call(this,r("buffer").Buffer)},{buffer:48}],32:[function(r,d,a){(function(l){function s(g){this.buffer=g.data,this.width=g.width,this.height=g.height,this.extraBytes=this.width%4,this.rgbSize=this.height*(3*this.width+this.extraBytes),this.headerInfoSize=40,this.data=[],this.flag="BM",this.reserved=0,this.offset=54,this.fileSize=this.rgbSize+this.offset,this.planes=1,this.bitPP=24,this.compress=0,this.hr=0,this.vr=0,this.colors=0,this.importantColors=0}s.prototype.encode=function(){var g=new l(this.offset+this.rgbSize);this.pos=0,g.write(this.flag,this.pos,2),this.pos+=2,g.writeUInt32LE(this.fileSize,this.pos),this.pos+=4,g.writeUInt32LE(this.reserved,this.pos),this.pos+=4,g.writeUInt32LE(this.offset,this.pos),this.pos+=4,g.writeUInt32LE(this.headerInfoSize,this.pos),this.pos+=4,g.writeUInt32LE(this.width,this.pos),this.pos+=4,g.writeInt32LE(-this.height,this.pos),this.pos+=4,g.writeUInt16LE(this.planes,this.pos),this.pos+=2,g.writeUInt16LE(this.bitPP,this.pos),this.pos+=2,g.writeUInt32LE(this.compress,this.pos),this.pos+=4,g.writeUInt32LE(this.rgbSize,this.pos),this.pos+=4,g.writeUInt32LE(this.hr,this.pos),this.pos+=4,g.writeUInt32LE(this.vr,this.pos),this.pos+=4,g.writeUInt32LE(this.colors,this.pos),this.pos+=4,g.writeUInt32LE(this.importantColors,this.pos),this.pos+=4;for(var b=0,c=3*this.width+this.extraBytes,h=0;h<this.height;h++){for(var u=0;u<this.width;u++){var o=this.pos+h*c+u*3;b++,g[o]=this.buffer[b++],g[o+1]=this.buffer[b++],g[o+2]=this.buffer[b++]}if(this.extraBytes>0){var n=this.pos+h*c+this.width*3;g.fill(0,n,n+this.extraBytes)}}return g},d.exports=function(g,b){var c=new s(g),h=c.encode();return{data:h,width:g.width,height:g.height}}}).call(this,r("buffer").Buffer)},{buffer:48}],33:[function(r,d,a){},{}],34:[function(r,d,a){(function(l,s){var g=r("assert"),b=r("pako/lib/zlib/zstream"),c=r("pako/lib/zlib/deflate.js"),h=r("pako/lib/zlib/inflate.js"),u=r("pako/lib/zlib/constants");for(var o in u)a[o]=u[o];a.NONE=0,a.DEFLATE=1,a.INFLATE=2,a.GZIP=3,a.GUNZIP=4,a.DEFLATERAW=5,a.INFLATERAW=6,a.UNZIP=7;var n=31,m=139;function y(f){if(typeof f!="number"||f<a.DEFLATE||f>a.UNZIP)throw new TypeError("Bad argument");this.dictionary=null,this.err=0,this.flush=0,this.init_done=!1,this.level=0,this.memLevel=0,this.mode=f,this.strategy=0,this.windowBits=0,this.write_in_progress=!1,this.pending_close=!1,this.gzip_id_bytes_read=0}y.prototype.close=function(){if(this.write_in_progress){this.pending_close=!0;return}this.pending_close=!1,g(this.init_done,"close before init"),g(this.mode<=a.UNZIP),this.mode===a.DEFLATE||this.mode===a.GZIP||this.mode===a.DEFLATERAW?c.deflateEnd(this.strm):(this.mode===a.INFLATE||this.mode===a.GUNZIP||this.mode===a.INFLATERAW||this.mode===a.UNZIP)&&h.inflateEnd(this.strm),this.mode=a.NONE,this.dictionary=null},y.prototype.write=function(f,v,p,w,A,x,k){return this._write(!0,f,v,p,w,A,x,k)},y.prototype.writeSync=function(f,v,p,w,A,x,k){return this._write(!1,f,v,p,w,A,x,k)},y.prototype._write=function(f,v,p,w,A,x,k,N){if(g.equal(arguments.length,8),g(this.init_done,"write before init"),g(this.mode!==a.NONE,"already finalized"),g.equal(!1,this.write_in_progress,"write already in progress"),g.equal(!1,this.pending_close,"close is pending"),this.write_in_progress=!0,g.equal(!1,v===void 0,"must provide flush value"),this.write_in_progress=!0,v!==a.Z_NO_FLUSH&&v!==a.Z_PARTIAL_FLUSH&&v!==a.Z_SYNC_FLUSH&&v!==a.Z_FULL_FLUSH&&v!==a.Z_FINISH&&v!==a.Z_BLOCK)throw new Error("Invalid flush value");if(p==null&&(p=s.alloc(0),A=0,w=0),this.strm.avail_in=A,this.strm.input=p,this.strm.next_in=w,this.strm.avail_out=N,this.strm.output=x,this.strm.next_out=k,this.flush=v,!f)return this._process(),this._checkError()?this._afterSync():void 0;var E=this;return l.nextTick(function(){E._process(),E._after()}),this},y.prototype._afterSync=function(){var f=this.strm.avail_out,v=this.strm.avail_in;return this.write_in_progress=!1,[v,f]},y.prototype._process=function(){var f=null;switch(this.mode){case a.DEFLATE:case a.GZIP:case a.DEFLATERAW:this.err=c.deflate(this.strm,this.flush);break;case a.UNZIP:switch(this.strm.avail_in>0&&(f=this.strm.next_in),this.gzip_id_bytes_read){case 0:if(f===null)break;if(this.strm.input[f]===n){if(this.gzip_id_bytes_read=1,f++,this.strm.avail_in===1)break}else{this.mode=a.INFLATE;break}case 1:if(f===null)break;this.strm.input[f]===m?(this.gzip_id_bytes_read=2,this.mode=a.GUNZIP):this.mode=a.INFLATE;break;default:throw new Error("invalid number of gzip magic number bytes read")}case a.INFLATE:case a.GUNZIP:case a.INFLATERAW:for(this.err=h.inflate(this.strm,this.flush),this.err===a.Z_NEED_DICT&&this.dictionary&&(this.err=h.inflateSetDictionary(this.strm,this.dictionary),this.err===a.Z_OK?this.err=h.inflate(this.strm,this.flush):this.err===a.Z_DATA_ERROR&&(this.err=a.Z_NEED_DICT));this.strm.avail_in>0&&this.mode===a.GUNZIP&&this.err===a.Z_STREAM_END&&this.strm.next_in[0]!==0;)this.reset(),this.err=h.inflate(this.strm,this.flush);break;default:throw new Error("Unknown mode "+this.mode)}},y.prototype._checkError=function(){switch(this.err){case a.Z_OK:case a.Z_BUF_ERROR:if(this.strm.avail_out!==0&&this.flush===a.Z_FINISH)return this._error("unexpected end of file"),!1;break;case a.Z_STREAM_END:break;case a.Z_NEED_DICT:return this.dictionary==null?this._error("Missing dictionary"):this._error("Bad dictionary"),!1;default:return this._error("Zlib error"),!1}return!0},y.prototype._after=function(){if(!!this._checkError()){var f=this.strm.avail_out,v=this.strm.avail_in;this.write_in_progress=!1,this.callback(v,f),this.pending_close&&this.close()}},y.prototype._error=function(f){this.strm.msg&&(f=this.strm.msg),this.onerror(f,this.err),this.write_in_progress=!1,this.pending_close&&this.close()},y.prototype.init=function(f,v,p,w,A){g(arguments.length===4||arguments.length===5,"init(windowBits, level, memLevel, strategy, [dictionary])"),g(f>=8&&f<=15,"invalid windowBits"),g(v>=-1&&v<=9,"invalid compression level"),g(p>=1&&p<=9,"invalid memlevel"),g(w===a.Z_FILTERED||w===a.Z_HUFFMAN_ONLY||w===a.Z_RLE||w===a.Z_FIXED||w===a.Z_DEFAULT_STRATEGY,"invalid strategy"),this._init(v,f,p,w,A),this._setDictionary()},y.prototype.params=function(){throw new Error("deflateParams Not supported")},y.prototype.reset=function(){this._reset(),this._setDictionary()},y.prototype._init=function(f,v,p,w,A){switch(this.level=f,this.windowBits=v,this.memLevel=p,this.strategy=w,this.flush=a.Z_NO_FLUSH,this.err=a.Z_OK,(this.mode===a.GZIP||this.mode===a.GUNZIP)&&(this.windowBits+=16),this.mode===a.UNZIP&&(this.windowBits+=32),(this.mode===a.DEFLATERAW||this.mode===a.INFLATERAW)&&(this.windowBits=-1*this.windowBits),this.strm=new b,this.mode){case a.DEFLATE:case a.GZIP:case a.DEFLATERAW:this.err=c.deflateInit2(this.strm,this.level,a.Z_DEFLATED,this.windowBits,this.memLevel,this.strategy);break;case a.INFLATE:case a.GUNZIP:case a.INFLATERAW:case a.UNZIP:this.err=h.inflateInit2(this.strm,this.windowBits);break;default:throw new Error("Unknown mode "+this.mode)}this.err!==a.Z_OK&&this._error("Init error"),this.dictionary=A,this.write_in_progress=!1,this.init_done=!0},y.prototype._setDictionary=function(){if(this.dictionary!=null){switch(this.err=a.Z_OK,this.mode){case a.DEFLATE:case a.DEFLATERAW:this.err=c.deflateSetDictionary(this.strm,this.dictionary);break}this.err!==a.Z_OK&&this._error("Failed to set dictionary")}},y.prototype._reset=function(){switch(this.err=a.Z_OK,this.mode){case a.DEFLATE:case a.DEFLATERAW:case a.GZIP:this.err=c.deflateReset(this.strm);break;case a.INFLATE:case a.INFLATERAW:case a.GUNZIP:this.err=h.inflateReset(this.strm);break}this.err!==a.Z_OK&&this._error("Failed to reset stream")},a.Zlib=y}).call(this,r("_process"),r("buffer").Buffer)},{_process:133,assert:25,buffer:48,"pako/lib/zlib/constants":38,"pako/lib/zlib/deflate.js":40,"pako/lib/zlib/inflate.js":42,"pako/lib/zlib/zstream":46}],35:[function(r,d,a){(function(l){var s=r("buffer").Buffer,g=r("stream").Transform,b=r("./binding"),c=r("util"),h=r("assert").ok,u=r("buffer").kMaxLength,o="Cannot create final Buffer. It would be larger than 0x"+u.toString(16)+" bytes";b.Z_MIN_WINDOWBITS=8,b.Z_MAX_WINDOWBITS=15,b.Z_DEFAULT_WINDOWBITS=15,b.Z_MIN_CHUNK=64,b.Z_MAX_CHUNK=1/0,b.Z_DEFAULT_CHUNK=16*1024,b.Z_MIN_MEMLEVEL=1,b.Z_MAX_MEMLEVEL=9,b.Z_DEFAULT_MEMLEVEL=8,b.Z_MIN_LEVEL=-1,b.Z_MAX_LEVEL=9,b.Z_DEFAULT_LEVEL=b.Z_DEFAULT_COMPRESSION;for(var n=Object.keys(b),m=0;m<n.length;m++){var y=n[m];y.match(/^Z/)&&Object.defineProperty(a,y,{enumerable:!0,value:b[y],writable:!1})}for(var f={Z_OK:b.Z_OK,Z_STREAM_END:b.Z_STREAM_END,Z_NEED_DICT:b.Z_NEED_DICT,Z_ERRNO:b.Z_ERRNO,Z_STREAM_ERROR:b.Z_STREAM_ERROR,Z_DATA_ERROR:b.Z_DATA_ERROR,Z_MEM_ERROR:b.Z_MEM_ERROR,Z_BUF_ERROR:b.Z_BUF_ERROR,Z_VERSION_ERROR:b.Z_VERSION_ERROR},v=Object.keys(f),p=0;p<v.length;p++){var w=v[p];f[f[w]]=w}Object.defineProperty(a,"codes",{enumerable:!0,value:Object.freeze(f),writable:!1}),a.Deflate=k,a.Inflate=N,a.Gzip=E,a.Gunzip=S,a.DeflateRaw=R,a.InflateRaw=M,a.Unzip=j,a.createDeflate=function(z){return new k(z)},a.createInflate=function(z){return new N(z)},a.createDeflateRaw=function(z){return new R(z)},a.createInflateRaw=function(z){return new M(z)},a.createGzip=function(z){return new E(z)},a.createGunzip=function(z){return new S(z)},a.createUnzip=function(z){return new j(z)},a.deflate=function(z,G,U){return typeof G=="function"&&(U=G,G={}),A(new k(G),z,U)},a.deflateSync=function(z,G){return x(new k(G),z)},a.gzip=function(z,G,U){return typeof G=="function"&&(U=G,G={}),A(new E(G),z,U)},a.gzipSync=function(z,G){return x(new E(G),z)},a.deflateRaw=function(z,G,U){return typeof G=="function"&&(U=G,G={}),A(new R(G),z,U)},a.deflateRawSync=function(z,G){return x(new R(G),z)},a.unzip=function(z,G,U){return typeof G=="function"&&(U=G,G={}),A(new j(G),z,U)},a.unzipSync=function(z,G){return x(new j(G),z)},a.inflate=function(z,G,U){return typeof G=="function"&&(U=G,G={}),A(new N(G),z,U)},a.inflateSync=function(z,G){return x(new N(G),z)},a.gunzip=function(z,G,U){return typeof G=="function"&&(U=G,G={}),A(new S(G),z,U)},a.gunzipSync=function(z,G){return x(new S(G),z)},a.inflateRaw=function(z,G,U){return typeof G=="function"&&(U=G,G={}),A(new M(G),z,U)},a.inflateRawSync=function(z,G){return x(new M(G),z)};function A(z,G,U){var ie=[],oe=0;z.on("error",W),z.on("end",ee),z.end(G),ae();function ae(){for(var _;(_=z.read())!==null;)ie.push(_),oe+=_.length;z.once("readable",ae)}function W(_){z.removeListener("end",ee),z.removeListener("readable",ae),U(_)}function ee(){var _,re=null;oe>=u?re=new RangeError(o):_=s.concat(ie,oe),ie=[],z.close(),U(re,_)}}function x(z,G){if(typeof G=="string"&&(G=s.from(G)),!s.isBuffer(G))throw new TypeError("Not a string or buffer");var U=z._finishFlushFlag;return z._processChunk(G,U)}function k(z){if(!(this instanceof k))return new k(z);V.call(this,z,b.DEFLATE)}function N(z){if(!(this instanceof N))return new N(z);V.call(this,z,b.INFLATE)}function E(z){if(!(this instanceof E))return new E(z);V.call(this,z,b.GZIP)}function S(z){if(!(this instanceof S))return new S(z);V.call(this,z,b.GUNZIP)}function R(z){if(!(this instanceof R))return new R(z);V.call(this,z,b.DEFLATERAW)}function M(z){if(!(this instanceof M))return new M(z);V.call(this,z,b.INFLATERAW)}function j(z){if(!(this instanceof j))return new j(z);V.call(this,z,b.UNZIP)}function O(z){return z===b.Z_NO_FLUSH||z===b.Z_PARTIAL_FLUSH||z===b.Z_SYNC_FLUSH||z===b.Z_FULL_FLUSH||z===b.Z_FINISH||z===b.Z_BLOCK}function V(z,G){var U=this;if(this._opts=z=z||{},this._chunkSize=z.chunkSize||a.Z_DEFAULT_CHUNK,g.call(this,z),z.flush&&!O(z.flush))throw new Error("Invalid flush flag: "+z.flush);if(z.finishFlush&&!O(z.finishFlush))throw new Error("Invalid flush flag: "+z.finishFlush);if(this._flushFlag=z.flush||b.Z_NO_FLUSH,this._finishFlushFlag=typeof z.finishFlush!="undefined"?z.finishFlush:b.Z_FINISH,z.chunkSize&&(z.chunkSize<a.Z_MIN_CHUNK||z.chunkSize>a.Z_MAX_CHUNK))throw new Error("Invalid chunk size: "+z.chunkSize);if(z.windowBits&&(z.windowBits<a.Z_MIN_WINDOWBITS||z.windowBits>a.Z_MAX_WINDOWBITS))throw new Error("Invalid windowBits: "+z.windowBits);if(z.level&&(z.level<a.Z_MIN_LEVEL||z.level>a.Z_MAX_LEVEL))throw new Error("Invalid compression level: "+z.level);if(z.memLevel&&(z.memLevel<a.Z_MIN_MEMLEVEL||z.memLevel>a.Z_MAX_MEMLEVEL))throw new Error("Invalid memLevel: "+z.memLevel);if(z.strategy&&z.strategy!=a.Z_FILTERED&&z.strategy!=a.Z_HUFFMAN_ONLY&&z.strategy!=a.Z_RLE&&z.strategy!=a.Z_FIXED&&z.strategy!=a.Z_DEFAULT_STRATEGY)throw new Error("Invalid strategy: "+z.strategy);if(z.dictionary&&!s.isBuffer(z.dictionary))throw new Error("Invalid dictionary: it should be a Buffer instance");this._handle=new b.Zlib(G);var ie=this;this._hadError=!1,this._handle.onerror=function(W,ee){J(ie),ie._hadError=!0;var _=new Error(W);_.errno=ee,_.code=a.codes[ee],ie.emit("error",_)};var oe=a.Z_DEFAULT_COMPRESSION;typeof z.level=="number"&&(oe=z.level);var ae=a.Z_DEFAULT_STRATEGY;typeof z.strategy=="number"&&(ae=z.strategy),this._handle.init(z.windowBits||a.Z_DEFAULT_WINDOWBITS,oe,z.memLevel||a.Z_DEFAULT_MEMLEVEL,ae,z.dictionary),this._buffer=s.allocUnsafe(this._chunkSize),this._offset=0,this._level=oe,this._strategy=ae,this.once("end",this.close),Object.defineProperty(this,"_closed",{get:function(){return!U._handle},configurable:!0,enumerable:!0})}c.inherits(V,g),V.prototype.params=function(z,G,U){if(z<a.Z_MIN_LEVEL||z>a.Z_MAX_LEVEL)throw new RangeError("Invalid compression level: "+z);if(G!=a.Z_FILTERED&&G!=a.Z_HUFFMAN_ONLY&&G!=a.Z_RLE&&G!=a.Z_FIXED&&G!=a.Z_DEFAULT_STRATEGY)throw new TypeError("Invalid strategy: "+G);if(this._level!==z||this._strategy!==G){var ie=this;this.flush(b.Z_SYNC_FLUSH,function(){h(ie._handle,"zlib binding closed"),ie._handle.params(z,G),ie._hadError||(ie._level=z,ie._strategy=G,U&&U())})}else l.nextTick(U)},V.prototype.reset=function(){return h(this._handle,"zlib binding closed"),this._handle.reset()},V.prototype._flush=function(z){this._transform(s.alloc(0),"",z)},V.prototype.flush=function(z,G){var U=this,ie=this._writableState;(typeof z=="function"||z===void 0&&!G)&&(G=z,z=b.Z_FULL_FLUSH),ie.ended?G&&l.nextTick(G):ie.ending?G&&this.once("end",G):ie.needDrain?G&&this.once("drain",function(){return U.flush(z,G)}):(this._flushFlag=z,this.write(s.alloc(0),"",G))},V.prototype.close=function(z){J(this,z),l.nextTick(B,this)};function J(z,G){G&&l.nextTick(G),z._handle&&(z._handle.close(),z._handle=null)}function B(z){z.emit("close")}V.prototype._transform=function(z,G,U){var ie,oe=this._writableState,ae=oe.ending||oe.ended,W=ae&&(!z||oe.length===z.length);if(z!==null&&!s.isBuffer(z))return U(new Error("invalid input"));if(!this._handle)return U(new Error("zlib binding closed"));W?ie=this._finishFlushFlag:(ie=this._flushFlag,z.length>=oe.length&&(this._flushFlag=this._opts.flush||b.Z_NO_FLUSH)),this._processChunk(z,ie,U)},V.prototype._processChunk=function(z,G,U){var ie=z&&z.length,oe=this._chunkSize-this._offset,ae=0,W=this,ee=typeof U=="function";if(!ee){var _=[],re=0,fe;this.on("error",function(q){fe=q}),h(this._handle,"zlib binding closed");do var pe=this._handle.writeSync(G,z,ae,ie,this._buffer,this._offset,oe);while(!this._hadError&&ce(pe[0],pe[1]));if(this._hadError)throw fe;if(re>=u)throw J(this),new RangeError(o);var he=s.concat(_,re);return J(this),he}h(this._handle,"zlib binding closed");var se=this._handle.write(G,z,ae,ie,this._buffer,this._offset,oe);se.buffer=z,se.callback=ce;function ce(q,K){if(this&&(this.buffer=null,this.callback=null),!W._hadError){var Y=oe-K;if(h(Y>=0,"have should not go down"),Y>0){var $=W._buffer.slice(W._offset,W._offset+Y);W._offset+=Y,ee?W.push($):(_.push($),re+=$.length)}if((K===0||W._offset>=W._chunkSize)&&(oe=W._chunkSize,W._offset=0,W._buffer=s.allocUnsafe(W._chunkSize)),K===0){if(ae+=ie-q,ie=q,!ee)return!0;var te=W._handle.write(G,z,ae,ie,W._buffer,W._offset,W._chunkSize);te.callback=ce,te.buffer=z;return}if(!ee)return!1;U()}}},c.inherits(k,V),c.inherits(N,V),c.inherits(E,V),c.inherits(S,V),c.inherits(R,V),c.inherits(M,V),c.inherits(j,V)}).call(this,r("_process"))},{"./binding":34,_process:133,assert:25,buffer:48,stream:155,util:186}],36:[function(r,d,a){var l=typeof Uint8Array!="undefined"&&typeof Uint16Array!="undefined"&&typeof Int32Array!="undefined";function s(c,h){return Object.prototype.hasOwnProperty.call(c,h)}a.assign=function(c){for(var h=Array.prototype.slice.call(arguments,1);h.length;){var u=h.shift();if(!!u){if(typeof u!="object")throw new TypeError(u+"must be non-object");for(var o in u)s(u,o)&&(c[o]=u[o])}}return c},a.shrinkBuf=function(c,h){return c.length===h?c:c.subarray?c.subarray(0,h):(c.length=h,c)};var g={arraySet:function(c,h,u,o,n){if(h.subarray&&c.subarray){c.set(h.subarray(u,u+o),n);return}for(var m=0;m<o;m++)c[n+m]=h[u+m]},flattenChunks:function(c){var h,u,o,n,m,y;for(o=0,h=0,u=c.length;h<u;h++)o+=c[h].length;for(y=new Uint8Array(o),n=0,h=0,u=c.length;h<u;h++)m=c[h],y.set(m,n),n+=m.length;return y}},b={arraySet:function(c,h,u,o,n){for(var m=0;m<o;m++)c[n+m]=h[u+m]},flattenChunks:function(c){return[].concat.apply([],c)}};a.setTyped=function(c){c?(a.Buf8=Uint8Array,a.Buf16=Uint16Array,a.Buf32=Int32Array,a.assign(a,g)):(a.Buf8=Array,a.Buf16=Array,a.Buf32=Array,a.assign(a,b))},a.setTyped(l)},{}],37:[function(r,d,a){function l(s,g,b,c){for(var h=s&65535|0,u=s>>>16&65535|0,o=0;b!==0;){o=b>2e3?2e3:b,b-=o;do h=h+g[c++]|0,u=u+h|0;while(--o);h%=65521,u%=65521}return h|u<<16|0}d.exports=l},{}],38:[function(r,d,a){d.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],39:[function(r,d,a){function l(){for(var b,c=[],h=0;h<256;h++){b=h;for(var u=0;u<8;u++)b=b&1?3988292384^b>>>1:b>>>1;c[h]=b}return c}var s=l();function g(b,c,h,u){var o=s,n=u+h;b^=-1;for(var m=u;m<n;m++)b=b>>>8^o[(b^c[m])&255];return b^-1}d.exports=g},{}],40:[function(r,d,a){var l=r("../utils/common"),s=r("./trees"),g=r("./adler32"),b=r("./crc32"),c=r("./messages"),h=0,u=1,o=3,n=4,m=5,y=0,f=1,v=-2,p=-3,w=-5,A=-1,x=1,k=2,N=3,E=4,S=0,R=2,M=8,j=9,O=15,V=8,J=29,B=256,z=B+1+J,G=30,U=19,ie=2*z+1,oe=15,ae=3,W=258,ee=W+ae+1,_=32,re=42,fe=69,pe=73,he=91,se=103,ce=113,q=666,K=1,Y=2,$=3,te=4,L=3;function T(P,de){return P.msg=c[de],de}function F(P){return(P<<1)-(P>4?9:0)}function X(P){for(var de=P.length;--de>=0;)P[de]=0}function H(P){var de=P.state,we=de.pending;we>P.avail_out&&(we=P.avail_out),we!==0&&(l.arraySet(P.output,de.pending_buf,de.pending_out,we,P.next_out),P.next_out+=we,de.pending_out+=we,P.total_out+=we,P.avail_out-=we,de.pending-=we,de.pending===0&&(de.pending_out=0))}function I(P,de){s._tr_flush_block(P,P.block_start>=0?P.block_start:-1,P.strstart-P.block_start,de),P.block_start=P.strstart,H(P.strm)}function C(P,de){P.pending_buf[P.pending++]=de}function Q(P,de){P.pending_buf[P.pending++]=de>>>8&255,P.pending_buf[P.pending++]=de&255}function le(P,de,we,D){var ue=P.avail_in;return ue>D&&(ue=D),ue===0?0:(P.avail_in-=ue,l.arraySet(de,P.input,P.next_in,ue,we),P.state.wrap===1?P.adler=g(P.adler,de,ue,we):P.state.wrap===2&&(P.adler=b(P.adler,de,ue,we)),P.next_in+=ue,P.total_in+=ue,ue)}function ge(P,de){var we=P.max_chain_length,D=P.strstart,ue,Ae,Re=P.prev_length,Ce=P.nice_match,ze=P.strstart>P.w_size-ee?P.strstart-(P.w_size-ee):0,Ge=P.window,xt=P.w_mask,it=P.prev,Qe=P.strstart+W,lt=Ge[D+Re-1],ct=Ge[D+Re];P.prev_length>=P.good_match&&(we>>=2),Ce>P.lookahead&&(Ce=P.lookahead);do if(ue=de,!(Ge[ue+Re]!==ct||Ge[ue+Re-1]!==lt||Ge[ue]!==Ge[D]||Ge[++ue]!==Ge[D+1])){D+=2,ue++;do;while(Ge[++D]===Ge[++ue]&&Ge[++D]===Ge[++ue]&&Ge[++D]===Ge[++ue]&&Ge[++D]===Ge[++ue]&&Ge[++D]===Ge[++ue]&&Ge[++D]===Ge[++ue]&&Ge[++D]===Ge[++ue]&&Ge[++D]===Ge[++ue]&&D<Qe);if(Ae=W-(Qe-D),D=Qe-W,Ae>Re){if(P.match_start=de,Re=Ae,Ae>=Ce)break;lt=Ge[D+Re-1],ct=Ge[D+Re]}}while((de=it[de&xt])>ze&&--we!==0);return Re<=P.lookahead?Re:P.lookahead}function ye(P){var de=P.w_size,we,D,ue,Ae,Re;do{if(Ae=P.window_size-P.lookahead-P.strstart,P.strstart>=de+(de-ee)){l.arraySet(P.window,P.window,de,de,0),P.match_start-=de,P.strstart-=de,P.block_start-=de,D=P.hash_size,we=D;do ue=P.head[--we],P.head[we]=ue>=de?ue-de:0;while(--D);D=de,we=D;do ue=P.prev[--we],P.prev[we]=ue>=de?ue-de:0;while(--D);Ae+=de}if(P.strm.avail_in===0)break;if(D=le(P.strm,P.window,P.strstart+P.lookahead,Ae),P.lookahead+=D,P.lookahead+P.insert>=ae)for(Re=P.strstart-P.insert,P.ins_h=P.window[Re],P.ins_h=(P.ins_h<<P.hash_shift^P.window[Re+1])&P.hash_mask;P.insert&&(P.ins_h=(P.ins_h<<P.hash_shift^P.window[Re+ae-1])&P.hash_mask,P.prev[Re&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=Re,Re++,P.insert--,!(P.lookahead+P.insert<ae)););}while(P.lookahead<ee&&P.strm.avail_in!==0)}function Ne(P,de){var we=65535;for(we>P.pending_buf_size-5&&(we=P.pending_buf_size-5);;){if(P.lookahead<=1){if(ye(P),P.lookahead===0&&de===h)return K;if(P.lookahead===0)break}P.strstart+=P.lookahead,P.lookahead=0;var D=P.block_start+we;if((P.strstart===0||P.strstart>=D)&&(P.lookahead=P.strstart-D,P.strstart=D,I(P,!1),P.strm.avail_out===0)||P.strstart-P.block_start>=P.w_size-ee&&(I(P,!1),P.strm.avail_out===0))return K}return P.insert=0,de===n?(I(P,!0),P.strm.avail_out===0?$:te):(P.strstart>P.block_start&&(I(P,!1),P.strm.avail_out===0),K)}function Se(P,de){for(var we,D;;){if(P.lookahead<ee){if(ye(P),P.lookahead<ee&&de===h)return K;if(P.lookahead===0)break}if(we=0,P.lookahead>=ae&&(P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+ae-1])&P.hash_mask,we=P.prev[P.strstart&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=P.strstart),we!==0&&P.strstart-we<=P.w_size-ee&&(P.match_length=ge(P,we)),P.match_length>=ae)if(D=s._tr_tally(P,P.strstart-P.match_start,P.match_length-ae),P.lookahead-=P.match_length,P.match_length<=P.max_lazy_match&&P.lookahead>=ae){P.match_length--;do P.strstart++,P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+ae-1])&P.hash_mask,we=P.prev[P.strstart&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=P.strstart;while(--P.match_length!==0);P.strstart++}else P.strstart+=P.match_length,P.match_length=0,P.ins_h=P.window[P.strstart],P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+1])&P.hash_mask;else D=s._tr_tally(P,0,P.window[P.strstart]),P.lookahead--,P.strstart++;if(D&&(I(P,!1),P.strm.avail_out===0))return K}return P.insert=P.strstart<ae-1?P.strstart:ae-1,de===n?(I(P,!0),P.strm.avail_out===0?$:te):P.last_lit&&(I(P,!1),P.strm.avail_out===0)?K:Y}function Ie(P,de){for(var we,D,ue;;){if(P.lookahead<ee){if(ye(P),P.lookahead<ee&&de===h)return K;if(P.lookahead===0)break}if(we=0,P.lookahead>=ae&&(P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+ae-1])&P.hash_mask,we=P.prev[P.strstart&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=P.strstart),P.prev_length=P.match_length,P.prev_match=P.match_start,P.match_length=ae-1,we!==0&&P.prev_length<P.max_lazy_match&&P.strstart-we<=P.w_size-ee&&(P.match_length=ge(P,we),P.match_length<=5&&(P.strategy===x||P.match_length===ae&&P.strstart-P.match_start>4096)&&(P.match_length=ae-1)),P.prev_length>=ae&&P.match_length<=P.prev_length){ue=P.strstart+P.lookahead-ae,D=s._tr_tally(P,P.strstart-1-P.prev_match,P.prev_length-ae),P.lookahead-=P.prev_length-1,P.prev_length-=2;do++P.strstart<=ue&&(P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+ae-1])&P.hash_mask,we=P.prev[P.strstart&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=P.strstart);while(--P.prev_length!==0);if(P.match_available=0,P.match_length=ae-1,P.strstart++,D&&(I(P,!1),P.strm.avail_out===0))return K}else if(P.match_available){if(D=s._tr_tally(P,0,P.window[P.strstart-1]),D&&I(P,!1),P.strstart++,P.lookahead--,P.strm.avail_out===0)return K}else P.match_available=1,P.strstart++,P.lookahead--}return P.match_available&&(D=s._tr_tally(P,0,P.window[P.strstart-1]),P.match_available=0),P.insert=P.strstart<ae-1?P.strstart:ae-1,de===n?(I(P,!0),P.strm.avail_out===0?$:te):P.last_lit&&(I(P,!1),P.strm.avail_out===0)?K:Y}function Oe(P,de){for(var we,D,ue,Ae,Re=P.window;;){if(P.lookahead<=W){if(ye(P),P.lookahead<=W&&de===h)return K;if(P.lookahead===0)break}if(P.match_length=0,P.lookahead>=ae&&P.strstart>0&&(ue=P.strstart-1,D=Re[ue],D===Re[++ue]&&D===Re[++ue]&&D===Re[++ue])){Ae=P.strstart+W;do;while(D===Re[++ue]&&D===Re[++ue]&&D===Re[++ue]&&D===Re[++ue]&&D===Re[++ue]&&D===Re[++ue]&&D===Re[++ue]&&D===Re[++ue]&&ue<Ae);P.match_length=W-(Ae-ue),P.match_length>P.lookahead&&(P.match_length=P.lookahead)}if(P.match_length>=ae?(we=s._tr_tally(P,1,P.match_length-ae),P.lookahead-=P.match_length,P.strstart+=P.match_length,P.match_length=0):(we=s._tr_tally(P,0,P.window[P.strstart]),P.lookahead--,P.strstart++),we&&(I(P,!1),P.strm.avail_out===0))return K}return P.insert=0,de===n?(I(P,!0),P.strm.avail_out===0?$:te):P.last_lit&&(I(P,!1),P.strm.avail_out===0)?K:Y}function Fe(P,de){for(var we;;){if(P.lookahead===0&&(ye(P),P.lookahead===0)){if(de===h)return K;break}if(P.match_length=0,we=s._tr_tally(P,0,P.window[P.strstart]),P.lookahead--,P.strstart++,we&&(I(P,!1),P.strm.avail_out===0))return K}return P.insert=0,de===n?(I(P,!0),P.strm.avail_out===0?$:te):P.last_lit&&(I(P,!1),P.strm.avail_out===0)?K:Y}function Ee(P,de,we,D,ue){this.good_length=P,this.max_lazy=de,this.nice_length=we,this.max_chain=D,this.func=ue}var Ze;Ze=[new Ee(0,0,0,0,Ne),new Ee(4,4,8,4,Se),new Ee(4,5,16,8,Se),new Ee(4,6,32,32,Se),new Ee(4,4,16,16,Ie),new Ee(8,16,32,32,Ie),new Ee(8,16,128,128,Ie),new Ee(8,32,128,256,Ie),new Ee(32,128,258,1024,Ie),new Ee(32,258,258,4096,Ie)];function Me(P){P.window_size=2*P.w_size,X(P.head),P.max_lazy_match=Ze[P.level].max_lazy,P.good_match=Ze[P.level].good_length,P.nice_match=Ze[P.level].nice_length,P.max_chain_length=Ze[P.level].max_chain,P.strstart=0,P.block_start=0,P.lookahead=0,P.insert=0,P.match_length=P.prev_length=ae-1,P.match_available=0,P.ins_h=0}function Z(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=M,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new l.Buf16(ie*2),this.dyn_dtree=new l.Buf16((2*G+1)*2),this.bl_tree=new l.Buf16((2*U+1)*2),X(this.dyn_ltree),X(this.dyn_dtree),X(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new l.Buf16(oe+1),this.heap=new l.Buf16(2*z+1),X(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new l.Buf16(2*z+1),X(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function ve(P){var de;return!P||!P.state?T(P,v):(P.total_in=P.total_out=0,P.data_type=R,de=P.state,de.pending=0,de.pending_out=0,de.wrap<0&&(de.wrap=-de.wrap),de.status=de.wrap?re:ce,P.adler=de.wrap===2?0:1,de.last_flush=h,s._tr_init(de),y)}function be(P){var de=ve(P);return de===y&&Me(P.state),de}function Pe(P,de){return!P||!P.state||P.state.wrap!==2?v:(P.state.gzhead=de,y)}function me(P,de,we,D,ue,Ae){if(!P)return v;var Re=1;if(de===A&&(de=6),D<0?(Re=0,D=-D):D>15&&(Re=2,D-=16),ue<1||ue>j||we!==M||D<8||D>15||de<0||de>9||Ae<0||Ae>E)return T(P,v);D===8&&(D=9);var Ce=new Z;return P.state=Ce,Ce.strm=P,Ce.wrap=Re,Ce.gzhead=null,Ce.w_bits=D,Ce.w_size=1<<Ce.w_bits,Ce.w_mask=Ce.w_size-1,Ce.hash_bits=ue+7,Ce.hash_size=1<<Ce.hash_bits,Ce.hash_mask=Ce.hash_size-1,Ce.hash_shift=~~((Ce.hash_bits+ae-1)/ae),Ce.window=new l.Buf8(Ce.w_size*2),Ce.head=new l.Buf16(Ce.hash_size),Ce.prev=new l.Buf16(Ce.w_size),Ce.lit_bufsize=1<<ue+6,Ce.pending_buf_size=Ce.lit_bufsize*4,Ce.pending_buf=new l.Buf8(Ce.pending_buf_size),Ce.d_buf=1*Ce.lit_bufsize,Ce.l_buf=(1+2)*Ce.lit_bufsize,Ce.level=de,Ce.strategy=Ae,Ce.method=we,be(P)}function xe(P,de){return me(P,de,M,O,V,S)}function ne(P,de){var we,D,ue,Ae;if(!P||!P.state||de>m||de<0)return P?T(P,v):v;if(D=P.state,!P.output||!P.input&&P.avail_in!==0||D.status===q&&de!==n)return T(P,P.avail_out===0?w:v);if(D.strm=P,we=D.last_flush,D.last_flush=de,D.status===re)if(D.wrap===2)P.adler=0,C(D,31),C(D,139),C(D,8),D.gzhead?(C(D,(D.gzhead.text?1:0)+(D.gzhead.hcrc?2:0)+(D.gzhead.extra?4:0)+(D.gzhead.name?8:0)+(D.gzhead.comment?16:0)),C(D,D.gzhead.time&255),C(D,D.gzhead.time>>8&255),C(D,D.gzhead.time>>16&255),C(D,D.gzhead.time>>24&255),C(D,D.level===9?2:D.strategy>=k||D.level<2?4:0),C(D,D.gzhead.os&255),D.gzhead.extra&&D.gzhead.extra.length&&(C(D,D.gzhead.extra.length&255),C(D,D.gzhead.extra.length>>8&255)),D.gzhead.hcrc&&(P.adler=b(P.adler,D.pending_buf,D.pending,0)),D.gzindex=0,D.status=fe):(C(D,0),C(D,0),C(D,0),C(D,0),C(D,0),C(D,D.level===9?2:D.strategy>=k||D.level<2?4:0),C(D,L),D.status=ce);else{var Re=M+(D.w_bits-8<<4)<<8,Ce=-1;D.strategy>=k||D.level<2?Ce=0:D.level<6?Ce=1:D.level===6?Ce=2:Ce=3,Re|=Ce<<6,D.strstart!==0&&(Re|=_),Re+=31-Re%31,D.status=ce,Q(D,Re),D.strstart!==0&&(Q(D,P.adler>>>16),Q(D,P.adler&65535)),P.adler=1}if(D.status===fe)if(D.gzhead.extra){for(ue=D.pending;D.gzindex<(D.gzhead.extra.length&65535)&&!(D.pending===D.pending_buf_size&&(D.gzhead.hcrc&&D.pending>ue&&(P.adler=b(P.adler,D.pending_buf,D.pending-ue,ue)),H(P),ue=D.pending,D.pending===D.pending_buf_size));)C(D,D.gzhead.extra[D.gzindex]&255),D.gzindex++;D.gzhead.hcrc&&D.pending>ue&&(P.adler=b(P.adler,D.pending_buf,D.pending-ue,ue)),D.gzindex===D.gzhead.extra.length&&(D.gzindex=0,D.status=pe)}else D.status=pe;if(D.status===pe)if(D.gzhead.name){ue=D.pending;do{if(D.pending===D.pending_buf_size&&(D.gzhead.hcrc&&D.pending>ue&&(P.adler=b(P.adler,D.pending_buf,D.pending-ue,ue)),H(P),ue=D.pending,D.pending===D.pending_buf_size)){Ae=1;break}D.gzindex<D.gzhead.name.length?Ae=D.gzhead.name.charCodeAt(D.gzindex++)&255:Ae=0,C(D,Ae)}while(Ae!==0);D.gzhead.hcrc&&D.pending>ue&&(P.adler=b(P.adler,D.pending_buf,D.pending-ue,ue)),Ae===0&&(D.gzindex=0,D.status=he)}else D.status=he;if(D.status===he)if(D.gzhead.comment){ue=D.pending;do{if(D.pending===D.pending_buf_size&&(D.gzhead.hcrc&&D.pending>ue&&(P.adler=b(P.adler,D.pending_buf,D.pending-ue,ue)),H(P),ue=D.pending,D.pending===D.pending_buf_size)){Ae=1;break}D.gzindex<D.gzhead.comment.length?Ae=D.gzhead.comment.charCodeAt(D.gzindex++)&255:Ae=0,C(D,Ae)}while(Ae!==0);D.gzhead.hcrc&&D.pending>ue&&(P.adler=b(P.adler,D.pending_buf,D.pending-ue,ue)),Ae===0&&(D.status=se)}else D.status=se;if(D.status===se&&(D.gzhead.hcrc?(D.pending+2>D.pending_buf_size&&H(P),D.pending+2<=D.pending_buf_size&&(C(D,P.adler&255),C(D,P.adler>>8&255),P.adler=0,D.status=ce)):D.status=ce),D.pending!==0){if(H(P),P.avail_out===0)return D.last_flush=-1,y}else if(P.avail_in===0&&F(de)<=F(we)&&de!==n)return T(P,w);if(D.status===q&&P.avail_in!==0)return T(P,w);if(P.avail_in!==0||D.lookahead!==0||de!==h&&D.status!==q){var ze=D.strategy===k?Fe(D,de):D.strategy===N?Oe(D,de):Ze[D.level].func(D,de);if((ze===$||ze===te)&&(D.status=q),ze===K||ze===$)return P.avail_out===0&&(D.last_flush=-1),y;if(ze===Y&&(de===u?s._tr_align(D):de!==m&&(s._tr_stored_block(D,0,0,!1),de===o&&(X(D.head),D.lookahead===0&&(D.strstart=0,D.block_start=0,D.insert=0))),H(P),P.avail_out===0))return D.last_flush=-1,y}return de!==n?y:D.wrap<=0?f:(D.wrap===2?(C(D,P.adler&255),C(D,P.adler>>8&255),C(D,P.adler>>16&255),C(D,P.adler>>24&255),C(D,P.total_in&255),C(D,P.total_in>>8&255),C(D,P.total_in>>16&255),C(D,P.total_in>>24&255)):(Q(D,P.adler>>>16),Q(D,P.adler&65535)),H(P),D.wrap>0&&(D.wrap=-D.wrap),D.pending!==0?y:f)}function ke(P){var de;return!P||!P.state?v:(de=P.state.status,de!==re&&de!==fe&&de!==pe&&de!==he&&de!==se&&de!==ce&&de!==q?T(P,v):(P.state=null,de===ce?T(P,p):y))}function Be(P,de){var we=de.length,D,ue,Ae,Re,Ce,ze,Ge,xt;if(!P||!P.state||(D=P.state,Re=D.wrap,Re===2||Re===1&&D.status!==re||D.lookahead))return v;for(Re===1&&(P.adler=g(P.adler,de,we,0)),D.wrap=0,we>=D.w_size&&(Re===0&&(X(D.head),D.strstart=0,D.block_start=0,D.insert=0),xt=new l.Buf8(D.w_size),l.arraySet(xt,de,we-D.w_size,D.w_size,0),de=xt,we=D.w_size),Ce=P.avail_in,ze=P.next_in,Ge=P.input,P.avail_in=we,P.next_in=0,P.input=de,ye(D);D.lookahead>=ae;){ue=D.strstart,Ae=D.lookahead-(ae-1);do D.ins_h=(D.ins_h<<D.hash_shift^D.window[ue+ae-1])&D.hash_mask,D.prev[ue&D.w_mask]=D.head[D.ins_h],D.head[D.ins_h]=ue,ue++;while(--Ae);D.strstart=ue,D.lookahead=ae-1,ye(D)}return D.strstart+=D.lookahead,D.block_start=D.strstart,D.insert=D.lookahead,D.lookahead=0,D.match_length=D.prev_length=ae-1,D.match_available=0,P.next_in=ze,P.input=Ge,P.avail_in=Ce,D.wrap=Re,y}a.deflateInit=xe,a.deflateInit2=me,a.deflateReset=be,a.deflateResetKeep=ve,a.deflateSetHeader=Pe,a.deflate=ne,a.deflateEnd=ke,a.deflateSetDictionary=Be,a.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":36,"./adler32":37,"./crc32":39,"./messages":44,"./trees":45}],41:[function(r,d,a){var l=30,s=12;d.exports=function(b,c){var h,u,o,n,m,y,f,v,p,w,A,x,k,N,E,S,R,M,j,O,V,J,B,z,G;h=b.state,u=b.next_in,z=b.input,o=u+(b.avail_in-5),n=b.next_out,G=b.output,m=n-(c-b.avail_out),y=n+(b.avail_out-257),f=h.dmax,v=h.wsize,p=h.whave,w=h.wnext,A=h.window,x=h.hold,k=h.bits,N=h.lencode,E=h.distcode,S=(1<<h.lenbits)-1,R=(1<<h.distbits)-1;e:do{k<15&&(x+=z[u++]<<k,k+=8,x+=z[u++]<<k,k+=8),M=N[x&S];t:for(;;){if(j=M>>>24,x>>>=j,k-=j,j=M>>>16&255,j===0)G[n++]=M&65535;else if(j&16){O=M&65535,j&=15,j&&(k<j&&(x+=z[u++]<<k,k+=8),O+=x&(1<<j)-1,x>>>=j,k-=j),k<15&&(x+=z[u++]<<k,k+=8,x+=z[u++]<<k,k+=8),M=E[x&R];r:for(;;){if(j=M>>>24,x>>>=j,k-=j,j=M>>>16&255,j&16){if(V=M&65535,j&=15,k<j&&(x+=z[u++]<<k,k+=8,k<j&&(x+=z[u++]<<k,k+=8)),V+=x&(1<<j)-1,V>f){b.msg="invalid distance too far back",h.mode=l;break e}if(x>>>=j,k-=j,j=n-m,V>j){if(j=V-j,j>p&&h.sane){b.msg="invalid distance too far back",h.mode=l;break e}if(J=0,B=A,w===0){if(J+=v-j,j<O){O-=j;do G[n++]=A[J++];while(--j);J=n-V,B=G}}else if(w<j){if(J+=v+w-j,j-=w,j<O){O-=j;do G[n++]=A[J++];while(--j);if(J=0,w<O){j=w,O-=j;do G[n++]=A[J++];while(--j);J=n-V,B=G}}}else if(J+=w-j,j<O){O-=j;do G[n++]=A[J++];while(--j);J=n-V,B=G}for(;O>2;)G[n++]=B[J++],G[n++]=B[J++],G[n++]=B[J++],O-=3;O&&(G[n++]=B[J++],O>1&&(G[n++]=B[J++]))}else{J=n-V;do G[n++]=G[J++],G[n++]=G[J++],G[n++]=G[J++],O-=3;while(O>2);O&&(G[n++]=G[J++],O>1&&(G[n++]=G[J++]))}}else if((j&64)===0){M=E[(M&65535)+(x&(1<<j)-1)];continue r}else{b.msg="invalid distance code",h.mode=l;break e}break}}else if((j&64)===0){M=N[(M&65535)+(x&(1<<j)-1)];continue t}else if(j&32){h.mode=s;break e}else{b.msg="invalid literal/length code",h.mode=l;break e}break}}while(u<o&&n<y);O=k>>3,u-=O,k-=O<<3,x&=(1<<k)-1,b.next_in=u,b.next_out=n,b.avail_in=u<o?5+(o-u):5-(u-o),b.avail_out=n<y?257+(y-n):257-(n-y),h.hold=x,h.bits=k}},{}],42:[function(r,d,a){var l=r("../utils/common"),s=r("./adler32"),g=r("./crc32"),b=r("./inffast"),c=r("./inftrees"),h=0,u=1,o=2,n=4,m=5,y=6,f=0,v=1,p=2,w=-2,A=-3,x=-4,k=-5,N=8,E=1,S=2,R=3,M=4,j=5,O=6,V=7,J=8,B=9,z=10,G=11,U=12,ie=13,oe=14,ae=15,W=16,ee=17,_=18,re=19,fe=20,pe=21,he=22,se=23,ce=24,q=25,K=26,Y=27,$=28,te=29,L=30,T=31,F=32,X=852,H=592,I=15,C=I;function Q(me){return(me>>>24&255)+(me>>>8&65280)+((me&65280)<<8)+((me&255)<<24)}function le(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new l.Buf16(320),this.work=new l.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function ge(me){var xe;return!me||!me.state?w:(xe=me.state,me.total_in=me.total_out=xe.total=0,me.msg="",xe.wrap&&(me.adler=xe.wrap&1),xe.mode=E,xe.last=0,xe.havedict=0,xe.dmax=32768,xe.head=null,xe.hold=0,xe.bits=0,xe.lencode=xe.lendyn=new l.Buf32(X),xe.distcode=xe.distdyn=new l.Buf32(H),xe.sane=1,xe.back=-1,f)}function ye(me){var xe;return!me||!me.state?w:(xe=me.state,xe.wsize=0,xe.whave=0,xe.wnext=0,ge(me))}function Ne(me,xe){var ne,ke;return!me||!me.state||(ke=me.state,xe<0?(ne=0,xe=-xe):(ne=(xe>>4)+1,xe<48&&(xe&=15)),xe&&(xe<8||xe>15))?w:(ke.window!==null&&ke.wbits!==xe&&(ke.window=null),ke.wrap=ne,ke.wbits=xe,ye(me))}function Se(me,xe){var ne,ke;return me?(ke=new le,me.state=ke,ke.window=null,ne=Ne(me,xe),ne!==f&&(me.state=null),ne):w}function Ie(me){return Se(me,C)}var Oe=!0,Fe,Ee;function Ze(me){if(Oe){var xe;for(Fe=new l.Buf32(512),Ee=new l.Buf32(32),xe=0;xe<144;)me.lens[xe++]=8;for(;xe<256;)me.lens[xe++]=9;for(;xe<280;)me.lens[xe++]=7;for(;xe<288;)me.lens[xe++]=8;for(c(u,me.lens,0,288,Fe,0,me.work,{bits:9}),xe=0;xe<32;)me.lens[xe++]=5;c(o,me.lens,0,32,Ee,0,me.work,{bits:5}),Oe=!1}me.lencode=Fe,me.lenbits=9,me.distcode=Ee,me.distbits=5}function Me(me,xe,ne,ke){var Be,P=me.state;return P.window===null&&(P.wsize=1<<P.wbits,P.wnext=0,P.whave=0,P.window=new l.Buf8(P.wsize)),ke>=P.wsize?(l.arraySet(P.window,xe,ne-P.wsize,P.wsize,0),P.wnext=0,P.whave=P.wsize):(Be=P.wsize-P.wnext,Be>ke&&(Be=ke),l.arraySet(P.window,xe,ne-ke,Be,P.wnext),ke-=Be,ke?(l.arraySet(P.window,xe,ne-ke,ke,0),P.wnext=ke,P.whave=P.wsize):(P.wnext+=Be,P.wnext===P.wsize&&(P.wnext=0),P.whave<P.wsize&&(P.whave+=Be))),0}function Z(me,xe){var ne,ke,Be,P,de,we,D,ue,Ae,Re,Ce,ze,Ge,xt,it=0,Qe,lt,ct,Et,Lr,Yr,ht,At,pt=new l.Buf8(4),Gt,Mt,jn=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!me||!me.state||!me.output||!me.input&&me.avail_in!==0)return w;ne=me.state,ne.mode===U&&(ne.mode=ie),de=me.next_out,Be=me.output,D=me.avail_out,P=me.next_in,ke=me.input,we=me.avail_in,ue=ne.hold,Ae=ne.bits,Re=we,Ce=D,At=f;e:for(;;)switch(ne.mode){case E:if(ne.wrap===0){ne.mode=ie;break}for(;Ae<16;){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}if(ne.wrap&2&&ue===35615){ne.check=0,pt[0]=ue&255,pt[1]=ue>>>8&255,ne.check=g(ne.check,pt,2,0),ue=0,Ae=0,ne.mode=S;break}if(ne.flags=0,ne.head&&(ne.head.done=!1),!(ne.wrap&1)||(((ue&255)<<8)+(ue>>8))%31){me.msg="incorrect header check",ne.mode=L;break}if((ue&15)!==N){me.msg="unknown compression method",ne.mode=L;break}if(ue>>>=4,Ae-=4,ht=(ue&15)+8,ne.wbits===0)ne.wbits=ht;else if(ht>ne.wbits){me.msg="invalid window size",ne.mode=L;break}ne.dmax=1<<ht,me.adler=ne.check=1,ne.mode=ue&512?z:U,ue=0,Ae=0;break;case S:for(;Ae<16;){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}if(ne.flags=ue,(ne.flags&255)!==N){me.msg="unknown compression method",ne.mode=L;break}if(ne.flags&57344){me.msg="unknown header flags set",ne.mode=L;break}ne.head&&(ne.head.text=ue>>8&1),ne.flags&512&&(pt[0]=ue&255,pt[1]=ue>>>8&255,ne.check=g(ne.check,pt,2,0)),ue=0,Ae=0,ne.mode=R;case R:for(;Ae<32;){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}ne.head&&(ne.head.time=ue),ne.flags&512&&(pt[0]=ue&255,pt[1]=ue>>>8&255,pt[2]=ue>>>16&255,pt[3]=ue>>>24&255,ne.check=g(ne.check,pt,4,0)),ue=0,Ae=0,ne.mode=M;case M:for(;Ae<16;){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}ne.head&&(ne.head.xflags=ue&255,ne.head.os=ue>>8),ne.flags&512&&(pt[0]=ue&255,pt[1]=ue>>>8&255,ne.check=g(ne.check,pt,2,0)),ue=0,Ae=0,ne.mode=j;case j:if(ne.flags&1024){for(;Ae<16;){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}ne.length=ue,ne.head&&(ne.head.extra_len=ue),ne.flags&512&&(pt[0]=ue&255,pt[1]=ue>>>8&255,ne.check=g(ne.check,pt,2,0)),ue=0,Ae=0}else ne.head&&(ne.head.extra=null);ne.mode=O;case O:if(ne.flags&1024&&(ze=ne.length,ze>we&&(ze=we),ze&&(ne.head&&(ht=ne.head.extra_len-ne.length,ne.head.extra||(ne.head.extra=new Array(ne.head.extra_len)),l.arraySet(ne.head.extra,ke,P,ze,ht)),ne.flags&512&&(ne.check=g(ne.check,ke,ze,P)),we-=ze,P+=ze,ne.length-=ze),ne.length))break e;ne.length=0,ne.mode=V;case V:if(ne.flags&2048){if(we===0)break e;ze=0;do ht=ke[P+ze++],ne.head&&ht&&ne.length<65536&&(ne.head.name+=String.fromCharCode(ht));while(ht&&ze<we);if(ne.flags&512&&(ne.check=g(ne.check,ke,ze,P)),we-=ze,P+=ze,ht)break e}else ne.head&&(ne.head.name=null);ne.length=0,ne.mode=J;case J:if(ne.flags&4096){if(we===0)break e;ze=0;do ht=ke[P+ze++],ne.head&&ht&&ne.length<65536&&(ne.head.comment+=String.fromCharCode(ht));while(ht&&ze<we);if(ne.flags&512&&(ne.check=g(ne.check,ke,ze,P)),we-=ze,P+=ze,ht)break e}else ne.head&&(ne.head.comment=null);ne.mode=B;case B:if(ne.flags&512){for(;Ae<16;){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}if(ue!==(ne.check&65535)){me.msg="header crc mismatch",ne.mode=L;break}ue=0,Ae=0}ne.head&&(ne.head.hcrc=ne.flags>>9&1,ne.head.done=!0),me.adler=ne.check=0,ne.mode=U;break;case z:for(;Ae<32;){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}me.adler=ne.check=Q(ue),ue=0,Ae=0,ne.mode=G;case G:if(ne.havedict===0)return me.next_out=de,me.avail_out=D,me.next_in=P,me.avail_in=we,ne.hold=ue,ne.bits=Ae,p;me.adler=ne.check=1,ne.mode=U;case U:if(xe===m||xe===y)break e;case ie:if(ne.last){ue>>>=Ae&7,Ae-=Ae&7,ne.mode=Y;break}for(;Ae<3;){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}switch(ne.last=ue&1,ue>>>=1,Ae-=1,ue&3){case 0:ne.mode=oe;break;case 1:if(Ze(ne),ne.mode=fe,xe===y){ue>>>=2,Ae-=2;break e}break;case 2:ne.mode=ee;break;case 3:me.msg="invalid block type",ne.mode=L}ue>>>=2,Ae-=2;break;case oe:for(ue>>>=Ae&7,Ae-=Ae&7;Ae<32;){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}if((ue&65535)!==(ue>>>16^65535)){me.msg="invalid stored block lengths",ne.mode=L;break}if(ne.length=ue&65535,ue=0,Ae=0,ne.mode=ae,xe===y)break e;case ae:ne.mode=W;case W:if(ze=ne.length,ze){if(ze>we&&(ze=we),ze>D&&(ze=D),ze===0)break e;l.arraySet(Be,ke,P,ze,de),we-=ze,P+=ze,D-=ze,de+=ze,ne.length-=ze;break}ne.mode=U;break;case ee:for(;Ae<14;){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}if(ne.nlen=(ue&31)+257,ue>>>=5,Ae-=5,ne.ndist=(ue&31)+1,ue>>>=5,Ae-=5,ne.ncode=(ue&15)+4,ue>>>=4,Ae-=4,ne.nlen>286||ne.ndist>30){me.msg="too many length or distance symbols",ne.mode=L;break}ne.have=0,ne.mode=_;case _:for(;ne.have<ne.ncode;){for(;Ae<3;){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}ne.lens[jn[ne.have++]]=ue&7,ue>>>=3,Ae-=3}for(;ne.have<19;)ne.lens[jn[ne.have++]]=0;if(ne.lencode=ne.lendyn,ne.lenbits=7,Gt={bits:ne.lenbits},At=c(h,ne.lens,0,19,ne.lencode,0,ne.work,Gt),ne.lenbits=Gt.bits,At){me.msg="invalid code lengths set",ne.mode=L;break}ne.have=0,ne.mode=re;case re:for(;ne.have<ne.nlen+ne.ndist;){for(;it=ne.lencode[ue&(1<<ne.lenbits)-1],Qe=it>>>24,lt=it>>>16&255,ct=it&65535,!(Qe<=Ae);){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}if(ct<16)ue>>>=Qe,Ae-=Qe,ne.lens[ne.have++]=ct;else{if(ct===16){for(Mt=Qe+2;Ae<Mt;){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}if(ue>>>=Qe,Ae-=Qe,ne.have===0){me.msg="invalid bit length repeat",ne.mode=L;break}ht=ne.lens[ne.have-1],ze=3+(ue&3),ue>>>=2,Ae-=2}else if(ct===17){for(Mt=Qe+3;Ae<Mt;){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}ue>>>=Qe,Ae-=Qe,ht=0,ze=3+(ue&7),ue>>>=3,Ae-=3}else{for(Mt=Qe+7;Ae<Mt;){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}ue>>>=Qe,Ae-=Qe,ht=0,ze=11+(ue&127),ue>>>=7,Ae-=7}if(ne.have+ze>ne.nlen+ne.ndist){me.msg="invalid bit length repeat",ne.mode=L;break}for(;ze--;)ne.lens[ne.have++]=ht}}if(ne.mode===L)break;if(ne.lens[256]===0){me.msg="invalid code -- missing end-of-block",ne.mode=L;break}if(ne.lenbits=9,Gt={bits:ne.lenbits},At=c(u,ne.lens,0,ne.nlen,ne.lencode,0,ne.work,Gt),ne.lenbits=Gt.bits,At){me.msg="invalid literal/lengths set",ne.mode=L;break}if(ne.distbits=6,ne.distcode=ne.distdyn,Gt={bits:ne.distbits},At=c(o,ne.lens,ne.nlen,ne.ndist,ne.distcode,0,ne.work,Gt),ne.distbits=Gt.bits,At){me.msg="invalid distances set",ne.mode=L;break}if(ne.mode=fe,xe===y)break e;case fe:ne.mode=pe;case pe:if(we>=6&&D>=258){me.next_out=de,me.avail_out=D,me.next_in=P,me.avail_in=we,ne.hold=ue,ne.bits=Ae,b(me,Ce),de=me.next_out,Be=me.output,D=me.avail_out,P=me.next_in,ke=me.input,we=me.avail_in,ue=ne.hold,Ae=ne.bits,ne.mode===U&&(ne.back=-1);break}for(ne.back=0;it=ne.lencode[ue&(1<<ne.lenbits)-1],Qe=it>>>24,lt=it>>>16&255,ct=it&65535,!(Qe<=Ae);){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}if(lt&&(lt&240)===0){for(Et=Qe,Lr=lt,Yr=ct;it=ne.lencode[Yr+((ue&(1<<Et+Lr)-1)>>Et)],Qe=it>>>24,lt=it>>>16&255,ct=it&65535,!(Et+Qe<=Ae);){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}ue>>>=Et,Ae-=Et,ne.back+=Et}if(ue>>>=Qe,Ae-=Qe,ne.back+=Qe,ne.length=ct,lt===0){ne.mode=K;break}if(lt&32){ne.back=-1,ne.mode=U;break}if(lt&64){me.msg="invalid literal/length code",ne.mode=L;break}ne.extra=lt&15,ne.mode=he;case he:if(ne.extra){for(Mt=ne.extra;Ae<Mt;){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}ne.length+=ue&(1<<ne.extra)-1,ue>>>=ne.extra,Ae-=ne.extra,ne.back+=ne.extra}ne.was=ne.length,ne.mode=se;case se:for(;it=ne.distcode[ue&(1<<ne.distbits)-1],Qe=it>>>24,lt=it>>>16&255,ct=it&65535,!(Qe<=Ae);){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}if((lt&240)===0){for(Et=Qe,Lr=lt,Yr=ct;it=ne.distcode[Yr+((ue&(1<<Et+Lr)-1)>>Et)],Qe=it>>>24,lt=it>>>16&255,ct=it&65535,!(Et+Qe<=Ae);){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}ue>>>=Et,Ae-=Et,ne.back+=Et}if(ue>>>=Qe,Ae-=Qe,ne.back+=Qe,lt&64){me.msg="invalid distance code",ne.mode=L;break}ne.offset=ct,ne.extra=lt&15,ne.mode=ce;case ce:if(ne.extra){for(Mt=ne.extra;Ae<Mt;){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}ne.offset+=ue&(1<<ne.extra)-1,ue>>>=ne.extra,Ae-=ne.extra,ne.back+=ne.extra}if(ne.offset>ne.dmax){me.msg="invalid distance too far back",ne.mode=L;break}ne.mode=q;case q:if(D===0)break e;if(ze=Ce-D,ne.offset>ze){if(ze=ne.offset-ze,ze>ne.whave&&ne.sane){me.msg="invalid distance too far back",ne.mode=L;break}ze>ne.wnext?(ze-=ne.wnext,Ge=ne.wsize-ze):Ge=ne.wnext-ze,ze>ne.length&&(ze=ne.length),xt=ne.window}else xt=Be,Ge=de-ne.offset,ze=ne.length;ze>D&&(ze=D),D-=ze,ne.length-=ze;do Be[de++]=xt[Ge++];while(--ze);ne.length===0&&(ne.mode=pe);break;case K:if(D===0)break e;Be[de++]=ne.length,D--,ne.mode=pe;break;case Y:if(ne.wrap){for(;Ae<32;){if(we===0)break e;we--,ue|=ke[P++]<<Ae,Ae+=8}if(Ce-=D,me.total_out+=Ce,ne.total+=Ce,Ce&&(me.adler=ne.check=ne.flags?g(ne.check,Be,Ce,de-Ce):s(ne.check,Be,Ce,de-Ce)),Ce=D,(ne.flags?ue:Q(ue))!==ne.check){me.msg="incorrect data check",ne.mode=L;break}ue=0,Ae=0}ne.mode=$;case $:if(ne.wrap&&ne.flags){for(;Ae<32;){if(we===0)break e;we--,ue+=ke[P++]<<Ae,Ae+=8}if(ue!==(ne.total&4294967295)){me.msg="incorrect length check",ne.mode=L;break}ue=0,Ae=0}ne.mode=te;case te:At=v;break e;case L:At=A;break e;case T:return x;case F:default:return w}return me.next_out=de,me.avail_out=D,me.next_in=P,me.avail_in=we,ne.hold=ue,ne.bits=Ae,(ne.wsize||Ce!==me.avail_out&&ne.mode<L&&(ne.mode<Y||xe!==n))&&Me(me,me.output,me.next_out,Ce-me.avail_out),Re-=me.avail_in,Ce-=me.avail_out,me.total_in+=Re,me.total_out+=Ce,ne.total+=Ce,ne.wrap&&Ce&&(me.adler=ne.check=ne.flags?g(ne.check,Be,Ce,me.next_out-Ce):s(ne.check,Be,Ce,me.next_out-Ce)),me.data_type=ne.bits+(ne.last?64:0)+(ne.mode===U?128:0)+(ne.mode===fe||ne.mode===ae?256:0),(Re===0&&Ce===0||xe===n)&&At===f&&(At=k),At}function ve(me){if(!me||!me.state)return w;var xe=me.state;return xe.window&&(xe.window=null),me.state=null,f}function be(me,xe){var ne;return!me||!me.state||(ne=me.state,(ne.wrap&2)===0)?w:(ne.head=xe,xe.done=!1,f)}function Pe(me,xe){var ne=xe.length,ke,Be,P;return!me||!me.state||(ke=me.state,ke.wrap!==0&&ke.mode!==G)?w:ke.mode===G&&(Be=1,Be=s(Be,xe,ne,0),Be!==ke.check)?A:(P=Me(me,xe,ne,ne),P?(ke.mode=T,x):(ke.havedict=1,f))}a.inflateReset=ye,a.inflateReset2=Ne,a.inflateResetKeep=ge,a.inflateInit=Ie,a.inflateInit2=Se,a.inflate=Z,a.inflateEnd=ve,a.inflateGetHeader=be,a.inflateSetDictionary=Pe,a.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":36,"./adler32":37,"./crc32":39,"./inffast":41,"./inftrees":43}],43:[function(r,d,a){var l=r("../utils/common"),s=15,g=852,b=592,c=0,h=1,u=2,o=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],n=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],y=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];d.exports=function(v,p,w,A,x,k,N,E){var S=E.bits,R=0,M=0,j=0,O=0,V=0,J=0,B=0,z=0,G=0,U=0,ie,oe,ae,W,ee,_=null,re=0,fe,pe=new l.Buf16(s+1),he=new l.Buf16(s+1),se=null,ce=0,q,K,Y;for(R=0;R<=s;R++)pe[R]=0;for(M=0;M<A;M++)pe[p[w+M]]++;for(V=S,O=s;O>=1&&pe[O]===0;O--);if(V>O&&(V=O),O===0)return x[k++]=1<<24|64<<16|0,x[k++]=1<<24|64<<16|0,E.bits=1,0;for(j=1;j<O&&pe[j]===0;j++);for(V<j&&(V=j),z=1,R=1;R<=s;R++)if(z<<=1,z-=pe[R],z<0)return-1;if(z>0&&(v===c||O!==1))return-1;for(he[1]=0,R=1;R<s;R++)he[R+1]=he[R]+pe[R];for(M=0;M<A;M++)p[w+M]!==0&&(N[he[p[w+M]]++]=M);if(v===c?(_=se=N,fe=19):v===h?(_=o,re-=257,se=n,ce-=257,fe=256):(_=m,se=y,fe=-1),U=0,M=0,R=j,ee=k,J=V,B=0,ae=-1,G=1<<V,W=G-1,v===h&&G>g||v===u&&G>b)return 1;for(;;){q=R-B,N[M]<fe?(K=0,Y=N[M]):N[M]>fe?(K=se[ce+N[M]],Y=_[re+N[M]]):(K=32+64,Y=0),ie=1<<R-B,oe=1<<J,j=oe;do oe-=ie,x[ee+(U>>B)+oe]=q<<24|K<<16|Y|0;while(oe!==0);for(ie=1<<R-1;U&ie;)ie>>=1;if(ie!==0?(U&=ie-1,U+=ie):U=0,M++,--pe[R]===0){if(R===O)break;R=p[w+N[M]]}if(R>V&&(U&W)!==ae){for(B===0&&(B=V),ee+=j,J=R-B,z=1<<J;J+B<O&&(z-=pe[J+B],!(z<=0));)J++,z<<=1;if(G+=1<<J,v===h&&G>g||v===u&&G>b)return 1;ae=U&W,x[ae]=V<<24|J<<16|ee-k|0}}return U!==0&&(x[ee+U]=R-B<<24|64<<16|0),E.bits=V,0}},{"../utils/common":36}],44:[function(r,d,a){d.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],45:[function(r,d,a){var l=r("../utils/common"),s=4,g=0,b=1,c=2;function h(Z){for(var ve=Z.length;--ve>=0;)Z[ve]=0}var u=0,o=1,n=2,m=3,y=258,f=29,v=256,p=v+1+f,w=30,A=19,x=2*p+1,k=15,N=16,E=7,S=256,R=16,M=17,j=18,O=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],V=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],J=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],B=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],z=512,G=new Array((p+2)*2);h(G);var U=new Array(w*2);h(U);var ie=new Array(z);h(ie);var oe=new Array(y-m+1);h(oe);var ae=new Array(f);h(ae);var W=new Array(w);h(W);function ee(Z,ve,be,Pe,me){this.static_tree=Z,this.extra_bits=ve,this.extra_base=be,this.elems=Pe,this.max_length=me,this.has_stree=Z&&Z.length}var _,re,fe;function pe(Z,ve){this.dyn_tree=Z,this.max_code=0,this.stat_desc=ve}function he(Z){return Z<256?ie[Z]:ie[256+(Z>>>7)]}function se(Z,ve){Z.pending_buf[Z.pending++]=ve&255,Z.pending_buf[Z.pending++]=ve>>>8&255}function ce(Z,ve,be){Z.bi_valid>N-be?(Z.bi_buf|=ve<<Z.bi_valid&65535,se(Z,Z.bi_buf),Z.bi_buf=ve>>N-Z.bi_valid,Z.bi_valid+=be-N):(Z.bi_buf|=ve<<Z.bi_valid&65535,Z.bi_valid+=be)}function q(Z,ve,be){ce(Z,be[ve*2],be[ve*2+1])}function K(Z,ve){var be=0;do be|=Z&1,Z>>>=1,be<<=1;while(--ve>0);return be>>>1}function Y(Z){Z.bi_valid===16?(se(Z,Z.bi_buf),Z.bi_buf=0,Z.bi_valid=0):Z.bi_valid>=8&&(Z.pending_buf[Z.pending++]=Z.bi_buf&255,Z.bi_buf>>=8,Z.bi_valid-=8)}function $(Z,ve){var be=ve.dyn_tree,Pe=ve.max_code,me=ve.stat_desc.static_tree,xe=ve.stat_desc.has_stree,ne=ve.stat_desc.extra_bits,ke=ve.stat_desc.extra_base,Be=ve.stat_desc.max_length,P,de,we,D,ue,Ae,Re=0;for(D=0;D<=k;D++)Z.bl_count[D]=0;for(be[Z.heap[Z.heap_max]*2+1]=0,P=Z.heap_max+1;P<x;P++)de=Z.heap[P],D=be[be[de*2+1]*2+1]+1,D>Be&&(D=Be,Re++),be[de*2+1]=D,!(de>Pe)&&(Z.bl_count[D]++,ue=0,de>=ke&&(ue=ne[de-ke]),Ae=be[de*2],Z.opt_len+=Ae*(D+ue),xe&&(Z.static_len+=Ae*(me[de*2+1]+ue)));if(Re!==0){do{for(D=Be-1;Z.bl_count[D]===0;)D--;Z.bl_count[D]--,Z.bl_count[D+1]+=2,Z.bl_count[Be]--,Re-=2}while(Re>0);for(D=Be;D!==0;D--)for(de=Z.bl_count[D];de!==0;)we=Z.heap[--P],!(we>Pe)&&(be[we*2+1]!==D&&(Z.opt_len+=(D-be[we*2+1])*be[we*2],be[we*2+1]=D),de--)}}function te(Z,ve,be){var Pe=new Array(k+1),me=0,xe,ne;for(xe=1;xe<=k;xe++)Pe[xe]=me=me+be[xe-1]<<1;for(ne=0;ne<=ve;ne++){var ke=Z[ne*2+1];ke!==0&&(Z[ne*2]=K(Pe[ke]++,ke))}}function L(){var Z,ve,be,Pe,me,xe=new Array(k+1);for(be=0,Pe=0;Pe<f-1;Pe++)for(ae[Pe]=be,Z=0;Z<1<<O[Pe];Z++)oe[be++]=Pe;for(oe[be-1]=Pe,me=0,Pe=0;Pe<16;Pe++)for(W[Pe]=me,Z=0;Z<1<<V[Pe];Z++)ie[me++]=Pe;for(me>>=7;Pe<w;Pe++)for(W[Pe]=me<<7,Z=0;Z<1<<V[Pe]-7;Z++)ie[256+me++]=Pe;for(ve=0;ve<=k;ve++)xe[ve]=0;for(Z=0;Z<=143;)G[Z*2+1]=8,Z++,xe[8]++;for(;Z<=255;)G[Z*2+1]=9,Z++,xe[9]++;for(;Z<=279;)G[Z*2+1]=7,Z++,xe[7]++;for(;Z<=287;)G[Z*2+1]=8,Z++,xe[8]++;for(te(G,p+1,xe),Z=0;Z<w;Z++)U[Z*2+1]=5,U[Z*2]=K(Z,5);_=new ee(G,O,v+1,p,k),re=new ee(U,V,0,w,k),fe=new ee(new Array(0),J,0,A,E)}function T(Z){var ve;for(ve=0;ve<p;ve++)Z.dyn_ltree[ve*2]=0;for(ve=0;ve<w;ve++)Z.dyn_dtree[ve*2]=0;for(ve=0;ve<A;ve++)Z.bl_tree[ve*2]=0;Z.dyn_ltree[S*2]=1,Z.opt_len=Z.static_len=0,Z.last_lit=Z.matches=0}function F(Z){Z.bi_valid>8?se(Z,Z.bi_buf):Z.bi_valid>0&&(Z.pending_buf[Z.pending++]=Z.bi_buf),Z.bi_buf=0,Z.bi_valid=0}function X(Z,ve,be,Pe){F(Z),Pe&&(se(Z,be),se(Z,~be)),l.arraySet(Z.pending_buf,Z.window,ve,be,Z.pending),Z.pending+=be}function H(Z,ve,be,Pe){var me=ve*2,xe=be*2;return Z[me]<Z[xe]||Z[me]===Z[xe]&&Pe[ve]<=Pe[be]}function I(Z,ve,be){for(var Pe=Z.heap[be],me=be<<1;me<=Z.heap_len&&(me<Z.heap_len&&H(ve,Z.heap[me+1],Z.heap[me],Z.depth)&&me++,!H(ve,Pe,Z.heap[me],Z.depth));)Z.heap[be]=Z.heap[me],be=me,me<<=1;Z.heap[be]=Pe}function C(Z,ve,be){var Pe,me,xe=0,ne,ke;if(Z.last_lit!==0)do Pe=Z.pending_buf[Z.d_buf+xe*2]<<8|Z.pending_buf[Z.d_buf+xe*2+1],me=Z.pending_buf[Z.l_buf+xe],xe++,Pe===0?q(Z,me,ve):(ne=oe[me],q(Z,ne+v+1,ve),ke=O[ne],ke!==0&&(me-=ae[ne],ce(Z,me,ke)),Pe--,ne=he(Pe),q(Z,ne,be),ke=V[ne],ke!==0&&(Pe-=W[ne],ce(Z,Pe,ke)));while(xe<Z.last_lit);q(Z,S,ve)}function Q(Z,ve){var be=ve.dyn_tree,Pe=ve.stat_desc.static_tree,me=ve.stat_desc.has_stree,xe=ve.stat_desc.elems,ne,ke,Be=-1,P;for(Z.heap_len=0,Z.heap_max=x,ne=0;ne<xe;ne++)be[ne*2]!==0?(Z.heap[++Z.heap_len]=Be=ne,Z.depth[ne]=0):be[ne*2+1]=0;for(;Z.heap_len<2;)P=Z.heap[++Z.heap_len]=Be<2?++Be:0,be[P*2]=1,Z.depth[P]=0,Z.opt_len--,me&&(Z.static_len-=Pe[P*2+1]);for(ve.max_code=Be,ne=Z.heap_len>>1;ne>=1;ne--)I(Z,be,ne);P=xe;do ne=Z.heap[1],Z.heap[1]=Z.heap[Z.heap_len--],I(Z,be,1),ke=Z.heap[1],Z.heap[--Z.heap_max]=ne,Z.heap[--Z.heap_max]=ke,be[P*2]=be[ne*2]+be[ke*2],Z.depth[P]=(Z.depth[ne]>=Z.depth[ke]?Z.depth[ne]:Z.depth[ke])+1,be[ne*2+1]=be[ke*2+1]=P,Z.heap[1]=P++,I(Z,be,1);while(Z.heap_len>=2);Z.heap[--Z.heap_max]=Z.heap[1],$(Z,ve),te(be,Be,Z.bl_count)}function le(Z,ve,be){var Pe,me=-1,xe,ne=ve[0*2+1],ke=0,Be=7,P=4;for(ne===0&&(Be=138,P=3),ve[(be+1)*2+1]=65535,Pe=0;Pe<=be;Pe++)xe=ne,ne=ve[(Pe+1)*2+1],!(++ke<Be&&xe===ne)&&(ke<P?Z.bl_tree[xe*2]+=ke:xe!==0?(xe!==me&&Z.bl_tree[xe*2]++,Z.bl_tree[R*2]++):ke<=10?Z.bl_tree[M*2]++:Z.bl_tree[j*2]++,ke=0,me=xe,ne===0?(Be=138,P=3):xe===ne?(Be=6,P=3):(Be=7,P=4))}function ge(Z,ve,be){var Pe,me=-1,xe,ne=ve[0*2+1],ke=0,Be=7,P=4;for(ne===0&&(Be=138,P=3),Pe=0;Pe<=be;Pe++)if(xe=ne,ne=ve[(Pe+1)*2+1],!(++ke<Be&&xe===ne)){if(ke<P)do q(Z,xe,Z.bl_tree);while(--ke!==0);else xe!==0?(xe!==me&&(q(Z,xe,Z.bl_tree),ke--),q(Z,R,Z.bl_tree),ce(Z,ke-3,2)):ke<=10?(q(Z,M,Z.bl_tree),ce(Z,ke-3,3)):(q(Z,j,Z.bl_tree),ce(Z,ke-11,7));ke=0,me=xe,ne===0?(Be=138,P=3):xe===ne?(Be=6,P=3):(Be=7,P=4)}}function ye(Z){var ve;for(le(Z,Z.dyn_ltree,Z.l_desc.max_code),le(Z,Z.dyn_dtree,Z.d_desc.max_code),Q(Z,Z.bl_desc),ve=A-1;ve>=3&&Z.bl_tree[B[ve]*2+1]===0;ve--);return Z.opt_len+=3*(ve+1)+5+5+4,ve}function Ne(Z,ve,be,Pe){var me;for(ce(Z,ve-257,5),ce(Z,be-1,5),ce(Z,Pe-4,4),me=0;me<Pe;me++)ce(Z,Z.bl_tree[B[me]*2+1],3);ge(Z,Z.dyn_ltree,ve-1),ge(Z,Z.dyn_dtree,be-1)}function Se(Z){var ve=4093624447,be;for(be=0;be<=31;be++,ve>>>=1)if(ve&1&&Z.dyn_ltree[be*2]!==0)return g;if(Z.dyn_ltree[9*2]!==0||Z.dyn_ltree[10*2]!==0||Z.dyn_ltree[13*2]!==0)return b;for(be=32;be<v;be++)if(Z.dyn_ltree[be*2]!==0)return b;return g}var Ie=!1;function Oe(Z){Ie||(L(),Ie=!0),Z.l_desc=new pe(Z.dyn_ltree,_),Z.d_desc=new pe(Z.dyn_dtree,re),Z.bl_desc=new pe(Z.bl_tree,fe),Z.bi_buf=0,Z.bi_valid=0,T(Z)}function Fe(Z,ve,be,Pe){ce(Z,(u<<1)+(Pe?1:0),3),X(Z,ve,be,!0)}function Ee(Z){ce(Z,o<<1,3),q(Z,S,G),Y(Z)}function Ze(Z,ve,be,Pe){var me,xe,ne=0;Z.level>0?(Z.strm.data_type===c&&(Z.strm.data_type=Se(Z)),Q(Z,Z.l_desc),Q(Z,Z.d_desc),ne=ye(Z),me=Z.opt_len+3+7>>>3,xe=Z.static_len+3+7>>>3,xe<=me&&(me=xe)):me=xe=be+5,be+4<=me&&ve!==-1?Fe(Z,ve,be,Pe):Z.strategy===s||xe===me?(ce(Z,(o<<1)+(Pe?1:0),3),C(Z,G,U)):(ce(Z,(n<<1)+(Pe?1:0),3),Ne(Z,Z.l_desc.max_code+1,Z.d_desc.max_code+1,ne+1),C(Z,Z.dyn_ltree,Z.dyn_dtree)),T(Z),Pe&&F(Z)}function Me(Z,ve,be){return Z.pending_buf[Z.d_buf+Z.last_lit*2]=ve>>>8&255,Z.pending_buf[Z.d_buf+Z.last_lit*2+1]=ve&255,Z.pending_buf[Z.l_buf+Z.last_lit]=be&255,Z.last_lit++,ve===0?Z.dyn_ltree[be*2]++:(Z.matches++,ve--,Z.dyn_ltree[(oe[be]+v+1)*2]++,Z.dyn_dtree[he(ve)*2]++),Z.last_lit===Z.lit_bufsize-1}a._tr_init=Oe,a._tr_stored_block=Fe,a._tr_flush_block=Ze,a._tr_tally=Me,a._tr_align=Ee},{"../utils/common":36}],46:[function(r,d,a){function l(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}d.exports=l},{}],47:[function(r,d,a){arguments[4][33][0].apply(a,arguments)},{dup:33}],48:[function(r,d,a){(function(o){var s=r("base64-js"),g=r("ieee754"),b=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;a.Buffer=o,a.SlowBuffer=k,a.INSPECT_MAX_BYTES=50;var c=2147483647;a.kMaxLength=c,o.TYPED_ARRAY_SUPPORT=h(),!o.TYPED_ARRAY_SUPPORT&&typeof console!="undefined"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function h(){try{var H=new Uint8Array(1),I={foo:function(){return 42}};return Object.setPrototypeOf(I,Uint8Array.prototype),Object.setPrototypeOf(H,I),H.foo()===42}catch{return!1}}Object.defineProperty(o.prototype,"parent",{enumerable:!0,get:function(){if(!!o.isBuffer(this))return this.buffer}}),Object.defineProperty(o.prototype,"offset",{enumerable:!0,get:function(){if(!!o.isBuffer(this))return this.byteOffset}});function u(H){if(H>c)throw new RangeError('The value "'+H+'" is invalid for option "size"');var I=new Uint8Array(H);return Object.setPrototypeOf(I,o.prototype),I}function o(H,I,C){if(typeof H=="number"){if(typeof I=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return f(H)}return n(H,I,C)}typeof Symbol!="undefined"&&Symbol.species!=null&&o[Symbol.species]===o&&Object.defineProperty(o,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),o.poolSize=8192;function n(H,I,C){if(typeof H=="string")return v(H,I);if(ArrayBuffer.isView(H))return p(H);if(H==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof H);if(T(H,ArrayBuffer)||H&&T(H.buffer,ArrayBuffer))return w(H,I,C);if(typeof H=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');var Q=H.valueOf&&H.valueOf();if(Q!=null&&Q!==H)return o.from(Q,I,C);var le=A(H);if(le)return le;if(typeof Symbol!="undefined"&&Symbol.toPrimitive!=null&&typeof H[Symbol.toPrimitive]=="function")return o.from(H[Symbol.toPrimitive]("string"),I,C);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof H)}o.from=function(H,I,C){return n(H,I,C)},Object.setPrototypeOf(o.prototype,Uint8Array.prototype),Object.setPrototypeOf(o,Uint8Array);function m(H){if(typeof H!="number")throw new TypeError('"size" argument must be of type number');if(H<0)throw new RangeError('The value "'+H+'" is invalid for option "size"')}function y(H,I,C){return m(H),H<=0?u(H):I!==void 0?typeof C=="string"?u(H).fill(I,C):u(H).fill(I):u(H)}o.alloc=function(H,I,C){return y(H,I,C)};function f(H){return m(H),u(H<0?0:x(H)|0)}o.allocUnsafe=function(H){return f(H)},o.allocUnsafeSlow=function(H){return f(H)};function v(H,I){if((typeof I!="string"||I==="")&&(I="utf8"),!o.isEncoding(I))throw new TypeError("Unknown encoding: "+I);var C=N(H,I)|0,Q=u(C),le=Q.write(H,I);return le!==C&&(Q=Q.slice(0,le)),Q}function p(H){for(var I=H.length<0?0:x(H.length)|0,C=u(I),Q=0;Q<I;Q+=1)C[Q]=H[Q]&255;return C}function w(H,I,C){if(I<0||H.byteLength<I)throw new RangeError('"offset" is outside of buffer bounds');if(H.byteLength<I+(C||0))throw new RangeError('"length" is outside of buffer bounds');var Q;return I===void 0&&C===void 0?Q=new Uint8Array(H):C===void 0?Q=new Uint8Array(H,I):Q=new Uint8Array(H,I,C),Object.setPrototypeOf(Q,o.prototype),Q}function A(H){if(o.isBuffer(H)){var I=x(H.length)|0,C=u(I);return C.length===0||H.copy(C,0,0,I),C}if(H.length!==void 0)return typeof H.length!="number"||F(H.length)?u(0):p(H);if(H.type==="Buffer"&&Array.isArray(H.data))return p(H.data)}function x(H){if(H>=c)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+c.toString(16)+" bytes");return H|0}function k(H){return+H!=H&&(H=0),o.alloc(+H)}o.isBuffer=function(I){return I!=null&&I._isBuffer===!0&&I!==o.prototype},o.compare=function(I,C){if(T(I,Uint8Array)&&(I=o.from(I,I.offset,I.byteLength)),T(C,Uint8Array)&&(C=o.from(C,C.offset,C.byteLength)),!o.isBuffer(I)||!o.isBuffer(C))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(I===C)return 0;for(var Q=I.length,le=C.length,ge=0,ye=Math.min(Q,le);ge<ye;++ge)if(I[ge]!==C[ge]){Q=I[ge],le=C[ge];break}return Q<le?-1:le<Q?1:0},o.isEncoding=function(I){switch(String(I).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},o.concat=function(I,C){if(!Array.isArray(I))throw new TypeError('"list" argument must be an Array of Buffers');if(I.length===0)return o.alloc(0);var Q;if(C===void 0)for(C=0,Q=0;Q<I.length;++Q)C+=I[Q].length;var le=o.allocUnsafe(C),ge=0;for(Q=0;Q<I.length;++Q){var ye=I[Q];if(T(ye,Uint8Array)&&(ye=o.from(ye)),!o.isBuffer(ye))throw new TypeError('"list" argument must be an Array of Buffers');ye.copy(le,ge),ge+=ye.length}return le};function N(H,I){if(o.isBuffer(H))return H.length;if(ArrayBuffer.isView(H)||T(H,ArrayBuffer))return H.byteLength;if(typeof H!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof H);var C=H.length,Q=arguments.length>2&&arguments[2]===!0;if(!Q&&C===0)return 0;for(var le=!1;;)switch(I){case"ascii":case"latin1":case"binary":return C;case"utf8":case"utf-8":return K(H).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C*2;case"hex":return C>>>1;case"base64":return te(H).length;default:if(le)return Q?-1:K(H).length;I=(""+I).toLowerCase(),le=!0}}o.byteLength=N;function E(H,I,C){var Q=!1;if((I===void 0||I<0)&&(I=0),I>this.length||((C===void 0||C>this.length)&&(C=this.length),C<=0)||(C>>>=0,I>>>=0,C<=I))return"";for(H||(H="utf8");;)switch(H){case"hex":return ee(this,I,C);case"utf8":case"utf-8":return U(this,I,C);case"ascii":return ae(this,I,C);case"latin1":case"binary":return W(this,I,C);case"base64":return G(this,I,C);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return _(this,I,C);default:if(Q)throw new TypeError("Unknown encoding: "+H);H=(H+"").toLowerCase(),Q=!0}}o.prototype._isBuffer=!0;function S(H,I,C){var Q=H[I];H[I]=H[C],H[C]=Q}o.prototype.swap16=function(){var I=this.length;if(I%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var C=0;C<I;C+=2)S(this,C,C+1);return this},o.prototype.swap32=function(){var I=this.length;if(I%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var C=0;C<I;C+=4)S(this,C,C+3),S(this,C+1,C+2);return this},o.prototype.swap64=function(){var I=this.length;if(I%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var C=0;C<I;C+=8)S(this,C,C+7),S(this,C+1,C+6),S(this,C+2,C+5),S(this,C+3,C+4);return this},o.prototype.toString=function(){var I=this.length;return I===0?"":arguments.length===0?U(this,0,I):E.apply(this,arguments)},o.prototype.toLocaleString=o.prototype.toString,o.prototype.equals=function(I){if(!o.isBuffer(I))throw new TypeError("Argument must be a Buffer");return this===I?!0:o.compare(this,I)===0},o.prototype.inspect=function(){var I="",C=a.INSPECT_MAX_BYTES;return I=this.toString("hex",0,C).replace(/(.{2})/g,"$1 ").trim(),this.length>C&&(I+=" ... "),"<Buffer "+I+">"},b&&(o.prototype[b]=o.prototype.inspect),o.prototype.compare=function(I,C,Q,le,ge){if(T(I,Uint8Array)&&(I=o.from(I,I.offset,I.byteLength)),!o.isBuffer(I))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof I);if(C===void 0&&(C=0),Q===void 0&&(Q=I?I.length:0),le===void 0&&(le=0),ge===void 0&&(ge=this.length),C<0||Q>I.length||le<0||ge>this.length)throw new RangeError("out of range index");if(le>=ge&&C>=Q)return 0;if(le>=ge)return-1;if(C>=Q)return 1;if(C>>>=0,Q>>>=0,le>>>=0,ge>>>=0,this===I)return 0;for(var ye=ge-le,Ne=Q-C,Se=Math.min(ye,Ne),Ie=this.slice(le,ge),Oe=I.slice(C,Q),Fe=0;Fe<Se;++Fe)if(Ie[Fe]!==Oe[Fe]){ye=Ie[Fe],Ne=Oe[Fe];break}return ye<Ne?-1:Ne<ye?1:0};function R(H,I,C,Q,le){if(H.length===0)return-1;if(typeof C=="string"?(Q=C,C=0):C>2147483647?C=2147483647:C<-2147483648&&(C=-2147483648),C=+C,F(C)&&(C=le?0:H.length-1),C<0&&(C=H.length+C),C>=H.length){if(le)return-1;C=H.length-1}else if(C<0)if(le)C=0;else return-1;if(typeof I=="string"&&(I=o.from(I,Q)),o.isBuffer(I))return I.length===0?-1:M(H,I,C,Q,le);if(typeof I=="number")return I=I&255,typeof Uint8Array.prototype.indexOf=="function"?le?Uint8Array.prototype.indexOf.call(H,I,C):Uint8Array.prototype.lastIndexOf.call(H,I,C):M(H,[I],C,Q,le);throw new TypeError("val must be string, number or Buffer")}function M(H,I,C,Q,le){var ge=1,ye=H.length,Ne=I.length;if(Q!==void 0&&(Q=String(Q).toLowerCase(),Q==="ucs2"||Q==="ucs-2"||Q==="utf16le"||Q==="utf-16le")){if(H.length<2||I.length<2)return-1;ge=2,ye/=2,Ne/=2,C/=2}function Se(Ze,Me){return ge===1?Ze[Me]:Ze.readUInt16BE(Me*ge)}var Ie;if(le){var Oe=-1;for(Ie=C;Ie<ye;Ie++)if(Se(H,Ie)===Se(I,Oe===-1?0:Ie-Oe)){if(Oe===-1&&(Oe=Ie),Ie-Oe+1===Ne)return Oe*ge}else Oe!==-1&&(Ie-=Ie-Oe),Oe=-1}else for(C+Ne>ye&&(C=ye-Ne),Ie=C;Ie>=0;Ie--){for(var Fe=!0,Ee=0;Ee<Ne;Ee++)if(Se(H,Ie+Ee)!==Se(I,Ee)){Fe=!1;break}if(Fe)return Ie}return-1}o.prototype.includes=function(I,C,Q){return this.indexOf(I,C,Q)!==-1},o.prototype.indexOf=function(I,C,Q){return R(this,I,C,Q,!0)},o.prototype.lastIndexOf=function(I,C,Q){return R(this,I,C,Q,!1)};function j(H,I,C,Q){C=Number(C)||0;var le=H.length-C;Q?(Q=Number(Q),Q>le&&(Q=le)):Q=le;var ge=I.length;Q>ge/2&&(Q=ge/2);for(var ye=0;ye<Q;++ye){var Ne=parseInt(I.substr(ye*2,2),16);if(F(Ne))return ye;H[C+ye]=Ne}return ye}function O(H,I,C,Q){return L(K(I,H.length-C),H,C,Q)}function V(H,I,C,Q){return L(Y(I),H,C,Q)}function J(H,I,C,Q){return V(H,I,C,Q)}function B(H,I,C,Q){return L(te(I),H,C,Q)}function z(H,I,C,Q){return L($(I,H.length-C),H,C,Q)}o.prototype.write=function(I,C,Q,le){if(C===void 0)le="utf8",Q=this.length,C=0;else if(Q===void 0&&typeof C=="string")le=C,Q=this.length,C=0;else if(isFinite(C))C=C>>>0,isFinite(Q)?(Q=Q>>>0,le===void 0&&(le="utf8")):(le=Q,Q=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");var ge=this.length-C;if((Q===void 0||Q>ge)&&(Q=ge),I.length>0&&(Q<0||C<0)||C>this.length)throw new RangeError("Attempt to write outside buffer bounds");le||(le="utf8");for(var ye=!1;;)switch(le){case"hex":return j(this,I,C,Q);case"utf8":case"utf-8":return O(this,I,C,Q);case"ascii":return V(this,I,C,Q);case"latin1":case"binary":return J(this,I,C,Q);case"base64":return B(this,I,C,Q);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return z(this,I,C,Q);default:if(ye)throw new TypeError("Unknown encoding: "+le);le=(""+le).toLowerCase(),ye=!0}},o.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function G(H,I,C){return I===0&&C===H.length?s.fromByteArray(H):s.fromByteArray(H.slice(I,C))}function U(H,I,C){C=Math.min(H.length,C);for(var Q=[],le=I;le<C;){var ge=H[le],ye=null,Ne=ge>239?4:ge>223?3:ge>191?2:1;if(le+Ne<=C){var Se,Ie,Oe,Fe;switch(Ne){case 1:ge<128&&(ye=ge);break;case 2:Se=H[le+1],(Se&192)===128&&(Fe=(ge&31)<<6|Se&63,Fe>127&&(ye=Fe));break;case 3:Se=H[le+1],Ie=H[le+2],(Se&192)===128&&(Ie&192)===128&&(Fe=(ge&15)<<12|(Se&63)<<6|Ie&63,Fe>2047&&(Fe<55296||Fe>57343)&&(ye=Fe));break;case 4:Se=H[le+1],Ie=H[le+2],Oe=H[le+3],(Se&192)===128&&(Ie&192)===128&&(Oe&192)===128&&(Fe=(ge&15)<<18|(Se&63)<<12|(Ie&63)<<6|Oe&63,Fe>65535&&Fe<1114112&&(ye=Fe))}}ye===null?(ye=65533,Ne=1):ye>65535&&(ye-=65536,Q.push(ye>>>10&1023|55296),ye=56320|ye&1023),Q.push(ye),le+=Ne}return oe(Q)}var ie=4096;function oe(H){var I=H.length;if(I<=ie)return String.fromCharCode.apply(String,H);for(var C="",Q=0;Q<I;)C+=String.fromCharCode.apply(String,H.slice(Q,Q+=ie));return C}function ae(H,I,C){var Q="";C=Math.min(H.length,C);for(var le=I;le<C;++le)Q+=String.fromCharCode(H[le]&127);return Q}function W(H,I,C){var Q="";C=Math.min(H.length,C);for(var le=I;le<C;++le)Q+=String.fromCharCode(H[le]);return Q}function ee(H,I,C){var Q=H.length;(!I||I<0)&&(I=0),(!C||C<0||C>Q)&&(C=Q);for(var le="",ge=I;ge<C;++ge)le+=X[H[ge]];return le}function _(H,I,C){for(var Q=H.slice(I,C),le="",ge=0;ge<Q.length;ge+=2)le+=String.fromCharCode(Q[ge]+Q[ge+1]*256);return le}o.prototype.slice=function(I,C){var Q=this.length;I=~~I,C=C===void 0?Q:~~C,I<0?(I+=Q,I<0&&(I=0)):I>Q&&(I=Q),C<0?(C+=Q,C<0&&(C=0)):C>Q&&(C=Q),C<I&&(C=I);var le=this.subarray(I,C);return Object.setPrototypeOf(le,o.prototype),le};function re(H,I,C){if(H%1!==0||H<0)throw new RangeError("offset is not uint");if(H+I>C)throw new RangeError("Trying to access beyond buffer length")}o.prototype.readUIntLE=function(I,C,Q){I=I>>>0,C=C>>>0,Q||re(I,C,this.length);for(var le=this[I],ge=1,ye=0;++ye<C&&(ge*=256);)le+=this[I+ye]*ge;return le},o.prototype.readUIntBE=function(I,C,Q){I=I>>>0,C=C>>>0,Q||re(I,C,this.length);for(var le=this[I+--C],ge=1;C>0&&(ge*=256);)le+=this[I+--C]*ge;return le},o.prototype.readUInt8=function(I,C){return I=I>>>0,C||re(I,1,this.length),this[I]},o.prototype.readUInt16LE=function(I,C){return I=I>>>0,C||re(I,2,this.length),this[I]|this[I+1]<<8},o.prototype.readUInt16BE=function(I,C){return I=I>>>0,C||re(I,2,this.length),this[I]<<8|this[I+1]},o.prototype.readUInt32LE=function(I,C){return I=I>>>0,C||re(I,4,this.length),(this[I]|this[I+1]<<8|this[I+2]<<16)+this[I+3]*16777216},o.prototype.readUInt32BE=function(I,C){return I=I>>>0,C||re(I,4,this.length),this[I]*16777216+(this[I+1]<<16|this[I+2]<<8|this[I+3])},o.prototype.readIntLE=function(I,C,Q){I=I>>>0,C=C>>>0,Q||re(I,C,this.length);for(var le=this[I],ge=1,ye=0;++ye<C&&(ge*=256);)le+=this[I+ye]*ge;return ge*=128,le>=ge&&(le-=Math.pow(2,8*C)),le},o.prototype.readIntBE=function(I,C,Q){I=I>>>0,C=C>>>0,Q||re(I,C,this.length);for(var le=C,ge=1,ye=this[I+--le];le>0&&(ge*=256);)ye+=this[I+--le]*ge;return ge*=128,ye>=ge&&(ye-=Math.pow(2,8*C)),ye},o.prototype.readInt8=function(I,C){return I=I>>>0,C||re(I,1,this.length),this[I]&128?(255-this[I]+1)*-1:this[I]},o.prototype.readInt16LE=function(I,C){I=I>>>0,C||re(I,2,this.length);var Q=this[I]|this[I+1]<<8;return Q&32768?Q|4294901760:Q},o.prototype.readInt16BE=function(I,C){I=I>>>0,C||re(I,2,this.length);var Q=this[I+1]|this[I]<<8;return Q&32768?Q|4294901760:Q},o.prototype.readInt32LE=function(I,C){return I=I>>>0,C||re(I,4,this.length),this[I]|this[I+1]<<8|this[I+2]<<16|this[I+3]<<24},o.prototype.readInt32BE=function(I,C){return I=I>>>0,C||re(I,4,this.length),this[I]<<24|this[I+1]<<16|this[I+2]<<8|this[I+3]},o.prototype.readFloatLE=function(I,C){return I=I>>>0,C||re(I,4,this.length),g.read(this,I,!0,23,4)},o.prototype.readFloatBE=function(I,C){return I=I>>>0,C||re(I,4,this.length),g.read(this,I,!1,23,4)},o.prototype.readDoubleLE=function(I,C){return I=I>>>0,C||re(I,8,this.length),g.read(this,I,!0,52,8)},o.prototype.readDoubleBE=function(I,C){return I=I>>>0,C||re(I,8,this.length),g.read(this,I,!1,52,8)};function fe(H,I,C,Q,le,ge){if(!o.isBuffer(H))throw new TypeError('"buffer" argument must be a Buffer instance');if(I>le||I<ge)throw new RangeError('"value" argument is out of bounds');if(C+Q>H.length)throw new RangeError("Index out of range")}o.prototype.writeUIntLE=function(I,C,Q,le){if(I=+I,C=C>>>0,Q=Q>>>0,!le){var ge=Math.pow(2,8*Q)-1;fe(this,I,C,Q,ge,0)}var ye=1,Ne=0;for(this[C]=I&255;++Ne<Q&&(ye*=256);)this[C+Ne]=I/ye&255;return C+Q},o.prototype.writeUIntBE=function(I,C,Q,le){if(I=+I,C=C>>>0,Q=Q>>>0,!le){var ge=Math.pow(2,8*Q)-1;fe(this,I,C,Q,ge,0)}var ye=Q-1,Ne=1;for(this[C+ye]=I&255;--ye>=0&&(Ne*=256);)this[C+ye]=I/Ne&255;return C+Q},o.prototype.writeUInt8=function(I,C,Q){return I=+I,C=C>>>0,Q||fe(this,I,C,1,255,0),this[C]=I&255,C+1},o.prototype.writeUInt16LE=function(I,C,Q){return I=+I,C=C>>>0,Q||fe(this,I,C,2,65535,0),this[C]=I&255,this[C+1]=I>>>8,C+2},o.prototype.writeUInt16BE=function(I,C,Q){return I=+I,C=C>>>0,Q||fe(this,I,C,2,65535,0),this[C]=I>>>8,this[C+1]=I&255,C+2},o.prototype.writeUInt32LE=function(I,C,Q){return I=+I,C=C>>>0,Q||fe(this,I,C,4,4294967295,0),this[C+3]=I>>>24,this[C+2]=I>>>16,this[C+1]=I>>>8,this[C]=I&255,C+4},o.prototype.writeUInt32BE=function(I,C,Q){return I=+I,C=C>>>0,Q||fe(this,I,C,4,4294967295,0),this[C]=I>>>24,this[C+1]=I>>>16,this[C+2]=I>>>8,this[C+3]=I&255,C+4},o.prototype.writeIntLE=function(I,C,Q,le){if(I=+I,C=C>>>0,!le){var ge=Math.pow(2,8*Q-1);fe(this,I,C,Q,ge-1,-ge)}var ye=0,Ne=1,Se=0;for(this[C]=I&255;++ye<Q&&(Ne*=256);)I<0&&Se===0&&this[C+ye-1]!==0&&(Se=1),this[C+ye]=(I/Ne>>0)-Se&255;return C+Q},o.prototype.writeIntBE=function(I,C,Q,le){if(I=+I,C=C>>>0,!le){var ge=Math.pow(2,8*Q-1);fe(this,I,C,Q,ge-1,-ge)}var ye=Q-1,Ne=1,Se=0;for(this[C+ye]=I&255;--ye>=0&&(Ne*=256);)I<0&&Se===0&&this[C+ye+1]!==0&&(Se=1),this[C+ye]=(I/Ne>>0)-Se&255;return C+Q},o.prototype.writeInt8=function(I,C,Q){return I=+I,C=C>>>0,Q||fe(this,I,C,1,127,-128),I<0&&(I=255+I+1),this[C]=I&255,C+1},o.prototype.writeInt16LE=function(I,C,Q){return I=+I,C=C>>>0,Q||fe(this,I,C,2,32767,-32768),this[C]=I&255,this[C+1]=I>>>8,C+2},o.prototype.writeInt16BE=function(I,C,Q){return I=+I,C=C>>>0,Q||fe(this,I,C,2,32767,-32768),this[C]=I>>>8,this[C+1]=I&255,C+2},o.prototype.writeInt32LE=function(I,C,Q){return I=+I,C=C>>>0,Q||fe(this,I,C,4,2147483647,-2147483648),this[C]=I&255,this[C+1]=I>>>8,this[C+2]=I>>>16,this[C+3]=I>>>24,C+4},o.prototype.writeInt32BE=function(I,C,Q){return I=+I,C=C>>>0,Q||fe(this,I,C,4,2147483647,-2147483648),I<0&&(I=4294967295+I+1),this[C]=I>>>24,this[C+1]=I>>>16,this[C+2]=I>>>8,this[C+3]=I&255,C+4};function pe(H,I,C,Q,le,ge){if(C+Q>H.length)throw new RangeError("Index out of range");if(C<0)throw new RangeError("Index out of range")}function he(H,I,C,Q,le){return I=+I,C=C>>>0,le||pe(H,I,C,4),g.write(H,I,C,Q,23,4),C+4}o.prototype.writeFloatLE=function(I,C,Q){return he(this,I,C,!0,Q)},o.prototype.writeFloatBE=function(I,C,Q){return he(this,I,C,!1,Q)};function se(H,I,C,Q,le){return I=+I,C=C>>>0,le||pe(H,I,C,8),g.write(H,I,C,Q,52,8),C+8}o.prototype.writeDoubleLE=function(I,C,Q){return se(this,I,C,!0,Q)},o.prototype.writeDoubleBE=function(I,C,Q){return se(this,I,C,!1,Q)},o.prototype.copy=function(I,C,Q,le){if(!o.isBuffer(I))throw new TypeError("argument should be a Buffer");if(Q||(Q=0),!le&&le!==0&&(le=this.length),C>=I.length&&(C=I.length),C||(C=0),le>0&&le<Q&&(le=Q),le===Q||I.length===0||this.length===0)return 0;if(C<0)throw new RangeError("targetStart out of bounds");if(Q<0||Q>=this.length)throw new RangeError("Index out of range");if(le<0)throw new RangeError("sourceEnd out of bounds");le>this.length&&(le=this.length),I.length-C<le-Q&&(le=I.length-C+Q);var ge=le-Q;if(this===I&&typeof Uint8Array.prototype.copyWithin=="function")this.copyWithin(C,Q,le);else if(this===I&&Q<C&&C<le)for(var ye=ge-1;ye>=0;--ye)I[ye+C]=this[ye+Q];else Uint8Array.prototype.set.call(I,this.subarray(Q,le),C);return ge},o.prototype.fill=function(I,C,Q,le){if(typeof I=="string"){if(typeof C=="string"?(le=C,C=0,Q=this.length):typeof Q=="string"&&(le=Q,Q=this.length),le!==void 0&&typeof le!="string")throw new TypeError("encoding must be a string");if(typeof le=="string"&&!o.isEncoding(le))throw new TypeError("Unknown encoding: "+le);if(I.length===1){var ge=I.charCodeAt(0);(le==="utf8"&&ge<128||le==="latin1")&&(I=ge)}}else typeof I=="number"?I=I&255:typeof I=="boolean"&&(I=Number(I));if(C<0||this.length<C||this.length<Q)throw new RangeError("Out of range index");if(Q<=C)return this;C=C>>>0,Q=Q===void 0?this.length:Q>>>0,I||(I=0);var ye;if(typeof I=="number")for(ye=C;ye<Q;++ye)this[ye]=I;else{var Ne=o.isBuffer(I)?I:o.from(I,le),Se=Ne.length;if(Se===0)throw new TypeError('The value "'+I+'" is invalid for argument "value"');for(ye=0;ye<Q-C;++ye)this[ye+C]=Ne[ye%Se]}return this};var ce=/[^+/0-9A-Za-z-_]/g;function q(H){if(H=H.split("=")[0],H=H.trim().replace(ce,""),H.length<2)return"";for(;H.length%4!==0;)H=H+"=";return H}function K(H,I){I=I||1/0;for(var C,Q=H.length,le=null,ge=[],ye=0;ye<Q;++ye){if(C=H.charCodeAt(ye),C>55295&&C<57344){if(!le){if(C>56319){(I-=3)>-1&&ge.push(239,191,189);continue}else if(ye+1===Q){(I-=3)>-1&&ge.push(239,191,189);continue}le=C;continue}if(C<56320){(I-=3)>-1&&ge.push(239,191,189),le=C;continue}C=(le-55296<<10|C-56320)+65536}else le&&(I-=3)>-1&&ge.push(239,191,189);if(le=null,C<128){if((I-=1)<0)break;ge.push(C)}else if(C<2048){if((I-=2)<0)break;ge.push(C>>6|192,C&63|128)}else if(C<65536){if((I-=3)<0)break;ge.push(C>>12|224,C>>6&63|128,C&63|128)}else if(C<1114112){if((I-=4)<0)break;ge.push(C>>18|240,C>>12&63|128,C>>6&63|128,C&63|128)}else throw new Error("Invalid code point")}return ge}function Y(H){for(var I=[],C=0;C<H.length;++C)I.push(H.charCodeAt(C)&255);return I}function $(H,I){for(var C,Q,le,ge=[],ye=0;ye<H.length&&!((I-=2)<0);++ye)C=H.charCodeAt(ye),Q=C>>8,le=C%256,ge.push(le),ge.push(Q);return ge}function te(H){return s.toByteArray(q(H))}function L(H,I,C,Q){for(var le=0;le<Q&&!(le+C>=I.length||le>=H.length);++le)I[le+C]=H[le];return le}function T(H,I){return H instanceof I||H!=null&&H.constructor!=null&&H.constructor.name!=null&&H.constructor.name===I.name}function F(H){return H!==H}var X=function(){for(var H="0123456789abcdef",I=new Array(256),C=0;C<16;++C)for(var Q=C*16,le=0;le<16;++le)I[Q+le]=H[C]+H[le];return I}()}).call(this,r("buffer").Buffer)},{"base64-js":29,buffer:48,ieee754:73}],49:[function(r,d,a){var l=r("buffer").Buffer;d.exports=function(s,g){if(!!l.isBuffer(s)&&!!l.isBuffer(g)){if(typeof s.equals=="function")return s.equals(g);if(s.length!==g.length)return!1;for(var b=0;b<s.length;b++)if(s[b]!==g[b])return!1;return!0}}},{buffer:48}],50:[function(r,d,a){d.exports={"100":"Continue","101":"Switching Protocols","102":"Processing","200":"OK","201":"Created","202":"Accepted","203":"Non-Authoritative Information","204":"No Content","205":"Reset Content","206":"Partial Content","207":"Multi-Status","208":"Already Reported","226":"IM Used","300":"Multiple Choices","301":"Moved Permanently","302":"Found","303":"See Other","304":"Not Modified","305":"Use Proxy","307":"Temporary Redirect","308":"Permanent Redirect","400":"Bad Request","401":"Unauthorized","402":"Payment Required","403":"Forbidden","404":"Not Found","405":"Method Not Allowed","406":"Not Acceptable","407":"Proxy Authentication Required","408":"Request Timeout","409":"Conflict","410":"Gone","411":"Length Required","412":"Precondition Failed","413":"Payload Too Large","414":"URI Too Long","415":"Unsupported Media Type","416":"Range Not Satisfiable","417":"Expectation Failed","418":"I'm a teapot","421":"Misdirected Request","422":"Unprocessable Entity","423":"Locked","424":"Failed Dependency","425":"Unordered Collection","426":"Upgrade Required","428":"Precondition Required","429":"Too Many Requests","431":"Request Header Fields Too Large","451":"Unavailable For Legal Reasons","500":"Internal Server Error","501":"Not Implemented","502":"Bad Gateway","503":"Service Unavailable","504":"Gateway Timeout","505":"HTTP Version Not Supported","506":"Variant Also Negotiates","507":"Insufficient Storage","508":"Loop Detected","509":"Bandwidth Limit Exceeded","510":"Not Extended","511":"Network Authentication Required"}},{}],51:[function(r,d,a){(function(l){function s(x){return Array.isArray?Array.isArray(x):A(x)==="[object Array]"}a.isArray=s;function g(x){return typeof x=="boolean"}a.isBoolean=g;function b(x){return x===null}a.isNull=b;function c(x){return x==null}a.isNullOrUndefined=c;function h(x){return typeof x=="number"}a.isNumber=h;function u(x){return typeof x=="string"}a.isString=u;function o(x){return typeof x=="symbol"}a.isSymbol=o;function n(x){return x===void 0}a.isUndefined=n;function m(x){return A(x)==="[object RegExp]"}a.isRegExp=m;function y(x){return typeof x=="object"&&x!==null}a.isObject=y;function f(x){return A(x)==="[object Date]"}a.isDate=f;function v(x){return A(x)==="[object Error]"||x instanceof Error}a.isError=v;function p(x){return typeof x=="function"}a.isFunction=p;function w(x){return x===null||typeof x=="boolean"||typeof x=="number"||typeof x=="string"||typeof x=="symbol"||typeof x=="undefined"}a.isPrimitive=w,a.isBuffer=l.isBuffer;function A(x){return Object.prototype.toString.call(x)}}).call(this,{isBuffer:r("../../is-buffer/index.js")})},{"../../is-buffer/index.js":76}],52:[function(r,d,a){var l=Object.create||R,s=Object.keys||M,g=Function.prototype.bind||j;function b(){(!this._events||!Object.prototype.hasOwnProperty.call(this,"_events"))&&(this._events=l(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0}d.exports=b,b.EventEmitter=b,b.prototype._events=void 0,b.prototype._maxListeners=void 0;var c=10,h;try{var u={};Object.defineProperty&&Object.defineProperty(u,"x",{value:0}),h=u.x===0}catch{h=!1}h?Object.defineProperty(b,"defaultMaxListeners",{enumerable:!0,get:function(){return c},set:function(O){if(typeof O!="number"||O<0||O!==O)throw new TypeError('"defaultMaxListeners" must be a positive number');c=O}}):b.defaultMaxListeners=c,b.prototype.setMaxListeners=function(V){if(typeof V!="number"||V<0||isNaN(V))throw new TypeError('"n" argument must be a positive number');return this._maxListeners=V,this};function o(O){return O._maxListeners===void 0?b.defaultMaxListeners:O._maxListeners}b.prototype.getMaxListeners=function(){return o(this)};function n(O,V,J){if(V)O.call(J);else for(var B=O.length,z=E(O,B),G=0;G<B;++G)z[G].call(J)}function m(O,V,J,B){if(V)O.call(J,B);else for(var z=O.length,G=E(O,z),U=0;U<z;++U)G[U].call(J,B)}function y(O,V,J,B,z){if(V)O.call(J,B,z);else for(var G=O.length,U=E(O,G),ie=0;ie<G;++ie)U[ie].call(J,B,z)}function f(O,V,J,B,z,G){if(V)O.call(J,B,z,G);else for(var U=O.length,ie=E(O,U),oe=0;oe<U;++oe)ie[oe].call(J,B,z,G)}function v(O,V,J,B){if(V)O.apply(J,B);else for(var z=O.length,G=E(O,z),U=0;U<z;++U)G[U].apply(J,B)}b.prototype.emit=function(V){var J,B,z,G,U,ie,oe=V==="error";if(ie=this._events,ie)oe=oe&&ie.error==null;else if(!oe)return!1;if(oe){if(arguments.length>1&&(J=arguments[1]),J instanceof Error)throw J;var ae=new Error('Unhandled "error" event. ('+J+")");throw ae.context=J,ae}if(B=ie[V],!B)return!1;var W=typeof B=="function";switch(z=arguments.length,z){case 1:n(B,W,this);break;case 2:m(B,W,this,arguments[1]);break;case 3:y(B,W,this,arguments[1],arguments[2]);break;case 4:f(B,W,this,arguments[1],arguments[2],arguments[3]);break;default:for(G=new Array(z-1),U=1;U<z;U++)G[U-1]=arguments[U];v(B,W,this,G)}return!0};function p(O,V,J,B){var z,G,U;if(typeof J!="function")throw new TypeError('"listener" argument must be a function');if(G=O._events,G?(G.newListener&&(O.emit("newListener",V,J.listener?J.listener:J),G=O._events),U=G[V]):(G=O._events=l(null),O._eventsCount=0),!U)U=G[V]=J,++O._eventsCount;else if(typeof U=="function"?U=G[V]=B?[J,U]:[U,J]:B?U.unshift(J):U.push(J),!U.warned&&(z=o(O),z&&z>0&&U.length>z)){U.warned=!0;var ie=new Error("Possible EventEmitter memory leak detected. "+U.length+' "'+String(V)+'" listeners added. Use emitter.setMaxListeners() to increase limit.');ie.name="MaxListenersExceededWarning",ie.emitter=O,ie.type=V,ie.count=U.length,typeof console=="object"&&console.warn&&console.warn("%s: %s",ie.name,ie.message)}return O}b.prototype.addListener=function(V,J){return p(this,V,J,!1)},b.prototype.on=b.prototype.addListener,b.prototype.prependListener=function(V,J){return p(this,V,J,!0)};function w(){if(!this.fired)switch(this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length){case 0:return this.listener.call(this.target);case 1:return this.listener.call(this.target,arguments[0]);case 2:return this.listener.call(this.target,arguments[0],arguments[1]);case 3:return this.listener.call(this.target,arguments[0],arguments[1],arguments[2]);default:for(var O=new Array(arguments.length),V=0;V<O.length;++V)O[V]=arguments[V];this.listener.apply(this.target,O)}}function A(O,V,J){var B={fired:!1,wrapFn:void 0,target:O,type:V,listener:J},z=g.call(w,B);return z.listener=J,B.wrapFn=z,z}b.prototype.once=function(V,J){if(typeof J!="function")throw new TypeError('"listener" argument must be a function');return this.on(V,A(this,V,J)),this},b.prototype.prependOnceListener=function(V,J){if(typeof J!="function")throw new TypeError('"listener" argument must be a function');return this.prependListener(V,A(this,V,J)),this},b.prototype.removeListener=function(V,J){var B,z,G,U,ie;if(typeof J!="function")throw new TypeError('"listener" argument must be a function');if(z=this._events,!z)return this;if(B=z[V],!B)return this;if(B===J||B.listener===J)--this._eventsCount===0?this._events=l(null):(delete z[V],z.removeListener&&this.emit("removeListener",V,B.listener||J));else if(typeof B!="function"){for(G=-1,U=B.length-1;U>=0;U--)if(B[U]===J||B[U].listener===J){ie=B[U].listener,G=U;break}if(G<0)return this;G===0?B.shift():N(B,G),B.length===1&&(z[V]=B[0]),z.removeListener&&this.emit("removeListener",V,ie||J)}return this},b.prototype.removeAllListeners=function(V){var J,B,z;if(B=this._events,!B)return this;if(!B.removeListener)return arguments.length===0?(this._events=l(null),this._eventsCount=0):B[V]&&(--this._eventsCount===0?this._events=l(null):delete B[V]),this;if(arguments.length===0){var G=s(B),U;for(z=0;z<G.length;++z)U=G[z],U!=="removeListener"&&this.removeAllListeners(U);return this.removeAllListeners("removeListener"),this._events=l(null),this._eventsCount=0,this}if(J=B[V],typeof J=="function")this.removeListener(V,J);else if(J)for(z=J.length-1;z>=0;z--)this.removeListener(V,J[z]);return this};function x(O,V,J){var B=O._events;if(!B)return[];var z=B[V];return z?typeof z=="function"?J?[z.listener||z]:[z]:J?S(z):E(z,z.length):[]}b.prototype.listeners=function(V){return x(this,V,!0)},b.prototype.rawListeners=function(V){return x(this,V,!1)},b.listenerCount=function(O,V){return typeof O.listenerCount=="function"?O.listenerCount(V):k.call(O,V)},b.prototype.listenerCount=k;function k(O){var V=this._events;if(V){var J=V[O];if(typeof J=="function")return 1;if(J)return J.length}return 0}b.prototype.eventNames=function(){return this._eventsCount>0?Reflect.ownKeys(this._events):[]};function N(O,V){for(var J=V,B=J+1,z=O.length;B<z;J+=1,B+=1)O[J]=O[B];O.pop()}function E(O,V){for(var J=new Array(V),B=0;B<V;++B)J[B]=O[B];return J}function S(O){for(var V=new Array(O.length),J=0;J<V.length;++J)V[J]=O[J].listener||O[J];return V}function R(O){var V=function(){};return V.prototype=O,new V}function M(O){for(var V in O)Object.prototype.hasOwnProperty.call(O,V);return V}function j(O){var V=this;return function(){return V.apply(O,arguments)}}},{}],53:[function(r,d,a){var l=r("./lib/parser");function s(){return(0,eval)("this")}d.exports={create:function(g,b){if(b=b||s(),g instanceof b.ArrayBuffer){var c=r("./lib/dom-bufferstream");return new l(new c(g,0,g.byteLength,!0,b))}else{var h=r("./lib/bufferstream");return new l(new h(g,0,g.length,!0))}}}},{"./lib/bufferstream":54,"./lib/dom-bufferstream":56,"./lib/parser":60}],54:[function(r,d,a){function l(s,g,b,c){this.buffer=s,this.offset=g||0,b=typeof b=="number"?b:s.length,this.endPosition=this.offset+b,this.setBigEndian(c)}l.prototype={setBigEndian:function(s){this.bigEndian=!!s},nextUInt8:function(){var s=this.buffer.readUInt8(this.offset);return this.offset+=1,s},nextInt8:function(){var s=this.buffer.readInt8(this.offset);return this.offset+=1,s},nextUInt16:function(){var s=this.bigEndian?this.buffer.readUInt16BE(this.offset):this.buffer.readUInt16LE(this.offset);return this.offset+=2,s},nextUInt32:function(){var s=this.bigEndian?this.buffer.readUInt32BE(this.offset):this.buffer.readUInt32LE(this.offset);return this.offset+=4,s},nextInt16:function(){var s=this.bigEndian?this.buffer.readInt16BE(this.offset):this.buffer.readInt16LE(this.offset);return this.offset+=2,s},nextInt32:function(){var s=this.bigEndian?this.buffer.readInt32BE(this.offset):this.buffer.readInt32LE(this.offset);return this.offset+=4,s},nextFloat:function(){var s=this.bigEndian?this.buffer.readFloatBE(this.offset):this.buffer.readFloatLE(this.offset);return this.offset+=4,s},nextDouble:function(){var s=this.bigEndian?this.buffer.readDoubleBE(this.offset):this.buffer.readDoubleLE(this.offset);return this.offset+=8,s},nextBuffer:function(s){var g=this.buffer.slice(this.offset,this.offset+s);return this.offset+=s,g},remainingLength:function(){return this.endPosition-this.offset},nextString:function(s){var g=this.buffer.toString("utf8",this.offset,this.offset+s);return this.offset+=s,g},mark:function(){var s=this;return{openWithOffset:function(g){return g=(g||0)+this.offset,new l(s.buffer,g,s.endPosition-g,s.bigEndian)},offset:this.offset}},offsetFrom:function(s){return this.offset-s.offset},skip:function(s){this.offset+=s},branch:function(s,g){return g=typeof g=="number"?g:this.endPosition-(this.offset+s),new l(this.buffer,this.offset+s,g,this.bigEndian)}},d.exports=l},{}],55:[function(r,d,a){function l(o){return parseInt(o,10)}var s=3600,g=60;function b(o,n){o=o.map(l),n=n.map(l);var m=o[0],y=o[1]-1,f=o[2],v=n[0],p=n[1],w=n[2],A=Date.UTC(m,y,f,v,p,w,0),x=A/1e3;return x}function c(o){var n=o.substr(0,10).split("-"),m=o.substr(11,8).split(":"),y=o.substr(19,6),f=y.split(":").map(l),v=f[0]*s+f[1]*g,p=b(n,m);if(p-=v,typeof p=="number"&&!isNaN(p))return p}function h(o){var n=o.split(" "),m=n[0].split(":"),y=n[1].split(":"),f=b(m,y);if(typeof f=="number"&&!isNaN(f))return f}function u(o){var n=o.length===19&&o.charAt(4)===":",m=o.length===25&&o.charAt(10)==="T";if(m)return c(o);if(n)return h(o)}d.exports={parseDateWithSpecFormat:h,parseDateWithTimezoneFormat:c,parseExifDate:u}},{}],56:[function(r,d,a){function l(s,g,b,c,h,u){this.global=h,g=g||0,b=b||s.byteLength-g,this.arrayBuffer=s.slice(g,g+b),this.view=new h.DataView(this.arrayBuffer,0,this.arrayBuffer.byteLength),this.setBigEndian(c),this.offset=0,this.parentOffset=(u||0)+g}l.prototype={setBigEndian:function(s){this.littleEndian=!s},nextUInt8:function(){var s=this.view.getUint8(this.offset);return this.offset+=1,s},nextInt8:function(){var s=this.view.getInt8(this.offset);return this.offset+=1,s},nextUInt16:function(){var s=this.view.getUint16(this.offset,this.littleEndian);return this.offset+=2,s},nextUInt32:function(){var s=this.view.getUint32(this.offset,this.littleEndian);return this.offset+=4,s},nextInt16:function(){var s=this.view.getInt16(this.offset,this.littleEndian);return this.offset+=2,s},nextInt32:function(){var s=this.view.getInt32(this.offset,this.littleEndian);return this.offset+=4,s},nextFloat:function(){var s=this.view.getFloat32(this.offset,this.littleEndian);return this.offset+=4,s},nextDouble:function(){var s=this.view.getFloat64(this.offset,this.littleEndian);return this.offset+=8,s},nextBuffer:function(s){var g=this.arrayBuffer.slice(this.offset,this.offset+s);return this.offset+=s,g},remainingLength:function(){return this.arrayBuffer.byteLength-this.offset},nextString:function(s){var g=this.arrayBuffer.slice(this.offset,this.offset+s);return g=String.fromCharCode.apply(null,new this.global.Uint8Array(g)),this.offset+=s,g},mark:function(){var s=this;return{openWithOffset:function(g){return g=(g||0)+this.offset,new l(s.arrayBuffer,g,s.arrayBuffer.byteLength-g,!s.littleEndian,s.global,s.parentOffset)},offset:this.offset,getParentOffset:function(){return s.parentOffset}}},offsetFrom:function(s){return this.parentOffset+this.offset-(s.offset+s.getParentOffset())},skip:function(s){this.offset+=s},branch:function(s,g){return g=typeof g=="number"?g:this.arrayBuffer.byteLength-(this.offset+s),new l(this.arrayBuffer,this.offset+s,g,!this.littleEndian,this.global,this.parentOffset)}},d.exports=l},{}],57:[function(r,d,a){d.exports={exif:{1:"InteropIndex",2:"InteropVersion",11:"ProcessingSoftware",254:"SubfileType",255:"OldSubfileType",256:"ImageWidth",257:"ImageHeight",258:"BitsPerSample",259:"Compression",262:"PhotometricInterpretation",263:"Thresholding",264:"CellWidth",265:"CellLength",266:"FillOrder",269:"DocumentName",270:"ImageDescription",271:"Make",272:"Model",273:"StripOffsets",274:"Orientation",277:"SamplesPerPixel",278:"RowsPerStrip",279:"StripByteCounts",280:"MinSampleValue",281:"MaxSampleValue",282:"XResolution",283:"YResolution",284:"PlanarConfiguration",285:"PageName",286:"XPosition",287:"YPosition",288:"FreeOffsets",289:"FreeByteCounts",290:"GrayResponseUnit",291:"GrayResponseCurve",292:"T4Options",293:"T6Options",296:"ResolutionUnit",297:"PageNumber",300:"ColorResponseUnit",301:"TransferFunction",305:"Software",306:"ModifyDate",315:"Artist",316:"HostComputer",317:"Predictor",318:"WhitePoint",319:"PrimaryChromaticities",320:"ColorMap",321:"HalftoneHints",322:"TileWidth",323:"TileLength",324:"TileOffsets",325:"TileByteCounts",326:"BadFaxLines",327:"CleanFaxData",328:"ConsecutiveBadFaxLines",330:"SubIFD",332:"InkSet",333:"InkNames",334:"NumberofInks",336:"DotRange",337:"TargetPrinter",338:"ExtraSamples",339:"SampleFormat",340:"SMinSampleValue",341:"SMaxSampleValue",342:"TransferRange",343:"ClipPath",344:"XClipPathUnits",345:"YClipPathUnits",346:"Indexed",347:"JPEGTables",351:"OPIProxy",400:"GlobalParametersIFD",401:"ProfileType",402:"FaxProfile",403:"CodingMethods",404:"VersionYear",405:"ModeNumber",433:"Decode",434:"DefaultImageColor",435:"T82Options",437:"JPEGTables",512:"JPEGProc",513:"ThumbnailOffset",514:"ThumbnailLength",515:"JPEGRestartInterval",517:"JPEGLosslessPredictors",518:"JPEGPointTransforms",519:"JPEGQTables",520:"JPEGDCTables",521:"JPEGACTables",529:"YCbCrCoefficients",530:"YCbCrSubSampling",531:"YCbCrPositioning",532:"ReferenceBlackWhite",559:"StripRowCounts",700:"ApplicationNotes",999:"USPTOMiscellaneous",4096:"RelatedImageFileFormat",4097:"RelatedImageWidth",4098:"RelatedImageHeight",18246:"Rating",18247:"XP_DIP_XML",18248:"StitchInfo",18249:"RatingPercent",32781:"ImageID",32931:"WangTag1",32932:"WangAnnotation",32933:"WangTag3",32934:"WangTag4",32995:"Matteing",32996:"DataType",32997:"ImageDepth",32998:"TileDepth",33405:"Model2",33421:"CFARepeatPatternDim",33422:"CFAPattern2",33423:"BatteryLevel",33424:"KodakIFD",33432:"Copyright",33434:"ExposureTime",33437:"FNumber",33445:"MDFileTag",33446:"MDScalePixel",33447:"MDColorTable",33448:"MDLabName",33449:"MDSampleInfo",33450:"MDPrepDate",33451:"MDPrepTime",33452:"MDFileUnits",33550:"PixelScale",33589:"AdventScale",33590:"AdventRevision",33628:"UIC1Tag",33629:"UIC2Tag",33630:"UIC3Tag",33631:"UIC4Tag",33723:"IPTC-NAA",33918:"IntergraphPacketData",33919:"IntergraphFlagRegisters",33920:"IntergraphMatrix",33921:"INGRReserved",33922:"ModelTiePoint",34016:"Site",34017:"ColorSequence",34018:"IT8Header",34019:"RasterPadding",34020:"BitsPerRunLength",34021:"BitsPerExtendedRunLength",34022:"ColorTable",34023:"ImageColorIndicator",34024:"BackgroundColorIndicator",34025:"ImageColorValue",34026:"BackgroundColorValue",34027:"PixelIntensityRange",34028:"TransparencyIndicator",34029:"ColorCharacterization",34030:"HCUsage",34031:"TrapIndicator",34032:"CMYKEquivalent",34118:"SEMInfo",34152:"AFCP_IPTC",34232:"PixelMagicJBIGOptions",34264:"ModelTransform",34306:"WB_GRGBLevels",34310:"LeafData",34377:"PhotoshopSettings",34665:"ExifOffset",34675:"ICC_Profile",34687:"TIFF_FXExtensions",34688:"MultiProfiles",34689:"SharedData",34690:"T88Options",34732:"ImageLayer",34735:"GeoTiffDirectory",34736:"GeoTiffDoubleParams",34737:"GeoTiffAsciiParams",34850:"ExposureProgram",34852:"SpectralSensitivity",34853:"GPSInfo",34855:"ISO",34856:"Opto-ElectricConvFactor",34857:"Interlace",34858:"TimeZoneOffset",34859:"SelfTimerMode",34864:"SensitivityType",34865:"StandardOutputSensitivity",34866:"RecommendedExposureIndex",34867:"ISOSpeed",34868:"ISOSpeedLatitudeyyy",34869:"ISOSpeedLatitudezzz",34908:"FaxRecvParams",34909:"FaxSubAddress",34910:"FaxRecvTime",34954:"LeafSubIFD",36864:"ExifVersion",36867:"DateTimeOriginal",36868:"CreateDate",37121:"ComponentsConfiguration",37122:"CompressedBitsPerPixel",37377:"ShutterSpeedValue",37378:"ApertureValue",37379:"BrightnessValue",37380:"ExposureCompensation",37381:"MaxApertureValue",37382:"SubjectDistance",37383:"MeteringMode",37384:"LightSource",37385:"Flash",37386:"FocalLength",37387:"FlashEnergy",37388:"SpatialFrequencyResponse",37389:"Noise",37390:"FocalPlaneXResolution",37391:"FocalPlaneYResolution",37392:"FocalPlaneResolutionUnit",37393:"ImageNumber",37394:"SecurityClassification",37395:"ImageHistory",37396:"SubjectArea",37397:"ExposureIndex",37398:"TIFF-EPStandardID",37399:"SensingMethod",37434:"CIP3DataFile",37435:"CIP3Sheet",37436:"CIP3Side",37439:"StoNits",37500:"MakerNote",37510:"UserComment",37520:"SubSecTime",37521:"SubSecTimeOriginal",37522:"SubSecTimeDigitized",37679:"MSDocumentText",37680:"MSPropertySetStorage",37681:"MSDocumentTextPosition",37724:"ImageSourceData",40091:"XPTitle",40092:"XPComment",40093:"XPAuthor",40094:"XPKeywords",40095:"XPSubject",40960:"FlashpixVersion",40961:"ColorSpace",40962:"ExifImageWidth",40963:"ExifImageHeight",40964:"RelatedSoundFile",40965:"InteropOffset",41483:"FlashEnergy",41484:"SpatialFrequencyResponse",41485:"Noise",41486:"FocalPlaneXResolution",41487:"FocalPlaneYResolution",41488:"FocalPlaneResolutionUnit",41489:"ImageNumber",41490:"SecurityClassification",41491:"ImageHistory",41492:"SubjectLocation",41493:"ExposureIndex",41494:"TIFF-EPStandardID",41495:"SensingMethod",41728:"FileSource",41729:"SceneType",41730:"CFAPattern",41985:"CustomRendered",41986:"ExposureMode",41987:"WhiteBalance",41988:"DigitalZoomRatio",41989:"FocalLengthIn35mmFormat",41990:"SceneCaptureType",41991:"GainControl",41992:"Contrast",41993:"Saturation",41994:"Sharpness",41995:"DeviceSettingDescription",41996:"SubjectDistanceRange",42016:"ImageUniqueID",42032:"OwnerName",42033:"SerialNumber",42034:"LensInfo",42035:"LensMake",42036:"LensModel",42037:"LensSerialNumber",42112:"GDALMetadata",42113:"GDALNoData",42240:"Gamma",44992:"ExpandSoftware",44993:"ExpandLens",44994:"ExpandFilm",44995:"ExpandFilterLens",44996:"ExpandScanner",44997:"ExpandFlashLamp",48129:"PixelFormat",48130:"Transformation",48131:"Uncompressed",48132:"ImageType",48256:"ImageWidth",48257:"ImageHeight",48258:"WidthResolution",48259:"HeightResolution",48320:"ImageOffset",48321:"ImageByteCount",48322:"AlphaOffset",48323:"AlphaByteCount",48324:"ImageDataDiscard",48325:"AlphaDataDiscard",50215:"OceScanjobDesc",50216:"OceApplicationSelector",50217:"OceIDNumber",50218:"OceImageLogic",50255:"Annotations",50341:"PrintIM",50560:"USPTOOriginalContentType",50706:"DNGVersion",50707:"DNGBackwardVersion",50708:"UniqueCameraModel",50709:"LocalizedCameraModel",50710:"CFAPlaneColor",50711:"CFALayout",50712:"LinearizationTable",50713:"BlackLevelRepeatDim",50714:"BlackLevel",50715:"BlackLevelDeltaH",50716:"BlackLevelDeltaV",50717:"WhiteLevel",50718:"DefaultScale",50719:"DefaultCropOrigin",50720:"DefaultCropSize",50721:"ColorMatrix1",50722:"ColorMatrix2",50723:"CameraCalibration1",50724:"CameraCalibration2",50725:"ReductionMatrix1",50726:"ReductionMatrix2",50727:"AnalogBalance",50728:"AsShotNeutral",50729:"AsShotWhiteXY",50730:"BaselineExposure",50731:"BaselineNoise",50732:"BaselineSharpness",50733:"BayerGreenSplit",50734:"LinearResponseLimit",50735:"CameraSerialNumber",50736:"DNGLensInfo",50737:"ChromaBlurRadius",50738:"AntiAliasStrength",50739:"ShadowScale",50740:"DNGPrivateData",50741:"MakerNoteSafety",50752:"RawImageSegmentation",50778:"CalibrationIlluminant1",50779:"CalibrationIlluminant2",50780:"BestQualityScale",50781:"RawDataUniqueID",50784:"AliasLayerMetadata",50827:"OriginalRawFileName",50828:"OriginalRawFileData",50829:"ActiveArea",50830:"MaskedAreas",50831:"AsShotICCProfile",50832:"AsShotPreProfileMatrix",50833:"CurrentICCProfile",50834:"CurrentPreProfileMatrix",50879:"ColorimetricReference",50898:"PanasonicTitle",50899:"PanasonicTitle2",50931:"CameraCalibrationSig",50932:"ProfileCalibrationSig",50933:"ProfileIFD",50934:"AsShotProfileName",50935:"NoiseReductionApplied",50936:"ProfileName",50937:"ProfileHueSatMapDims",50938:"ProfileHueSatMapData1",50939:"ProfileHueSatMapData2",50940:"ProfileToneCurve",50941:"ProfileEmbedPolicy",50942:"ProfileCopyright",50964:"ForwardMatrix1",50965:"ForwardMatrix2",50966:"PreviewApplicationName",50967:"PreviewApplicationVersion",50968:"PreviewSettingsName",50969:"PreviewSettingsDigest",50970:"PreviewColorSpace",50971:"PreviewDateTime",50972:"RawImageDigest",50973:"OriginalRawFileDigest",50974:"SubTileBlockSize",50975:"RowInterleaveFactor",50981:"ProfileLookTableDims",50982:"ProfileLookTableData",51008:"OpcodeList1",51009:"OpcodeList2",51022:"OpcodeList3",51041:"NoiseProfile",51043:"TimeCodes",51044:"FrameRate",51058:"TStop",51081:"ReelName",51089:"OriginalDefaultFinalSize",51090:"OriginalBestQualitySize",51091:"OriginalDefaultCropSize",51105:"CameraLabel",51107:"ProfileHueSatMapEncoding",51108:"ProfileLookTableEncoding",51109:"BaselineExposureOffset",51110:"DefaultBlackRender",51111:"NewRawImageDigest",51112:"RawToPreviewGain",51125:"DefaultUserCrop",59932:"Padding",59933:"OffsetSchema",65e3:"OwnerName",65001:"SerialNumber",65002:"Lens",65024:"KDC_IFD",65100:"RawFile",65101:"Converter",65102:"WhiteBalance",65105:"Exposure",65106:"Shadows",65107:"Brightness",65108:"Contrast",65109:"Saturation",65110:"Sharpness",65111:"Smoothness",65112:"MoireFilter"},gps:{0:"GPSVersionID",1:"GPSLatitudeRef",2:"GPSLatitude",3:"GPSLongitudeRef",4:"GPSLongitude",5:"GPSAltitudeRef",6:"GPSAltitude",7:"GPSTimeStamp",8:"GPSSatellites",9:"GPSStatus",10:"GPSMeasureMode",11:"GPSDOP",12:"GPSSpeedRef",13:"GPSSpeed",14:"GPSTrackRef",15:"GPSTrack",16:"GPSImgDirectionRef",17:"GPSImgDirection",18:"GPSMapDatum",19:"GPSDestLatitudeRef",20:"GPSDestLatitude",21:"GPSDestLongitudeRef",22:"GPSDestLongitude",23:"GPSDestBearingRef",24:"GPSDestBearing",25:"GPSDestDistanceRef",26:"GPSDestDistance",27:"GPSProcessingMethod",28:"GPSAreaInformation",29:"GPSDateStamp",30:"GPSDifferential",31:"GPSHPositioningError"}}},{}],58:[function(r,d,a){function l(h,u){switch(h){case 1:return u.nextUInt8();case 3:return u.nextUInt16();case 4:return u.nextUInt32();case 5:return[u.nextUInt32(),u.nextUInt32()];case 6:return u.nextInt8();case 8:return u.nextUInt16();case 9:return u.nextUInt32();case 10:return[u.nextInt32(),u.nextInt32()];case 11:return u.nextFloat();case 12:return u.nextDouble();default:throw new Error("Invalid format while decoding: "+h)}}function s(h){switch(h){case 1:case 2:case 6:case 7:return 1;case 3:case 8:return 2;case 4:case 9:case 11:return 4;case 5:case 10:case 12:return 8;default:return 0}}function g(h,u){var o=u.nextUInt16(),n=u.nextUInt16(),m=s(n),y=u.nextUInt32(),f=m*y,v,p;if(f>4&&(u=h.openWithOffset(u.nextUInt32())),n===2){v=u.nextString(y);var w=v.indexOf("\0");w!==-1&&(v=v.substr(0,w))}else if(n===7)v=u.nextBuffer(y);else if(n!==0)for(v=[],p=0;p<y;++p)v.push(l(n,u));return f<4&&u.skip(4-f),[o,v,n]}function b(h,u,o){var n=u.nextUInt16(),m,y;for(y=0;y<n;++y)m=g(h,u),o(m[0],m[1],m[2])}function c(h){var u=h.nextString(6);if(u!=="Exif\0\0")throw new Error("Invalid EXIF header");var o=h.mark(),n=h.nextUInt16();if(n===18761)h.setBigEndian(!1);else if(n===19789)h.setBigEndian(!0);else throw new Error("Invalid TIFF header");if(h.nextUInt16()!==42)throw new Error("Invalid TIFF data");return o}d.exports={IFD0:1,IFD1:2,GPSIFD:3,SubIFD:4,InteropIFD:5,parseTags:function(h,u){var o;try{o=c(h)}catch{return!1}var n,m,y,f=o.openWithOffset(h.nextUInt32()),v=this.IFD0;b(o,f,function(E,S,R){switch(E){case 34853:m=S[0];break;case 34665:n=S[0];break;default:u(v,E,S,R);break}});var p=f.nextUInt32();if(p!==0){var w=o.openWithOffset(p);b(o,w,u.bind(null,this.IFD1))}if(m){var A=o.openWithOffset(m);b(o,A,u.bind(null,this.GPSIFD))}if(n){var x=o.openWithOffset(n),k=this.InteropIFD;b(o,x,function(E,S,R){E===40965?y=S[0]:u(k,E,S,R)})}if(y){var N=o.openWithOffset(y);b(o,N,u.bind(null,this.InteropIFD))}return!0}}},{}],59:[function(r,d,a){d.exports={parseSections:function(l,s){var g,b;for(l.setBigEndian(!0);l.remainingLength()>0&&b!==218;){if(l.nextUInt8()!==255)throw new Error("Invalid JPEG section offset");b=l.nextUInt8(),b>=208&&b<=217||b===218?g=0:g=l.nextUInt16()-2,s(b,l.branch(0,g)),l.skip(g)}},getSizeFromSOFSection:function(l){return l.skip(1),{height:l.nextUInt16(),width:l.nextUInt16()}},getSectionName:function(l){var s,g;switch(l){case 216:s="SOI";break;case 196:s="DHT";break;case 219:s="DQT";break;case 221:s="DRI";break;case 218:s="SOS";break;case 254:s="COM";break;case 217:s="EOI";break;default:l>=224&&l<=239?(s="APP",g=l-224):l>=192&&l<=207&&l!==196&&l!==200&&l!==204?(s="SOF",g=l-192):l>=208&&l<=215&&(s="RST",g=l-208);break}var b={name:s};return typeof g=="number"&&(b.index=g),b}}},{}],60:[function(r,d,a){var l=r("./jpeg"),s=r("./exif"),g=r("./simplify");function b(h,u,o,n,m,y,f){this.startMarker=h,this.tags=u,this.imageSize=o,this.thumbnailOffset=n,this.thumbnailLength=m,this.thumbnailType=y,this.app1Offset=f}b.prototype={hasThumbnail:function(h){return!this.thumbnailOffset||!this.thumbnailLength?!1:typeof h!="string"?!0:h.toLowerCase().trim()==="image/jpeg"?this.thumbnailType===6:h.toLowerCase().trim()==="image/tiff"?this.thumbnailType===1:!1},getThumbnailOffset:function(){return this.app1Offset+6+this.thumbnailOffset},getThumbnailLength:function(){return this.thumbnailLength},getThumbnailBuffer:function(){return this._getThumbnailStream().nextBuffer(this.thumbnailLength)},_getThumbnailStream:function(){return this.startMarker.openWithOffset(this.getThumbnailOffset())},getImageSize:function(){return this.imageSize},getThumbnailSize:function(){var h=this._getThumbnailStream(),u;return l.parseSections(h,function(o,n){l.getSectionName(o).name==="SOF"&&(u=l.getSizeFromSOFSection(n))}),u}};function c(h){this.stream=h,this.flags={readBinaryTags:!1,resolveTagNames:!0,simplifyValues:!0,imageSize:!0,hidePointers:!0,returnTags:!0}}c.prototype={enableBinaryFields:function(h){return this.flags.readBinaryTags=!!h,this},enablePointers:function(h){return this.flags.hidePointers=!h,this},enableTagNames:function(h){return this.flags.resolveTagNames=!!h,this},enableImageSize:function(h){return this.flags.imageSize=!!h,this},enableReturnTags:function(h){return this.flags.returnTags=!!h,this},enableSimpleValues:function(h){return this.flags.simplifyValues=!!h,this},parse:function(){var h=this.stream.mark(),u=h.openWithOffset(0),o=this.flags,n,m,y,f,v,p,w,A,x;return o.resolveTagNames&&(w=r("./exif-tags")),o.resolveTagNames?(n={},A=function(k){return n[k.name]},x=function(k,N){n[k.name]=N}):(n=[],A=function(k){var N;for(N=0;N<n.length;++N)if(n[N].type===k.type&&n[N].section===k.section)return n.value},x=function(k,N){var E;for(E=0;E<n.length;++E)if(n[E].type===k.type&&n[E].section===k.section){n.value=N;return}}),l.parseSections(u,function(k,N){var E,S=N.offsetFrom(h);k===225?(E=s.parseTags(N,function(R,M,j,O){if(!(!o.readBinaryTags&&O===7)){if(M===513){if(y=j[0],o.hidePointers)return}else if(M===514){if(f=j[0],o.hidePointers)return}else if(M===259&&(v=j[0],o.hidePointers))return;if(!!o.returnTags)if(o.simplifyValues&&(j=g.simplifyValue(j,O)),o.resolveTagNames){var V=R===s.GPSIFD?w.gps:w.exif,J=V[M];J||(J=w.exif[M]),n.hasOwnProperty(J)||(n[J]=j)}else n.push({section:R,type:M,value:j})}}),E&&(p=S)):o.imageSize&&l.getSectionName(k).name==="SOF"&&(m=l.getSizeFromSOFSection(N))}),o.simplifyValues&&(g.castDegreeValues(A,x),g.castDateValues(A,x)),new b(h,n,m,y,f,v,p)}},d.exports=c},{"./exif":58,"./exif-tags":57,"./jpeg":59,"./simplify":61}],61:[function(r,d,a){var l=r("./exif"),s=r("./date"),g=[{section:l.GPSIFD,type:2,name:"GPSLatitude",refType:1,refName:"GPSLatitudeRef",posVal:"N"},{section:l.GPSIFD,type:4,name:"GPSLongitude",refType:3,refName:"GPSLongitudeRef",posVal:"E"}],b=[{section:l.SubIFD,type:306,name:"ModifyDate"},{section:l.SubIFD,type:36867,name:"DateTimeOriginal"},{section:l.SubIFD,type:36868,name:"CreateDate"},{section:l.SubIFD,type:306,name:"ModifyDate"}];d.exports={castDegreeValues:function(c,h){g.forEach(function(u){var o=c(u);if(o){var n=c({section:u.section,type:u.refType,name:u.refName}),m=n===u.posVal?1:-1,y=(o[0]+o[1]/60+o[2]/3600)*m;h(u,y)}})},castDateValues:function(c,h){b.forEach(function(u){var o=c(u);if(o){var n=s.parseExifDate(o);typeof n!="undefined"&&h(u,n)}})},simplifyValue:function(c,h){return Array.isArray(c)&&(c=c.map(function(u){return h===10||h===5?u[0]/u[1]:u}),c.length===1&&(c=c[0])),c}}},{"./date":55,"./exif":58}],62:[function(r,d,a){var l=r("@babel/runtime/helpers/interopRequireDefault"),s=l(r("@babel/runtime/helpers/toConsumableArray")),g=function(o){return(0,s.default)(o).map(function(n){return n.charCodeAt(0)})},b=g("META-INF/mozilla.rsa"),c=g("[Content_Types].xml"),h=g("_rels/.rels");d.exports=function(u){var o=u instanceof Uint8Array?u:new Uint8Array(u);if(!(o&&o.length>1))return null;var n=function(R,M){M=Object.assign({offset:0},M);for(var j=0;j<R.length;j++)if(M.mask){if(R[j]!==(M.mask[j]&o[j+M.offset]))return!1}else if(R[j]!==o[j+M.offset])return!1;return!0},m=function(R,M){return n(g(R),M)};if(n([255,216,255]))return{ext:"jpg",mime:"image/jpeg"};if(n([137,80,78,71,13,10,26,10]))return{ext:"png",mime:"image/png"};if(n([71,73,70]))return{ext:"gif",mime:"image/gif"};if(n([87,69,66,80],{offset:8}))return{ext:"webp",mime:"image/webp"};if(n([70,76,73,70]))return{ext:"flif",mime:"image/flif"};if((n([73,73,42,0])||n([77,77,0,42]))&&n([67,82],{offset:8}))return{ext:"cr2",mime:"image/x-canon-cr2"};if(n([73,73,42,0])||n([77,77,0,42]))return{ext:"tif",mime:"image/tiff"};if(n([66,77]))return{ext:"bmp",mime:"image/bmp"};if(n([73,73,188]))return{ext:"jxr",mime:"image/vnd.ms-photo"};if(n([56,66,80,83]))return{ext:"psd",mime:"image/vnd.adobe.photoshop"};if(n([80,75,3,4])){if(n([109,105,109,101,116,121,112,101,97,112,112,108,105,99,97,116,105,111,110,47,101,112,117,98,43,122,105,112],{offset:30}))return{ext:"epub",mime:"application/epub+zip"};if(n(b,{offset:30}))return{ext:"xpi",mime:"application/x-xpinstall"};if(m("mimetypeapplication/vnd.oasis.opendocument.text",{offset:30}))return{ext:"odt",mime:"application/vnd.oasis.opendocument.text"};if(m("mimetypeapplication/vnd.oasis.opendocument.spreadsheet",{offset:30}))return{ext:"ods",mime:"application/vnd.oasis.opendocument.spreadsheet"};if(m("mimetypeapplication/vnd.oasis.opendocument.presentation",{offset:30}))return{ext:"odp",mime:"application/vnd.oasis.opendocument.presentation"};var y=function(R){var M=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return R.findIndex(function(j,O,V){return O>=M&&V[O]===80&&V[O+1]===75&&V[O+2]===3&&V[O+3]===4})},f=0,v=!1,p=null;do{var w=f+30;if(v||(v=n(c,{offset:w})||n(h,{offset:w})),p||(m("word/",{offset:w})?p={ext:"docx",mime:"application/vnd.openxmlformats-officedocument.wordprocessingml.document"}:m("ppt/",{offset:w})?p={ext:"pptx",mime:"application/vnd.openxmlformats-officedocument.presentationml.presentation"}:m("xl/",{offset:w})&&(p={ext:"xlsx",mime:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"})),v&&p)return p;f=y(o,w)}while(f>=0);if(p)return p}if(n([80,75])&&(o[2]===3||o[2]===5||o[2]===7)&&(o[3]===4||o[3]===6||o[3]===8))return{ext:"zip",mime:"application/zip"};if(n([117,115,116,97,114],{offset:257}))return{ext:"tar",mime:"application/x-tar"};if(n([82,97,114,33,26,7])&&(o[6]===0||o[6]===1))return{ext:"rar",mime:"application/x-rar-compressed"};if(n([31,139,8]))return{ext:"gz",mime:"application/gzip"};if(n([66,90,104]))return{ext:"bz2",mime:"application/x-bzip2"};if(n([55,122,188,175,39,28]))return{ext:"7z",mime:"application/x-7z-compressed"};if(n([120,1]))return{ext:"dmg",mime:"application/x-apple-diskimage"};if(n([51,103,112,53])||n([0,0,0])&&n([102,116,121,112],{offset:4})&&(n([109,112,52,49],{offset:8})||n([109,112,52,50],{offset:8})||n([105,115,111,109],{offset:8})||n([105,115,111,50],{offset:8})||n([109,109,112,52],{offset:8})||n([77,52,86],{offset:8})||n([100,97,115,104],{offset:8})))return{ext:"mp4",mime:"video/mp4"};if(n([77,84,104,100]))return{ext:"mid",mime:"audio/midi"};if(n([26,69,223,163])){var A=o.subarray(4,4100),x=A.findIndex(function(S,R,M){return M[R]===66&&M[R+1]===130});if(x!==-1){var k=x+3,N=function(R){return(0,s.default)(R).every(function(M,j){return A[k+j]===M.charCodeAt(0)})};if(N("matroska"))return{ext:"mkv",mime:"video/x-matroska"};if(N("webm"))return{ext:"webm",mime:"video/webm"}}}if(n([0,0,0,20,102,116,121,112,113,116,32,32])||n([102,114,101,101],{offset:4})||n([102,116,121,112,113,116,32,32],{offset:4})||n([109,100,97,116],{offset:4})||n([119,105,100,101],{offset:4}))return{ext:"mov",mime:"video/quicktime"};if(n([82,73,70,70])){if(n([65,86,73],{offset:8}))return{ext:"avi",mime:"video/vnd.avi"};if(n([87,65,86,69],{offset:8}))return{ext:"wav",mime:"audio/vnd.wave"};if(n([81,76,67,77],{offset:8}))return{ext:"qcp",mime:"audio/qcelp"}}if(n([48,38,178,117,142,102,207,17,166,217]))return{ext:"wmv",mime:"video/x-ms-wmv"};if(n([0,0,1,186])||n([0,0,1,179]))return{ext:"mpg",mime:"video/mpeg"};if(n([102,116,121,112,51,103],{offset:4}))return{ext:"3gp",mime:"video/3gpp"};for(var E=0;E<2&&E<o.length-16;E++){if(n([73,68,51],{offset:E})||n([255,226],{offset:E,mask:[255,226]}))return{ext:"mp3",mime:"audio/mpeg"};if(n([255,228],{offset:E,mask:[255,228]}))return{ext:"mp2",mime:"audio/mpeg"};if(n([255,248],{offset:E,mask:[255,252]}))return{ext:"mp2",mime:"audio/mpeg"};if(n([255,240],{offset:E,mask:[255,252]}))return{ext:"mp4",mime:"audio/mpeg"}}if(n([102,116,121,112,77,52,65],{offset:4})||n([77,52,65,32]))return{ext:"m4a",mime:"audio/mp4"};if(n([79,112,117,115,72,101,97,100],{offset:28}))return{ext:"opus",mime:"audio/opus"};if(n([79,103,103,83]))return n([128,116,104,101,111,114,97],{offset:28})?{ext:"ogv",mime:"video/ogg"}:n([1,118,105,100,101,111,0],{offset:28})?{ext:"ogm",mime:"video/ogg"}:n([127,70,76,65,67],{offset:28})?{ext:"oga",mime:"audio/ogg"}:n([83,112,101,101,120,32,32],{offset:28})?{ext:"spx",mime:"audio/ogg"}:n([1,118,111,114,98,105,115],{offset:28})?{ext:"ogg",mime:"audio/ogg"}:{ext:"ogx",mime:"application/ogg"};if(n([102,76,97,67]))return{ext:"flac",mime:"audio/x-flac"};if(n([77,65,67,32]))return{ext:"ape",mime:"audio/ape"};if(n([119,118,112,107]))return{ext:"wv",mime:"audio/wavpack"};if(n([35,33,65,77,82,10]))return{ext:"amr",mime:"audio/amr"};if(n([37,80,68,70]))return{ext:"pdf",mime:"application/pdf"};if(n([77,90]))return{ext:"exe",mime:"application/x-msdownload"};if((o[0]===67||o[0]===70)&&n([87,83],{offset:1}))return{ext:"swf",mime:"application/x-shockwave-flash"};if(n([123,92,114,116,102]))return{ext:"rtf",mime:"application/rtf"};if(n([0,97,115,109]))return{ext:"wasm",mime:"application/wasm"};if(n([119,79,70,70])&&(n([0,1,0,0],{offset:4})||n([79,84,84,79],{offset:4})))return{ext:"woff",mime:"font/woff"};if(n([119,79,70,50])&&(n([0,1,0,0],{offset:4})||n([79,84,84,79],{offset:4})))return{ext:"woff2",mime:"font/woff2"};if(n([76,80],{offset:34})&&(n([0,0,1],{offset:8})||n([1,0,2],{offset:8})||n([2,0,2],{offset:8})))return{ext:"eot",mime:"application/vnd.ms-fontobject"};if(n([0,1,0,0,0]))return{ext:"ttf",mime:"font/ttf"};if(n([79,84,84,79,0]))return{ext:"otf",mime:"font/otf"};if(n([0,0,1,0]))return{ext:"ico",mime:"image/x-icon"};if(n([0,0,2,0]))return{ext:"cur",mime:"image/x-icon"};if(n([70,76,86,1]))return{ext:"flv",mime:"video/x-flv"};if(n([37,33]))return{ext:"ps",mime:"application/postscript"};if(n([253,55,122,88,90,0]))return{ext:"xz",mime:"application/x-xz"};if(n([83,81,76,105]))return{ext:"sqlite",mime:"application/x-sqlite3"};if(n([78,69,83,26]))return{ext:"nes",mime:"application/x-nintendo-nes-rom"};if(n([67,114,50,52]))return{ext:"crx",mime:"application/x-google-chrome-extension"};if(n([77,83,67,70])||n([73,83,99,40]))return{ext:"cab",mime:"application/vnd.ms-cab-compressed"};if(n([33,60,97,114,99,104,62,10,100,101,98,105,97,110,45,98,105,110,97,114,121]))return{ext:"deb",mime:"application/x-deb"};if(n([33,60,97,114,99,104,62]))return{ext:"ar",mime:"application/x-unix-archive"};if(n([237,171,238,219]))return{ext:"rpm",mime:"application/x-rpm"};if(n([31,160])||n([31,157]))return{ext:"Z",mime:"application/x-compress"};if(n([76,90,73,80]))return{ext:"lz",mime:"application/x-lzip"};if(n([208,207,17,224,161,177,26,225]))return{ext:"msi",mime:"application/x-msi"};if(n([6,14,43,52,2,5,1,1,13,1,2,1,1,2]))return{ext:"mxf",mime:"application/mxf"};if(n([71],{offset:4})&&(n([71],{offset:192})||n([71],{offset:196})))return{ext:"mts",mime:"video/mp2t"};if(n([66,76,69,78,68,69,82]))return{ext:"blend",mime:"application/x-blender"};if(n([66,80,71,251]))return{ext:"bpg",mime:"image/bpg"};if(n([0,0,0,12,106,80,32,32,13,10,135,10])){if(n([106,112,50,32],{offset:20}))return{ext:"jp2",mime:"image/jp2"};if(n([106,112,120,32],{offset:20}))return{ext:"jpx",mime:"image/jpx"};if(n([106,112,109,32],{offset:20}))return{ext:"jpm",mime:"image/jpm"};if(n([109,106,112,50],{offset:20}))return{ext:"mj2",mime:"image/mj2"}}if(n([70,79,82,77,0]))return{ext:"aif",mime:"audio/aiff"};if(m("<?xml "))return{ext:"xml",mime:"application/xml"};if(n([66,79,79,75,77,79,66,73],{offset:60}))return{ext:"mobi",mime:"application/x-mobipocket-ebook"};if(n([102,116,121,112],{offset:4})){if(n([109,105,102,49],{offset:8}))return{ext:"heic",mime:"image/heif"};if(n([109,115,102,49],{offset:8}))return{ext:"heic",mime:"image/heif-sequence"};if(n([104,101,105,99],{offset:8})||n([104,101,105,120],{offset:8}))return{ext:"heic",mime:"image/heic"};if(n([104,101,118,99],{offset:8})||n([104,101,118,120],{offset:8}))return{ext:"heic",mime:"image/heic-sequence"}}return n([171,75,84,88,32,49,49,187,13,10,26,10])?{ext:"ktx",mime:"image/ktx"}:null}},{"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/toConsumableArray":20}],63:[function(r,d,a){var l=r("is-callable"),s=Object.prototype.toString,g=Object.prototype.hasOwnProperty,b=function(n,m,y){for(var f=0,v=n.length;f<v;f++)g.call(n,f)&&(y==null?m(n[f],f,n):m.call(y,n[f],f,n))},c=function(n,m,y){for(var f=0,v=n.length;f<v;f++)y==null?m(n.charAt(f),f,n):m.call(y,n.charAt(f),f,n)},h=function(n,m,y){for(var f in n)g.call(n,f)&&(y==null?m(n[f],f,n):m.call(y,n[f],f,n))},u=function(n,m,y){if(!l(m))throw new TypeError("iterator must be a function");var f;arguments.length>=3&&(f=y),s.call(n)==="[object Array]"?b(n,m,f):typeof n=="string"?c(n,m,f):h(n,m,f)};d.exports=u},{"is-callable":77}],64:[function(r,d,a){function l(c,h,u,m){var n=0,m=m===void 0?{}:m,y=m.loop===void 0?null:m.loop,f=m.palette===void 0?null:m.palette;if(h<=0||u<=0||h>65535||u>65535)throw new Error("Width/Height invalid.");function v(S){var R=S.length;if(R<2||R>256||R&R-1)throw new Error("Invalid code/color length, must be power of 2 and 2 .. 256.");return R}c[n++]=71,c[n++]=73,c[n++]=70,c[n++]=56,c[n++]=57,c[n++]=97;var p=0,w=0;if(f!==null){for(var A=v(f);A>>=1;)++p;if(A=1<<p,--p,m.background!==void 0){if(w=m.background,w>=A)throw new Error("Background index out of range.");if(w===0)throw new Error("Background index explicitly passed as 0.")}}if(c[n++]=h&255,c[n++]=h>>8&255,c[n++]=u&255,c[n++]=u>>8&255,c[n++]=(f!==null?128:0)|p,c[n++]=w,c[n++]=0,f!==null)for(var x=0,k=f.length;x<k;++x){var N=f[x];c[n++]=N>>16&255,c[n++]=N>>8&255,c[n++]=N&255}if(y!==null){if(y<0||y>65535)throw new Error("Loop count invalid.");c[n++]=33,c[n++]=255,c[n++]=11,c[n++]=78,c[n++]=69,c[n++]=84,c[n++]=83,c[n++]=67,c[n++]=65,c[n++]=80,c[n++]=69,c[n++]=50,c[n++]=46,c[n++]=48,c[n++]=3,c[n++]=1,c[n++]=y&255,c[n++]=y>>8&255,c[n++]=0}var E=!1;this.addFrame=function(S,R,M,j,O,V){if(E===!0&&(--n,E=!1),V=V===void 0?{}:V,S<0||R<0||S>65535||R>65535)throw new Error("x/y invalid.");if(M<=0||j<=0||M>65535||j>65535)throw new Error("Width/Height invalid.");if(O.length<M*j)throw new Error("Not enough pixels for the frame size.");var J=!0,B=V.palette;if(B==null&&(J=!1,B=f),B==null)throw new Error("Must supply either a local or global palette.");for(var z=v(B),G=0;z>>=1;)++G;z=1<<G;var U=V.delay===void 0?0:V.delay,ie=V.disposal===void 0?0:V.disposal;if(ie<0||ie>3)throw new Error("Disposal out of range.");var oe=!1,ae=0;if(V.transparent!==void 0&&V.transparent!==null&&(oe=!0,ae=V.transparent,ae<0||ae>=z))throw new Error("Transparent color index.");if((ie!==0||oe||U!==0)&&(c[n++]=33,c[n++]=249,c[n++]=4,c[n++]=ie<<2|(oe===!0?1:0),c[n++]=U&255,c[n++]=U>>8&255,c[n++]=ae,c[n++]=0),c[n++]=44,c[n++]=S&255,c[n++]=S>>8&255,c[n++]=R&255,c[n++]=R>>8&255,c[n++]=M&255,c[n++]=M>>8&255,c[n++]=j&255,c[n++]=j>>8&255,c[n++]=J===!0?128|G-1:0,J===!0)for(var W=0,ee=B.length;W<ee;++W){var _=B[W];c[n++]=_>>16&255,c[n++]=_>>8&255,c[n++]=_&255}return n=s(c,n,G<2?2:G,O),n},this.end=function(){return E===!1&&(c[n++]=59,E=!0),n},this.getOutputBuffer=function(){return c},this.setOutputBuffer=function(S){c=S},this.getOutputBufferPosition=function(){return n},this.setOutputBufferPosition=function(S){n=S}}function s(c,h,u,o){c[h++]=u;var n=h++,m=1<<u,y=m-1,f=m+1,v=f+1,p=u+1,w=0,A=0;function x(V){for(;w>=V;)c[h++]=A&255,A>>=8,w-=8,h===n+256&&(c[n]=255,n=h++)}function k(V){A|=V<<w,w+=p,x(8)}var N=o[0]&y,E={};k(m);for(var S=1,R=o.length;S<R;++S){var M=o[S]&y,j=N<<8|M,O=E[j];if(O===void 0){for(A|=N<<w,w+=p;w>=8;)c[h++]=A&255,A>>=8,w-=8,h===n+256&&(c[n]=255,n=h++);v===4096?(k(m),v=f+1,p=u+1,E={}):(v>=1<<p&&++p,E[j]=v++),N=M}else N=O}return k(N),k(f),x(1),n+1===h?c[n]=0:(c[n]=h-n-1,c[h++]=0),h}function g(c){var h=0;if(c[h++]!==71||c[h++]!==73||c[h++]!==70||c[h++]!==56||(c[h++]+1&253)!==56||c[h++]!==97)throw new Error("Invalid GIF 87a/89a header.");var u=c[h++]|c[h++]<<8,o=c[h++]|c[h++]<<8,n=c[h++],m=n>>7,y=n&7,f=1<<y+1;c[h++],c[h++];var v=null,p=null;m&&(v=h,p=f,h+=f*3);var w=!0,A=[],x=0,k=null,N=0,E=null;for(this.width=u,this.height=o;w&&h<c.length;)switch(c[h++]){case 33:switch(c[h++]){case 255:if(c[h]!==11||c[h+1]==78&&c[h+2]==69&&c[h+3]==84&&c[h+4]==83&&c[h+5]==67&&c[h+6]==65&&c[h+7]==80&&c[h+8]==69&&c[h+9]==50&&c[h+10]==46&&c[h+11]==48&&c[h+12]==3&&c[h+13]==1&&c[h+16]==0)h+=14,E=c[h++]|c[h++]<<8,h++;else for(h+=12;;){var S=c[h++];if(!(S>=0))throw Error("Invalid block size");if(S===0)break;h+=S}break;case 249:if(c[h++]!==4||c[h+4]!==0)throw new Error("Invalid graphics extension block.");var R=c[h++];x=c[h++]|c[h++]<<8,k=c[h++],(R&1)===0&&(k=null),N=R>>2&7,h++;break;case 254:for(;;){var S=c[h++];if(!(S>=0))throw Error("Invalid block size");if(S===0)break;h+=S}break;default:throw new Error("Unknown graphic control label: 0x"+c[h-1].toString(16))}break;case 44:var M=c[h++]|c[h++]<<8,j=c[h++]|c[h++]<<8,O=c[h++]|c[h++]<<8,V=c[h++]|c[h++]<<8,J=c[h++],B=J>>7,z=J>>6&1,G=J&7,U=1<<G+1,ie=v,oe=p,ae=!1;if(B){var ae=!0;ie=h,oe=U,h+=U*3}var W=h;for(h++;;){var S=c[h++];if(!(S>=0))throw Error("Invalid block size");if(S===0)break;h+=S}A.push({x:M,y:j,width:O,height:V,has_local_palette:ae,palette_offset:ie,palette_size:oe,data_offset:W,data_length:h-W,transparent_index:k,interlaced:!!z,delay:x,disposal:N});break;case 59:w=!1;break;default:throw new Error("Unknown gif block: 0x"+c[h-1].toString(16))}this.numFrames=function(){return A.length},this.loopCount=function(){return E},this.frameInfo=function(ee){if(ee<0||ee>=A.length)throw new Error("Frame index out of range.");return A[ee]},this.decodeAndBlitFrameBGRA=function(ee,_){var re=this.frameInfo(ee),fe=re.width*re.height,pe=new Uint8Array(fe);b(c,re.data_offset,pe,fe);var he=re.palette_offset,se=re.transparent_index;se===null&&(se=256);var ce=re.width,q=u-ce,K=ce,Y=(re.y*u+re.x)*4,$=((re.y+re.height)*u+re.x)*4,te=Y,L=q*4;re.interlaced===!0&&(L+=u*4*7);for(var T=8,F=0,X=pe.length;F<X;++F){var H=pe[F];if(K===0&&(te+=L,K=ce,te>=$&&(L=q*4+u*4*(T-1),te=Y+(ce+q)*(T<<1),T>>=1)),H===se)te+=4;else{var I=c[he+H*3],C=c[he+H*3+1],Q=c[he+H*3+2];_[te++]=Q,_[te++]=C,_[te++]=I,_[te++]=255}--K}},this.decodeAndBlitFrameRGBA=function(ee,_){var re=this.frameInfo(ee),fe=re.width*re.height,pe=new Uint8Array(fe);b(c,re.data_offset,pe,fe);var he=re.palette_offset,se=re.transparent_index;se===null&&(se=256);var ce=re.width,q=u-ce,K=ce,Y=(re.y*u+re.x)*4,$=((re.y+re.height)*u+re.x)*4,te=Y,L=q*4;re.interlaced===!0&&(L+=u*4*7);for(var T=8,F=0,X=pe.length;F<X;++F){var H=pe[F];if(K===0&&(te+=L,K=ce,te>=$&&(L=q*4+u*4*(T-1),te=Y+(ce+q)*(T<<1),T>>=1)),H===se)te+=4;else{var I=c[he+H*3],C=c[he+H*3+1],Q=c[he+H*3+2];_[te++]=I,_[te++]=C,_[te++]=Q,_[te++]=255}--K}}}function b(c,h,u,o){for(var n=c[h++],m=1<<n,y=m+1,f=y+1,v=n+1,p=(1<<v)-1,w=0,A=0,x=0,k=c[h++],N=new Int32Array(4096),E=null;;){for(;w<16&&k!==0;)A|=c[h++]<<w,w+=8,k===1?k=c[h++]:--k;if(w<v)break;var S=A&p;if(A>>=v,w-=v,S===m){f=y+1,v=n+1,p=(1<<v)-1,E=null;continue}else if(S===y)break;for(var R=S<f?S:E,M=0,j=R;j>m;)j=N[j]>>8,++M;var O=j,V=x+M+(R!==S?1:0);if(V>o){console.log("Warning, gif stream longer than expected.");return}u[x++]=O,x+=M;var J=x;for(R!==S&&(u[x++]=O),j=R;M--;)j=N[j],u[--J]=j&255,j>>=8;E!==null&&f<4096&&(N[f++]=E<<8|O,f>=p+1&&v<12&&(++v,p=p<<1|1)),E=S}return x!==o&&console.log("Warning, gif stream shorter than expected."),u}try{a.GifWriter=l,a.GifReader=g}catch{}},{}],65:[function(r,d,a){(function(l){class s{constructor(...b){if(b.length===0)throw new Error("constructor requires parameters");const c=b[0];if(c!==null&&typeof c=="object")if(c instanceof s){const h=c.bitmap;this.bitmap={width:h.width,height:h.height,data:new l(h.width*h.height*4)},h.data.copy(this.bitmap.data)}else if(c.width&&c.height&&c.data)this.bitmap=c;else throw new Error("unrecognized constructor parameters");else if(typeof c=="number"&&typeof b[1]=="number"){const h=c,u=b[1],o=b[2];this.bitmap={width:h,height:u},l.isBuffer(o)?this.bitmap.data=o:(this.bitmap.data=new l(h*u*4),typeof o=="number"&&this.fillRGBA(o))}else throw new Error("unrecognized constructor parameters")}blit(b,c,h,u,o,n,m){if(u+n>this.bitmap.width)throw new Error("copy exceeds width of source bitmap");if(c+n>b.bitmap.width)throw new Error("copy exceeds width of target bitmap");if(o+m>this.bitmap.height)throw new Error("copy exceeds height of source bitmap");if(h+m>b.bitmap.height)throw new Erro("copy exceeds height of target bitmap");const y=this.bitmap.data,f=b.bitmap.data,v=this.bitmap.width*4,p=b.bitmap.width*4,w=n*4;let A=o*v+u*4,x=h*p+c*4;for(;--m>=0;)y.copy(f,x,A,A+w),A+=v,x+=p;return this}fillRGBA(b){const c=this.bitmap.data,h=this.bitmap.height*4;let u=0;for(;u<h;)c.writeUInt32BE(b,u),u+=4;for(;u<c.length;)c.copy(c,u,0,h),u+=h;return this}getRGBA(b,c){const h=(c*this.bitmap.width+b)*4;return this.bitmap.data.readUInt32BE(h)}getRGBASet(){const b=new Set,c=this.bitmap.data;for(let h=0;h<c.length;h+=4)b.add(c.readUInt32BE(h,!0));return b}greyscale(){const b=this.bitmap.data;return this.scan(0,0,this.bitmap.width,this.bitmap.height,(c,h,u)=>{const o=Math.round(.299*b[u]+.587*b[u+1]+.114*b[u+2]);b[u]=o,b[u+1]=o,b[u+2]=o}),this}reframe(b,c,h,u,o){const n=b<0?0:b,m=c<0?0:c,y=h+n>this.bitmap.width?this.bitmap.width-n:h,f=u+m>this.bitmap.height?this.bitmap.height-m:u,v=b<0?-b:0,p=c<0?-c:0;let w;if(o===void 0){if(n!==b||m!=c||y!==h||f!==u)throw new GifError("fillRGBA required for this reframing");w=new s(h,u)}else w=new s(h,u,o);return this.blit(w,v,p,n,m,y,f),this.bitmap=w.bitmap,this}scale(b){if(b===1)return;if(!Number.isInteger(b)||b<1)throw new Error("the scale must be an integer >= 1");const c=this.bitmap.width,h=this.bitmap.height,u=c*b*4,o=this.bitmap.data,n=new l(h*u*b);let m=0,y,f=0;for(let v=0;v<h;++v){y=f;for(let p=0;p<c;++p){const w=o.readUInt32BE(m,!0);for(let A=0;A<b;++A)n.writeUInt32BE(w,f),f+=4;m+=4}for(let p=1;p<b;++p)n.copy(n,f,y,f),f+=u,y+=u}return this.bitmap={width:c*b,height:h*b,data:n},this}scanAllCoords(b){const c=this.bitmap.width,h=this.bitmap.data.length;let u=0,o=0;for(let n=0;n<h;n+=4)b(u,o,n),++u===c&&(u=0,++o)}scanAllIndexes(b){const c=this.bitmap.data.length;for(let h=0;h<c;h+=4)b(h)}}d.exports=s}).call(this,r("buffer").Buffer)},{buffer:48}],66:[function(r,d,a){class l{constructor(b,c,h){this.width=h.width,this.height=h.height,this.loops=h.loops,this.usesTransparency=h.usesTransparency,this.colorScope=h.colorScope,this.frames=c,this.buffer=b}}l.GlobalColorsPreferred=0,l.GlobalColorsOnly=1,l.LocalColorsOnly=2;class s extends Error{constructor(b){super(b),b instanceof Error&&(this.stack="Gif"+b.stack)}}a.Gif=l,a.GifError=s},{}],67:[function(r,d,a){(function(l,s){const g=r("omggif"),{Gif:b,GifError:c}=r("./gif");let h;l.nextTick(()=>{h=r("./gifutil")});const{GifFrame:u}=r("./gifframe"),o=200,n=100;class m{constructor(S={}){this._transparentRGB=null,typeof S.transparentRGB=="number"&&S.transparentRGB!==0&&(this._transparentRGBA=S.transparentRGB*256),this._testInitialBufferSize=0}decodeGif(S){try{let R;try{R=new g.GifReader(S)}catch(V){throw new c(V)}const M=R.numFrames(),j=[],O={width:R.width,height:R.height,loops:R.loopCount()};O.usesTransparency=!1;for(let V=0;V<M;++V){const J=this._decodeFrame(R,V,O.usesTransparency);j.push(J.frame),J.usesTransparency&&(O.usesTransparency=!0)}return Promise.resolve(new b(S,j,O))}catch(R){return Promise.reject(R)}}encodeGif(S,R={}){try{if(S===null||S.length===0)throw new c("there are no frames");const M=h.getMaxDimensions(S);return R=Object.assign({},R),R.width=M.maxWidth,R.height=M.maxHeight,R.loops=R.loops||0,R.colorScope=R.colorScope||b.GlobalColorsPreferred,Promise.resolve(this._encodeGif(S,R))}catch(M){return Promise.reject(M)}}_decodeFrame(S,R,M){let j,O;try{if(j=S.frameInfo(R),O=new s(S.width*S.height*4),S.decodeAndBlitFrameRGBA(R,O),j.width!==S.width||j.height!==S.height){if(j.y&&(O=O.slice(j.y*S.width*4)),S.width>j.width)for(let B=0;B<j.height;++B)O.copy(O,B*j.width*4,(j.x+B*S.width)*4,(j.x+B*S.width)*4+j.width*4);O=O.slice(0,j.width*j.height*4)}}catch(B){throw new c(B)}let V=!1;if(this._transparentRGBA===null){if(!M)for(let B=3;B<O.length;B+=4)O[B]===0&&(V=!0,B=O.length)}else for(let B=3;B<O.length;B+=4)O[B]===0&&(O.writeUInt32BE(this._transparentRGBA,B-3),V=!0);return{frame:new u(j.width,j.height,O,{xOffset:j.x,yOffset:j.y,disposalMethod:j.disposal,interlaced:j.interlaced,delayCentisecs:j.delay}),usesTransparency:V}}_encodeGif(S,R){let M;if(R.colorScope===b.LocalColorsOnly)M=h.getColorInfo(S,0);else if(M=h.getColorInfo(S,256),!M.colors){if(R.colorScope===b.GlobalColorsOnly)throw new c("Too many color indexes for global color table");R.colorScope=b.LocalColorsOnly}R.usesTransparency=M.usesTransparency;const j=M.palettes;return R.colorScope===b.LocalColorsOnly?p(S,R,2e3,j):v(S,R,2e3,M)}_getSizeEstimateGlobal(S,R){if(this._testInitialBufferSize>0)return this._testInitialBufferSize;let M=o+3*256;const j=k(S);return R.forEach(O=>{M+=A(O,j)}),M}_getSizeEstimateLocal(S,R){if(this._testInitialBufferSize>0)return this._testInitialBufferSize;let M=o;for(let j=0;j<R.length;++j){const O=S[j],V=k(O);M+=A(R[j],V)}return M}}a.GifCodec=m;function y(E,S){const R=E.indexOf(S);return R===-1?null:R}function f(E,S){for(var R=0,M=E.length-1,j;R<=M;)if(j=Math.floor((R+M)/2),E[j]>S)M=j-1;else if(E[j]<S)R=j+1;else return j;return null}function v(E,S,R,M){const j={colors:M.colors.slice(),usesTransparency:M.usesTransparency};w(j);const O={palette:j.colors,loop:S.loops};let V=new s(R),J;try{J=new g.GifWriter(V,S.width,S.height,O)}catch(B){throw new c(B)}for(let B=0;B<E.length;++B)V=N(J,B,E[B],M,!1);return new b(V.slice(0,J.end()),E,S)}function p(E,S,R,M){const j={loop:S.loops};let O=new s(R),V;try{V=new g.GifWriter(O,S.width,S.height,j)}catch(J){throw new c(J)}for(let J=0;J<E.length;++J)O=N(V,J,E[J],M[J],!0);return new b(O.slice(0,V.end()),E,S)}function w(E){const S=E.colors;E.usesTransparency&&S.push(0);const R=S.length;let M=2;for(;R>M;)M<<=1;S.length=M,S.fill(0,R)}function A(E,S){let R=E.bitmap.width*E.bitmap.height;return R=Math.ceil(R*S/8),R+=Math.ceil(R/255),n+R+3*256}function x(E,S,R){const M=R.colors,j=M.length<=8?y:f,O=S.bitmap.data,V=new s(O.length/4);let J=M.length,B=0,z=0;for(;B<O.length;){if(O[B+3]!==0){const G=O.readUInt32BE(B,!0)>>8&16777215;V[z]=j(M,G)}else V[z]=J;B+=4,++z}if(R.usesTransparency){if(J===256)throw new c(`Frame ${E} already has 256 colorsand so can't use transparency`)}else J=null;return{buffer:V,transparentIndex:J}}function k(E){let S=E.indexCount,R=0;for(--S;S;)++R,S>>=1;return R>0?R:1}function N(E,S,R,M,j){if(R.interlaced)throw new c("writing interlaced GIFs is not supported");const O=x(S,R,M),V={delay:R.delayCentisecs,disposal:R.disposalMethod,transparent:O.transparentIndex};j&&(w(M),V.palette=M.colors);try{let J=E.getOutputBuffer(),B=E.getOutputBufferPosition(),z,G=!0;for(;G;)if(z=E.addFrame(R.xOffset,R.yOffset,R.bitmap.width,R.bitmap.height,O.buffer,V),G=!1,z>=J.length-1){const U=new s(J.length*1.5);J.copy(U),E.setOutputBuffer(U),E.setOutputBufferPosition(B),J=U,G=!0}return J}catch(J){throw new c(J)}}}).call(this,r("_process"),r("buffer").Buffer)},{"./gif":66,"./gifframe":68,"./gifutil":69,_process:133,buffer:48,omggif:64}],68:[function(r,d,a){const l=r("./bitmapimage");r("./gif");class s extends l{constructor(...b){if(super(...b),b[0]instanceof s){const c=b[0];this.xOffset=c.xOffset,this.yOffset=c.yOffset,this.disposalMethod=c.disposalMethod,this.delayCentisecs=c.delayCentisecs,this.interlaced=c.interlaced}else{const c=b[b.length-1];let h={};typeof c=="object"&&!(c instanceof l)&&(h=c),this.xOffset=h.xOffset||0,this.yOffset=h.yOffset||0,this.disposalMethod=h.disposalMethod!==void 0?h.disposalMethod:s.DisposeToBackgroundColor,this.delayCentisecs=h.delayCentisecs||8,this.interlaced=h.interlaced||!1}}getPalette(){const b=new Set,c=this.bitmap.data;let h=0,u=!1;for(;h<c.length;){if(c[h+3]===0)u=!0;else{const y=c.readUInt32BE(h,!0)>>8&16777215;b.add(y)}h+=4}const o=new Array(b.size),n=b.values();for(h=0;h<o.length;++h)o[h]=n.next().value;o.sort((y,f)=>y-f);let m=o.length;return u&&++m,{colors:o,usesTransparency:u,indexCount:m}}}s.DisposeToAnything=0,s.DisposeNothing=1,s.DisposeToBackgroundColor=2,s.DisposeToPrevious=3,a.GifFrame=s},{"./bitmapimage":65,"./gif":66}],69:[function(r,d,a){(function(l){const s=r("fs"),g=r("image-q"),b=r("./bitmapimage"),{GifFrame:c}=r("./gifframe"),{GifError:h}=r("./gif"),{GifCodec:u}=r("./gifcodec"),o=[".jpg",".jpeg",".png",".bmp"],n=new u;a.cloneFrames=function(v){let p=[];return v.forEach(w=>{p.push(new c(w))}),p},a.getColorInfo=function(v,p){let w=!1;const A=[];for(let S=0;S<v.length;++S){let R=v[S].getPalette();if(R.usesTransparency&&(w=!0),R.indexCount>256)throw new h(`Frame ${S} uses more than 256 color indexes`);A.push(R)}if(p===0)return{usesTransparency:w,palettes:A};const x=new Set;A.forEach(S=>{S.colors.forEach(R=>{x.add(R)})});let k=x.size;if(w&&++k,p&&k>p)return{usesTransparency:w,palettes:A};const N=new Array(x.size),E=x.values();for(let S=0;S<N.length;++S)N[S]=E.next().value;return N.sort((S,R)=>S-R),{colors:N,indexCount:k,usesTransparency:w,palettes:A}},a.copyAsJimp=function(v,p){return a.shareAsJimp(v,new b(p))},a.getMaxDimensions=function(v){let p=0,w=0;return v.forEach(A=>{const x=A.xOffset+A.bitmap.width;x>p&&(p=x);const k=A.yOffset+A.bitmap.height;k>w&&(w=k)}),{maxWidth:p,maxHeight:w}},a.quantizeDekker=function(v,p,w){p=p||256,m(v,"NeuQuantFloat",p,0,w)},a.quantizeSorokin=function(v,p,w,A){p=p||256,w=w||"min-pop";let x;switch(w){case"min-pop":x=2;break;case"top-pop":x=1;break;default:throw new Error(`Invalid quantizeSorokin histogram '${w}'`)}m(v,"RGBQuant",p,x,A)},a.quantizeWu=function(v,p,w,A){if(p=p||256,w=w||5,w<1||w>8)throw new Error("Invalid quantization quality");m(v,"WuQuant",p,w,A)},a.read=function(v,p){return p=p||n,l.isBuffer(v)?p.decodeGif(v):y(v).then(w=>p.decodeGif(w))},a.shareAsJimp=function(v,p){const w=new v(p.bitmap.width,p.bitmap.height,0);return w.bitmap.data=p.bitmap.data,w},a.write=function(v,p,w,A){A=A||n;const x=v.match(/\.[a-zA-Z]+$/);if(x!==null&&o.includes(x[0].toLowerCase()))throw new Error(`GIF '${v}' has an unexpected suffix`);return A.encodeGif(p,w).then(k=>f(v,k.buffer).then(()=>k))};function m(v,p,w,A,x){const k=Array.isArray(v)?v:[v],N=["FloydSteinberg","FalseFloydSteinberg","Stucki","Atkinson","Jarvis","Burkes","Sierra","TwoSierra","SierraLite"];if(x){if(N.indexOf(x.ditherAlgorithm)<0)throw new Error(`Invalid ditherAlgorithm '${x.ditherAlgorithm}'`);x.serpentine===void 0&&(x.serpentine=!0),x.minimumColorDistanceToDither===void 0&&(x.minimumColorDistanceToDither=0),x.calculateErrorLikeGIMP===void 0&&(x.calculateErrorLikeGIMP=!1)}const E=new g.distance.Euclidean,S=new g.palette[p](E,w,A);let R;x?R=new g.image.ErrorDiffusionArray(E,g.image.ErrorDiffusionArrayKernel[x.ditherAlgorithm],x.serpentine,x.minimumColorDistanceToDither,x.calculateErrorLikeGIMP):R=new g.image.NearestColor(E);const M=[];k.forEach(O=>{const V=O.bitmap.data,J=new ArrayBuffer(V.length),B=new Uint32Array(J);for(let G=0,U=0;G<V.length;G+=4,++U)B[U]=V.readUInt32LE(G,!0);const z=g.utils.PointContainer.fromUint32Array(B,O.bitmap.width,O.bitmap.height);S.sample(z),M.push(z)});const j=S.quantize();for(let O=0;O<k.length;++O){const V=k[O].bitmap.data,B=R.quantize(M[O],j).toUint32Array();for(let z=0,G=0;z<V.length;z+=4,++G)V.writeUInt32LE(B[G],z)}}function y(v){return new Promise((p,w)=>{s.readFile(v,(A,x)=>A?w(A):p(x))})}function f(v,p){return new Promise((w,A)=>{s.writeFile(v,p,x=>x?A(x):w())})}}).call(this,{isBuffer:r("../../is-buffer/index.js")})},{"../../is-buffer/index.js":76,"./bitmapimage":65,"./gif":66,"./gifcodec":67,"./gifframe":68,fs:47,"image-q":74}],70:[function(r,d,a){const l=r("./bitmapimage"),{Gif:s,GifError:g}=r("./gif"),{GifCodec:b}=r("./gifcodec"),{GifFrame:c}=r("./gifframe"),h=r("./gifutil");d.exports={BitmapImage:l,Gif:s,GifCodec:b,GifFrame:c,GifUtil:h,GifError:g}},{"./bitmapimage":65,"./gif":66,"./gifcodec":67,"./gifframe":68,"./gifutil":69}],71:[function(r,d,a){(function(l){var s;typeof i!="undefined"?s=i:typeof l!="undefined"?s=l:typeof self!="undefined"?s=self:s={},d.exports=s}).call(this,typeof ot!="undefined"?ot:typeof self!="undefined"?self:typeof i!="undefined"?i:{})},{}],72:[function(r,d,a){var l=r("http"),s=r("url"),g=d.exports;for(var b in l)l.hasOwnProperty(b)&&(g[b]=l[b]);g.request=function(h,u){return h=c(h),l.request.call(this,h,u)},g.get=function(h,u){return h=c(h),l.get.call(this,h,u)};function c(h){if(typeof h=="string"&&(h=s.parse(h)),h.protocol||(h.protocol="https:"),h.protocol!=="https:")throw new Error('Protocol "'+h.protocol+'" not supported. Expected "https:"');return h}},{http:156,url:180}],73:[function(r,d,a){a.read=function(l,s,g,b,c){var h,u,o=c*8-b-1,n=(1<<o)-1,m=n>>1,y=-7,f=g?c-1:0,v=g?-1:1,p=l[s+f];for(f+=v,h=p&(1<<-y)-1,p>>=-y,y+=o;y>0;h=h*256+l[s+f],f+=v,y-=8);for(u=h&(1<<-y)-1,h>>=-y,y+=b;y>0;u=u*256+l[s+f],f+=v,y-=8);if(h===0)h=1-m;else{if(h===n)return u?NaN:(p?-1:1)*(1/0);u=u+Math.pow(2,b),h=h-m}return(p?-1:1)*u*Math.pow(2,h-b)},a.write=function(l,s,g,b,c,h){var u,o,n,m=h*8-c-1,y=(1<<m)-1,f=y>>1,v=c===23?Math.pow(2,-24)-Math.pow(2,-77):0,p=b?0:h-1,w=b?1:-1,A=s<0||s===0&&1/s<0?1:0;for(s=Math.abs(s),isNaN(s)||s===1/0?(o=isNaN(s)?1:0,u=y):(u=Math.floor(Math.log(s)/Math.LN2),s*(n=Math.pow(2,-u))<1&&(u--,n*=2),u+f>=1?s+=v/n:s+=v*Math.pow(2,1-f),s*n>=2&&(u++,n/=2),u+f>=y?(o=0,u=y):u+f>=1?(o=(s*n-1)*Math.pow(2,c),u=u+f):(o=s*Math.pow(2,f-1)*Math.pow(2,c),u=0));c>=8;l[g+p]=o&255,p+=w,o/=256,c-=8);for(u=u<<c|o,m+=c;m>0;l[g+p]=u&255,p+=w,u/=256,m-=8);l[g+p-w]|=A*128}},{}],74:[function(r,d,a){(function(s,g){typeof a=="object"&&typeof d=="object"?d.exports=g():typeof a=="object"?a.iq=g():s.iq=g()})(this,function(){return function(l){var s={};function g(b){if(s[b])return s[b].exports;var c=s[b]={exports:{},id:b,loaded:!1};return l[b].call(c.exports,c,c.exports,g),c.loaded=!0,c.exports}return g.m=l,g.c=s,g.p="",g(0)}([function(l,s,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * iq.ts - Image Quantization Library
 */var b=g(1);s.constants=b;var c=g(3);s.conversion=c;var h=g(12);s.distance=h;var u=g(20);s.palette=u;var o=g(30);s.image=o;var n=g(35);s.quality=n;var m=g(37);s.utils=m},function(l,s,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * constants.ts - part of Image Quantization Library
 */var b=g(2);s.bt709=b},function(l,s){var g;(function(h){h[h.RED=.2126]="RED",h[h.GREEN=.7152]="GREEN",h[h.BLUE=.0722]="BLUE",h[h.WHITE=1]="WHITE"})(g||(g={})),s.Y=g;var b;(function(h){h[h.RED=.64]="RED",h[h.GREEN=.3]="GREEN",h[h.BLUE=.15]="BLUE",h[h.WHITE=.3127]="WHITE"})(b||(b={})),s.x=b;var c;(function(h){h[h.RED=.33]="RED",h[h.GREEN=.6]="GREEN",h[h.BLUE=.06]="BLUE",h[h.WHITE=.329]="WHITE"})(c||(c={})),s.y=c},function(l,s,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * iq.ts - Image Quantization Library
 */var b=g(4);s.rgb2xyz=b.rgb2xyz;var c=g(5);s.rgb2hsl=c.rgb2hsl;var h=g(7);s.rgb2lab=h.rgb2lab;var u=g(9);s.lab2xyz=u.lab2xyz;var o=g(10);s.lab2rgb=o.lab2rgb;var n=g(8);s.xyz2lab=n.xyz2lab;var m=g(11);s.xyz2rgb=m.xyz2rgb},function(l,s){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * rgb2xyz.ts - part of Image Quantization Library
 */function g(c){return c>.04045?Math.pow((c+.055)/1.055,2.4):c/12.92}function b(c,h,u){return c=g(c/255),h=g(h/255),u=g(u/255),{x:c*.4124+h*.3576+u*.1805,y:c*.2126+h*.7152+u*.0722,z:c*.0193+h*.1192+u*.9505}}s.rgb2xyz=b},function(l,s,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * rgb2hsl.ts - part of Image Quantization Library
 */var b=g(6);function c(h,u,o){var n=b.min3(h,u,o),m=b.max3(h,u,o),y=m-n,f=(n+m)/510,v=0;f>0&&f<1&&(v=y/(f<.5?m+n:510-m-n));var p=0;return y>0&&(m===h?p=(u-o)/y:m===u?p=2+(o-h)/y:p=4+(h-u)/y,p*=60,p<0&&(p+=360)),{h:p,s:v,l:f}}s.rgb2hsl=c},function(l,s){function g(m){return m*(Math.PI/180)}s.degrees2radians=g;function b(m,y,f){var v=m;return v<y&&(v=y),v<f&&(v=f),v}s.max3=b;function c(m,y,f){var v=m;return v>y&&(v=y),v>f&&(v=f),v}s.min3=c;function h(m,y,f){return m>f&&(m=f),m<y&&(m=y),m|0}s.intInRange=h;function u(m){return m=Math.round(m),m>255?m=255:m<0&&(m=0),m}s.inRange0to255Rounded=u;function o(m){return m>255?m=255:m<0&&(m=0),m}s.inRange0to255=o;function n(m,y){var f=typeof m[0],v;if(f==="number"||f==="string"){for(var p=Object.create(null),w=0,A=m.length;w<A;w++){var x=m[w];p[x]||p[x]===0||(p[x]=w)}v=m.sort(function(N,E){return y(N,E)||p[N]-p[E]})}else{var k=m.slice(0);v=m.sort(function(N,E){return y(N,E)||k.indexOf(N)-k.indexOf(E)})}return v}s.stableSort=n},function(l,s,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * rgb2lab.ts - part of Image Quantization Library
 */var b=g(4),c=g(8);function h(u,o,n){var m=b.rgb2xyz(u,o,n);return c.xyz2lab(m.x,m.y,m.z)}s.rgb2lab=h},function(l,s){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * xyz2lab.ts - part of Image Quantization Library
 */var g=.95047,b=1,c=1.08883;function h(o){return o>.008856?Math.pow(o,1/3):7.787*o+16/116}function u(o,n,m){if(o=h(o/g),n=h(n/b),m=h(m/c),116*n-16<0)throw new Error("xxx");return{L:Math.max(0,116*n-16),a:500*(o-n),b:200*(n-m)}}s.xyz2lab=u},function(l,s){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * lab2xyz.ts - part of Image Quantization Library
 */var g=.95047,b=1,c=1.08883;function h(o){return o>.206893034?Math.pow(o,3):(o-16/116)/7.787}function u(o,n,m){var y=(o+16)/116,f=n/500+y,v=y-m/200;return{x:g*h(f),y:b*h(y),z:c*h(v)}}s.lab2xyz=u},function(l,s,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * lab2rgb.ts - part of Image Quantization Library
 */var b=g(9),c=g(11);function h(u,o,n){var m=b.lab2xyz(u,o,n);return c.xyz2rgb(m.x,m.y,m.z)}s.lab2rgb=h},function(l,s,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * xyz2rgb.ts - part of Image Quantization Library
 */var b=g(6);function c(u){return u>.0031308?1.055*Math.pow(u,1/2.4)-.055:12.92*u}function h(u,o,n){var m=c(u*3.2406+o*-1.5372+n*-.4986),y=c(u*-.9689+o*1.8758+n*.0415),f=c(u*.0557+o*-.204+n*1.057);return{r:b.inRange0to255Rounded(m*255),g:b.inRange0to255Rounded(y*255),b:b.inRange0to255Rounded(f*255)}}s.xyz2rgb=h},function(l,s,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * iq.ts - Image Quantization Library
 */var b=g(13);s.AbstractDistanceCalculator=b.AbstractDistanceCalculator;var c=g(14);s.CIE94Textiles=c.CIE94Textiles,s.CIE94GraphicArts=c.CIE94GraphicArts;var h=g(15);s.CIEDE2000=h.CIEDE2000;var u=g(16);s.CMETRIC=u.CMETRIC;var o=g(17);s.AbstractEuclidean=o.AbstractEuclidean,s.Euclidean=o.Euclidean,s.EuclideanRgbQuantWOAlpha=o.EuclideanRgbQuantWOAlpha,s.EuclideanRgbQuantWithAlpha=o.EuclideanRgbQuantWithAlpha;var n=g(18);s.AbstractManhattan=n.AbstractManhattan,s.Manhattan=n.Manhattan,s.ManhattanSRGB=n.ManhattanSRGB,s.ManhattanNommyde=n.ManhattanNommyde;var m=g(19);s.PNGQUANT=m.PNGQUANT},function(l,s){var g=function(){function b(){this._setDefaults(),this.setWhitePoint(255,255,255,255)}return b.prototype.setWhitePoint=function(c,h,u,o){this._whitePoint={r:c>0?255/c:0,g:h>0?255/h:0,b:u>0?255/u:0,a:o>0?255/o:0},this._maxDistance=this.calculateRaw(c,h,u,o,0,0,0,0)},b.prototype.calculateNormalized=function(c,h){return this.calculateRaw(c.r,c.g,c.b,c.a,h.r,h.g,h.b,h.a)/this._maxDistance},b.prototype._setDefaults=function(){},b}();s.AbstractDistanceCalculator=g},function(l,s,g){var b=this&&this.__extends||function(y,f){for(var v in f)f.hasOwnProperty(v)&&(y[v]=f[v]);function p(){this.constructor=y}y.prototype=f===null?Object.create(f):(p.prototype=f.prototype,new p)};/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * cie94.ts - part of Image Quantization Library
 */var c=g(13),h=g(7),u=g(6),o=function(y){b(f,y);function f(){y.apply(this,arguments)}return f.prototype.calculateRaw=function(v,p,w,A,x,k,N,E){var S=h.rgb2lab(u.inRange0to255(v*this._whitePoint.r),u.inRange0to255(p*this._whitePoint.g),u.inRange0to255(w*this._whitePoint.b)),R=h.rgb2lab(u.inRange0to255(x*this._whitePoint.r),u.inRange0to255(k*this._whitePoint.g),u.inRange0to255(N*this._whitePoint.b)),M=S.L-R.L,j=S.a-R.a,O=S.b-R.b,V=Math.sqrt(S.a*S.a+S.b*S.b),J=Math.sqrt(R.a*R.a+R.b*R.b),B=V-J,z=j*j+O*O-B*B;z=z<0?0:Math.sqrt(z);var G=(E-A)*this._whitePoint.a*this._kA;return Math.sqrt(Math.pow(M/this._Kl,2)+Math.pow(B/(1+this._K1*V),2)+Math.pow(z/(1+this._K2*V),2)+Math.pow(G,2))},f}(c.AbstractDistanceCalculator);s.AbstractCIE94=o;var n=function(y){b(f,y);function f(){y.apply(this,arguments)}return f.prototype._setDefaults=function(){this._Kl=2,this._K1=.048,this._K2=.014,this._kA=.25*50/255},f}(o);s.CIE94Textiles=n;var m=function(y){b(f,y);function f(){y.apply(this,arguments)}return f.prototype._setDefaults=function(){this._Kl=1,this._K1=.045,this._K2=.015,this._kA=.25*100/255},f}(o);s.CIE94GraphicArts=m},function(l,s,g){var b=this&&this.__extends||function(n,m){for(var y in m)m.hasOwnProperty(y)&&(n[y]=m[y]);function f(){this.constructor=n}n.prototype=m===null?Object.create(m):(f.prototype=m.prototype,new f)};/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * ciede2000.ts - part of Image Quantization Library
 */var c=g(13),h=g(7),u=g(6),o=function(n){b(m,n);function m(){n.apply(this,arguments)}return m.prototype.calculateRaw=function(y,f,v,p,w,A,x,k){var N=h.rgb2lab(u.inRange0to255(y*this._whitePoint.r),u.inRange0to255(f*this._whitePoint.g),u.inRange0to255(v*this._whitePoint.b)),E=h.rgb2lab(u.inRange0to255(w*this._whitePoint.r),u.inRange0to255(A*this._whitePoint.g),u.inRange0to255(x*this._whitePoint.b)),S=(k-p)*this._whitePoint.a*m._kA,R=this.calculateRawInLab(N,E);return Math.sqrt(R+S*S)},m.prototype.calculateRawInLab=function(y,f){var v=y.L,p=y.a,w=y.b,A=f.L,x=f.a,k=f.b,N=Math.sqrt(p*p+w*w),E=Math.sqrt(x*x+k*k),S=Math.pow((N+E)/2,7),R=.5*(1-Math.sqrt(S/(S+m._pow25to7))),M=(1+R)*p,j=(1+R)*x,O=Math.sqrt(M*M+w*w),V=Math.sqrt(j*j+k*k),J=O*V,B=m._calculatehp(w,M),z=m._calculatehp(k,j),G=Math.abs(B-z),U=A-v,ie=V-O,oe=m._calculate_dHp(J,G,z,B),ae=m._calculate_ahp(J,G,B,z),W=m._calculateT(ae),ee=(O+V)/2,_=Math.pow((v+A)/2-50,2),re=1+.015*_/Math.sqrt(20+_),fe=1+.045*ee,pe=1+.015*W*ee,he=m._calculateRT(ae,ee),se=U/re,ce=ie/fe,q=oe/pe;return Math.pow(se,2)+Math.pow(ce,2)+Math.pow(q,2)+he*ce*q},m._calculatehp=function(y,f){var v=Math.atan2(y,f);return v>=0?v:v+m._deg360InRad},m._calculateRT=function(y,f){var v=Math.pow(f,7),p=2*Math.sqrt(v/(v+m._pow25to7)),w=m._deg30InRad*Math.exp(-Math.pow((y-m._deg275InRad)/m._deg25InRad,2));return-Math.sin(2*w)*p},m._calculateT=function(y){return 1-.17*Math.cos(y-m._deg30InRad)+.24*Math.cos(y*2)+.32*Math.cos(y*3+m._deg6InRad)-.2*Math.cos(y*4-m._deg63InRad)},m._calculate_ahp=function(y,f,v,p){var w=v+p;return y==0?w:f<=m._deg180InRad?w/2:w<m._deg360InRad?(w+m._deg360InRad)/2:(w-m._deg360InRad)/2},m._calculate_dHp=function(y,f,v,p){var w;return y==0?w=0:f<=m._deg180InRad?w=v-p:v<=p?w=v-p+m._deg360InRad:w=v-p-m._deg360InRad,2*Math.sqrt(y)*Math.sin(w/2)},m._kA=.25*100/255,m._pow25to7=Math.pow(25,7),m._deg360InRad=u.degrees2radians(360),m._deg180InRad=u.degrees2radians(180),m._deg30InRad=u.degrees2radians(30),m._deg6InRad=u.degrees2radians(6),m._deg63InRad=u.degrees2radians(63),m._deg275InRad=u.degrees2radians(275),m._deg25InRad=u.degrees2radians(25),m}(c.AbstractDistanceCalculator);s.CIEDE2000=o},function(l,s,g){var b=this&&this.__extends||function(u,o){for(var n in o)o.hasOwnProperty(n)&&(u[n]=o[n]);function m(){this.constructor=u}u.prototype=o===null?Object.create(o):(m.prototype=o.prototype,new m)};/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * cmetric.ts - part of Image Quantization Library
 */var c=g(13),h=function(u){b(o,u);function o(){u.apply(this,arguments)}return o.prototype.calculateRaw=function(n,m,y,f,v,p,w,A){var x=(n+v)/2*this._whitePoint.r,k=(n-v)*this._whitePoint.r,N=(m-p)*this._whitePoint.g,E=(y-w)*this._whitePoint.b,S=((512+x)*k*k>>8)+4*N*N+((767-x)*E*E>>8),R=(A-f)*this._whitePoint.a;return Math.sqrt(S+R*R)},o}(c.AbstractDistanceCalculator);s.CMETRIC=h},function(l,s,g){var b=this&&this.__extends||function(y,f){for(var v in f)f.hasOwnProperty(v)&&(y[v]=f[v]);function p(){this.constructor=y}y.prototype=f===null?Object.create(f):(p.prototype=f.prototype,new p)};/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * euclidean.ts - part of Image Quantization Library
 */var c=g(13),h=g(2),u=function(y){b(f,y);function f(){y.apply(this,arguments)}return f.prototype.calculateRaw=function(v,p,w,A,x,k,N,E){var S=x-v,R=k-p,M=N-w,j=E-A;return Math.sqrt(this._kR*S*S+this._kG*R*R+this._kB*M*M+this._kA*j*j)},f}(c.AbstractDistanceCalculator);s.AbstractEuclidean=u;var o=function(y){b(f,y);function f(){y.apply(this,arguments)}return f.prototype._setDefaults=function(){this._kR=1,this._kG=1,this._kB=1,this._kA=1},f}(u);s.Euclidean=o;var n=function(y){b(f,y);function f(){y.apply(this,arguments)}return f.prototype._setDefaults=function(){this._kR=h.Y.RED,this._kG=h.Y.GREEN,this._kB=h.Y.BLUE,this._kA=1},f}(u);s.EuclideanRgbQuantWithAlpha=n;var m=function(y){b(f,y);function f(){y.apply(this,arguments)}return f.prototype._setDefaults=function(){this._kR=h.Y.RED,this._kG=h.Y.GREEN,this._kB=h.Y.BLUE,this._kA=0},f}(u);s.EuclideanRgbQuantWOAlpha=m},function(l,s,g){var b=this&&this.__extends||function(y,f){for(var v in f)f.hasOwnProperty(v)&&(y[v]=f[v]);function p(){this.constructor=y}y.prototype=f===null?Object.create(f):(p.prototype=f.prototype,new p)};/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * manhattanNeuQuant.ts - part of Image Quantization Library
 */var c=g(13),h=g(2),u=function(y){b(f,y);function f(){y.apply(this,arguments)}return f.prototype.calculateRaw=function(v,p,w,A,x,k,N,E){var S=x-v,R=k-p,M=N-w,j=E-A;return S<0&&(S=0-S),R<0&&(R=0-R),M<0&&(M=0-M),j<0&&(j=0-j),this._kR*S+this._kG*R+this._kB*M+this._kA*j},f}(c.AbstractDistanceCalculator);s.AbstractManhattan=u;var o=function(y){b(f,y);function f(){y.apply(this,arguments)}return f.prototype._setDefaults=function(){this._kR=1,this._kG=1,this._kB=1,this._kA=1},f}(u);s.Manhattan=o;var n=function(y){b(f,y);function f(){y.apply(this,arguments)}return f.prototype._setDefaults=function(){this._kR=.4984,this._kG=.8625,this._kB=.2979,this._kA=1},f}(u);s.ManhattanNommyde=n;var m=function(y){b(f,y);function f(){y.apply(this,arguments)}return f.prototype._setDefaults=function(){this._kR=h.Y.RED,this._kG=h.Y.GREEN,this._kB=h.Y.BLUE,this._kA=1},f}(u);s.ManhattanSRGB=m},function(l,s,g){var b=this&&this.__extends||function(u,o){for(var n in o)o.hasOwnProperty(n)&&(u[n]=o[n]);function m(){this.constructor=u}u.prototype=o===null?Object.create(o):(m.prototype=o.prototype,new m)};/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * pngQuant.ts - part of Image Quantization Library
 */var c=g(13),h=function(u){b(o,u);function o(){u.apply(this,arguments)}return o.prototype.calculateRaw=function(n,m,y,f,v,p,w,A){var x=(A-f)*this._whitePoint.a;return this._colordifference_ch(n*this._whitePoint.r,v*this._whitePoint.r,x)+this._colordifference_ch(m*this._whitePoint.g,p*this._whitePoint.g,x)+this._colordifference_ch(y*this._whitePoint.b,w*this._whitePoint.b,x)},o.prototype._colordifference_ch=function(n,m,y){var f=n-m,v=f+y;return f*f+v*v},o}(c.AbstractDistanceCalculator);s.PNGQUANT=h},function(l,s,g){var b=g(21);s.NeuQuant=b.NeuQuant;var c=g(25);s.NeuQuantFloat=c.NeuQuantFloat;var h=g(26);s.RGBQuant=h.RGBQuant;var u=g(27);s.ColorHistogram=u.ColorHistogram;var o=g(29);s.WuQuant=o.WuQuant,s.WuColorCube=o.WuColorCube},function(l,s,g){/**
 * @preserve TypeScript port:
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * neuquant.ts - part of Image Quantization Library
 */var b=g(22),c=g(24),h=3,u=function(){function n(m){this.r=this.g=this.b=this.a=m}return n.prototype.toPoint=function(){return c.Point.createByRGBA(this.r>>h,this.g>>h,this.b>>h,this.a>>h)},n.prototype.subtract=function(m,y,f,v){this.r-=m|0,this.g-=y|0,this.b-=f|0,this.a-=v|0},n}(),o=function(){function n(m,y){y===void 0&&(y=256),this._distance=m,this._pointArray=[],this._sampleFactor=1,this._networkSize=y,this._distance.setWhitePoint(255<<h,255<<h,255<<h,255<<h)}return n.prototype.sample=function(m){this._pointArray=this._pointArray.concat(m.getPointArray())},n.prototype.quantize=function(){return this._init(),this._learn(),this._buildPalette()},n.prototype._init=function(){this._freq=[],this._bias=[],this._radPower=[],this._network=[];for(var m=0;m<this._networkSize;m++)this._network[m]=new u((m<<h+8)/this._networkSize|0),this._freq[m]=n._initialBias/this._networkSize|0,this._bias[m]=0},n.prototype._learn=function(){var m=this._sampleFactor,y=this._pointArray.length;y<n._minpicturebytes&&(m=1);var f=30+(m-1)/3|0,v=y/m|0,p=v/n._nCycles|0,w=n._initAlpha,A=(this._networkSize>>3)*n._radiusBias,x=A>>n._radiusBiasShift;x<=1&&(x=0);for(var k=0;k<x;k++)this._radPower[k]=w*((x*x-k*k)*n._radBias/(x*x))>>>0;var N;y<n._minpicturebytes?N=1:y%n._prime1!=0?N=n._prime1:y%n._prime2!=0?N=n._prime2:y%n._prime3!=0?N=n._prime3:N=n._prime4;for(var k=0,E=0;k<v;){var S=this._pointArray[E],R=S.b<<h,M=S.g<<h,j=S.r<<h,O=S.a<<h,V=this._contest(R,M,j,O);if(this._alterSingle(w,V,R,M,j,O),x!==0&&this._alterNeighbour(x,V,R,M,j,O),E+=N,E>=y&&(E-=y),k++,p===0&&(p=1),k%p===0){w-=w/f|0,A-=A/n._radiusDecrease|0,x=A>>n._radiusBiasShift,x<=1&&(x=0);for(var J=0;J<x;J++)this._radPower[J]=w*((x*x-J*J)*n._radBias/(x*x))>>>0}}},n.prototype._buildPalette=function(){var m=new b.Palette;return this._network.forEach(function(y){m.add(y.toPoint())}),m.sort(),m},n.prototype._alterNeighbour=function(m,y,f,v,p,w){var A=y-m;A<-1&&(A=-1);var x=y+m;x>this._networkSize&&(x=this._networkSize);for(var k=y+1,N=y-1,E=1;k<x||N>A;){var S=this._radPower[E++]/n._alphaRadBias;if(k<x){var R=this._network[k++];R.subtract(S*(R.r-p),S*(R.g-v),S*(R.b-f),S*(R.a-w))}if(N>A){var R=this._network[N--];R.subtract(S*(R.r-p),S*(R.g-v),S*(R.b-f),S*(R.a-w))}}},n.prototype._alterSingle=function(m,y,f,v,p,w){m/=n._initAlpha;var A=this._network[y];A.subtract(m*(A.r-p),m*(A.g-v),m*(A.b-f),m*(A.a-w))},n.prototype._contest=function(m,y,f,v){for(var p=1020<<h,w=~(1<<31),A=w,x=-1,k=x,N=0;N<this._networkSize;N++){var E=this._network[N],S=this._distance.calculateNormalized(E,{r:f,g:y,b:m,a:v})*p|0;S<w&&(w=S,x=N);var R=S-(this._bias[N]>>n._initialBiasShift-h);R<A&&(A=R,k=N);var M=this._freq[N]>>n._betaShift;this._freq[N]-=M,this._bias[N]+=M<<n._gammaShift}return this._freq[x]+=n._beta,this._bias[x]-=n._betaGamma,k},n._prime1=499,n._prime2=491,n._prime3=487,n._prime4=503,n._minpicturebytes=n._prime4,n._nCycles=100,n._initialBiasShift=16,n._initialBias=1<<n._initialBiasShift,n._gammaShift=10,n._betaShift=10,n._beta=n._initialBias>>n._betaShift,n._betaGamma=n._initialBias<<n._gammaShift-n._betaShift,n._radiusBiasShift=6,n._radiusBias=1<<n._radiusBiasShift,n._radiusDecrease=30,n._alphaBiasShift=10,n._initAlpha=1<<n._alphaBiasShift,n._radBiasShift=8,n._radBias=1<<n._radBiasShift,n._alphaRadBiasShift=n._alphaBiasShift+n._radBiasShift,n._alphaRadBias=1<<n._alphaRadBiasShift,n}();s.NeuQuant=o},function(l,s,g){var b=g(23),c=g(5),h=10;function u(n,m){for(var y=360,f=y/m,v=f/2,p=1,w=f-v;p<m;p++,w+=f)if(n>=w&&n<w+f)return p;return 0}s.hueGroup=u;var o=function(){function n(){this._pointArray=[],this._i32idx={},this._pointContainer=new b.PointContainer,this._pointContainer.setHeight(1),this._pointArray=this._pointContainer.getPointArray()}return n.prototype.add=function(m){this._pointArray.push(m),this._pointContainer.setWidth(this._pointArray.length)},n.prototype.has=function(m){for(var y=this._pointArray.length-1;y>=0;y--)if(m.uint32===this._pointArray[y].uint32)return!0;return!1},n.prototype.getNearestColor=function(m,y){return this._pointArray[this.getNearestIndex(m,y)|0]},n.prototype.getPointContainer=function(){return this._pointContainer},n.prototype._nearestPointFromCache=function(m){return typeof this._i32idx[m]=="number"?this._i32idx[m]:-1},n.prototype.getNearestIndex=function(m,y){var f=this._nearestPointFromCache(""+y.uint32);if(f>=0)return f;var v=Number.MAX_VALUE;f=0;for(var p=0,w=this._pointArray.length;p<w;p++){var A=this._pointArray[p],x=m.calculateRaw(y.r,y.g,y.b,y.a,A.r,A.g,A.b,A.a);x<v&&(v=x,f=p)}return this._i32idx[y.uint32]=f,f},n.prototype.sort=function(){this._i32idx={},this._pointArray.sort(function(m,y){var f=c.rgb2hsl(m.r,m.g,m.b),v=c.rgb2hsl(y.r,y.g,y.b),p=m.r===m.g&&m.g===m.b?0:1+u(f.h,h),w=y.r===y.g&&y.g===y.b?0:1+u(v.h,h),A=w-p;if(A)return-A;var x=m.getLuminosity(!0),k=y.getLuminosity(!0);if(k-x!==0)return k-x;var N=(v.s*100|0)-(f.s*100|0);return N?-N:0})},n}();s.Palette=o},function(l,s,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * pointContainer.ts - part of Image Quantization Library
 */var b=g(24),c=function(){function h(){this._width=0,this._height=0,this._pointArray=[]}return h.prototype.getWidth=function(){return this._width},h.prototype.getHeight=function(){return this._height},h.prototype.setWidth=function(u){this._width=u},h.prototype.setHeight=function(u){this._height=u},h.prototype.getPointArray=function(){return this._pointArray},h.prototype.clone=function(){var u=new h;u._width=this._width,u._height=this._height;for(var o=0,n=this._pointArray.length;o<n;o++)u._pointArray[o]=b.Point.createByUint32(this._pointArray[o].uint32|0);return u},h.prototype.toUint32Array=function(){for(var u=this._pointArray.length,o=new Uint32Array(u),n=0;n<u;n++)o[n]=this._pointArray[n].uint32;return o},h.prototype.toUint8Array=function(){return new Uint8Array(this.toUint32Array().buffer)},h.fromHTMLImageElement=function(u){var o=u.naturalWidth,n=u.naturalHeight,m=document.createElement("canvas");m.width=o,m.height=n;var y=m.getContext("2d");return y.drawImage(u,0,0,o,n,0,0,o,n),h.fromHTMLCanvasElement(m)},h.fromHTMLCanvasElement=function(u){var o=u.width,n=u.height,m=u.getContext("2d"),y=m.getImageData(0,0,o,n);return h.fromImageData(y)},h.fromNodeCanvas=function(u){return h.fromHTMLCanvasElement(u)},h.fromImageData=function(u){var o=u.width,n=u.height;return h.fromCanvasPixelArray(u.data,o,n)},h.fromArray=function(u,o,n){var m=new Uint8Array(u);return h.fromUint8Array(m,o,n)},h.fromCanvasPixelArray=function(u,o,n){return h.fromArray(u,o,n)},h.fromUint8Array=function(u,o,n){return h.fromUint32Array(new Uint32Array(u.buffer),o,n)},h.fromUint32Array=function(u,o,n){var m=new h;m._width=o,m._height=n;for(var y=0,f=u.length;y<f;y++)m._pointArray[y]=b.Point.createByUint32(u[y]|0);return m},h}();s.PointContainer=c},function(l,s,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * point.ts - part of Image Quantization Library
 */var b=g(2),c=function(){function h(){this.uint32=-1>>>0,this.r=this.g=this.b=this.a=0,this.rgba=new Array(4),this.rgba[0]=0,this.rgba[1]=0,this.rgba[2]=0,this.rgba[3]=0}return h.createByQuadruplet=function(u){var o=new h;return o.r=u[0]|0,o.g=u[1]|0,o.b=u[2]|0,o.a=u[3]|0,o._loadUINT32(),o._loadQuadruplet(),o},h.createByRGBA=function(u,o,n,m){var y=new h;return y.r=u|0,y.g=o|0,y.b=n|0,y.a=m|0,y._loadUINT32(),y._loadQuadruplet(),y},h.createByUint32=function(u){var o=new h;return o.uint32=u>>>0,o._loadRGBA(),o._loadQuadruplet(),o},h.prototype.from=function(u){this.r=u.r,this.g=u.g,this.b=u.b,this.a=u.a,this.uint32=u.uint32,this.rgba[0]=u.r,this.rgba[1]=u.g,this.rgba[2]=u.b,this.rgba[3]=u.a},h.prototype.getLuminosity=function(u){var o=this.r,n=this.g,m=this.b;return u&&(o=Math.min(255,255-this.a+this.a*o/255),n=Math.min(255,255-this.a+this.a*n/255),m=Math.min(255,255-this.a+this.a*m/255)),o*b.Y.RED+n*b.Y.GREEN+m*b.Y.BLUE},h.prototype._loadUINT32=function(){this.uint32=(this.a<<24|this.b<<16|this.g<<8|this.r)>>>0},h.prototype._loadRGBA=function(){this.r=this.uint32&255,this.g=this.uint32>>>8&255,this.b=this.uint32>>>16&255,this.a=this.uint32>>>24&255},h.prototype._loadQuadruplet=function(){this.rgba[0]=this.r,this.rgba[1]=this.g,this.rgba[2]=this.b,this.rgba[3]=this.a},h}();s.Point=c},function(l,s,g){/**
 * @preserve TypeScript port:
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * neuquant.ts - part of Image Quantization Library
 */var b=g(22),c=g(24),h=3,u=function(){function n(m){this.r=this.g=this.b=this.a=m}return n.prototype.toPoint=function(){return c.Point.createByRGBA(this.r>>h,this.g>>h,this.b>>h,this.a>>h)},n.prototype.subtract=function(m,y,f,v){this.r-=m,this.g-=y,this.b-=f,this.a-=v},n}(),o=function(){function n(m,y){y===void 0&&(y=256),this._distance=m,this._pointArray=[],this._sampleFactor=1,this._networkSize=y,this._distance.setWhitePoint(255<<h,255<<h,255<<h,255<<h)}return n.prototype.sample=function(m){this._pointArray=this._pointArray.concat(m.getPointArray())},n.prototype.quantize=function(){return this._init(),this._learn(),this._buildPalette()},n.prototype._init=function(){this._freq=[],this._bias=[],this._radPower=[],this._network=[];for(var m=0;m<this._networkSize;m++)this._network[m]=new u((m<<h+8)/this._networkSize),this._freq[m]=n._initialBias/this._networkSize,this._bias[m]=0},n.prototype._learn=function(){var m=this._sampleFactor,y=this._pointArray.length;y<n._minpicturebytes&&(m=1);var f=30+(m-1)/3,v=y/m,p=v/n._nCycles|0,w=n._initAlpha,A=(this._networkSize>>3)*n._radiusBias,x=A>>n._radiusBiasShift;x<=1&&(x=0);for(var k=0;k<x;k++)this._radPower[k]=w*((x*x-k*k)*n._radBias/(x*x));var N;y<n._minpicturebytes?N=1:y%n._prime1!=0?N=n._prime1:y%n._prime2!=0?N=n._prime2:y%n._prime3!=0?N=n._prime3:N=n._prime4;for(var k=0,E=0;k<v;){var S=this._pointArray[E],R=S.b<<h,M=S.g<<h,j=S.r<<h,O=S.a<<h,V=this._contest(R,M,j,O);if(this._alterSingle(w,V,R,M,j,O),x!=0&&this._alterNeighbour(x,V,R,M,j,O),E+=N,E>=y&&(E-=y),k++,p==0&&(p=1),k%p==0){w-=w/f,A-=A/n._radiusDecrease,x=A>>n._radiusBiasShift,x<=1&&(x=0);for(var J=0;J<x;J++)this._radPower[J]=w*((x*x-J*J)*n._radBias/(x*x))}}},n.prototype._buildPalette=function(){var m=new b.Palette;return this._network.forEach(function(y){m.add(y.toPoint())}),m.sort(),m},n.prototype._alterNeighbour=function(m,y,f,v,p,w){var A=y-m;A<-1&&(A=-1);var x=y+m;x>this._networkSize&&(x=this._networkSize);for(var k=y+1,N=y-1,E=1;k<x||N>A;){var S=this._radPower[E++]/n._alphaRadBias;if(k<x){var R=this._network[k++];R.subtract(S*(R.r-p),S*(R.g-v),S*(R.b-f),S*(R.a-w))}if(N>A){var R=this._network[N--];R.subtract(S*(R.r-p),S*(R.g-v),S*(R.b-f),S*(R.a-w))}}},n.prototype._alterSingle=function(m,y,f,v,p,w){m/=n._initAlpha;var A=this._network[y];A.subtract(m*(A.r-p),m*(A.g-v),m*(A.b-f),m*(A.a-w))},n.prototype._contest=function(m,y,f,v){for(var p=1020<<h,w=~(1<<31),A=w,x=-1,k=x,N=0;N<this._networkSize;N++){var E=this._network[N],S=this._distance.calculateNormalized(E,{r:f,g:y,b:m,a:v})*p;S<w&&(w=S,x=N);var R=S-(this._bias[N]>>n._initialBiasShift-h);R<A&&(A=R,k=N);var M=this._freq[N]>>n._betaShift;this._freq[N]-=M,this._bias[N]+=M<<n._gammaShift}return this._freq[x]+=n._beta,this._bias[x]-=n._betaGamma,k},n._prime1=499,n._prime2=491,n._prime3=487,n._prime4=503,n._minpicturebytes=n._prime4,n._nCycles=100,n._initialBiasShift=16,n._initialBias=1<<n._initialBiasShift,n._gammaShift=10,n._betaShift=10,n._beta=n._initialBias>>n._betaShift,n._betaGamma=n._initialBias<<n._gammaShift-n._betaShift,n._radiusBiasShift=6,n._radiusBias=1<<n._radiusBiasShift,n._radiusDecrease=30,n._alphaBiasShift=10,n._initAlpha=1<<n._alphaBiasShift,n._radBiasShift=8,n._radBias=1<<n._radBiasShift,n._alphaRadBiasShift=n._alphaBiasShift+n._radBiasShift,n._alphaRadBias=1<<n._alphaRadBiasShift,n}();s.NeuQuantFloat=o},function(l,s,g){/**
 * @preserve TypeScript port:
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * rgbquant.ts - part of Image Quantization Library
 */var b=g(22),c=g(24),h=g(27),u=g(6),o=function(){function m(y,f,v){this.index=y,this.color=f,this.distance=v}return m}(),n=function(){function m(y,f,v){f===void 0&&(f=256),v===void 0&&(v=2),this._distance=y,this._colors=f,this._histogram=new h.ColorHistogram(v,f),this._initialDistance=.01,this._distanceIncrement=.005}return m.prototype.sample=function(y){this._histogram.sample(y)},m.prototype.quantize=function(){var y=this._histogram.getImportanceSortedColorsIDXI32();if(y.length===0)throw new Error("No colors in image");var f=this._buildPalette(y);return f.sort(),f},m.prototype._buildPalette=function(y){for(var f=new b.Palette,v=f.getPointContainer().getPointArray(),p=new Array(y.length),w=0;w<y.length;w++)v.push(c.Point.createByUint32(y[w])),p[w]=1;for(var A=v.length,x=[],k=A,N=this._initialDistance;k>this._colors;){x.length=0;for(var w=0;w<A;w++)if(p[w]!==0){for(var E=v[w],S=w+1;S<A;S++)if(p[S]!==0){var R=v[S],M=this._distance.calculateNormalized(E,R);M<N&&(x.push(new o(S,R,M)),p[S]=0,k--)}}N+=k>this._colors*3?this._initialDistance:this._distanceIncrement}if(k<this._colors){u.stableSort(x,function(B,z){return z.distance-B.distance});for(var j=0;k<this._colors&&j<x.length;){var O=x[j];p[O.index]=1,k++,j++}}for(var V=v.length,J=V-1;J>=0;J--)p[J]===0&&(J!==V-1&&(v[J]=v[V-1]),--V);return v.length=V,f},m}();s.RGBQuant=n},function(l,s,g){/**
 * @preserve TypeScript port:
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * colorHistogram.ts - part of Image Quantization Library
 */var b=g(28),c=g(6),h=function(){function u(o,n){this._method=o,this._minHueCols=n<<2,this._initColors=n<<2,this._hueStats=new b.HueStatistics(u._hueGroups,this._minHueCols),this._histogram=Object.create(null)}return u.prototype.sample=function(o){switch(this._method){case 1:this._colorStats1D(o);break;case 2:this._colorStats2D(o);break}},u.prototype.getImportanceSortedColorsIDXI32=function(){var o=this,n=c.stableSort(Object.keys(this._histogram),function(A,x){return o._histogram[x]-o._histogram[A]});if(n.length===0)return[];var m;switch(this._method){case 1:var y=Math.min(n.length,this._initColors),f=n[y-1],v=this._histogram[f];m=n.slice(0,y);for(var p=y,w=n.length;p<w&&this._histogram[n[p]]==v;)m.push(n[p++]);this._hueStats.injectIntoArray(m);break;case 2:m=n;break;default:throw new Error("Incorrect method")}return m.map(function(A){return+A})},u.prototype._colorStats1D=function(o){for(var n=this._histogram,m=o.getPointArray(),y=m.length,f=0;f<y;f++){var v=m[f].uint32;this._hueStats.check(v),v in n?n[v]++:n[v]=1}},u.prototype._colorStats2D=function(o){var n=this,m=o.getWidth(),y=o.getHeight(),f=o.getPointArray(),v=u._boxSize[0],p=u._boxSize[1],w=v*p,A=this._makeBoxes(m,y,v,p),x=this._histogram;A.forEach(function(k){var N=Math.round(k.w*k.h/w)*u._boxPixels;N<2&&(N=2);var E={};n._iterateBox(k,m,function(S){var R=f[S].uint32;n._hueStats.check(R),R in x?x[R]++:R in E?++E[R]>=N&&(x[R]=E[R]):E[R]=1})}),this._hueStats.injectIntoDictionary(x)},u.prototype._iterateBox=function(o,n,m){var y=o,f=y.y*n+y.x,v=(y.y+y.h-1)*n+(y.x+y.w-1),p=n-y.w+1,w=0,A=f;do m.call(this,A),A+=++w%y.w==0?p:1;while(A<=v)},u.prototype._makeBoxes=function(o,n,m,y){for(var f=o%m,v=n%y,p=o-f,w=n-v,A=[],x=0;x<n;x+=y)for(var k=0;k<o;k+=m)A.push({x:k,y:x,w:k==p?f:m,h:x==w?v:y});return A},u._boxSize=[64,64],u._boxPixels=2,u._hueGroups=10,u}();s.ColorHistogram=h},function(l,s,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * hueStatistics.ts - part of Image Quantization Library
 */var b=g(5),c=g(22),h=function(){function o(){this.num=0,this.cols=[]}return o}(),u=function(){function o(n,m){this._numGroups=n,this._minCols=m,this._stats=[];for(var y=0;y<=n;y++)this._stats[y]=new h;this._groupsFull=0}return o.prototype.check=function(n){this._groupsFull==this._numGroups+1&&(this.check=function(){});var m=n&255,y=n>>>8&255,f=n>>>16&255,v=m==y&&y==f?0:1+c.hueGroup(b.rgb2hsl(m,y,f).h,this._numGroups),p=this._stats[v],w=this._minCols;p.num++,!(p.num>w)&&(p.num==w&&this._groupsFull++,p.num<=w&&this._stats[v].cols.push(n))},o.prototype.injectIntoDictionary=function(n){for(var m=0;m<=this._numGroups;m++)this._stats[m].num<=this._minCols&&this._stats[m].cols.forEach(function(y){n[y]?n[y]++:n[y]=1})},o.prototype.injectIntoArray=function(n){for(var m=0;m<=this._numGroups;m++)this._stats[m].num<=this._minCols&&this._stats[m].cols.forEach(function(y){n.indexOf(y)==-1&&n.push(y)})},o}();s.HueStatistics=u},function(l,s,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * wuQuant.ts - part of Image Quantization Library
 */var b=g(22),c=g(24);function h(v){for(var p=[],w=0;w<v;w++)p[w]=0;return p}function u(v,p,w,A){for(var x=new Array(v),k=0;k<v;k++){x[k]=new Array(p);for(var N=0;N<p;N++){x[k][N]=new Array(w);for(var E=0;E<w;E++){x[k][N][E]=new Array(A);for(var S=0;S<A;S++)x[k][N][E][S]=0}}}return x}function o(v,p,w){for(var A=new Array(v),x=0;x<v;x++){A[x]=new Array(p);for(var k=0;k<p;k++){A[x][k]=new Array(w);for(var N=0;N<w;N++)A[x][k][N]=0}}return A}function n(v,p,w,A,x){for(var k=0;k<p;k++){v[k]=[];for(var N=0;N<w;N++){v[k][N]=[];for(var E=0;E<A;E++)v[k][N][E]=x}}}function m(v,p,w){for(var A=0;A<p;A++)v[A]=w}var y=function(){function v(){}return v}();s.WuColorCube=y;var f=function(){function v(p,w,A){w===void 0&&(w=256),A===void 0&&(A=5),this._distance=p,this._setQuality(A),this._initialize(w)}return v.prototype.sample=function(p){for(var w=p.getPointArray(),A=0,x=w.length;A<x;A++)this._addColor(w[A]);this._pixels=this._pixels.concat(w)},v.prototype.quantize=function(){this._preparePalette();for(var p=new b.Palette,w=0;w<this._colors;w++)if(this._sums[w]>0){var A=this._sums[w],x=this._reds[w]/A,k=this._greens[w]/A,N=this._blues[w]/A,E=this._alphas[w]/A,S=c.Point.createByRGBA(x|0,k|0,N|0,E|0);p.add(S)}return p.sort(),p},v.prototype._preparePalette=function(){this._calculateMoments();for(var p=0,w=h(this._colors),A=1;A<this._colors;++A){this._cut(this._cubes[p],this._cubes[A])?(w[p]=this._cubes[p].volume>1?this._calculateVariance(this._cubes[p]):0,w[A]=this._cubes[A].volume>1?this._calculateVariance(this._cubes[A]):0):(w[p]=0,A--),p=0;for(var x=w[0],k=1;k<=A;++k)w[k]>x&&(x=w[k],p=k);if(x<=0){this._colors=A+1;break}}for(var N=[],E=[],S=[],R=[],M=0;M<this._colors;++M){var j=v._volume(this._cubes[M],this._weights);j>0?(N[M]=v._volume(this._cubes[M],this._momentsRed)/j|0,E[M]=v._volume(this._cubes[M],this._momentsGreen)/j|0,S[M]=v._volume(this._cubes[M],this._momentsBlue)/j|0,R[M]=v._volume(this._cubes[M],this._momentsAlpha)/j|0):(N[M]=0,E[M]=0,S[M]=0,R[M]=0)}this._reds=h(this._colors+1),this._greens=h(this._colors+1),this._blues=h(this._colors+1),this._alphas=h(this._colors+1),this._sums=h(this._colors+1);for(var k=0,O=this._pixels.length;k<O;k++){for(var V=this._pixels[k],J=-1,B=J,z=Number.MAX_VALUE,G=0;G<this._colors;G++){var U=N[G],ie=E[G],oe=S[G],ae=R[G],W=this._distance.calculateRaw(U,ie,oe,ae,V.r,V.g,V.b,V.a);W<z&&(z=W,B=G)}this._reds[B]+=V.r,this._greens[B]+=V.g,this._blues[B]+=V.b,this._alphas[B]+=V.a,this._sums[B]++}},v.prototype._addColor=function(p){var w=8-this._significantBitsPerChannel,A=(p.r>>w)+1,x=(p.g>>w)+1,k=(p.b>>w)+1,N=(p.a>>w)+1;this._weights[N][A][x][k]++,this._momentsRed[N][A][x][k]+=p.r,this._momentsGreen[N][A][x][k]+=p.g,this._momentsBlue[N][A][x][k]+=p.b,this._momentsAlpha[N][A][x][k]+=p.a,this._moments[N][A][x][k]+=this._table[p.r]+this._table[p.g]+this._table[p.b]+this._table[p.a]},v.prototype._calculateMoments=function(){for(var p=[],w=[],A=[],x=[],k=[],N=[],E=o(this._sideSize,this._sideSize,this._sideSize),S=o(this._sideSize,this._sideSize,this._sideSize),R=o(this._sideSize,this._sideSize,this._sideSize),M=o(this._sideSize,this._sideSize,this._sideSize),j=o(this._sideSize,this._sideSize,this._sideSize),O=o(this._sideSize,this._sideSize,this._sideSize),V=1;V<=this._alphaMaxSideIndex;++V){n(E,this._sideSize,this._sideSize,this._sideSize,0),n(S,this._sideSize,this._sideSize,this._sideSize,0),n(R,this._sideSize,this._sideSize,this._sideSize,0),n(M,this._sideSize,this._sideSize,this._sideSize,0),n(j,this._sideSize,this._sideSize,this._sideSize,0),n(O,this._sideSize,this._sideSize,this._sideSize,0);for(var J=1;J<=this._maxSideIndex;++J){m(p,this._sideSize,0),m(w,this._sideSize,0),m(A,this._sideSize,0),m(x,this._sideSize,0),m(k,this._sideSize,0),m(N,this._sideSize,0);for(var B=1;B<=this._maxSideIndex;++B)for(var z=0,G=0,U=0,ie=0,oe=0,ae=0,W=1;W<=this._maxSideIndex;++W)z+=this._weights[V][J][B][W],G+=this._momentsRed[V][J][B][W],U+=this._momentsGreen[V][J][B][W],ie+=this._momentsBlue[V][J][B][W],oe+=this._momentsAlpha[V][J][B][W],ae+=this._moments[V][J][B][W],p[W]+=z,w[W]+=G,A[W]+=U,x[W]+=ie,k[W]+=oe,N[W]+=ae,E[J][B][W]=E[J-1][B][W]+p[W],S[J][B][W]=S[J-1][B][W]+w[W],R[J][B][W]=R[J-1][B][W]+A[W],M[J][B][W]=M[J-1][B][W]+x[W],j[J][B][W]=j[J-1][B][W]+k[W],O[J][B][W]=O[J-1][B][W]+N[W],this._weights[V][J][B][W]=this._weights[V-1][J][B][W]+E[J][B][W],this._momentsRed[V][J][B][W]=this._momentsRed[V-1][J][B][W]+S[J][B][W],this._momentsGreen[V][J][B][W]=this._momentsGreen[V-1][J][B][W]+R[J][B][W],this._momentsBlue[V][J][B][W]=this._momentsBlue[V-1][J][B][W]+M[J][B][W],this._momentsAlpha[V][J][B][W]=this._momentsAlpha[V-1][J][B][W]+j[J][B][W],this._moments[V][J][B][W]=this._moments[V-1][J][B][W]+O[J][B][W]}}},v._volumeFloat=function(p,w){return w[p.alphaMaximum][p.redMaximum][p.greenMaximum][p.blueMaximum]-w[p.alphaMaximum][p.redMaximum][p.greenMinimum][p.blueMaximum]-w[p.alphaMaximum][p.redMinimum][p.greenMaximum][p.blueMaximum]+w[p.alphaMaximum][p.redMinimum][p.greenMinimum][p.blueMaximum]-w[p.alphaMinimum][p.redMaximum][p.greenMaximum][p.blueMaximum]+w[p.alphaMinimum][p.redMaximum][p.greenMinimum][p.blueMaximum]+w[p.alphaMinimum][p.redMinimum][p.greenMaximum][p.blueMaximum]-w[p.alphaMinimum][p.redMinimum][p.greenMinimum][p.blueMaximum]-(w[p.alphaMaximum][p.redMaximum][p.greenMaximum][p.blueMinimum]-w[p.alphaMinimum][p.redMaximum][p.greenMaximum][p.blueMinimum]-w[p.alphaMaximum][p.redMaximum][p.greenMinimum][p.blueMinimum]+w[p.alphaMinimum][p.redMaximum][p.greenMinimum][p.blueMinimum]-w[p.alphaMaximum][p.redMinimum][p.greenMaximum][p.blueMinimum]+w[p.alphaMinimum][p.redMinimum][p.greenMaximum][p.blueMinimum]+w[p.alphaMaximum][p.redMinimum][p.greenMinimum][p.blueMinimum]-w[p.alphaMinimum][p.redMinimum][p.greenMinimum][p.blueMinimum])},v._volume=function(p,w){return v._volumeFloat(p,w)|0},v._top=function(p,w,A,x){var k;switch(w){case v.alpha:k=x[A][p.redMaximum][p.greenMaximum][p.blueMaximum]-x[A][p.redMaximum][p.greenMinimum][p.blueMaximum]-x[A][p.redMinimum][p.greenMaximum][p.blueMaximum]+x[A][p.redMinimum][p.greenMinimum][p.blueMaximum]-(x[A][p.redMaximum][p.greenMaximum][p.blueMinimum]-x[A][p.redMaximum][p.greenMinimum][p.blueMinimum]-x[A][p.redMinimum][p.greenMaximum][p.blueMinimum]+x[A][p.redMinimum][p.greenMinimum][p.blueMinimum]);break;case v.red:k=x[p.alphaMaximum][A][p.greenMaximum][p.blueMaximum]-x[p.alphaMaximum][A][p.greenMinimum][p.blueMaximum]-x[p.alphaMinimum][A][p.greenMaximum][p.blueMaximum]+x[p.alphaMinimum][A][p.greenMinimum][p.blueMaximum]-(x[p.alphaMaximum][A][p.greenMaximum][p.blueMinimum]-x[p.alphaMaximum][A][p.greenMinimum][p.blueMinimum]-x[p.alphaMinimum][A][p.greenMaximum][p.blueMinimum]+x[p.alphaMinimum][A][p.greenMinimum][p.blueMinimum]);break;case v.green:k=x[p.alphaMaximum][p.redMaximum][A][p.blueMaximum]-x[p.alphaMaximum][p.redMinimum][A][p.blueMaximum]-x[p.alphaMinimum][p.redMaximum][A][p.blueMaximum]+x[p.alphaMinimum][p.redMinimum][A][p.blueMaximum]-(x[p.alphaMaximum][p.redMaximum][A][p.blueMinimum]-x[p.alphaMaximum][p.redMinimum][A][p.blueMinimum]-x[p.alphaMinimum][p.redMaximum][A][p.blueMinimum]+x[p.alphaMinimum][p.redMinimum][A][p.blueMinimum]);break;case v.blue:k=x[p.alphaMaximum][p.redMaximum][p.greenMaximum][A]-x[p.alphaMaximum][p.redMaximum][p.greenMinimum][A]-x[p.alphaMaximum][p.redMinimum][p.greenMaximum][A]+x[p.alphaMaximum][p.redMinimum][p.greenMinimum][A]-(x[p.alphaMinimum][p.redMaximum][p.greenMaximum][A]-x[p.alphaMinimum][p.redMaximum][p.greenMinimum][A]-x[p.alphaMinimum][p.redMinimum][p.greenMaximum][A]+x[p.alphaMinimum][p.redMinimum][p.greenMinimum][A]);break;default:throw new Error("impossible")}return k|0},v._bottom=function(p,w,A){switch(w){case v.alpha:return-A[p.alphaMinimum][p.redMaximum][p.greenMaximum][p.blueMaximum]+A[p.alphaMinimum][p.redMaximum][p.greenMinimum][p.blueMaximum]+A[p.alphaMinimum][p.redMinimum][p.greenMaximum][p.blueMaximum]-A[p.alphaMinimum][p.redMinimum][p.greenMinimum][p.blueMaximum]-(-A[p.alphaMinimum][p.redMaximum][p.greenMaximum][p.blueMinimum]+A[p.alphaMinimum][p.redMaximum][p.greenMinimum][p.blueMinimum]+A[p.alphaMinimum][p.redMinimum][p.greenMaximum][p.blueMinimum]-A[p.alphaMinimum][p.redMinimum][p.greenMinimum][p.blueMinimum]);case v.red:return-A[p.alphaMaximum][p.redMinimum][p.greenMaximum][p.blueMaximum]+A[p.alphaMaximum][p.redMinimum][p.greenMinimum][p.blueMaximum]+A[p.alphaMinimum][p.redMinimum][p.greenMaximum][p.blueMaximum]-A[p.alphaMinimum][p.redMinimum][p.greenMinimum][p.blueMaximum]-(-A[p.alphaMaximum][p.redMinimum][p.greenMaximum][p.blueMinimum]+A[p.alphaMaximum][p.redMinimum][p.greenMinimum][p.blueMinimum]+A[p.alphaMinimum][p.redMinimum][p.greenMaximum][p.blueMinimum]-A[p.alphaMinimum][p.redMinimum][p.greenMinimum][p.blueMinimum]);case v.green:return-A[p.alphaMaximum][p.redMaximum][p.greenMinimum][p.blueMaximum]+A[p.alphaMaximum][p.redMinimum][p.greenMinimum][p.blueMaximum]+A[p.alphaMinimum][p.redMaximum][p.greenMinimum][p.blueMaximum]-A[p.alphaMinimum][p.redMinimum][p.greenMinimum][p.blueMaximum]-(-A[p.alphaMaximum][p.redMaximum][p.greenMinimum][p.blueMinimum]+A[p.alphaMaximum][p.redMinimum][p.greenMinimum][p.blueMinimum]+A[p.alphaMinimum][p.redMaximum][p.greenMinimum][p.blueMinimum]-A[p.alphaMinimum][p.redMinimum][p.greenMinimum][p.blueMinimum]);case v.blue:return-A[p.alphaMaximum][p.redMaximum][p.greenMaximum][p.blueMinimum]+A[p.alphaMaximum][p.redMaximum][p.greenMinimum][p.blueMinimum]+A[p.alphaMaximum][p.redMinimum][p.greenMaximum][p.blueMinimum]-A[p.alphaMaximum][p.redMinimum][p.greenMinimum][p.blueMinimum]-(-A[p.alphaMinimum][p.redMaximum][p.greenMaximum][p.blueMinimum]+A[p.alphaMinimum][p.redMaximum][p.greenMinimum][p.blueMinimum]+A[p.alphaMinimum][p.redMinimum][p.greenMaximum][p.blueMinimum]-A[p.alphaMinimum][p.redMinimum][p.greenMinimum][p.blueMinimum]);default:return 0}},v.prototype._calculateVariance=function(p){var w=v._volume(p,this._momentsRed),A=v._volume(p,this._momentsGreen),x=v._volume(p,this._momentsBlue),k=v._volume(p,this._momentsAlpha),N=v._volumeFloat(p,this._moments),E=v._volume(p,this._weights),S=w*w+A*A+x*x+k*k;return N-S/E},v.prototype._maximize=function(p,w,A,x,k,N,E,S,R){for(var M=v._bottom(p,w,this._momentsRed)|0,j=v._bottom(p,w,this._momentsGreen)|0,O=v._bottom(p,w,this._momentsBlue)|0,V=v._bottom(p,w,this._momentsAlpha)|0,J=v._bottom(p,w,this._weights)|0,B=0,z=-1,G=A;G<x;++G){var U=M+v._top(p,w,G,this._momentsRed),ie=j+v._top(p,w,G,this._momentsGreen),oe=O+v._top(p,w,G,this._momentsBlue),ae=V+v._top(p,w,G,this._momentsAlpha),W=J+v._top(p,w,G,this._weights);if(W!=0){var ee=U*U+ie*ie+oe*oe+ae*ae,_=ee/W;U=k-U,ie=N-ie,oe=E-oe,ae=S-ae,W=R-W,W!=0&&(ee=U*U+ie*ie+oe*oe+ae*ae,_+=ee/W,_>B&&(B=_,z=G))}}return{max:B,position:z}},v.prototype._cut=function(p,w){var A,x=v._volume(p,this._momentsRed),k=v._volume(p,this._momentsGreen),N=v._volume(p,this._momentsBlue),E=v._volume(p,this._momentsAlpha),S=v._volume(p,this._weights),R=this._maximize(p,v.red,p.redMinimum+1,p.redMaximum,x,k,N,E,S),M=this._maximize(p,v.green,p.greenMinimum+1,p.greenMaximum,x,k,N,E,S),j=this._maximize(p,v.blue,p.blueMinimum+1,p.blueMaximum,x,k,N,E,S),O=this._maximize(p,v.alpha,p.alphaMinimum+1,p.alphaMaximum,x,k,N,E,S);if(O.max>=R.max&&O.max>=M.max&&O.max>=j.max){if(A=v.alpha,O.position<0)return!1}else R.max>=O.max&&R.max>=M.max&&R.max>=j.max?A=v.red:M.max>=O.max&&M.max>=R.max&&M.max>=j.max?A=v.green:A=v.blue;switch(w.redMaximum=p.redMaximum,w.greenMaximum=p.greenMaximum,w.blueMaximum=p.blueMaximum,w.alphaMaximum=p.alphaMaximum,A){case v.red:w.redMinimum=p.redMaximum=R.position,w.greenMinimum=p.greenMinimum,w.blueMinimum=p.blueMinimum,w.alphaMinimum=p.alphaMinimum;break;case v.green:w.greenMinimum=p.greenMaximum=M.position,w.redMinimum=p.redMinimum,w.blueMinimum=p.blueMinimum,w.alphaMinimum=p.alphaMinimum;break;case v.blue:w.blueMinimum=p.blueMaximum=j.position,w.redMinimum=p.redMinimum,w.greenMinimum=p.greenMinimum,w.alphaMinimum=p.alphaMinimum;break;case v.alpha:w.alphaMinimum=p.alphaMaximum=O.position,w.blueMinimum=p.blueMinimum,w.redMinimum=p.redMinimum,w.greenMinimum=p.greenMinimum;break}return p.volume=(p.redMaximum-p.redMinimum)*(p.greenMaximum-p.greenMinimum)*(p.blueMaximum-p.blueMinimum)*(p.alphaMaximum-p.alphaMinimum),w.volume=(w.redMaximum-w.redMinimum)*(w.greenMaximum-w.greenMinimum)*(w.blueMaximum-w.blueMinimum)*(w.alphaMaximum-w.alphaMinimum),!0},v.prototype._initialize=function(p){this._colors=p,this._cubes=[];for(var w=0;w<p;w++)this._cubes[w]=new y;this._cubes[0].redMinimum=0,this._cubes[0].greenMinimum=0,this._cubes[0].blueMinimum=0,this._cubes[0].alphaMinimum=0,this._cubes[0].redMaximum=this._maxSideIndex,this._cubes[0].greenMaximum=this._maxSideIndex,this._cubes[0].blueMaximum=this._maxSideIndex,this._cubes[0].alphaMaximum=this._alphaMaxSideIndex,this._weights=u(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize),this._momentsRed=u(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize),this._momentsGreen=u(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize),this._momentsBlue=u(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize),this._momentsAlpha=u(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize),this._moments=u(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize),this._table=[];for(var A=0;A<256;++A)this._table[A]=A*A;this._pixels=[]},v.prototype._setQuality=function(p){p===void 0&&(p=5),this._significantBitsPerChannel=p,this._maxSideIndex=1<<this._significantBitsPerChannel,this._alphaMaxSideIndex=this._maxSideIndex,this._sideSize=this._maxSideIndex+1,this._alphaSideSize=this._alphaMaxSideIndex+1},v.alpha=3,v.red=2,v.green=1,v.blue=0,v}();s.WuQuant=f},function(l,s,g){var b=g(31);s.NearestColor=b.NearestColor;var c=g(32);s.ErrorDiffusionArray=c.ErrorDiffusionArray,s.ErrorDiffusionArrayKernel=c.ErrorDiffusionArrayKernel;var h=g(33);s.ErrorDiffusionRiemersma=h.ErrorDiffusionRiemersma},function(l,s){var g=function(){function b(c){this._distance=c}return b.prototype.quantize=function(c,h){for(var u=c.getPointArray(),o=c.getWidth(),n=c.getHeight(),m=0;m<n;m++)for(var y=0,f=m*o;y<o;y++,f++){var v=u[f];v.from(h.getNearestColor(this._distance,v))}return c},b}();s.NearestColor=g},function(l,s,g){var b=g(24),c=g(6);(function(o){o[o.FloydSteinberg=0]="FloydSteinberg",o[o.FalseFloydSteinberg=1]="FalseFloydSteinberg",o[o.Stucki=2]="Stucki",o[o.Atkinson=3]="Atkinson",o[o.Jarvis=4]="Jarvis",o[o.Burkes=5]="Burkes",o[o.Sierra=6]="Sierra",o[o.TwoSierra=7]="TwoSierra",o[o.SierraLite=8]="SierraLite"})(s.ErrorDiffusionArrayKernel||(s.ErrorDiffusionArrayKernel={}));var h=s.ErrorDiffusionArrayKernel,u=function(){function o(n,m,y,f,v){y===void 0&&(y=!0),f===void 0&&(f=0),v===void 0&&(v=!1),this._setKernel(m),this._distance=n,this._minColorDistance=f,this._serpentine=y,this._calculateErrorLikeGIMP=v}return o.prototype.quantize=function(n,m){for(var y=n.getPointArray(),f=new b.Point,v=n.getWidth(),p=n.getHeight(),w=[],A=1,x=1,k=0;k<this._kernel.length;k++){var N=this._kernel[k][2]+1;x<N&&(x=N)}for(var k=0;k<x;k++)this._fillErrorLine(w[k]=[],v);for(var E=0;E<p;E++){this._serpentine&&(A=A*-1);var S=E*v,R=A==1?0:v-1,M=A==1?v:-1;this._fillErrorLine(w[0],v),w.push(w.shift());for(var j=w[0],O=R,V=S+R;O!==M;O+=A,V+=A){var J=y[V],B=j[O];f.from(J);var z=b.Point.createByRGBA(c.inRange0to255Rounded(J.r+B[0]),c.inRange0to255Rounded(J.g+B[1]),c.inRange0to255Rounded(J.b+B[2]),c.inRange0to255Rounded(J.a+B[3])),G=m.getNearestColor(this._distance,z);if(J.from(G),this._minColorDistance){var U=this._distance.calculateNormalized(J,G);if(U<this._minColorDistance)continue}var ie=void 0,oe=void 0,ae=void 0,W=void 0;this._calculateErrorLikeGIMP?(ie=z.r-G.r,oe=z.g-G.g,ae=z.b-G.b,W=z.a-G.a):(ie=f.r-G.r,oe=f.g-G.g,ae=f.b-G.b,W=f.a-G.a);for(var ee=A==1?0:this._kernel.length-1,_=A==1?this._kernel.length:-1,k=ee;k!==_;k+=A){var re=this._kernel[k][1]*A,fe=this._kernel[k][2];if(re+O>=0&&re+O<v&&fe+E>=0&&fe+E<p){var pe=this._kernel[k][0],he=w[fe][re+O];he[0]=he[0]+ie*pe,he[1]=he[1]+oe*pe,he[2]=he[2]+ae*pe,he[3]=he[3]+W*pe}}}}return n},o.prototype._fillErrorLine=function(n,m){n.length>m&&(n.length=m);for(var y=n.length,f=0;f<y;f++){var v=n[f];v[0]=v[1]=v[2]=v[3]=0}for(var f=y;f<m;f++)n[f]=[0,0,0,0]},o.prototype._setKernel=function(n){switch(n){case h.FloydSteinberg:this._kernel=[[7/16,1,0],[3/16,-1,1],[5/16,0,1],[1/16,1,1]];break;case h.FalseFloydSteinberg:this._kernel=[[3/8,1,0],[3/8,0,1],[2/8,1,1]];break;case h.Stucki:this._kernel=[[8/42,1,0],[4/42,2,0],[2/42,-2,1],[4/42,-1,1],[8/42,0,1],[4/42,1,1],[2/42,2,1],[1/42,-2,2],[2/42,-1,2],[4/42,0,2],[2/42,1,2],[1/42,2,2]];break;case h.Atkinson:this._kernel=[[1/8,1,0],[1/8,2,0],[1/8,-1,1],[1/8,0,1],[1/8,1,1],[1/8,0,2]];break;case h.Jarvis:this._kernel=[[7/48,1,0],[5/48,2,0],[3/48,-2,1],[5/48,-1,1],[7/48,0,1],[5/48,1,1],[3/48,2,1],[1/48,-2,2],[3/48,-1,2],[5/48,0,2],[3/48,1,2],[1/48,2,2]];break;case h.Burkes:this._kernel=[[8/32,1,0],[4/32,2,0],[2/32,-2,1],[4/32,-1,1],[8/32,0,1],[4/32,1,1],[2/32,2,1]];break;case h.Sierra:this._kernel=[[5/32,1,0],[3/32,2,0],[2/32,-2,1],[4/32,-1,1],[5/32,0,1],[4/32,1,1],[2/32,2,1],[2/32,-1,2],[3/32,0,2],[2/32,1,2]];break;case h.TwoSierra:this._kernel=[[4/16,1,0],[3/16,2,0],[1/16,-2,1],[2/16,-1,1],[3/16,0,1],[2/16,1,1],[1/16,2,1]];break;case h.SierraLite:this._kernel=[[2/4,1,0],[1/4,-1,1],[1/4,0,1]];break;default:throw new Error("ErrorDiffusionArray: unknown kernel = "+n)}},o}();s.ErrorDiffusionArray=u},function(l,s,g){var b=g(34),c=g(24),h=g(6),u=function(){function o(n,m,y){m===void 0&&(m=16),y===void 0&&(y=1),this._distance=n,this._errorPropagation=y,this._errorQueueSize=m,this._max=this._errorQueueSize,this._createWeights()}return o.prototype.quantize=function(n,m){for(var y=this,f=new b.HilbertCurveBase,v=n.getPointArray(),p=n.getWidth(),w=n.getHeight(),A=[],x=0,k=0;k<this._errorQueueSize;k++)A[k]={r:0,g:0,b:0,a:0};return f.walk(p,w,function(N,E){for(var S=v[N+E*p],R=S.r,M=S.g,j=S.b,O=S.a,V=0;V<y._errorQueueSize;V++){var J=y._weights[V],B=A[(V+x)%y._errorQueueSize];R+=B.r*J,M+=B.g*J,j+=B.b*J,O+=B.a*J}var z=c.Point.createByRGBA(h.inRange0to255Rounded(R),h.inRange0to255Rounded(M),h.inRange0to255Rounded(j),h.inRange0to255Rounded(O)),G=m.getNearestColor(y._distance,z);x=(x+1)%y._errorQueueSize;var U=(x+y._errorQueueSize-1)%y._errorQueueSize;A[U].r=S.r-G.r,A[U].g=S.g-G.g,A[U].b=S.b-G.b,A[U].a=S.a-G.a,S.from(G)}),n},o.prototype._createWeights=function(){this._weights=[];for(var n=Math.exp(Math.log(this._max)/(this._errorQueueSize-1)),m=0,y=1;m<this._errorQueueSize;m++)this._weights[m]=(y+.5|0)/this._max*this._errorPropagation,y*=n},o}();s.ErrorDiffusionRiemersma=u},function(l,s){var g;(function(c){c[c.NONE=0]="NONE",c[c.UP=1]="UP",c[c.LEFT=2]="LEFT",c[c.RIGHT=3]="RIGHT",c[c.DOWN=4]="DOWN"})(g||(g={}));var b=function(){function c(){}return c.prototype.walk=function(h,u,o){this._x=0,this._y=0,this._d=0,this._width=h,this._height=u,this._callback=o;var n=Math.max(h,u);this._level=Math.log(n)/Math.log(2)+1|0,this._walkHilbert(g.UP),this._visit(g.NONE)},c.prototype._walkHilbert=function(h){if(!(this._level<1)){switch(this._level--,h){case g.LEFT:this._walkHilbert(g.UP),this._visit(g.RIGHT),this._walkHilbert(g.LEFT),this._visit(g.DOWN),this._walkHilbert(g.LEFT),this._visit(g.LEFT),this._walkHilbert(g.DOWN);break;case g.RIGHT:this._walkHilbert(g.DOWN),this._visit(g.LEFT),this._walkHilbert(g.RIGHT),this._visit(g.UP),this._walkHilbert(g.RIGHT),this._visit(g.RIGHT),this._walkHilbert(g.UP);break;case g.UP:this._walkHilbert(g.LEFT),this._visit(g.DOWN),this._walkHilbert(g.UP),this._visit(g.RIGHT),this._walkHilbert(g.UP),this._visit(g.UP),this._walkHilbert(g.RIGHT);break;case g.DOWN:this._walkHilbert(g.RIGHT),this._visit(g.UP),this._walkHilbert(g.DOWN),this._visit(g.LEFT),this._walkHilbert(g.DOWN),this._visit(g.DOWN),this._walkHilbert(g.LEFT);break}this._level++}},c.prototype._visit=function(h){switch(this._x>=0&&this._x<this._width&&this._y>=0&&this._y<this._height&&(this._callback(this._x,this._y,this._d),this._d++),h){case g.LEFT:this._x--;break;case g.RIGHT:this._x++;break;case g.UP:this._y--;break;case g.DOWN:this._y++;break}},c}();s.HilbertCurveBase=b},function(l,s,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * iq.ts - Image Quantization Library
 */var b=g(36);s.SSIM=b.SSIM},function(l,s,g){var b=g(2),c=.01,h=.03,u=function(){function o(){}return o.prototype.compare=function(n,m){if(n.getHeight()!==m.getHeight()||n.getWidth()!==m.getWidth())throw new Error("Images have different sizes!");var y=8,f=(1<<y)-1,v=Math.pow(c*f,2),p=Math.pow(h*f,2),w=0,A=0;return this._iterate(n,m,function(x,k,N,E){for(var S=0,R=0,M=0,j=0;j<x.length;j++)R+=Math.pow(x[j]-N,2),M+=Math.pow(k[j]-E,2),S+=(x[j]-N)*(k[j]-E);var O=x.length-1;R/=O,M/=O,S/=O;var V=(2*N*E+v)*(2*S+p),J=(Math.pow(N,2)+Math.pow(E,2)+v)*(R+M+p),B=V/J;A+=B,w++}),A/w},o.prototype._iterate=function(n,m,y){for(var f=8,v=n.getWidth(),p=n.getHeight(),w=0;w<p;w+=f)for(var A=0;A<v;A+=f){var x=Math.min(f,v-A),k=Math.min(f,p-w),N=this._calculateLumaValuesForWindow(n,A,w,x,k),E=this._calculateLumaValuesForWindow(m,A,w,x,k),S=this._calculateAverageLuma(N),R=this._calculateAverageLuma(E);y(N,E,S,R)}},o.prototype._calculateLumaValuesForWindow=function(n,m,y,f,v){for(var p=n.getPointArray(),w=[],A=0,x=y;x<y+v;x++)for(var k=x*n.getWidth(),N=m;N<m+f;N++){var E=p[k+N];w[A]=E.r*b.Y.RED+E.g*b.Y.GREEN+E.b*b.Y.BLUE,A++}return w},o.prototype._calculateAverageLuma=function(n){for(var m=0,y=0;y<n.length;y++)m+=n[y];return m/n.length},o}();s.SSIM=u},function(l,s,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * iq.ts - Image Quantization Library
 */var b=g(6);s.arithmetic=b;var c=g(28);s.HueStatistics=c.HueStatistics;var h=g(22);s.Palette=h.Palette;var u=g(24);s.Point=u.Point;var o=g(23);s.PointContainer=o.PointContainer}])})},{}],75:[function(r,d,a){typeof Object.create=="function"?d.exports=function(s,g){g&&(s.super_=g,s.prototype=Object.create(g.prototype,{constructor:{value:s,enumerable:!1,writable:!0,configurable:!0}}))}:d.exports=function(s,g){if(g){s.super_=g;var b=function(){};b.prototype=g.prototype,s.prototype=new b,s.prototype.constructor=s}}},{}],76:[function(r,d,a){/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */d.exports=function(g){return g!=null&&(l(g)||s(g)||!!g._isBuffer)};function l(g){return!!g.constructor&&typeof g.constructor.isBuffer=="function"&&g.constructor.isBuffer(g)}function s(g){return typeof g.readFloatLE=="function"&&typeof g.slice=="function"&&l(g.slice(0,0))}},{}],77:[function(r,d,a){var l=Function.prototype.toString,s=/^\s*class\b/,g=function(m){try{var y=l.call(m);return s.test(y)}catch{return!1}},b=function(m){try{return g(m)?!1:(l.call(m),!0)}catch{return!1}},c=Object.prototype.toString,h="[object Function]",u="[object GeneratorFunction]",o=typeof Symbol=="function"&&typeof Symbol.toStringTag=="symbol";d.exports=function(m){if(!m||typeof m!="function"&&typeof m!="object")return!1;if(typeof m=="function"&&!m.prototype)return!0;if(o)return b(m);if(g(m))return!1;var y=c.call(m);return y===h||y===u}},{}],78:[function(r,d,a){d.exports=s;var l=Object.prototype.toString;function s(g){var b=l.call(g);return b==="[object Function]"||typeof g=="function"&&b!=="[object RegExp]"||typeof i!="undefined"&&(g===i.setTimeout||g===i.alert||g===i.confirm||g===i.prompt)}},{}],79:[function(r,d,a){var l={}.toString;d.exports=Array.isArray||function(s){return l.call(s)=="[object Array]"}},{}],80:[function(r,d,a){var l=r("./lib/encoder"),s=r("./lib/decoder");d.exports={encode:l,decode:s}},{"./lib/decoder":81,"./lib/encoder":82}],81:[function(r,d,a){(function(l){var s=function(){var c=new Int32Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]),h=4017,u=799,o=3406,n=2276,m=1567,y=3784,f=5793,v=2896;function p(){}function w(R,M){for(var j=0,O=[],V,J,B=16;B>0&&!R[B-1];)B--;O.push({children:[],index:0});var z=O[0],G;for(V=0;V<B;V++){for(J=0;J<R[V];J++){for(z=O.pop(),z.children[z.index]=M[j];z.index>0;){if(O.length===0)throw new Error("Could not recreate Huffman Table");z=O.pop()}for(z.index++,O.push(z);O.length<=V;)O.push(G={children:[],index:0}),z.children[z.index]=G.children,z=G;j++}V+1<B&&(O.push(G={children:[],index:0}),z.children[z.index]=G.children,z=G)}return O[0].children}function A(R,M,j,O,V,J,B,z,G,U){j.precision,j.samplesPerLine,j.scanLines;var ie=j.mcusPerLine,oe=j.progressive;j.maxH,j.maxV;var ae=M,W=0,ee=0;function _(){if(ee>0)return ee--,W>>ee&1;if(W=R[M++],W==255){var Oe=R[M++];if(Oe)throw new Error("unexpected marker: "+(W<<8|Oe).toString(16))}return ee=7,W>>>7}function re(Oe){for(var Fe=Oe,Ee;(Ee=_())!==null;){if(Fe=Fe[Ee],typeof Fe=="number")return Fe;if(typeof Fe!="object")throw new Error("invalid huffman sequence")}return null}function fe(Oe){for(var Fe=0;Oe>0;){var Ee=_();if(Ee===null)return;Fe=Fe<<1|Ee,Oe--}return Fe}function pe(Oe){var Fe=fe(Oe);return Fe>=1<<Oe-1?Fe:Fe+(-1<<Oe)+1}function he(Oe,Fe){var Ee=re(Oe.huffmanTableDC),Ze=Ee===0?0:pe(Ee);Fe[0]=Oe.pred+=Ze;for(var Me=1;Me<64;){var Z=re(Oe.huffmanTableAC),ve=Z&15,be=Z>>4;if(ve===0){if(be<15)break;Me+=16;continue}Me+=be;var Pe=c[Me];Fe[Pe]=pe(ve),Me++}}function se(Oe,Fe){var Ee=re(Oe.huffmanTableDC),Ze=Ee===0?0:pe(Ee)<<G;Fe[0]=Oe.pred+=Ze}function ce(Oe,Fe){Fe[0]|=_()<<G}var q=0;function K(Oe,Fe){if(q>0){q--;return}for(var Ee=J,Ze=B;Ee<=Ze;){var Me=re(Oe.huffmanTableAC),Z=Me&15,ve=Me>>4;if(Z===0){if(ve<15){q=fe(ve)+(1<<ve)-1;break}Ee+=16;continue}Ee+=ve;var be=c[Ee];Fe[be]=pe(Z)*(1<<G),Ee++}}var Y=0,$;function te(Oe,Fe){for(var Ee=J,Ze=B,Me=0;Ee<=Ze;){var Z=c[Ee],ve=Fe[Z]<0?-1:1;switch(Y){case 0:var be=re(Oe.huffmanTableAC),Pe=be&15,Me=be>>4;if(Pe===0)Me<15?(q=fe(Me)+(1<<Me),Y=4):(Me=16,Y=1);else{if(Pe!==1)throw new Error("invalid ACn encoding");$=pe(Pe),Y=Me?2:3}continue;case 1:case 2:Fe[Z]?Fe[Z]+=(_()<<G)*ve:(Me--,Me===0&&(Y=Y==2?3:0));break;case 3:Fe[Z]?Fe[Z]+=(_()<<G)*ve:(Fe[Z]=$<<G,Y=0);break;case 4:Fe[Z]&&(Fe[Z]+=(_()<<G)*ve);break}Ee++}Y===4&&(q--,q===0&&(Y=0))}function L(Oe,Fe,Ee,Ze,Me){var Z=Ee/ie|0,ve=Ee%ie,be=Z*Oe.v+Ze,Pe=ve*Oe.h+Me;Oe.blocks[be]===void 0&&U.tolerantDecoding||Fe(Oe,Oe.blocks[be][Pe])}function T(Oe,Fe,Ee){var Ze=Ee/Oe.blocksPerLine|0,Me=Ee%Oe.blocksPerLine;Oe.blocks[Ze]===void 0&&U.tolerantDecoding||Fe(Oe,Oe.blocks[Ze][Me])}var F=O.length,X,H,I,C,Q,le;oe?J===0?le=z===0?se:ce:le=z===0?K:te:le=he;var ge=0,ye,Ne;F==1?Ne=O[0].blocksPerLine*O[0].blocksPerColumn:Ne=ie*j.mcusPerColumn,V||(V=Ne);for(var Se,Ie;ge<Ne;){for(H=0;H<F;H++)O[H].pred=0;if(q=0,F==1)for(X=O[0],Q=0;Q<V;Q++)T(X,le,ge),ge++;else for(Q=0;Q<V;Q++){for(H=0;H<F;H++)for(X=O[H],Se=X.h,Ie=X.v,I=0;I<Ie;I++)for(C=0;C<Se;C++)L(X,le,ge,I,C);if(ge++,ge===Ne)break}if(ge===Ne)do{if(R[M]===255&&R[M+1]!==0)break;M+=1}while(M<R.length-2);if(ee=0,ye=R[M]<<8|R[M+1],ye<65280)throw new Error("marker was not found");if(ye>=65488&&ye<=65495)M+=2;else break}return M-ae}function x(R,M){var j=[],O=M.blocksPerLine,V=M.blocksPerColumn,J=O<<3,B=new Int32Array(64),z=new Uint8Array(64);function G(fe,pe,he){var se=M.quantizationTable,ce,q,K,Y,$,te,L,T,F,X=he,H;for(H=0;H<64;H++)X[H]=fe[H]*se[H];for(H=0;H<8;++H){var I=8*H;if(X[1+I]==0&&X[2+I]==0&&X[3+I]==0&&X[4+I]==0&&X[5+I]==0&&X[6+I]==0&&X[7+I]==0){F=f*X[0+I]+512>>10,X[0+I]=F,X[1+I]=F,X[2+I]=F,X[3+I]=F,X[4+I]=F,X[5+I]=F,X[6+I]=F,X[7+I]=F;continue}ce=f*X[0+I]+128>>8,q=f*X[4+I]+128>>8,K=X[2+I],Y=X[6+I],$=v*(X[1+I]-X[7+I])+128>>8,T=v*(X[1+I]+X[7+I])+128>>8,te=X[3+I]<<4,L=X[5+I]<<4,F=ce-q+1>>1,ce=ce+q+1>>1,q=F,F=K*y+Y*m+128>>8,K=K*m-Y*y+128>>8,Y=F,F=$-L+1>>1,$=$+L+1>>1,L=F,F=T+te+1>>1,te=T-te+1>>1,T=F,F=ce-Y+1>>1,ce=ce+Y+1>>1,Y=F,F=q-K+1>>1,q=q+K+1>>1,K=F,F=$*n+T*o+2048>>12,$=$*o-T*n+2048>>12,T=F,F=te*u+L*h+2048>>12,te=te*h-L*u+2048>>12,L=F,X[0+I]=ce+T,X[7+I]=ce-T,X[1+I]=q+L,X[6+I]=q-L,X[2+I]=K+te,X[5+I]=K-te,X[3+I]=Y+$,X[4+I]=Y-$}for(H=0;H<8;++H){var C=H;if(X[8+C]==0&&X[16+C]==0&&X[24+C]==0&&X[32+C]==0&&X[40+C]==0&&X[48+C]==0&&X[56+C]==0){F=f*he[H+0]+8192>>14,X[0+C]=F,X[8+C]=F,X[16+C]=F,X[24+C]=F,X[32+C]=F,X[40+C]=F,X[48+C]=F,X[56+C]=F;continue}ce=f*X[0+C]+2048>>12,q=f*X[32+C]+2048>>12,K=X[16+C],Y=X[48+C],$=v*(X[8+C]-X[56+C])+2048>>12,T=v*(X[8+C]+X[56+C])+2048>>12,te=X[24+C],L=X[40+C],F=ce-q+1>>1,ce=ce+q+1>>1,q=F,F=K*y+Y*m+2048>>12,K=K*m-Y*y+2048>>12,Y=F,F=$-L+1>>1,$=$+L+1>>1,L=F,F=T+te+1>>1,te=T-te+1>>1,T=F,F=ce-Y+1>>1,ce=ce+Y+1>>1,Y=F,F=q-K+1>>1,q=q+K+1>>1,K=F,F=$*n+T*o+2048>>12,$=$*o-T*n+2048>>12,T=F,F=te*u+L*h+2048>>12,te=te*h-L*u+2048>>12,L=F,X[0+C]=ce+T,X[56+C]=ce-T,X[8+C]=q+L,X[48+C]=q-L,X[16+C]=K+te,X[40+C]=K-te,X[24+C]=Y+$,X[32+C]=Y-$}for(H=0;H<64;++H){var Q=128+(X[H]+8>>4);pe[H]=Q<0?0:Q>255?255:Q}}S(J*V*8);for(var U,ie,oe=0;oe<V;oe++){var ae=oe<<3;for(U=0;U<8;U++)j.push(new Uint8Array(J));for(var W=0;W<O;W++){G(M.blocks[oe][W],z,B);var ee=0,_=W<<3;for(ie=0;ie<8;ie++){var re=j[ae+ie];for(U=0;U<8;U++)re[_+U]=z[ee++]}}}return j}function k(R){return R<0?0:R>255?255:R}p.prototype={load:function(M){var j=new XMLHttpRequest;j.open("GET",M,!0),j.responseType="arraybuffer",j.onload=function(){var O=new Uint8Array(j.response||j.mozResponseArrayBuffer);this.parse(O),this.onload&&this.onload()}.bind(this),j.send(null)},parse:function(M){var j=this.opts.maxResolutionInMP*1e3*1e3,O=0;M.length;function V(){var Z=M[O]<<8|M[O+1];return O+=2,Z}function J(){var Z=V(),ve=M.subarray(O,O+Z-2);return O+=ve.length,ve}function B(Z){var ve=0,be=0,Pe,me;for(me in Z.components)Z.components.hasOwnProperty(me)&&(Pe=Z.components[me],ve<Pe.h&&(ve=Pe.h),be<Pe.v&&(be=Pe.v));var xe=Math.ceil(Z.samplesPerLine/8/ve),ne=Math.ceil(Z.scanLines/8/be);for(me in Z.components)if(Z.components.hasOwnProperty(me)){Pe=Z.components[me];var ke=Math.ceil(Math.ceil(Z.samplesPerLine/8)*Pe.h/ve),Be=Math.ceil(Math.ceil(Z.scanLines/8)*Pe.v/be),P=xe*Pe.h,de=ne*Pe.v,we=de*P,D=[];S(we*256);for(var ue=0;ue<de;ue++){for(var Ae=[],Re=0;Re<P;Re++)Ae.push(new Int32Array(64));D.push(Ae)}Pe.blocksPerLine=ke,Pe.blocksPerColumn=Be,Pe.blocks=D}Z.maxH=ve,Z.maxV=be,Z.mcusPerLine=xe,Z.mcusPerColumn=ne}var z=null,G=null,U,ie,oe=[],ae=[],W=[],ee=[],_=V();if(this.comments=[],_!=65496)throw new Error("SOI not found");for(_=V();_!=65497;){var re,fe;switch(_){case 65280:break;case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:var pe=J();if(_===65534){var he=String.fromCharCode.apply(null,pe);this.comments.push(he)}_===65504&&pe[0]===74&&pe[1]===70&&pe[2]===73&&pe[3]===70&&pe[4]===0&&(z={version:{major:pe[5],minor:pe[6]},densityUnits:pe[7],xDensity:pe[8]<<8|pe[9],yDensity:pe[10]<<8|pe[11],thumbWidth:pe[12],thumbHeight:pe[13],thumbData:pe.subarray(14,14+3*pe[12]*pe[13])}),_===65505&&pe[0]===69&&pe[1]===120&&pe[2]===105&&pe[3]===102&&pe[4]===0&&(this.exifBuffer=pe.subarray(5,pe.length)),_===65518&&pe[0]===65&&pe[1]===100&&pe[2]===111&&pe[3]===98&&pe[4]===101&&pe[5]===0&&(G={version:pe[6],flags0:pe[7]<<8|pe[8],flags1:pe[9]<<8|pe[10],transformCode:pe[11]});break;case 65499:for(var se=V(),ce=se+O-2;O<ce;){var q=M[O++];S(256);var K=new Int32Array(64);if(q>>4===0)for(fe=0;fe<64;fe++){var Y=c[fe];K[Y]=M[O++]}else if(q>>4===1)for(fe=0;fe<64;fe++){var Y=c[fe];K[Y]=V()}else throw new Error("DQT: invalid table spec");oe[q&15]=K}break;case 65472:case 65473:case 65474:V(),U={},U.extended=_===65473,U.progressive=_===65474,U.precision=M[O++],U.scanLines=V(),U.samplesPerLine=V(),U.components={},U.componentsOrder=[];var $=U.scanLines*U.samplesPerLine;if($>j){var te=Math.ceil(($-j)/1e6);throw new Error(`maxResolutionInMP limit exceeded by ${te}MP`)}var L=M[O++],T;for(re=0;re<L;re++){T=M[O];var F=M[O+1]>>4,X=M[O+1]&15,H=M[O+2];U.componentsOrder.push(T),U.components[T]={h:F,v:X,quantizationIdx:H},O+=3}B(U),ae.push(U);break;case 65476:var I=V();for(re=2;re<I;){var C=M[O++],Q=new Uint8Array(16),le=0;for(fe=0;fe<16;fe++,O++)le+=Q[fe]=M[O];S(16+le);var ge=new Uint8Array(le);for(fe=0;fe<le;fe++,O++)ge[fe]=M[O];re+=17+le,(C>>4===0?ee:W)[C&15]=w(Q,ge)}break;case 65501:V(),ie=V();break;case 65500:V(),V();break;case 65498:V();var ye=M[O++],Ne=[],Se;for(re=0;re<ye;re++){Se=U.components[M[O++]];var Ie=M[O++];Se.huffmanTableDC=ee[Ie>>4],Se.huffmanTableAC=W[Ie&15],Ne.push(Se)}var Oe=M[O++],Fe=M[O++],Ee=M[O++],Ze=A(M,O,U,Ne,ie,Oe,Fe,Ee>>4,Ee&15,this.opts);O+=Ze;break;case 65535:M[O]!==255&&O--;break;default:if(M[O-3]==255&&M[O-2]>=192&&M[O-2]<=254){O-=3;break}throw new Error("unknown JPEG marker "+_.toString(16))}_=V()}if(ae.length!=1)throw new Error("only single frame JPEGs supported");for(var re=0;re<ae.length;re++){var Me=ae[re].components;for(var fe in Me)Me[fe].quantizationTable=oe[Me[fe].quantizationIdx],delete Me[fe].quantizationIdx}this.width=U.samplesPerLine,this.height=U.scanLines,this.jfif=z,this.adobe=G,this.components=[];for(var re=0;re<U.componentsOrder.length;re++){var Se=U.components[U.componentsOrder[re]];this.components.push({lines:x(U,Se),scaleX:Se.h/U.maxH,scaleY:Se.v/U.maxV})}},getData:function(M,j){var O=this.width/M,V=this.height/j,J,B,z,G,U,ie,oe,ae,W,ee,_=0,re,fe,pe,he,se,ce,q,K,Y,$,te,L=M*j*this.components.length;S(L);var T=new Uint8Array(L);switch(this.components.length){case 1:for(J=this.components[0],ee=0;ee<j;ee++)for(U=J.lines[0|ee*J.scaleY*V],W=0;W<M;W++)re=U[0|W*J.scaleX*O],T[_++]=re;break;case 2:for(J=this.components[0],B=this.components[1],ee=0;ee<j;ee++)for(U=J.lines[0|ee*J.scaleY*V],ie=B.lines[0|ee*B.scaleY*V],W=0;W<M;W++)re=U[0|W*J.scaleX*O],T[_++]=re,re=ie[0|W*B.scaleX*O],T[_++]=re;break;case 3:for(te=!0,this.adobe&&this.adobe.transformCode?te=!0:typeof this.opts.colorTransform!="undefined"&&(te=!!this.opts.colorTransform),J=this.components[0],B=this.components[1],z=this.components[2],ee=0;ee<j;ee++)for(U=J.lines[0|ee*J.scaleY*V],ie=B.lines[0|ee*B.scaleY*V],oe=z.lines[0|ee*z.scaleY*V],W=0;W<M;W++)te?(re=U[0|W*J.scaleX*O],fe=ie[0|W*B.scaleX*O],pe=oe[0|W*z.scaleX*O],K=k(re+1.402*(pe-128)),Y=k(re-.3441363*(fe-128)-.71413636*(pe-128)),$=k(re+1.772*(fe-128))):(K=U[0|W*J.scaleX*O],Y=ie[0|W*B.scaleX*O],$=oe[0|W*z.scaleX*O]),T[_++]=K,T[_++]=Y,T[_++]=$;break;case 4:if(!this.adobe)throw new Error("Unsupported color mode (4 components)");for(te=!1,this.adobe&&this.adobe.transformCode?te=!0:typeof this.opts.colorTransform!="undefined"&&(te=!!this.opts.colorTransform),J=this.components[0],B=this.components[1],z=this.components[2],G=this.components[3],ee=0;ee<j;ee++)for(U=J.lines[0|ee*J.scaleY*V],ie=B.lines[0|ee*B.scaleY*V],oe=z.lines[0|ee*z.scaleY*V],ae=G.lines[0|ee*G.scaleY*V],W=0;W<M;W++)te?(re=U[0|W*J.scaleX*O],fe=ie[0|W*B.scaleX*O],pe=oe[0|W*z.scaleX*O],he=ae[0|W*G.scaleX*O],se=255-k(re+1.402*(pe-128)),ce=255-k(re-.3441363*(fe-128)-.71413636*(pe-128)),q=255-k(re+1.772*(fe-128))):(se=U[0|W*J.scaleX*O],ce=ie[0|W*B.scaleX*O],q=oe[0|W*z.scaleX*O],he=ae[0|W*G.scaleX*O]),T[_++]=255-se,T[_++]=255-ce,T[_++]=255-q,T[_++]=255-he;break;default:throw new Error("Unsupported color mode")}return T},copyToImageData:function(M,j){var O=M.width,V=M.height,J=M.data,B=this.getData(O,V),z=0,G=0,U,ie,oe,ae,W,ee,_,re,fe;switch(this.components.length){case 1:for(ie=0;ie<V;ie++)for(U=0;U<O;U++)oe=B[z++],J[G++]=oe,J[G++]=oe,J[G++]=oe,j&&(J[G++]=255);break;case 3:for(ie=0;ie<V;ie++)for(U=0;U<O;U++)_=B[z++],re=B[z++],fe=B[z++],J[G++]=_,J[G++]=re,J[G++]=fe,j&&(J[G++]=255);break;case 4:for(ie=0;ie<V;ie++)for(U=0;U<O;U++)W=B[z++],ee=B[z++],oe=B[z++],ae=B[z++],_=255-k(W*(1-ae/255)+ae),re=255-k(ee*(1-ae/255)+ae),fe=255-k(oe*(1-ae/255)+ae),J[G++]=_,J[G++]=re,J[G++]=fe,j&&(J[G++]=255);break;default:throw new Error("Unsupported color mode")}}};var N=0,E=0;function S(R=0){var M=N+R;if(M>E){var j=Math.ceil((M-E)/1024/1024);throw new Error(`maxMemoryUsageInMB limit exceeded by at least ${j}MB`)}N=M}return p.resetMaxMemoryUsage=function(R){N=0,E=R},p.getBytesAllocated=function(){return N},p.requestMemoryAllocation=S,p}();typeof d!="undefined"?d.exports=g:typeof i!="undefined"&&(i["jpeg-js"]=i["jpeg-js"]||{},i["jpeg-js"].decode=g);function g(b,c={}){var h={colorTransform:void 0,useTArray:!1,formatAsRGBA:!0,tolerantDecoding:!0,maxResolutionInMP:100,maxMemoryUsageInMB:512},u=Fi(Fi({},h),c),o=new Uint8Array(b),n=new s;n.opts=u,s.resetMaxMemoryUsage(u.maxMemoryUsageInMB*1024*1024),n.parse(o);var m=u.formatAsRGBA?4:3,y=n.width*n.height*m;try{s.requestMemoryAllocation(y);var f={width:n.width,height:n.height,exifBuffer:n.exifBuffer,data:u.useTArray?new Uint8Array(y):l.alloc(y)};n.comments.length>0&&(f.comments=n.comments)}catch(v){throw v instanceof RangeError?new Error("Could not allocate enough memory for the image. Required: "+y):v}return n.copyToImageData(f,u.formatAsRGBA),f}}).call(this,r("buffer").Buffer)},{buffer:48}],82:[function(r,d,a){(function(l){function s(b){var c=Math.floor,h=new Array(64),u=new Array(64),o=new Array(64),n=new Array(64),m,y,f,v,p=new Array(65535),w=new Array(65535),A=new Array(64),x=new Array(64),k=[],N=0,E=7,S=new Array(64),R=new Array(64),M=new Array(64),j=new Array(256),O=new Array(2048),V,J=[0,1,5,6,14,15,27,28,2,4,7,13,16,26,29,42,3,8,12,17,25,30,41,43,9,11,18,24,31,40,44,53,10,19,23,32,39,45,52,54,20,22,33,38,46,51,55,60,21,34,37,47,50,56,59,61,35,36,48,49,57,58,62,63],B=[0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0],z=[0,1,2,3,4,5,6,7,8,9,10,11],G=[0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125],U=[1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250],ie=[0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0],oe=[0,1,2,3,4,5,6,7,8,9,10,11],ae=[0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119],W=[0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250];function ee(C){for(var Q=[16,11,10,16,24,40,51,61,12,12,14,19,26,58,60,55,14,13,16,24,40,57,69,56,14,17,22,29,51,87,80,62,18,22,37,56,68,109,103,77,24,35,55,64,81,104,113,92,49,64,78,87,103,121,120,101,72,92,95,98,112,100,103,99],le=0;le<64;le++){var ge=c((Q[le]*C+50)/100);ge<1?ge=1:ge>255&&(ge=255),h[J[le]]=ge}for(var ye=[17,18,24,47,99,99,99,99,18,21,26,66,99,99,99,99,24,26,56,99,99,99,99,99,47,66,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99],Ne=0;Ne<64;Ne++){var Se=c((ye[Ne]*C+50)/100);Se<1?Se=1:Se>255&&(Se=255),u[J[Ne]]=Se}for(var Ie=[1,1.387039845,1.306562965,1.175875602,1,.785694958,.5411961,.275899379],Oe=0,Fe=0;Fe<8;Fe++)for(var Ee=0;Ee<8;Ee++)o[Oe]=1/(h[J[Oe]]*Ie[Fe]*Ie[Ee]*8),n[Oe]=1/(u[J[Oe]]*Ie[Fe]*Ie[Ee]*8),Oe++}function _(C,Q){for(var le=0,ge=0,ye=new Array,Ne=1;Ne<=16;Ne++){for(var Se=1;Se<=C[Ne];Se++)ye[Q[ge]]=[],ye[Q[ge]][0]=le,ye[Q[ge]][1]=Ne,ge++,le++;le*=2}return ye}function re(){m=_(B,z),y=_(ie,oe),f=_(G,U),v=_(ae,W)}function fe(){for(var C=1,Q=2,le=1;le<=15;le++){for(var ge=C;ge<Q;ge++)w[32767+ge]=le,p[32767+ge]=[],p[32767+ge][1]=le,p[32767+ge][0]=ge;for(var ye=-(Q-1);ye<=-C;ye++)w[32767+ye]=le,p[32767+ye]=[],p[32767+ye][1]=le,p[32767+ye][0]=Q-1+ye;C<<=1,Q<<=1}}function pe(){for(var C=0;C<256;C++)O[C]=19595*C,O[C+256>>0]=38470*C,O[C+512>>0]=7471*C+32768,O[C+768>>0]=-11059*C,O[C+1024>>0]=-21709*C,O[C+1280>>0]=32768*C+8421375,O[C+1536>>0]=-27439*C,O[C+1792>>0]=-5329*C}function he(C){for(var Q=C[0],le=C[1]-1;le>=0;)Q&1<<le&&(N|=1<<E),le--,E--,E<0&&(N==255?(se(255),se(0)):se(N),E=7,N=0)}function se(C){k.push(C)}function ce(C){se(C>>8&255),se(C&255)}function q(C,Q){var le,ge,ye,Ne,Se,Ie,Oe,Fe,Ee=0,Ze,Me=8,Z=64;for(Ze=0;Ze<Me;++Ze){le=C[Ee],ge=C[Ee+1],ye=C[Ee+2],Ne=C[Ee+3],Se=C[Ee+4],Ie=C[Ee+5],Oe=C[Ee+6],Fe=C[Ee+7];var ve=le+Fe,be=le-Fe,Pe=ge+Oe,me=ge-Oe,xe=ye+Ie,ne=ye-Ie,ke=Ne+Se,Be=Ne-Se,P=ve+ke,de=ve-ke,we=Pe+xe,D=Pe-xe;C[Ee]=P+we,C[Ee+4]=P-we;var ue=(D+de)*.707106781;C[Ee+2]=de+ue,C[Ee+6]=de-ue,P=Be+ne,we=ne+me,D=me+be;var Ae=(P-D)*.382683433,Re=.5411961*P+Ae,Ce=1.306562965*D+Ae,ze=we*.707106781,Ge=be+ze,xt=be-ze;C[Ee+5]=xt+Re,C[Ee+3]=xt-Re,C[Ee+1]=Ge+Ce,C[Ee+7]=Ge-Ce,Ee+=8}for(Ee=0,Ze=0;Ze<Me;++Ze){le=C[Ee],ge=C[Ee+8],ye=C[Ee+16],Ne=C[Ee+24],Se=C[Ee+32],Ie=C[Ee+40],Oe=C[Ee+48],Fe=C[Ee+56];var it=le+Fe,Qe=le-Fe,lt=ge+Oe,ct=ge-Oe,Et=ye+Ie,Lr=ye-Ie,Yr=Ne+Se,ht=Ne-Se,At=it+Yr,pt=it-Yr,Gt=lt+Et,Mt=lt-Et;C[Ee]=At+Gt,C[Ee+32]=At-Gt;var jn=(Mt+pt)*.707106781;C[Ee+16]=pt+jn,C[Ee+48]=pt-jn,At=ht+Lr,Gt=Lr+ct,Mt=ct+Qe;var Ss=(At-Mt)*.382683433,Cs=.5411961*At+Ss,Rs=1.306562965*Mt+Ss,Fs=Gt*.707106781,Os=Qe+Fs,Is=Qe-Fs;C[Ee+40]=Is+Cs,C[Ee+24]=Is-Cs,C[Ee+8]=Os+Rs,C[Ee+56]=Os-Rs,Ee++}var Ri;for(Ze=0;Ze<Z;++Ze)Ri=C[Ze]*Q[Ze],A[Ze]=Ri>0?Ri+.5|0:Ri-.5|0;return A}function K(){ce(65504),ce(16),se(74),se(70),se(73),se(70),se(0),se(1),se(1),se(0),ce(1),ce(1),se(0),se(0)}function Y(C){if(!!C){ce(65505),C[0]===69&&C[1]===120&&C[2]===105&&C[3]===102?ce(C.length+2):(ce(C.length+5+2),se(69),se(120),se(105),se(102),se(0));for(var Q=0;Q<C.length;Q++)se(C[Q])}}function $(C,Q){ce(65472),ce(17),se(8),ce(Q),ce(C),se(3),se(1),se(17),se(0),se(2),se(17),se(1),se(3),se(17),se(1)}function te(){ce(65499),ce(132),se(0);for(var C=0;C<64;C++)se(h[C]);se(1);for(var Q=0;Q<64;Q++)se(u[Q])}function L(){ce(65476),ce(418),se(0);for(var C=0;C<16;C++)se(B[C+1]);for(var Q=0;Q<=11;Q++)se(z[Q]);se(16);for(var le=0;le<16;le++)se(G[le+1]);for(var ge=0;ge<=161;ge++)se(U[ge]);se(1);for(var ye=0;ye<16;ye++)se(ie[ye+1]);for(var Ne=0;Ne<=11;Ne++)se(oe[Ne]);se(17);for(var Se=0;Se<16;Se++)se(ae[Se+1]);for(var Ie=0;Ie<=161;Ie++)se(W[Ie])}function T(){ce(65498),ce(12),se(3),se(1),se(0),se(2),se(17),se(3),se(17),se(0),se(63),se(0)}function F(C,Q,le,ge,ye){for(var Ne=ye[0],Se=ye[240],Ie,Oe=16,Fe=63,Ee=64,Ze=q(C,Q),Me=0;Me<Ee;++Me)x[J[Me]]=Ze[Me];var Z=x[0]-le;le=x[0],Z==0?he(ge[0]):(Ie=32767+Z,he(ge[w[Ie]]),he(p[Ie]));for(var ve=63;ve>0&&x[ve]==0;ve--);if(ve==0)return he(Ne),le;for(var be=1,Pe;be<=ve;){for(var me=be;x[be]==0&&be<=ve;++be);var xe=be-me;if(xe>=Oe){Pe=xe>>4;for(var ne=1;ne<=Pe;++ne)he(Se);xe=xe&15}Ie=32767+x[be],he(ye[(xe<<4)+w[Ie]]),he(p[Ie]),be++}return ve!=Fe&&he(Ne),le}function X(){for(var C=String.fromCharCode,Q=0;Q<256;Q++)j[Q]=C(Q)}this.encode=function(C,Q){new Date().getTime(),Q&&H(Q),k=new Array,N=0,E=7,ce(65496),K(),Y(C.exifBuffer),te(),$(C.width,C.height),L(),T();var le=0,ge=0,ye=0;N=0,E=7,this.encode.displayName="_encode_";for(var Ne=C.data,Se=C.width,Ie=C.height,Oe=Se*4,Fe,Ee=0,Ze,Me,Z,ve,be,Pe,me,xe;Ee<Ie;){for(Fe=0;Fe<Oe;){for(ve=Oe*Ee+Fe,be=ve,Pe=-1,me=0,xe=0;xe<64;xe++)me=xe>>3,Pe=(xe&7)*4,be=ve+me*Oe+Pe,Ee+me>=Ie&&(be-=Oe*(Ee+1+me-Ie)),Fe+Pe>=Oe&&(be-=Fe+Pe-Oe+4),Ze=Ne[be++],Me=Ne[be++],Z=Ne[be++],S[xe]=(O[Ze]+O[Me+256>>0]+O[Z+512>>0]>>16)-128,R[xe]=(O[Ze+768>>0]+O[Me+1024>>0]+O[Z+1280>>0]>>16)-128,M[xe]=(O[Ze+1280>>0]+O[Me+1536>>0]+O[Z+1792>>0]>>16)-128;le=F(S,o,le,m,f),ge=F(R,n,ge,y,v),ye=F(M,n,ye,y,v),Fe+=32}Ee+=8}if(E>=0){var ne=[];ne[1]=E+1,ne[0]=(1<<E+1)-1,he(ne)}return ce(65497),typeof d=="undefined"?new Uint8Array(k):l.from(k)};function H(C){if(C<=0&&(C=1),C>100&&(C=100),V!=C){var Q=0;C<50?Q=Math.floor(5e3/C):Q=Math.floor(200-C*2),ee(Q),V=C}}function I(){var C=new Date().getTime();b||(b=50),X(),re(),fe(),pe(),H(b),new Date().getTime()-C}I()}typeof d!="undefined"?d.exports=g:typeof i!="undefined"&&(i["jpeg-js"]=i["jpeg-js"]||{},i["jpeg-js"].encode=g);function g(b,c){typeof c=="undefined"&&(c=50);var h=new s(c),u=h.encode(b,c);return{data:u,width:b.width,height:b.height}}}).call(this,r("buffer").Buffer)},{buffer:48}],83:[function(r,d,a){(function(l){var s=r("path"),g=r("fs"),b=parseInt("0777",8);d.exports=c.mkdirp=c.mkdirP=c;function c(h,u,o,n){typeof u=="function"?(o=u,u={}):(!u||typeof u!="object")&&(u={mode:u});var m=u.mode,y=u.fs||g;m===void 0&&(m=b&~l.umask()),n||(n=null);var f=o||function(){};h=s.resolve(h),y.mkdir(h,m,function(v){if(!v)return n=n||h,f(null,n);switch(v.code){case"ENOENT":c(s.dirname(h),u,function(p,w){p?f(p,w):c(h,u,f,w)});break;default:y.stat(h,function(p,w){p||!w.isDirectory()?f(v,n):f(null,n)});break}})}c.sync=function h(u,o,n){(!o||typeof o!="object")&&(o={mode:o});var m=o.mode,y=o.fs||g;m===void 0&&(m=b&~l.umask()),n||(n=null),u=s.resolve(u);try{y.mkdirSync(u,m),n=n||u}catch(v){switch(v.code){case"ENOENT":n=h(s.dirname(u),o,n),h(u,o,n);break;default:var f;try{f=y.statSync(u)}catch{throw v}if(!f.isDirectory())throw v;break}}return n}}).call(this,r("_process"))},{_process:133,fs:47,path:107}],84:[function(r,d,a){var l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,g=Object.prototype.propertyIsEnumerable;function b(h){if(h==null)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(h)}function c(){try{if(!Object.assign)return!1;var h=new String("abc");if(h[5]="de",Object.getOwnPropertyNames(h)[0]==="5")return!1;for(var u={},o=0;o<10;o++)u["_"+String.fromCharCode(o)]=o;var n=Object.getOwnPropertyNames(u).map(function(y){return u[y]});if(n.join("")!=="0123456789")return!1;var m={};return"abcdefghijklmnopqrst".split("").forEach(function(y){m[y]=y}),Object.keys(Object.assign({},m)).join("")==="abcdefghijklmnopqrst"}catch{return!1}}d.exports=c()?Object.assign:function(h,u){for(var o,n=b(h),m,y=1;y<arguments.length;y++){o=Object(arguments[y]);for(var f in o)s.call(o,f)&&(n[f]=o[f]);if(l){m=l(o);for(var v=0;v<m.length;v++)g.call(o,m[v])&&(n[m[v]]=o[m[v]])}}return n}},{}],85:[function(r,d,a){arguments[4][64][0].apply(a,arguments)},{dup:64}],86:[function(r,d,a){var l=r("./lib/utils/common").assign,s=r("./lib/deflate"),g=r("./lib/inflate"),b=r("./lib/zlib/constants"),c={};l(c,s,g,b),d.exports=c},{"./lib/deflate":87,"./lib/inflate":88,"./lib/utils/common":89,"./lib/zlib/constants":92}],87:[function(r,d,a){var l=r("./zlib/deflate"),s=r("./utils/common"),g=r("./utils/strings"),b=r("./zlib/messages"),c=r("./zlib/zstream"),h=Object.prototype.toString,u=0,o=4,n=0,m=1,y=2,f=-1,v=0,p=8;function w(N){if(!(this instanceof w))return new w(N);this.options=s.assign({level:f,method:p,chunkSize:16384,windowBits:15,memLevel:8,strategy:v,to:""},N||{});var E=this.options;E.raw&&E.windowBits>0?E.windowBits=-E.windowBits:E.gzip&&E.windowBits>0&&E.windowBits<16&&(E.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new c,this.strm.avail_out=0;var S=l.deflateInit2(this.strm,E.level,E.method,E.windowBits,E.memLevel,E.strategy);if(S!==n)throw new Error(b[S]);if(E.header&&l.deflateSetHeader(this.strm,E.header),E.dictionary){var R;if(typeof E.dictionary=="string"?R=g.string2buf(E.dictionary):h.call(E.dictionary)==="[object ArrayBuffer]"?R=new Uint8Array(E.dictionary):R=E.dictionary,S=l.deflateSetDictionary(this.strm,R),S!==n)throw new Error(b[S]);this._dict_set=!0}}w.prototype.push=function(N,E){var S=this.strm,R=this.options.chunkSize,M,j;if(this.ended)return!1;j=E===~~E?E:E===!0?o:u,typeof N=="string"?S.input=g.string2buf(N):h.call(N)==="[object ArrayBuffer]"?S.input=new Uint8Array(N):S.input=N,S.next_in=0,S.avail_in=S.input.length;do{if(S.avail_out===0&&(S.output=new s.Buf8(R),S.next_out=0,S.avail_out=R),M=l.deflate(S,j),M!==m&&M!==n)return this.onEnd(M),this.ended=!0,!1;(S.avail_out===0||S.avail_in===0&&(j===o||j===y))&&(this.options.to==="string"?this.onData(g.buf2binstring(s.shrinkBuf(S.output,S.next_out))):this.onData(s.shrinkBuf(S.output,S.next_out)))}while((S.avail_in>0||S.avail_out===0)&&M!==m);return j===o?(M=l.deflateEnd(this.strm),this.onEnd(M),this.ended=!0,M===n):(j===y&&(this.onEnd(n),S.avail_out=0),!0)},w.prototype.onData=function(N){this.chunks.push(N)},w.prototype.onEnd=function(N){N===n&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=s.flattenChunks(this.chunks)),this.chunks=[],this.err=N,this.msg=this.strm.msg};function A(N,E){var S=new w(E);if(S.push(N,!0),S.err)throw S.msg||b[S.err];return S.result}function x(N,E){return E=E||{},E.raw=!0,A(N,E)}function k(N,E){return E=E||{},E.gzip=!0,A(N,E)}a.Deflate=w,a.deflate=A,a.deflateRaw=x,a.gzip=k},{"./utils/common":89,"./utils/strings":90,"./zlib/deflate":94,"./zlib/messages":99,"./zlib/zstream":101}],88:[function(r,d,a){var l=r("./zlib/inflate"),s=r("./utils/common"),g=r("./utils/strings"),b=r("./zlib/constants"),c=r("./zlib/messages"),h=r("./zlib/zstream"),u=r("./zlib/gzheader"),o=Object.prototype.toString;function n(f){if(!(this instanceof n))return new n(f);this.options=s.assign({chunkSize:16384,windowBits:0,to:""},f||{});var v=this.options;v.raw&&v.windowBits>=0&&v.windowBits<16&&(v.windowBits=-v.windowBits,v.windowBits===0&&(v.windowBits=-15)),v.windowBits>=0&&v.windowBits<16&&!(f&&f.windowBits)&&(v.windowBits+=32),v.windowBits>15&&v.windowBits<48&&(v.windowBits&15)===0&&(v.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new h,this.strm.avail_out=0;var p=l.inflateInit2(this.strm,v.windowBits);if(p!==b.Z_OK)throw new Error(c[p]);this.header=new u,l.inflateGetHeader(this.strm,this.header)}n.prototype.push=function(f,v){var p=this.strm,w=this.options.chunkSize,A=this.options.dictionary,x,k,N,E,S,R,M=!1;if(this.ended)return!1;k=v===~~v?v:v===!0?b.Z_FINISH:b.Z_NO_FLUSH,typeof f=="string"?p.input=g.binstring2buf(f):o.call(f)==="[object ArrayBuffer]"?p.input=new Uint8Array(f):p.input=f,p.next_in=0,p.avail_in=p.input.length;do{if(p.avail_out===0&&(p.output=new s.Buf8(w),p.next_out=0,p.avail_out=w),x=l.inflate(p,b.Z_NO_FLUSH),x===b.Z_NEED_DICT&&A&&(typeof A=="string"?R=g.string2buf(A):o.call(A)==="[object ArrayBuffer]"?R=new Uint8Array(A):R=A,x=l.inflateSetDictionary(this.strm,R)),x===b.Z_BUF_ERROR&&M===!0&&(x=b.Z_OK,M=!1),x!==b.Z_STREAM_END&&x!==b.Z_OK)return this.onEnd(x),this.ended=!0,!1;p.next_out&&(p.avail_out===0||x===b.Z_STREAM_END||p.avail_in===0&&(k===b.Z_FINISH||k===b.Z_SYNC_FLUSH))&&(this.options.to==="string"?(N=g.utf8border(p.output,p.next_out),E=p.next_out-N,S=g.buf2string(p.output,N),p.next_out=E,p.avail_out=w-E,E&&s.arraySet(p.output,p.output,N,E,0),this.onData(S)):this.onData(s.shrinkBuf(p.output,p.next_out))),p.avail_in===0&&p.avail_out===0&&(M=!0)}while((p.avail_in>0||p.avail_out===0)&&x!==b.Z_STREAM_END);return x===b.Z_STREAM_END&&(k=b.Z_FINISH),k===b.Z_FINISH?(x=l.inflateEnd(this.strm),this.onEnd(x),this.ended=!0,x===b.Z_OK):(k===b.Z_SYNC_FLUSH&&(this.onEnd(b.Z_OK),p.avail_out=0),!0)},n.prototype.onData=function(f){this.chunks.push(f)},n.prototype.onEnd=function(f){f===b.Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=s.flattenChunks(this.chunks)),this.chunks=[],this.err=f,this.msg=this.strm.msg};function m(f,v){var p=new n(v);if(p.push(f,!0),p.err)throw p.msg||c[p.err];return p.result}function y(f,v){return v=v||{},v.raw=!0,m(f,v)}a.Inflate=n,a.inflate=m,a.inflateRaw=y,a.ungzip=m},{"./utils/common":89,"./utils/strings":90,"./zlib/constants":92,"./zlib/gzheader":95,"./zlib/inflate":97,"./zlib/messages":99,"./zlib/zstream":101}],89:[function(r,d,a){arguments[4][36][0].apply(a,arguments)},{dup:36}],90:[function(r,d,a){var l=r("./common"),s=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch{s=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch{g=!1}for(var b=new l.Buf8(256),c=0;c<256;c++)b[c]=c>=252?6:c>=248?5:c>=240?4:c>=224?3:c>=192?2:1;b[254]=b[254]=1,a.string2buf=function(u){var o,n,m,y,f,v=u.length,p=0;for(y=0;y<v;y++)n=u.charCodeAt(y),(n&64512)===55296&&y+1<v&&(m=u.charCodeAt(y+1),(m&64512)===56320&&(n=65536+(n-55296<<10)+(m-56320),y++)),p+=n<128?1:n<2048?2:n<65536?3:4;for(o=new l.Buf8(p),f=0,y=0;f<p;y++)n=u.charCodeAt(y),(n&64512)===55296&&y+1<v&&(m=u.charCodeAt(y+1),(m&64512)===56320&&(n=65536+(n-55296<<10)+(m-56320),y++)),n<128?o[f++]=n:n<2048?(o[f++]=192|n>>>6,o[f++]=128|n&63):n<65536?(o[f++]=224|n>>>12,o[f++]=128|n>>>6&63,o[f++]=128|n&63):(o[f++]=240|n>>>18,o[f++]=128|n>>>12&63,o[f++]=128|n>>>6&63,o[f++]=128|n&63);return o};function h(u,o){if(o<65537&&(u.subarray&&g||!u.subarray&&s))return String.fromCharCode.apply(null,l.shrinkBuf(u,o));for(var n="",m=0;m<o;m++)n+=String.fromCharCode(u[m]);return n}a.buf2binstring=function(u){return h(u,u.length)},a.binstring2buf=function(u){for(var o=new l.Buf8(u.length),n=0,m=o.length;n<m;n++)o[n]=u.charCodeAt(n);return o},a.buf2string=function(u,o){var n,m,y,f,v=o||u.length,p=new Array(v*2);for(m=0,n=0;n<v;){if(y=u[n++],y<128){p[m++]=y;continue}if(f=b[y],f>4){p[m++]=65533,n+=f-1;continue}for(y&=f===2?31:f===3?15:7;f>1&&n<v;)y=y<<6|u[n++]&63,f--;if(f>1){p[m++]=65533;continue}y<65536?p[m++]=y:(y-=65536,p[m++]=55296|y>>10&1023,p[m++]=56320|y&1023)}return h(p,m)},a.utf8border=function(u,o){var n;for(o=o||u.length,o>u.length&&(o=u.length),n=o-1;n>=0&&(u[n]&192)===128;)n--;return n<0||n===0?o:n+b[u[n]]>o?n:o}},{"./common":89}],91:[function(r,d,a){arguments[4][37][0].apply(a,arguments)},{dup:37}],92:[function(r,d,a){arguments[4][38][0].apply(a,arguments)},{dup:38}],93:[function(r,d,a){arguments[4][39][0].apply(a,arguments)},{dup:39}],94:[function(r,d,a){var l=r("../utils/common"),s=r("./trees"),g=r("./adler32"),b=r("./crc32"),c=r("./messages"),h=0,u=1,o=3,n=4,m=5,y=0,f=1,v=-2,p=-3,w=-5,A=-1,x=1,k=2,N=3,E=4,S=0,R=2,M=8,j=9,O=15,V=8,J=29,B=256,z=B+1+J,G=30,U=19,ie=2*z+1,oe=15,ae=3,W=258,ee=W+ae+1,_=32,re=42,fe=69,pe=73,he=91,se=103,ce=113,q=666,K=1,Y=2,$=3,te=4,L=3;function T(P,de){return P.msg=c[de],de}function F(P){return(P<<1)-(P>4?9:0)}function X(P){for(var de=P.length;--de>=0;)P[de]=0}function H(P){var de=P.state,we=de.pending;we>P.avail_out&&(we=P.avail_out),we!==0&&(l.arraySet(P.output,de.pending_buf,de.pending_out,we,P.next_out),P.next_out+=we,de.pending_out+=we,P.total_out+=we,P.avail_out-=we,de.pending-=we,de.pending===0&&(de.pending_out=0))}function I(P,de){s._tr_flush_block(P,P.block_start>=0?P.block_start:-1,P.strstart-P.block_start,de),P.block_start=P.strstart,H(P.strm)}function C(P,de){P.pending_buf[P.pending++]=de}function Q(P,de){P.pending_buf[P.pending++]=de>>>8&255,P.pending_buf[P.pending++]=de&255}function le(P,de,we,D){var ue=P.avail_in;return ue>D&&(ue=D),ue===0?0:(P.avail_in-=ue,l.arraySet(de,P.input,P.next_in,ue,we),P.state.wrap===1?P.adler=g(P.adler,de,ue,we):P.state.wrap===2&&(P.adler=b(P.adler,de,ue,we)),P.next_in+=ue,P.total_in+=ue,ue)}function ge(P,de){var we=P.max_chain_length,D=P.strstart,ue,Ae,Re=P.prev_length,Ce=P.nice_match,ze=P.strstart>P.w_size-ee?P.strstart-(P.w_size-ee):0,Ge=P.window,xt=P.w_mask,it=P.prev,Qe=P.strstart+W,lt=Ge[D+Re-1],ct=Ge[D+Re];P.prev_length>=P.good_match&&(we>>=2),Ce>P.lookahead&&(Ce=P.lookahead);do if(ue=de,!(Ge[ue+Re]!==ct||Ge[ue+Re-1]!==lt||Ge[ue]!==Ge[D]||Ge[++ue]!==Ge[D+1])){D+=2,ue++;do;while(Ge[++D]===Ge[++ue]&&Ge[++D]===Ge[++ue]&&Ge[++D]===Ge[++ue]&&Ge[++D]===Ge[++ue]&&Ge[++D]===Ge[++ue]&&Ge[++D]===Ge[++ue]&&Ge[++D]===Ge[++ue]&&Ge[++D]===Ge[++ue]&&D<Qe);if(Ae=W-(Qe-D),D=Qe-W,Ae>Re){if(P.match_start=de,Re=Ae,Ae>=Ce)break;lt=Ge[D+Re-1],ct=Ge[D+Re]}}while((de=it[de&xt])>ze&&--we!==0);return Re<=P.lookahead?Re:P.lookahead}function ye(P){var de=P.w_size,we,D,ue,Ae,Re;do{if(Ae=P.window_size-P.lookahead-P.strstart,P.strstart>=de+(de-ee)){l.arraySet(P.window,P.window,de,de,0),P.match_start-=de,P.strstart-=de,P.block_start-=de,D=P.hash_size,we=D;do ue=P.head[--we],P.head[we]=ue>=de?ue-de:0;while(--D);D=de,we=D;do ue=P.prev[--we],P.prev[we]=ue>=de?ue-de:0;while(--D);Ae+=de}if(P.strm.avail_in===0)break;if(D=le(P.strm,P.window,P.strstart+P.lookahead,Ae),P.lookahead+=D,P.lookahead+P.insert>=ae)for(Re=P.strstart-P.insert,P.ins_h=P.window[Re],P.ins_h=(P.ins_h<<P.hash_shift^P.window[Re+1])&P.hash_mask;P.insert&&(P.ins_h=(P.ins_h<<P.hash_shift^P.window[Re+ae-1])&P.hash_mask,P.prev[Re&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=Re,Re++,P.insert--,!(P.lookahead+P.insert<ae)););}while(P.lookahead<ee&&P.strm.avail_in!==0)}function Ne(P,de){var we=65535;for(we>P.pending_buf_size-5&&(we=P.pending_buf_size-5);;){if(P.lookahead<=1){if(ye(P),P.lookahead===0&&de===h)return K;if(P.lookahead===0)break}P.strstart+=P.lookahead,P.lookahead=0;var D=P.block_start+we;if((P.strstart===0||P.strstart>=D)&&(P.lookahead=P.strstart-D,P.strstart=D,I(P,!1),P.strm.avail_out===0)||P.strstart-P.block_start>=P.w_size-ee&&(I(P,!1),P.strm.avail_out===0))return K}return P.insert=0,de===n?(I(P,!0),P.strm.avail_out===0?$:te):(P.strstart>P.block_start&&(I(P,!1),P.strm.avail_out===0),K)}function Se(P,de){for(var we,D;;){if(P.lookahead<ee){if(ye(P),P.lookahead<ee&&de===h)return K;if(P.lookahead===0)break}if(we=0,P.lookahead>=ae&&(P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+ae-1])&P.hash_mask,we=P.prev[P.strstart&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=P.strstart),we!==0&&P.strstart-we<=P.w_size-ee&&(P.match_length=ge(P,we)),P.match_length>=ae)if(D=s._tr_tally(P,P.strstart-P.match_start,P.match_length-ae),P.lookahead-=P.match_length,P.match_length<=P.max_lazy_match&&P.lookahead>=ae){P.match_length--;do P.strstart++,P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+ae-1])&P.hash_mask,we=P.prev[P.strstart&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=P.strstart;while(--P.match_length!==0);P.strstart++}else P.strstart+=P.match_length,P.match_length=0,P.ins_h=P.window[P.strstart],P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+1])&P.hash_mask;else D=s._tr_tally(P,0,P.window[P.strstart]),P.lookahead--,P.strstart++;if(D&&(I(P,!1),P.strm.avail_out===0))return K}return P.insert=P.strstart<ae-1?P.strstart:ae-1,de===n?(I(P,!0),P.strm.avail_out===0?$:te):P.last_lit&&(I(P,!1),P.strm.avail_out===0)?K:Y}function Ie(P,de){for(var we,D,ue;;){if(P.lookahead<ee){if(ye(P),P.lookahead<ee&&de===h)return K;if(P.lookahead===0)break}if(we=0,P.lookahead>=ae&&(P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+ae-1])&P.hash_mask,we=P.prev[P.strstart&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=P.strstart),P.prev_length=P.match_length,P.prev_match=P.match_start,P.match_length=ae-1,we!==0&&P.prev_length<P.max_lazy_match&&P.strstart-we<=P.w_size-ee&&(P.match_length=ge(P,we),P.match_length<=5&&(P.strategy===x||P.match_length===ae&&P.strstart-P.match_start>4096)&&(P.match_length=ae-1)),P.prev_length>=ae&&P.match_length<=P.prev_length){ue=P.strstart+P.lookahead-ae,D=s._tr_tally(P,P.strstart-1-P.prev_match,P.prev_length-ae),P.lookahead-=P.prev_length-1,P.prev_length-=2;do++P.strstart<=ue&&(P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+ae-1])&P.hash_mask,we=P.prev[P.strstart&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=P.strstart);while(--P.prev_length!==0);if(P.match_available=0,P.match_length=ae-1,P.strstart++,D&&(I(P,!1),P.strm.avail_out===0))return K}else if(P.match_available){if(D=s._tr_tally(P,0,P.window[P.strstart-1]),D&&I(P,!1),P.strstart++,P.lookahead--,P.strm.avail_out===0)return K}else P.match_available=1,P.strstart++,P.lookahead--}return P.match_available&&(D=s._tr_tally(P,0,P.window[P.strstart-1]),P.match_available=0),P.insert=P.strstart<ae-1?P.strstart:ae-1,de===n?(I(P,!0),P.strm.avail_out===0?$:te):P.last_lit&&(I(P,!1),P.strm.avail_out===0)?K:Y}function Oe(P,de){for(var we,D,ue,Ae,Re=P.window;;){if(P.lookahead<=W){if(ye(P),P.lookahead<=W&&de===h)return K;if(P.lookahead===0)break}if(P.match_length=0,P.lookahead>=ae&&P.strstart>0&&(ue=P.strstart-1,D=Re[ue],D===Re[++ue]&&D===Re[++ue]&&D===Re[++ue])){Ae=P.strstart+W;do;while(D===Re[++ue]&&D===Re[++ue]&&D===Re[++ue]&&D===Re[++ue]&&D===Re[++ue]&&D===Re[++ue]&&D===Re[++ue]&&D===Re[++ue]&&ue<Ae);P.match_length=W-(Ae-ue),P.match_length>P.lookahead&&(P.match_length=P.lookahead)}if(P.match_length>=ae?(we=s._tr_tally(P,1,P.match_length-ae),P.lookahead-=P.match_length,P.strstart+=P.match_length,P.match_length=0):(we=s._tr_tally(P,0,P.window[P.strstart]),P.lookahead--,P.strstart++),we&&(I(P,!1),P.strm.avail_out===0))return K}return P.insert=0,de===n?(I(P,!0),P.strm.avail_out===0?$:te):P.last_lit&&(I(P,!1),P.strm.avail_out===0)?K:Y}function Fe(P,de){for(var we;;){if(P.lookahead===0&&(ye(P),P.lookahead===0)){if(de===h)return K;break}if(P.match_length=0,we=s._tr_tally(P,0,P.window[P.strstart]),P.lookahead--,P.strstart++,we&&(I(P,!1),P.strm.avail_out===0))return K}return P.insert=0,de===n?(I(P,!0),P.strm.avail_out===0?$:te):P.last_lit&&(I(P,!1),P.strm.avail_out===0)?K:Y}function Ee(P,de,we,D,ue){this.good_length=P,this.max_lazy=de,this.nice_length=we,this.max_chain=D,this.func=ue}var Ze;Ze=[new Ee(0,0,0,0,Ne),new Ee(4,4,8,4,Se),new Ee(4,5,16,8,Se),new Ee(4,6,32,32,Se),new Ee(4,4,16,16,Ie),new Ee(8,16,32,32,Ie),new Ee(8,16,128,128,Ie),new Ee(8,32,128,256,Ie),new Ee(32,128,258,1024,Ie),new Ee(32,258,258,4096,Ie)];function Me(P){P.window_size=2*P.w_size,X(P.head),P.max_lazy_match=Ze[P.level].max_lazy,P.good_match=Ze[P.level].good_length,P.nice_match=Ze[P.level].nice_length,P.max_chain_length=Ze[P.level].max_chain,P.strstart=0,P.block_start=0,P.lookahead=0,P.insert=0,P.match_length=P.prev_length=ae-1,P.match_available=0,P.ins_h=0}function Z(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=M,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new l.Buf16(ie*2),this.dyn_dtree=new l.Buf16((2*G+1)*2),this.bl_tree=new l.Buf16((2*U+1)*2),X(this.dyn_ltree),X(this.dyn_dtree),X(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new l.Buf16(oe+1),this.heap=new l.Buf16(2*z+1),X(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new l.Buf16(2*z+1),X(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function ve(P){var de;return!P||!P.state?T(P,v):(P.total_in=P.total_out=0,P.data_type=R,de=P.state,de.pending=0,de.pending_out=0,de.wrap<0&&(de.wrap=-de.wrap),de.status=de.wrap?re:ce,P.adler=de.wrap===2?0:1,de.last_flush=h,s._tr_init(de),y)}function be(P){var de=ve(P);return de===y&&Me(P.state),de}function Pe(P,de){return!P||!P.state||P.state.wrap!==2?v:(P.state.gzhead=de,y)}function me(P,de,we,D,ue,Ae){if(!P)return v;var Re=1;if(de===A&&(de=6),D<0?(Re=0,D=-D):D>15&&(Re=2,D-=16),ue<1||ue>j||we!==M||D<8||D>15||de<0||de>9||Ae<0||Ae>E)return T(P,v);D===8&&(D=9);var Ce=new Z;return P.state=Ce,Ce.strm=P,Ce.wrap=Re,Ce.gzhead=null,Ce.w_bits=D,Ce.w_size=1<<Ce.w_bits,Ce.w_mask=Ce.w_size-1,Ce.hash_bits=ue+7,Ce.hash_size=1<<Ce.hash_bits,Ce.hash_mask=Ce.hash_size-1,Ce.hash_shift=~~((Ce.hash_bits+ae-1)/ae),Ce.window=new l.Buf8(Ce.w_size*2),Ce.head=new l.Buf16(Ce.hash_size),Ce.prev=new l.Buf16(Ce.w_size),Ce.lit_bufsize=1<<ue+6,Ce.pending_buf_size=Ce.lit_bufsize*4,Ce.pending_buf=new l.Buf8(Ce.pending_buf_size),Ce.d_buf=1*Ce.lit_bufsize,Ce.l_buf=(1+2)*Ce.lit_bufsize,Ce.level=de,Ce.strategy=Ae,Ce.method=we,be(P)}function xe(P,de){return me(P,de,M,O,V,S)}function ne(P,de){var we,D,ue,Ae;if(!P||!P.state||de>m||de<0)return P?T(P,v):v;if(D=P.state,!P.output||!P.input&&P.avail_in!==0||D.status===q&&de!==n)return T(P,P.avail_out===0?w:v);if(D.strm=P,we=D.last_flush,D.last_flush=de,D.status===re)if(D.wrap===2)P.adler=0,C(D,31),C(D,139),C(D,8),D.gzhead?(C(D,(D.gzhead.text?1:0)+(D.gzhead.hcrc?2:0)+(D.gzhead.extra?4:0)+(D.gzhead.name?8:0)+(D.gzhead.comment?16:0)),C(D,D.gzhead.time&255),C(D,D.gzhead.time>>8&255),C(D,D.gzhead.time>>16&255),C(D,D.gzhead.time>>24&255),C(D,D.level===9?2:D.strategy>=k||D.level<2?4:0),C(D,D.gzhead.os&255),D.gzhead.extra&&D.gzhead.extra.length&&(C(D,D.gzhead.extra.length&255),C(D,D.gzhead.extra.length>>8&255)),D.gzhead.hcrc&&(P.adler=b(P.adler,D.pending_buf,D.pending,0)),D.gzindex=0,D.status=fe):(C(D,0),C(D,0),C(D,0),C(D,0),C(D,0),C(D,D.level===9?2:D.strategy>=k||D.level<2?4:0),C(D,L),D.status=ce);else{var Re=M+(D.w_bits-8<<4)<<8,Ce=-1;D.strategy>=k||D.level<2?Ce=0:D.level<6?Ce=1:D.level===6?Ce=2:Ce=3,Re|=Ce<<6,D.strstart!==0&&(Re|=_),Re+=31-Re%31,D.status=ce,Q(D,Re),D.strstart!==0&&(Q(D,P.adler>>>16),Q(D,P.adler&65535)),P.adler=1}if(D.status===fe)if(D.gzhead.extra){for(ue=D.pending;D.gzindex<(D.gzhead.extra.length&65535)&&!(D.pending===D.pending_buf_size&&(D.gzhead.hcrc&&D.pending>ue&&(P.adler=b(P.adler,D.pending_buf,D.pending-ue,ue)),H(P),ue=D.pending,D.pending===D.pending_buf_size));)C(D,D.gzhead.extra[D.gzindex]&255),D.gzindex++;D.gzhead.hcrc&&D.pending>ue&&(P.adler=b(P.adler,D.pending_buf,D.pending-ue,ue)),D.gzindex===D.gzhead.extra.length&&(D.gzindex=0,D.status=pe)}else D.status=pe;if(D.status===pe)if(D.gzhead.name){ue=D.pending;do{if(D.pending===D.pending_buf_size&&(D.gzhead.hcrc&&D.pending>ue&&(P.adler=b(P.adler,D.pending_buf,D.pending-ue,ue)),H(P),ue=D.pending,D.pending===D.pending_buf_size)){Ae=1;break}D.gzindex<D.gzhead.name.length?Ae=D.gzhead.name.charCodeAt(D.gzindex++)&255:Ae=0,C(D,Ae)}while(Ae!==0);D.gzhead.hcrc&&D.pending>ue&&(P.adler=b(P.adler,D.pending_buf,D.pending-ue,ue)),Ae===0&&(D.gzindex=0,D.status=he)}else D.status=he;if(D.status===he)if(D.gzhead.comment){ue=D.pending;do{if(D.pending===D.pending_buf_size&&(D.gzhead.hcrc&&D.pending>ue&&(P.adler=b(P.adler,D.pending_buf,D.pending-ue,ue)),H(P),ue=D.pending,D.pending===D.pending_buf_size)){Ae=1;break}D.gzindex<D.gzhead.comment.length?Ae=D.gzhead.comment.charCodeAt(D.gzindex++)&255:Ae=0,C(D,Ae)}while(Ae!==0);D.gzhead.hcrc&&D.pending>ue&&(P.adler=b(P.adler,D.pending_buf,D.pending-ue,ue)),Ae===0&&(D.status=se)}else D.status=se;if(D.status===se&&(D.gzhead.hcrc?(D.pending+2>D.pending_buf_size&&H(P),D.pending+2<=D.pending_buf_size&&(C(D,P.adler&255),C(D,P.adler>>8&255),P.adler=0,D.status=ce)):D.status=ce),D.pending!==0){if(H(P),P.avail_out===0)return D.last_flush=-1,y}else if(P.avail_in===0&&F(de)<=F(we)&&de!==n)return T(P,w);if(D.status===q&&P.avail_in!==0)return T(P,w);if(P.avail_in!==0||D.lookahead!==0||de!==h&&D.status!==q){var ze=D.strategy===k?Fe(D,de):D.strategy===N?Oe(D,de):Ze[D.level].func(D,de);if((ze===$||ze===te)&&(D.status=q),ze===K||ze===$)return P.avail_out===0&&(D.last_flush=-1),y;if(ze===Y&&(de===u?s._tr_align(D):de!==m&&(s._tr_stored_block(D,0,0,!1),de===o&&(X(D.head),D.lookahead===0&&(D.strstart=0,D.block_start=0,D.insert=0))),H(P),P.avail_out===0))return D.last_flush=-1,y}return de!==n?y:D.wrap<=0?f:(D.wrap===2?(C(D,P.adler&255),C(D,P.adler>>8&255),C(D,P.adler>>16&255),C(D,P.adler>>24&255),C(D,P.total_in&255),C(D,P.total_in>>8&255),C(D,P.total_in>>16&255),C(D,P.total_in>>24&255)):(Q(D,P.adler>>>16),Q(D,P.adler&65535)),H(P),D.wrap>0&&(D.wrap=-D.wrap),D.pending!==0?y:f)}function ke(P){var de;return!P||!P.state?v:(de=P.state.status,de!==re&&de!==fe&&de!==pe&&de!==he&&de!==se&&de!==ce&&de!==q?T(P,v):(P.state=null,de===ce?T(P,p):y))}function Be(P,de){var we=de.length,D,ue,Ae,Re,Ce,ze,Ge,xt;if(!P||!P.state||(D=P.state,Re=D.wrap,Re===2||Re===1&&D.status!==re||D.lookahead))return v;for(Re===1&&(P.adler=g(P.adler,de,we,0)),D.wrap=0,we>=D.w_size&&(Re===0&&(X(D.head),D.strstart=0,D.block_start=0,D.insert=0),xt=new l.Buf8(D.w_size),l.arraySet(xt,de,we-D.w_size,D.w_size,0),de=xt,we=D.w_size),Ce=P.avail_in,ze=P.next_in,Ge=P.input,P.avail_in=we,P.next_in=0,P.input=de,ye(D);D.lookahead>=ae;){ue=D.strstart,Ae=D.lookahead-(ae-1);do D.ins_h=(D.ins_h<<D.hash_shift^D.window[ue+ae-1])&D.hash_mask,D.prev[ue&D.w_mask]=D.head[D.ins_h],D.head[D.ins_h]=ue,ue++;while(--Ae);D.strstart=ue,D.lookahead=ae-1,ye(D)}return D.strstart+=D.lookahead,D.block_start=D.strstart,D.insert=D.lookahead,D.lookahead=0,D.match_length=D.prev_length=ae-1,D.match_available=0,P.next_in=ze,P.input=Ge,P.avail_in=Ce,D.wrap=Re,y}a.deflateInit=xe,a.deflateInit2=me,a.deflateReset=be,a.deflateResetKeep=ve,a.deflateSetHeader=Pe,a.deflate=ne,a.deflateEnd=ke,a.deflateSetDictionary=Be,a.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":89,"./adler32":91,"./crc32":93,"./messages":99,"./trees":100}],95:[function(r,d,a){function l(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}d.exports=l},{}],96:[function(r,d,a){arguments[4][41][0].apply(a,arguments)},{dup:41}],97:[function(r,d,a){arguments[4][42][0].apply(a,arguments)},{"../utils/common":89,"./adler32":91,"./crc32":93,"./inffast":96,"./inftrees":98,dup:42}],98:[function(r,d,a){arguments[4][43][0].apply(a,arguments)},{"../utils/common":89,dup:43}],99:[function(r,d,a){arguments[4][44][0].apply(a,arguments)},{dup:44}],100:[function(r,d,a){var l=r("../utils/common"),s=4,g=0,b=1,c=2;function h(Z){for(var ve=Z.length;--ve>=0;)Z[ve]=0}var u=0,o=1,n=2,m=3,y=258,f=29,v=256,p=v+1+f,w=30,A=19,x=2*p+1,k=15,N=16,E=7,S=256,R=16,M=17,j=18,O=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],V=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],J=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],B=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],z=512,G=new Array((p+2)*2);h(G);var U=new Array(w*2);h(U);var ie=new Array(z);h(ie);var oe=new Array(y-m+1);h(oe);var ae=new Array(f);h(ae);var W=new Array(w);h(W);function ee(Z,ve,be,Pe,me){this.static_tree=Z,this.extra_bits=ve,this.extra_base=be,this.elems=Pe,this.max_length=me,this.has_stree=Z&&Z.length}var _,re,fe;function pe(Z,ve){this.dyn_tree=Z,this.max_code=0,this.stat_desc=ve}function he(Z){return Z<256?ie[Z]:ie[256+(Z>>>7)]}function se(Z,ve){Z.pending_buf[Z.pending++]=ve&255,Z.pending_buf[Z.pending++]=ve>>>8&255}function ce(Z,ve,be){Z.bi_valid>N-be?(Z.bi_buf|=ve<<Z.bi_valid&65535,se(Z,Z.bi_buf),Z.bi_buf=ve>>N-Z.bi_valid,Z.bi_valid+=be-N):(Z.bi_buf|=ve<<Z.bi_valid&65535,Z.bi_valid+=be)}function q(Z,ve,be){ce(Z,be[ve*2],be[ve*2+1])}function K(Z,ve){var be=0;do be|=Z&1,Z>>>=1,be<<=1;while(--ve>0);return be>>>1}function Y(Z){Z.bi_valid===16?(se(Z,Z.bi_buf),Z.bi_buf=0,Z.bi_valid=0):Z.bi_valid>=8&&(Z.pending_buf[Z.pending++]=Z.bi_buf&255,Z.bi_buf>>=8,Z.bi_valid-=8)}function $(Z,ve){var be=ve.dyn_tree,Pe=ve.max_code,me=ve.stat_desc.static_tree,xe=ve.stat_desc.has_stree,ne=ve.stat_desc.extra_bits,ke=ve.stat_desc.extra_base,Be=ve.stat_desc.max_length,P,de,we,D,ue,Ae,Re=0;for(D=0;D<=k;D++)Z.bl_count[D]=0;for(be[Z.heap[Z.heap_max]*2+1]=0,P=Z.heap_max+1;P<x;P++)de=Z.heap[P],D=be[be[de*2+1]*2+1]+1,D>Be&&(D=Be,Re++),be[de*2+1]=D,!(de>Pe)&&(Z.bl_count[D]++,ue=0,de>=ke&&(ue=ne[de-ke]),Ae=be[de*2],Z.opt_len+=Ae*(D+ue),xe&&(Z.static_len+=Ae*(me[de*2+1]+ue)));if(Re!==0){do{for(D=Be-1;Z.bl_count[D]===0;)D--;Z.bl_count[D]--,Z.bl_count[D+1]+=2,Z.bl_count[Be]--,Re-=2}while(Re>0);for(D=Be;D!==0;D--)for(de=Z.bl_count[D];de!==0;)we=Z.heap[--P],!(we>Pe)&&(be[we*2+1]!==D&&(Z.opt_len+=(D-be[we*2+1])*be[we*2],be[we*2+1]=D),de--)}}function te(Z,ve,be){var Pe=new Array(k+1),me=0,xe,ne;for(xe=1;xe<=k;xe++)Pe[xe]=me=me+be[xe-1]<<1;for(ne=0;ne<=ve;ne++){var ke=Z[ne*2+1];ke!==0&&(Z[ne*2]=K(Pe[ke]++,ke))}}function L(){var Z,ve,be,Pe,me,xe=new Array(k+1);for(be=0,Pe=0;Pe<f-1;Pe++)for(ae[Pe]=be,Z=0;Z<1<<O[Pe];Z++)oe[be++]=Pe;for(oe[be-1]=Pe,me=0,Pe=0;Pe<16;Pe++)for(W[Pe]=me,Z=0;Z<1<<V[Pe];Z++)ie[me++]=Pe;for(me>>=7;Pe<w;Pe++)for(W[Pe]=me<<7,Z=0;Z<1<<V[Pe]-7;Z++)ie[256+me++]=Pe;for(ve=0;ve<=k;ve++)xe[ve]=0;for(Z=0;Z<=143;)G[Z*2+1]=8,Z++,xe[8]++;for(;Z<=255;)G[Z*2+1]=9,Z++,xe[9]++;for(;Z<=279;)G[Z*2+1]=7,Z++,xe[7]++;for(;Z<=287;)G[Z*2+1]=8,Z++,xe[8]++;for(te(G,p+1,xe),Z=0;Z<w;Z++)U[Z*2+1]=5,U[Z*2]=K(Z,5);_=new ee(G,O,v+1,p,k),re=new ee(U,V,0,w,k),fe=new ee(new Array(0),J,0,A,E)}function T(Z){var ve;for(ve=0;ve<p;ve++)Z.dyn_ltree[ve*2]=0;for(ve=0;ve<w;ve++)Z.dyn_dtree[ve*2]=0;for(ve=0;ve<A;ve++)Z.bl_tree[ve*2]=0;Z.dyn_ltree[S*2]=1,Z.opt_len=Z.static_len=0,Z.last_lit=Z.matches=0}function F(Z){Z.bi_valid>8?se(Z,Z.bi_buf):Z.bi_valid>0&&(Z.pending_buf[Z.pending++]=Z.bi_buf),Z.bi_buf=0,Z.bi_valid=0}function X(Z,ve,be,Pe){F(Z),Pe&&(se(Z,be),se(Z,~be)),l.arraySet(Z.pending_buf,Z.window,ve,be,Z.pending),Z.pending+=be}function H(Z,ve,be,Pe){var me=ve*2,xe=be*2;return Z[me]<Z[xe]||Z[me]===Z[xe]&&Pe[ve]<=Pe[be]}function I(Z,ve,be){for(var Pe=Z.heap[be],me=be<<1;me<=Z.heap_len&&(me<Z.heap_len&&H(ve,Z.heap[me+1],Z.heap[me],Z.depth)&&me++,!H(ve,Pe,Z.heap[me],Z.depth));)Z.heap[be]=Z.heap[me],be=me,me<<=1;Z.heap[be]=Pe}function C(Z,ve,be){var Pe,me,xe=0,ne,ke;if(Z.last_lit!==0)do Pe=Z.pending_buf[Z.d_buf+xe*2]<<8|Z.pending_buf[Z.d_buf+xe*2+1],me=Z.pending_buf[Z.l_buf+xe],xe++,Pe===0?q(Z,me,ve):(ne=oe[me],q(Z,ne+v+1,ve),ke=O[ne],ke!==0&&(me-=ae[ne],ce(Z,me,ke)),Pe--,ne=he(Pe),q(Z,ne,be),ke=V[ne],ke!==0&&(Pe-=W[ne],ce(Z,Pe,ke)));while(xe<Z.last_lit);q(Z,S,ve)}function Q(Z,ve){var be=ve.dyn_tree,Pe=ve.stat_desc.static_tree,me=ve.stat_desc.has_stree,xe=ve.stat_desc.elems,ne,ke,Be=-1,P;for(Z.heap_len=0,Z.heap_max=x,ne=0;ne<xe;ne++)be[ne*2]!==0?(Z.heap[++Z.heap_len]=Be=ne,Z.depth[ne]=0):be[ne*2+1]=0;for(;Z.heap_len<2;)P=Z.heap[++Z.heap_len]=Be<2?++Be:0,be[P*2]=1,Z.depth[P]=0,Z.opt_len--,me&&(Z.static_len-=Pe[P*2+1]);for(ve.max_code=Be,ne=Z.heap_len>>1;ne>=1;ne--)I(Z,be,ne);P=xe;do ne=Z.heap[1],Z.heap[1]=Z.heap[Z.heap_len--],I(Z,be,1),ke=Z.heap[1],Z.heap[--Z.heap_max]=ne,Z.heap[--Z.heap_max]=ke,be[P*2]=be[ne*2]+be[ke*2],Z.depth[P]=(Z.depth[ne]>=Z.depth[ke]?Z.depth[ne]:Z.depth[ke])+1,be[ne*2+1]=be[ke*2+1]=P,Z.heap[1]=P++,I(Z,be,1);while(Z.heap_len>=2);Z.heap[--Z.heap_max]=Z.heap[1],$(Z,ve),te(be,Be,Z.bl_count)}function le(Z,ve,be){var Pe,me=-1,xe,ne=ve[0*2+1],ke=0,Be=7,P=4;for(ne===0&&(Be=138,P=3),ve[(be+1)*2+1]=65535,Pe=0;Pe<=be;Pe++)xe=ne,ne=ve[(Pe+1)*2+1],!(++ke<Be&&xe===ne)&&(ke<P?Z.bl_tree[xe*2]+=ke:xe!==0?(xe!==me&&Z.bl_tree[xe*2]++,Z.bl_tree[R*2]++):ke<=10?Z.bl_tree[M*2]++:Z.bl_tree[j*2]++,ke=0,me=xe,ne===0?(Be=138,P=3):xe===ne?(Be=6,P=3):(Be=7,P=4))}function ge(Z,ve,be){var Pe,me=-1,xe,ne=ve[0*2+1],ke=0,Be=7,P=4;for(ne===0&&(Be=138,P=3),Pe=0;Pe<=be;Pe++)if(xe=ne,ne=ve[(Pe+1)*2+1],!(++ke<Be&&xe===ne)){if(ke<P)do q(Z,xe,Z.bl_tree);while(--ke!==0);else xe!==0?(xe!==me&&(q(Z,xe,Z.bl_tree),ke--),q(Z,R,Z.bl_tree),ce(Z,ke-3,2)):ke<=10?(q(Z,M,Z.bl_tree),ce(Z,ke-3,3)):(q(Z,j,Z.bl_tree),ce(Z,ke-11,7));ke=0,me=xe,ne===0?(Be=138,P=3):xe===ne?(Be=6,P=3):(Be=7,P=4)}}function ye(Z){var ve;for(le(Z,Z.dyn_ltree,Z.l_desc.max_code),le(Z,Z.dyn_dtree,Z.d_desc.max_code),Q(Z,Z.bl_desc),ve=A-1;ve>=3&&Z.bl_tree[B[ve]*2+1]===0;ve--);return Z.opt_len+=3*(ve+1)+5+5+4,ve}function Ne(Z,ve,be,Pe){var me;for(ce(Z,ve-257,5),ce(Z,be-1,5),ce(Z,Pe-4,4),me=0;me<Pe;me++)ce(Z,Z.bl_tree[B[me]*2+1],3);ge(Z,Z.dyn_ltree,ve-1),ge(Z,Z.dyn_dtree,be-1)}function Se(Z){var ve=4093624447,be;for(be=0;be<=31;be++,ve>>>=1)if(ve&1&&Z.dyn_ltree[be*2]!==0)return g;if(Z.dyn_ltree[9*2]!==0||Z.dyn_ltree[10*2]!==0||Z.dyn_ltree[13*2]!==0)return b;for(be=32;be<v;be++)if(Z.dyn_ltree[be*2]!==0)return b;return g}var Ie=!1;function Oe(Z){Ie||(L(),Ie=!0),Z.l_desc=new pe(Z.dyn_ltree,_),Z.d_desc=new pe(Z.dyn_dtree,re),Z.bl_desc=new pe(Z.bl_tree,fe),Z.bi_buf=0,Z.bi_valid=0,T(Z)}function Fe(Z,ve,be,Pe){ce(Z,(u<<1)+(Pe?1:0),3),X(Z,ve,be,!0)}function Ee(Z){ce(Z,o<<1,3),q(Z,S,G),Y(Z)}function Ze(Z,ve,be,Pe){var me,xe,ne=0;Z.level>0?(Z.strm.data_type===c&&(Z.strm.data_type=Se(Z)),Q(Z,Z.l_desc),Q(Z,Z.d_desc),ne=ye(Z),me=Z.opt_len+3+7>>>3,xe=Z.static_len+3+7>>>3,xe<=me&&(me=xe)):me=xe=be+5,be+4<=me&&ve!==-1?Fe(Z,ve,be,Pe):Z.strategy===s||xe===me?(ce(Z,(o<<1)+(Pe?1:0),3),C(Z,G,U)):(ce(Z,(n<<1)+(Pe?1:0),3),Ne(Z,Z.l_desc.max_code+1,Z.d_desc.max_code+1,ne+1),C(Z,Z.dyn_ltree,Z.dyn_dtree)),T(Z),Pe&&F(Z)}function Me(Z,ve,be){return Z.pending_buf[Z.d_buf+Z.last_lit*2]=ve>>>8&255,Z.pending_buf[Z.d_buf+Z.last_lit*2+1]=ve&255,Z.pending_buf[Z.l_buf+Z.last_lit]=be&255,Z.last_lit++,ve===0?Z.dyn_ltree[be*2]++:(Z.matches++,ve--,Z.dyn_ltree[(oe[be]+v+1)*2]++,Z.dyn_dtree[he(ve)*2]++),Z.last_lit===Z.lit_bufsize-1}a._tr_init=Oe,a._tr_stored_block=Fe,a._tr_flush_block=Ze,a._tr_tally=Me,a._tr_align=Ee},{"../utils/common":89}],101:[function(r,d,a){arguments[4][46][0].apply(a,arguments)},{dup:46}],102:[function(r,d,a){d.exports=function(c){if(!c)throw new Error("no data provided");c=c.toString().trim();var h={pages:[],chars:[],kernings:[]},u=c.split(/\r\n?|\n/g);if(u.length===0)throw new Error("no data in BMFont file");for(var o=0;o<u.length;o++){var n=l(u[o],o);if(!!n)if(n.key==="page"){if(typeof n.data.id!="number")throw new Error("malformed file at line "+o+" -- needs page id=N");if(typeof n.data.file!="string")throw new Error("malformed file at line "+o+' -- needs page file="path"');h.pages[n.data.id]=n.data.file}else n.key==="chars"||n.key==="kernings"||(n.key==="char"?h.chars.push(n.data):n.key==="kerning"?h.kernings.push(n.data):h[n.key]=n.data)}return h};function l(b,c){if(b=b.replace(/\t+/g," ").trim(),!b)return null;var h=b.indexOf(" ");if(h===-1)throw new Error("no named row at line "+c);var u=b.substring(0,h);b=b.substring(h+1),b=b.replace(/letter=[\'\"]\S+[\'\"]/gi,""),b=b.split("="),b=b.map(function(f){return f.trim().match(/(".*?"|[^"\s]+)+(?=\s*|\s*$)/g)});for(var o=[],n=0;n<b.length;n++){var m=b[n];n===0?o.push({key:m[0],data:""}):n===b.length-1?o[o.length-1].data=s(m[0]):(o[o.length-1].data=s(m[0]),o.push({key:m[1],data:""}))}var y={key:u,data:{}};return o.forEach(function(f){y.data[f.key]=f.data}),y}function s(b){return!b||b.length===0?"":b.indexOf('"')===0||b.indexOf("'")===0?b.substring(1,b.length-1):b.indexOf(",")!==-1?g(b):parseInt(b,10)}function g(b){return b.split(",").map(function(c){return parseInt(c,10)})}},{}],103:[function(r,d,a){var l=[66,77,70];d.exports=function(y){if(y.length<6)throw new Error("invalid buffer length for BMFont");var f=l.every(function(x,k){return y.readUInt8(k)===x});if(!f)throw new Error("BMFont missing BMF byte header");var v=3,p=y.readUInt8(v++);if(p>3)throw new Error("Only supports BMFont Binary v3 (BMFont App v1.10)");for(var w={kernings:[],chars:[]},A=0;A<5;A++)v+=s(w,y,v);return w};function s(m,y,f){if(f>y.length-1)return 0;var v=y.readUInt8(f++),p=y.readInt32LE(f);switch(f+=4,v){case 1:m.info=g(y,f);break;case 2:m.common=b(y,f);break;case 3:m.pages=c(y,f,p);break;case 4:m.chars=h(y,f,p);break;case 5:m.kernings=u(y,f,p);break}return 5+p}function g(m,y){var f={};f.size=m.readInt16LE(y);var v=m.readUInt8(y+2);return f.smooth=v>>7&1,f.unicode=v>>6&1,f.italic=v>>5&1,f.bold=v>>4&1,v>>3&1&&(f.fixedHeight=1),f.charset=m.readUInt8(y+3)||"",f.stretchH=m.readUInt16LE(y+4),f.aa=m.readUInt8(y+6),f.padding=[m.readInt8(y+7),m.readInt8(y+8),m.readInt8(y+9),m.readInt8(y+10)],f.spacing=[m.readInt8(y+11),m.readInt8(y+12)],f.outline=m.readUInt8(y+13),f.face=n(m,y+14),f}function b(m,y){var f={};return f.lineHeight=m.readUInt16LE(y),f.base=m.readUInt16LE(y+2),f.scaleW=m.readUInt16LE(y+4),f.scaleH=m.readUInt16LE(y+6),f.pages=m.readUInt16LE(y+8),m.readUInt8(y+10),f.packed=0,f.alphaChnl=m.readUInt8(y+11),f.redChnl=m.readUInt8(y+12),f.greenChnl=m.readUInt8(y+13),f.blueChnl=m.readUInt8(y+14),f}function c(m,y,f){for(var v=[],p=o(m,y),w=p.length+1,A=f/w,x=0;x<A;x++)v[x]=m.slice(y,y+p.length).toString("utf8"),y+=w;return v}function h(m,y,f){for(var v=[],p=f/20,w=0;w<p;w++){var A={},x=w*20;A.id=m.readUInt32LE(y+0+x),A.x=m.readUInt16LE(y+4+x),A.y=m.readUInt16LE(y+6+x),A.width=m.readUInt16LE(y+8+x),A.height=m.readUInt16LE(y+10+x),A.xoffset=m.readInt16LE(y+12+x),A.yoffset=m.readInt16LE(y+14+x),A.xadvance=m.readInt16LE(y+16+x),A.page=m.readUInt8(y+18+x),A.chnl=m.readUInt8(y+19+x),v[w]=A}return v}function u(m,y,f){for(var v=[],p=f/10,w=0;w<p;w++){var A={},x=w*10;A.first=m.readUInt32LE(y+0+x),A.second=m.readUInt32LE(y+4+x),A.amount=m.readInt16LE(y+8+x),v[w]=A}return v}function o(m,y){for(var f=y;f<m.length&&m[f]!==0;f++);return m.slice(y,f)}function n(m,y){return o(m,y).toString("utf8")}},{}],104:[function(r,d,a){var l=r("./parse-attribs"),s=r("xml-parse-from-string"),g={scaleh:"scaleH",scalew:"scaleW",stretchh:"stretchH",lineheight:"lineHeight",alphachnl:"alphaChnl",redchnl:"redChnl",greenchnl:"greenChnl",bluechnl:"blueChnl"};d.exports=function(o){o=o.toString();var n=s(o),m={pages:[],chars:[],kernings:[]};["info","common"].forEach(function(x){var k=n.getElementsByTagName(x)[0];k&&(m[x]=l(b(k)))});var y=n.getElementsByTagName("pages")[0];if(!y)throw new Error("malformed file -- no <pages> element");for(var f=y.getElementsByTagName("page"),v=0;v<f.length;v++){var p=f[v],w=parseInt(p.getAttribute("id"),10),A=p.getAttribute("file");if(isNaN(w))throw new Error('malformed file -- page "id" attribute is NaN');if(!A)throw new Error('malformed file -- needs page "file" attribute');m.pages[parseInt(w,10)]=A}return["chars","kernings"].forEach(function(x){var k=n.getElementsByTagName(x)[0];if(!!k)for(var N=x.substring(0,x.length-1),E=k.getElementsByTagName(N),S=0;S<E.length;S++){var R=E[S];m[x].push(l(b(R)))}}),m};function b(u){var o=c(u);return o.reduce(function(n,m){var y=h(m.nodeName);return n[y]=m.nodeValue,n},{})}function c(u){for(var o=[],n=0;n<u.attributes.length;n++)o.push(u.attributes[n]);return o}function h(u){return g[u.toLowerCase()]||u}},{"./parse-attribs":105,"xml-parse-from-string":188}],105:[function(r,d,a){var l="chasrset";d.exports=function(b){l in b&&(b.charset=b[l],delete b[l]);for(var c in b)c==="face"||c==="charset"||(c==="padding"||c==="spacing"?b[c]=s(b[c]):b[c]=parseInt(b[c],10));return b};function s(g){return g.split(",").map(function(b){return parseInt(b,10)})}},{}],106:[function(r,d,a){var l=r("trim"),s=r("for-each"),g=function(b){return Object.prototype.toString.call(b)==="[object Array]"};d.exports=function(b){if(!b)return{};var c={};return s(l(b).split(`
`),function(h){var u=h.indexOf(":"),o=l(h.slice(0,u)).toLowerCase(),n=l(h.slice(u+1));typeof c[o]=="undefined"?c[o]=n:g(c[o])?c[o].push(n):c[o]=[c[o],n]}),c}},{"for-each":63,trim:179}],107:[function(r,d,a){(function(l){function s(h,u){for(var o=0,n=h.length-1;n>=0;n--){var m=h[n];m==="."?h.splice(n,1):m===".."?(h.splice(n,1),o++):o&&(h.splice(n,1),o--)}if(u)for(;o--;o)h.unshift("..");return h}a.resolve=function(){for(var h="",u=!1,o=arguments.length-1;o>=-1&&!u;o--){var n=o>=0?arguments[o]:l.cwd();if(typeof n!="string")throw new TypeError("Arguments to path.resolve must be strings");if(!n)continue;h=n+"/"+h,u=n.charAt(0)==="/"}return h=s(b(h.split("/"),function(m){return!!m}),!u).join("/"),(u?"/":"")+h||"."},a.normalize=function(h){var u=a.isAbsolute(h),o=c(h,-1)==="/";return h=s(b(h.split("/"),function(n){return!!n}),!u).join("/"),!h&&!u&&(h="."),h&&o&&(h+="/"),(u?"/":"")+h},a.isAbsolute=function(h){return h.charAt(0)==="/"},a.join=function(){var h=Array.prototype.slice.call(arguments,0);return a.normalize(b(h,function(u,o){if(typeof u!="string")throw new TypeError("Arguments to path.join must be strings");return u}).join("/"))},a.relative=function(h,u){h=a.resolve(h).substr(1),u=a.resolve(u).substr(1);function o(w){for(var A=0;A<w.length&&w[A]==="";A++);for(var x=w.length-1;x>=0&&w[x]==="";x--);return A>x?[]:w.slice(A,x-A+1)}for(var n=o(h.split("/")),m=o(u.split("/")),y=Math.min(n.length,m.length),f=y,v=0;v<y;v++)if(n[v]!==m[v]){f=v;break}for(var p=[],v=f;v<n.length;v++)p.push("..");return p=p.concat(m.slice(f)),p.join("/")},a.sep="/",a.delimiter=":",a.dirname=function(h){if(typeof h!="string"&&(h=h+""),h.length===0)return".";for(var u=h.charCodeAt(0),o=u===47,n=-1,m=!0,y=h.length-1;y>=1;--y)if(u=h.charCodeAt(y),u===47){if(!m){n=y;break}}else m=!1;return n===-1?o?"/":".":o&&n===1?"/":h.slice(0,n)};function g(h){typeof h!="string"&&(h=h+"");var u=0,o=-1,n=!0,m;for(m=h.length-1;m>=0;--m)if(h.charCodeAt(m)===47){if(!n){u=m+1;break}}else o===-1&&(n=!1,o=m+1);return o===-1?"":h.slice(u,o)}a.basename=function(h,u){var o=g(h);return u&&o.substr(-1*u.length)===u&&(o=o.substr(0,o.length-u.length)),o},a.extname=function(h){typeof h!="string"&&(h=h+"");for(var u=-1,o=0,n=-1,m=!0,y=0,f=h.length-1;f>=0;--f){var v=h.charCodeAt(f);if(v===47){if(!m){o=f+1;break}continue}n===-1&&(m=!1,n=f+1),v===46?u===-1?u=f:y!==1&&(y=1):u!==-1&&(y=-1)}return u===-1||n===-1||y===0||y===1&&u===n-1&&u===o+1?"":h.slice(u,n)};function b(h,u){if(h.filter)return h.filter(u);for(var o=[],n=0;n<h.length;n++)u(h[n],n,h)&&o.push(h[n]);return o}var c="ab".substr(-1)==="b"?function(h,u,o){return h.substr(u,o)}:function(h,u,o){return u<0&&(u=h.length+u),h.substr(u,o)}}).call(this,r("_process"))},{_process:133}],108:[function(r,d,a){(function(l){var s=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(m){return typeof m}:function(m){return m&&typeof Symbol=="function"&&m.constructor===Symbol&&m!==Symbol.prototype?"symbol":typeof m},g=r("http"),b=r("https"),c=r("url"),h=r("querystring"),u=r("zlib"),o=r("util"),n=function(y,f){if(typeof y!="string"&&!y.hasOwnProperty("url"))throw new Error("Missing url option from options for request method.");var v=(typeof y=="undefined"?"undefined":s(y))==="object"?c.parse(y.url):c.parse(y),p={hostname:v.hostname,port:v.port||(v.protocol.toLowerCase()==="http:"?80:443),path:v.path,method:"GET",headers:{},auth:v.auth||null,parse:"none",stream:!1};if((typeof y=="undefined"?"undefined":s(y))==="object"&&(p=Object.assign(p,y)),p.port=Number(p.port),p.hasOwnProperty("timeout")&&delete p.timeout,p.compressed===!0&&(p.headers["accept-encoding"]="gzip, deflate"),y.hasOwnProperty("form")){if(s(y.form)!=="object")throw new Error("phin 'form' option must be of type Object if present.");var w=h.stringify(y.form);p.headers["Content-Type"]="application/x-www-form-urlencoded",p.headers["Content-Length"]=l.byteLength(w),y.data=w}var A=void 0,x=function(S){var R=S;p.compressed===!0&&(S.headers["content-encoding"]==="gzip"?R=S.pipe(u.createGunzip()):S.headers["content-encoding"]==="deflate"&&(R=S.pipe(u.createInflate()))),p.stream===!0?(S.stream=R,f(null,S)):(S.body=new l([]),R.on("data",function(M){S.body=l.concat([S.body,M])}),R.on("end",function(){if(f){if(p.parse==="json")try{S.body=JSON.parse(S.body.toString())}catch{f("Invalid JSON received.",S);return}f(null,S)}}))};switch(v.protocol.toLowerCase()){case"http:":A=g.request(p,x);break;case"https:":A=b.request(p,x);break;default:f&&f(new Error("Invalid / unknown URL protocol. Expected HTTP or HTTPS."),null);return}if(typeof y.timeout=="number"&&A.setTimeout(y.timeout,function(){A.abort(),f(new Error("Timeout has been reached."),null),f=null}),A.on("error",function(E){f&&f(E,null)}),y.hasOwnProperty("data")){var k=y.data;if(!(y.data instanceof l)&&s(y.data)==="object"){var N=p.headers["content-type"]||p.headers["Content-Type"];if(N==="application/x-www-form-urlencoded")k=h.stringify(y.data);else try{k=JSON.stringify(y.data)}catch{f(new Error("Couldn't stringify object. (Likely due to a circular reference.)"),null)}}A.write(k)}A.end()};n.promisified=function(m,y){return new Promise(function(f,v){n(m,function(p,w){p?v(p):f(w)})})},o.promisify&&(n[o.promisify.custom]=n.promisified),d.exports=n}).call(this,r("buffer").Buffer)},{buffer:48,http:156,https:72,querystring:137,url:180,util:186,zlib:35}],109:[function(r,d,a){d.exports=l;function l(m,y,f,v,p,w){w||(w={});for(var A=w.threshold===void 0?.1:w.threshold,x=35215*A*A,k=0,N=0;N<p;N++)for(var E=0;E<v;E++){var S=(N*v+E)*4,R=g(m,y,S,S);if(R>x)!w.includeAA&&(s(m,E,N,v,p,y)||s(y,E,N,v,p,m))?f&&o(f,S,255,255,0):(f&&o(f,S,255,0,0),k++);else if(f){var M=u(n(m,S),.1);o(f,S,M,M,M)}}return k}function s(m,y,f,v,p,w){for(var A=Math.max(y-1,0),x=Math.max(f-1,0),k=Math.min(y+1,v-1),N=Math.min(f+1,p-1),E=(f*v+y)*4,S=0,R=0,M=0,j=0,O=0,V,J,B,z,G=A;G<=k;G++)for(var U=x;U<=N;U++)if(!(G===y&&U===f)){var ie=g(m,m,E,(U*v+G)*4,!0);if(ie===0?S++:ie<0?M++:ie>0&&R++,S>2)return!1;!w||(ie<j&&(j=ie,V=G,J=U),ie>O&&(O=ie,B=G,z=U))}return w?M===0||R===0?!1:!s(m,V,J,v,p)&&!s(w,V,J,v,p)||!s(m,B,z,v,p)&&!s(w,B,z,v,p):!0}function g(m,y,f,v,p){var w=m[f+3]/255,A=y[v+3]/255,x=u(m[f+0],w),k=u(m[f+1],w),N=u(m[f+2],w),E=u(y[v+0],A),S=u(y[v+1],A),R=u(y[v+2],A),M=b(x,k,N)-b(E,S,R);if(p)return M;var j=c(x,k,N)-c(E,S,R),O=h(x,k,N)-h(E,S,R);return .5053*M*M+.299*j*j+.1957*O*O}function b(m,y,f){return m*.29889531+y*.58662247+f*.11448223}function c(m,y,f){return m*.59597799-y*.2741761-f*.32180189}function h(m,y,f){return m*.21147017-y*.52261711+f*.31114694}function u(m,y){return 255+(m-255)*y}function o(m,y,f,v,p){m[y+0]=f,m[y+1]=v,m[y+2]=p,m[y+3]=255}function n(m,y){var f=m[y+3]/255,v=u(m[y+0],f),p=u(m[y+1],f),w=u(m[y+2],f);return b(v,p,w)}},{}],110:[function(r,d,a){(function(l){var s=r("./interlace"),g={1:{0:0,1:0,2:0,3:255},2:{0:0,1:0,2:0,3:1},3:{0:0,1:1,2:2,3:255},4:{0:0,1:1,2:2,3:3}};function b(u,o){var n=[],m=0;function y(){if(m===u.length)throw new Error("Ran out of data");var f=u[m];m++;var v,p,w,A,x,k,N,E;switch(o){default:throw new Error("unrecognised depth");case 16:N=u[m],m++,n.push((f<<8)+N);break;case 4:N=f&15,E=f>>4,n.push(E,N);break;case 2:x=f&3,k=f>>2&3,N=f>>4&3,E=f>>6&3,n.push(E,N,k,x);break;case 1:v=f&1,p=f>>1&1,w=f>>2&1,A=f>>3&1,x=f>>4&1,k=f>>5&1,N=f>>6&1,E=f>>7&1,n.push(E,N,k,x,A,w,p,v);break}}return{get:function(f){for(;n.length<f;)y();var v=n.slice(0,f);return n=n.slice(f),v},resetAfterLine:function(){n.length=0},end:function(){if(m!==u.length)throw new Error("extra data found")}}}function c(u,o,n,m,y,f){for(var v=u.width,p=u.height,w=u.index,A=0;A<p;A++)for(var x=0;x<v;x++){for(var k=n(x,A,w),N=0;N<4;N++){var E=g[m][N];if(E===255)o[k+N]=255;else{var S=E+f;if(S===y.length)throw new Error("Ran out of data");o[k+N]=y[S]}}f+=m}return f}function h(u,o,n,m,y,f){for(var v=u.width,p=u.height,w=u.index,A=0;A<p;A++){for(var x=0;x<v;x++)for(var k=y.get(m),N=n(x,A,w),E=0;E<4;E++){var S=g[m][E];o[N+E]=S!==255?k[S]:f}y.resetAfterLine()}}a.dataToBitMap=function(u,o){var n=o.width,m=o.height,y=o.depth,f=o.bpp,v=o.interlace;if(y!==8)var p=b(u,y);var w;y<=8?w=new l(n*m*4):w=new Uint16Array(n*m*4);var A=Math.pow(2,y)-1,x=0,k,N;if(v)k=s.getImagePasses(n,m),N=s.getInterlaceIterator(n,m);else{var E=0;N=function(){var R=E;return E+=4,R},k=[{width:n,height:m}]}for(var S=0;S<k.length;S++)y===8?x=c(k[S],w,N,f,u,x):h(k[S],w,N,f,p,A);if(y===8){if(x!==u.length)throw new Error("extra data found")}else p.end();return w}}).call(this,r("buffer").Buffer)},{"./interlace":120,buffer:48}],111:[function(r,d,a){(function(l){var s=r("./constants");d.exports=function(g,b,c,h){var u=[s.COLORTYPE_COLOR_ALPHA,s.COLORTYPE_ALPHA].indexOf(h.colorType)!==-1;if(h.colorType===h.inputColorType){var o=function(){var R=new ArrayBuffer(2);return new DataView(R).setInt16(0,256,!0),new Int16Array(R)[0]!==256}();if(h.bitDepth===8||h.bitDepth===16&&o)return g}var n=h.bitDepth!==16?g:new Uint16Array(g.buffer),m=255,y=s.COLORTYPE_TO_BPP_MAP[h.inputColorType];y==4&&!h.inputHasAlpha&&(y=3);var f=s.COLORTYPE_TO_BPP_MAP[h.colorType];h.bitDepth===16&&(m=65535,f*=2);var v=new l(b*c*f),p=0,w=0,A=h.bgColor||{};A.red===void 0&&(A.red=m),A.green===void 0&&(A.green=m),A.blue===void 0&&(A.blue=m);function x(R,M){var j,O,V,J=m;switch(h.inputColorType){case s.COLORTYPE_COLOR_ALPHA:J=R[M+3],j=R[M],O=R[M+1],V=R[M+2];break;case s.COLORTYPE_COLOR:j=R[M],O=R[M+1],V=R[M+2];break;case s.COLORTYPE_ALPHA:J=R[M+1],j=R[M],O=j,V=j;break;case s.COLORTYPE_GRAYSCALE:j=R[M],O=j,V=j;break;default:throw new Error("input color type:"+h.inputColorType+" is not supported at present")}return h.inputHasAlpha&&(u||(J/=m,j=Math.min(Math.max(Math.round((1-J)*A.red+J*j),0),m),O=Math.min(Math.max(Math.round((1-J)*A.green+J*O),0),m),V=Math.min(Math.max(Math.round((1-J)*A.blue+J*V),0),m))),{red:j,green:O,blue:V,alpha:J}}for(var k=0;k<c;k++)for(var N=0;N<b;N++){var E=x(n,p);switch(h.colorType){case s.COLORTYPE_COLOR_ALPHA:case s.COLORTYPE_COLOR:h.bitDepth===8?(v[w]=E.red,v[w+1]=E.green,v[w+2]=E.blue,u&&(v[w+3]=E.alpha)):(v.writeUInt16BE(E.red,w),v.writeUInt16BE(E.green,w+2),v.writeUInt16BE(E.blue,w+4),u&&v.writeUInt16BE(E.alpha,w+6));break;case s.COLORTYPE_ALPHA:case s.COLORTYPE_GRAYSCALE:var S=(E.red+E.green+E.blue)/3;h.bitDepth===8?(v[w]=S,u&&(v[w+1]=E.alpha)):(v.writeUInt16BE(S,w),u&&v.writeUInt16BE(E.alpha,w+2));break}p+=y,w+=f}return v}}).call(this,r("buffer").Buffer)},{"./constants":113,buffer:48}],112:[function(r,d,a){(function(l,s){var g=r("util"),b=r("stream"),c=d.exports=function(){b.call(this),this._buffers=[],this._buffered=0,this._reads=[],this._paused=!1,this._encoding="utf8",this.writable=!0};g.inherits(c,b),c.prototype.read=function(h,u){this._reads.push({length:Math.abs(h),allowLess:h<0,func:u}),l.nextTick(function(){this._process(),this._paused&&this._reads.length>0&&(this._paused=!1,this.emit("drain"))}.bind(this))},c.prototype.write=function(h,u){if(!this.writable)return this.emit("error",new Error("Stream not writable")),!1;var o;return s.isBuffer(h)?o=h:o=new s(h,u||this._encoding),this._buffers.push(o),this._buffered+=o.length,this._process(),this._reads&&this._reads.length===0&&(this._paused=!0),this.writable&&!this._paused},c.prototype.end=function(h,u){h&&this.write(h,u),this.writable=!1,this._buffers&&(this._buffers.length===0?this._end():(this._buffers.push(null),this._process()))},c.prototype.destroySoon=c.prototype.end,c.prototype._end=function(){this._reads.length>0&&this.emit("error",new Error("There are some read requests waiting on finished stream")),this.destroy()},c.prototype.destroy=function(){!this._buffers||(this.writable=!1,this._reads=null,this._buffers=null,this.emit("close"))},c.prototype._processReadAllowingLess=function(h){this._reads.shift();var u=this._buffers[0];u.length>h.length?(this._buffered-=h.length,this._buffers[0]=u.slice(h.length),h.func.call(this,u.slice(0,h.length))):(this._buffered-=u.length,this._buffers.shift(),h.func.call(this,u))},c.prototype._processRead=function(h){this._reads.shift();for(var u=0,o=0,n=new s(h.length);u<h.length;){var m=this._buffers[o++],y=Math.min(m.length,h.length-u);m.copy(n,u,0,y),u+=y,y!==m.length&&(this._buffers[--o]=m.slice(y))}o>0&&this._buffers.splice(0,o),this._buffered-=h.length,h.func.call(this,n)},c.prototype._process=function(){try{for(;this._buffered>0&&this._reads&&this._reads.length>0;){var h=this._reads[0];if(h.allowLess)this._processReadAllowingLess(h);else if(this._buffered>=h.length)this._processRead(h);else break}this._buffers&&this._buffers.length>0&&this._buffers[0]===null&&this._end()}catch(u){this.emit("error",u)}}}).call(this,r("_process"),r("buffer").Buffer)},{_process:133,buffer:48,stream:155,util:186}],113:[function(r,d,a){d.exports={PNG_SIGNATURE:[137,80,78,71,13,10,26,10],TYPE_IHDR:1229472850,TYPE_IEND:1229278788,TYPE_IDAT:1229209940,TYPE_PLTE:1347179589,TYPE_tRNS:1951551059,TYPE_gAMA:1732332865,COLORTYPE_GRAYSCALE:0,COLORTYPE_PALETTE:1,COLORTYPE_COLOR:2,COLORTYPE_ALPHA:4,COLORTYPE_PALETTE_COLOR:3,COLORTYPE_COLOR_ALPHA:6,COLORTYPE_TO_BPP_MAP:{0:1,2:3,3:1,4:2,6:4},GAMMA_DIVISION:1e5}},{}],114:[function(r,d,a){var l=[];(function(){for(var g=0;g<256;g++){for(var b=g,c=0;c<8;c++)b&1?b=3988292384^b>>>1:b=b>>>1;l[g]=b}})();var s=d.exports=function(){this._crc=-1};s.prototype.write=function(g){for(var b=0;b<g.length;b++)this._crc=l[(this._crc^g[b])&255]^this._crc>>>8;return!0},s.prototype.crc32=function(){return this._crc^-1},s.crc32=function(g){for(var b=-1,c=0;c<g.length;c++)b=l[(b^g[c])&255]^b>>>8;return b^-1}},{}],115:[function(r,d,a){(function(l){var s=r("./paeth-predictor");function g(w,A,x,k,N){for(var E=0;E<x;E++)k[N+E]=w[A+E]}function b(w,A,x){for(var k=0,N=A+x,E=A;E<N;E++)k+=Math.abs(w[E]);return k}function c(w,A,x,k,N,E){for(var S=0;S<x;S++){var R=S>=E?w[A+S-E]:0,M=w[A+S]-R;k[N+S]=M}}function h(w,A,x,k){for(var N=0,E=0;E<x;E++){var S=E>=k?w[A+E-k]:0,R=w[A+E]-S;N+=Math.abs(R)}return N}function u(w,A,x,k,N){for(var E=0;E<x;E++){var S=A>0?w[A+E-x]:0,R=w[A+E]-S;k[N+E]=R}}function o(w,A,x){for(var k=0,N=A+x,E=A;E<N;E++){var S=A>0?w[E-x]:0,R=w[E]-S;k+=Math.abs(R)}return k}function n(w,A,x,k,N,E){for(var S=0;S<x;S++){var R=S>=E?w[A+S-E]:0,M=A>0?w[A+S-x]:0,j=w[A+S]-(R+M>>1);k[N+S]=j}}function m(w,A,x,k){for(var N=0,E=0;E<x;E++){var S=E>=k?w[A+E-k]:0,R=A>0?w[A+E-x]:0,M=w[A+E]-(S+R>>1);N+=Math.abs(M)}return N}function y(w,A,x,k,N,E){for(var S=0;S<x;S++){var R=S>=E?w[A+S-E]:0,M=A>0?w[A+S-x]:0,j=A>0&&S>=E?w[A+S-(x+E)]:0,O=w[A+S]-s(R,M,j);k[N+S]=O}}function f(w,A,x,k){for(var N=0,E=0;E<x;E++){var S=E>=k?w[A+E-k]:0,R=A>0?w[A+E-x]:0,M=A>0&&E>=k?w[A+E-(x+k)]:0,j=w[A+E]-s(S,R,M);N+=Math.abs(j)}return N}var v={0:g,1:c,2:u,3:n,4:y},p={0:b,1:h,2:o,3:m,4:f};d.exports=function(w,A,x,k,N){var E;if(!("filterType"in k)||k.filterType===-1)E=[0,1,2,3,4];else if(typeof k.filterType=="number")E=[k.filterType];else throw new Error("unrecognised filter types");k.bitDepth===16&&(N*=2);for(var S=A*N,R=0,M=0,j=new l((S+1)*x),O=E[0],V=0;V<x;V++){if(E.length>1)for(var J=1/0,B=0;B<E.length;B++){var z=p[E[B]](w,M,S,N);z<J&&(O=E[B],J=z)}j[R]=O,R++,v[O](w,M,S,j,R,N),R+=S,M+=S}return j}}).call(this,r("buffer").Buffer)},{"./paeth-predictor":124,buffer:48}],116:[function(r,d,a){(function(l){var s=r("util"),g=r("./chunkstream"),b=r("./filter-parse"),c=d.exports=function(h){g.call(this);var u=[],o=this;this._filter=new b(h,{read:this.read.bind(this),write:function(n){u.push(n)},complete:function(){o.emit("complete",l.concat(u))}}),this._filter.start()};s.inherits(c,g)}).call(this,r("buffer").Buffer)},{"./chunkstream":112,"./filter-parse":118,buffer:48,util:186}],117:[function(r,d,a){(function(l){var s=r("./sync-reader"),g=r("./filter-parse");a.process=function(b,c){var h=[],u=new s(b),o=new g(c,{read:u.read.bind(u),write:function(n){h.push(n)},complete:function(){}});return o.start(),u.process(),l.concat(h)}}).call(this,r("buffer").Buffer)},{"./filter-parse":118,"./sync-reader":131,buffer:48}],118:[function(r,d,a){(function(l){var s=r("./interlace"),g=r("./paeth-predictor");function b(h,u,o){var n=h*u;return o!==8&&(n=Math.ceil(n/(8/o))),n}var c=d.exports=function(h,u){var o=h.width,n=h.height,m=h.interlace,y=h.bpp,f=h.depth;if(this.read=u.read,this.write=u.write,this.complete=u.complete,this._imageIndex=0,this._images=[],m)for(var v=s.getImagePasses(o,n),p=0;p<v.length;p++)this._images.push({byteWidth:b(v[p].width,y,f),height:v[p].height,lineIndex:0});else this._images.push({byteWidth:b(o,y,f),height:n,lineIndex:0});f===8?this._xComparison=y:f===16?this._xComparison=y*2:this._xComparison=1};c.prototype.start=function(){this.read(this._images[this._imageIndex].byteWidth+1,this._reverseFilterLine.bind(this))},c.prototype._unFilterType1=function(h,u,o){for(var n=this._xComparison,m=n-1,y=0;y<o;y++){var f=h[1+y],v=y>m?u[y-n]:0;u[y]=f+v}},c.prototype._unFilterType2=function(h,u,o){for(var n=this._lastLine,m=0;m<o;m++){var y=h[1+m],f=n?n[m]:0;u[m]=y+f}},c.prototype._unFilterType3=function(h,u,o){for(var n=this._xComparison,m=n-1,y=this._lastLine,f=0;f<o;f++){var v=h[1+f],p=y?y[f]:0,w=f>m?u[f-n]:0,A=Math.floor((w+p)/2);u[f]=v+A}},c.prototype._unFilterType4=function(h,u,o){for(var n=this._xComparison,m=n-1,y=this._lastLine,f=0;f<o;f++){var v=h[1+f],p=y?y[f]:0,w=f>m?u[f-n]:0,A=f>m&&y?y[f-n]:0,x=g(w,p,A);u[f]=v+x}},c.prototype._reverseFilterLine=function(h){var u=h[0],o,n=this._images[this._imageIndex],m=n.byteWidth;if(u===0)o=h.slice(1,m+1);else switch(o=new l(m),u){case 1:this._unFilterType1(h,o,m);break;case 2:this._unFilterType2(h,o,m);break;case 3:this._unFilterType3(h,o,m);break;case 4:this._unFilterType4(h,o,m);break;default:throw new Error("Unrecognised filter type - "+u)}this.write(o),n.lineIndex++,n.lineIndex>=n.height?(this._lastLine=null,this._imageIndex++,n=this._images[this._imageIndex]):this._lastLine=o,n?this.read(n.byteWidth+1,this._reverseFilterLine.bind(this)):(this._lastLine=null,this.complete())}}).call(this,r("buffer").Buffer)},{"./interlace":120,"./paeth-predictor":124,buffer:48}],119:[function(r,d,a){(function(l){function s(c,h,u,o,n){for(var m=0,y=0;y<o;y++)for(var f=0;f<u;f++){var v=n[c[m]];if(!v)throw new Error("index "+c[m]+" not in palette");for(var p=0;p<4;p++)h[m+p]=v[p];m+=4}}function g(c,h,u,o,n){for(var m=0,y=0;y<o;y++)for(var f=0;f<u;f++){var v=!1;if(n.length===1?n[0]===c[m]&&(v=!0):n[0]===c[m]&&n[1]===c[m+1]&&n[2]===c[m+2]&&(v=!0),v)for(var p=0;p<4;p++)h[m+p]=0;m+=4}}function b(c,h,u,o,n){for(var m=255,y=Math.pow(2,n)-1,f=0,v=0;v<o;v++)for(var p=0;p<u;p++){for(var w=0;w<4;w++)h[f+w]=Math.floor(c[f+w]*m/y+.5);f+=4}}d.exports=function(c,h){var u=h.depth,o=h.width,n=h.height,m=h.colorType,y=h.transColor,f=h.palette,v=c;return m===3?s(c,v,o,n,f):(y&&g(c,v,o,n,y),u!==8&&(u===16&&(v=new l(o*n*4)),b(c,v,o,n,u))),v}}).call(this,r("buffer").Buffer)},{buffer:48}],120:[function(r,d,a){var l=[{x:[0],y:[0]},{x:[4],y:[0]},{x:[0,4],y:[4]},{x:[2,6],y:[0,4]},{x:[0,2,4,6],y:[2,6]},{x:[1,3,5,7],y:[0,2,4,6]},{x:[0,1,2,3,4,5,6,7],y:[1,3,5,7]}];a.getImagePasses=function(s,g){for(var b=[],c=s%8,h=g%8,u=(s-c)/8,o=(g-h)/8,n=0;n<l.length;n++){for(var m=l[n],y=u*m.x.length,f=o*m.y.length,v=0;v<m.x.length&&m.x[v]<c;v++)y++;for(v=0;v<m.y.length&&m.y[v]<h;v++)f++;y>0&&f>0&&b.push({width:y,height:f,index:n})}return b},a.getInterlaceIterator=function(s){return function(g,b,c){var h=g%l[c].x.length,u=(g-h)/l[c].x.length*8+l[c].x[h],o=b%l[c].y.length,n=(b-o)/l[c].y.length*8+l[c].y[o];return u*4+n*s*4}}},{}],121:[function(r,d,a){(function(l){var s=r("util"),g=r("stream"),b=r("./constants"),c=r("./packer"),h=d.exports=function(u){g.call(this);var o=u||{};this._packer=new c(o),this._deflate=this._packer.createDeflate(),this.readable=!0};s.inherits(h,g),h.prototype.pack=function(u,o,n,m){this.emit("data",new l(b.PNG_SIGNATURE)),this.emit("data",this._packer.packIHDR(o,n)),m&&this.emit("data",this._packer.packGAMA(m));var y=this._packer.filterData(u,o,n);this._deflate.on("error",this.emit.bind(this,"error")),this._deflate.on("data",function(f){this.emit("data",this._packer.packIDAT(f))}.bind(this)),this._deflate.on("end",function(){this.emit("data",this._packer.packIEND()),this.emit("end")}.bind(this)),this._deflate.end(y)}}).call(this,r("buffer").Buffer)},{"./constants":113,"./packer":123,buffer:48,stream:155,util:186}],122:[function(r,d,a){(function(l){var s=!0,g=r("zlib");g.deflateSync||(s=!1);var b=r("./constants"),c=r("./packer");d.exports=function(h,u){if(!s)throw new Error("To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0");var o=u||{},n=new c(o),m=[];m.push(new l(b.PNG_SIGNATURE)),m.push(n.packIHDR(h.width,h.height)),h.gamma&&m.push(n.packGAMA(h.gamma));var y=n.filterData(h.data,h.width,h.height),f=g.deflateSync(y,n.getDeflateOptions());if(y=null,!f||!f.length)throw new Error("bad png - invalid compressed data response");return m.push(n.packIDAT(f)),m.push(n.packIEND()),l.concat(m)}}).call(this,r("buffer").Buffer)},{"./constants":113,"./packer":123,buffer:48,zlib:35}],123:[function(r,d,a){(function(l){var s=r("./constants"),g=r("./crc"),b=r("./bitpacker"),c=r("./filter-pack"),h=r("zlib"),u=d.exports=function(o){if(this._options=o,o.deflateChunkSize=o.deflateChunkSize||32*1024,o.deflateLevel=o.deflateLevel!=null?o.deflateLevel:9,o.deflateStrategy=o.deflateStrategy!=null?o.deflateStrategy:3,o.inputHasAlpha=o.inputHasAlpha!=null?o.inputHasAlpha:!0,o.deflateFactory=o.deflateFactory||h.createDeflate,o.bitDepth=o.bitDepth||8,o.colorType=typeof o.colorType=="number"?o.colorType:s.COLORTYPE_COLOR_ALPHA,o.inputColorType=typeof o.inputColorType=="number"?o.inputColorType:s.COLORTYPE_COLOR_ALPHA,[s.COLORTYPE_GRAYSCALE,s.COLORTYPE_COLOR,s.COLORTYPE_COLOR_ALPHA,s.COLORTYPE_ALPHA].indexOf(o.colorType)===-1)throw new Error("option color type:"+o.colorType+" is not supported at present");if([s.COLORTYPE_GRAYSCALE,s.COLORTYPE_COLOR,s.COLORTYPE_COLOR_ALPHA,s.COLORTYPE_ALPHA].indexOf(o.inputColorType)===-1)throw new Error("option input color type:"+o.inputColorType+" is not supported at present");if(o.bitDepth!==8&&o.bitDepth!==16)throw new Error("option bit depth:"+o.bitDepth+" is not supported at present")};u.prototype.getDeflateOptions=function(){return{chunkSize:this._options.deflateChunkSize,level:this._options.deflateLevel,strategy:this._options.deflateStrategy}},u.prototype.createDeflate=function(){return this._options.deflateFactory(this.getDeflateOptions())},u.prototype.filterData=function(o,n,m){var y=b(o,n,m,this._options),f=s.COLORTYPE_TO_BPP_MAP[this._options.colorType],v=c(y,n,m,this._options,f);return v},u.prototype._packChunk=function(o,n){var m=n?n.length:0,y=new l(m+12);return y.writeUInt32BE(m,0),y.writeUInt32BE(o,4),n&&n.copy(y,8),y.writeInt32BE(g.crc32(y.slice(4,y.length-4)),y.length-4),y},u.prototype.packGAMA=function(o){var n=new l(4);return n.writeUInt32BE(Math.floor(o*s.GAMMA_DIVISION),0),this._packChunk(s.TYPE_gAMA,n)},u.prototype.packIHDR=function(o,n){var m=new l(13);return m.writeUInt32BE(o,0),m.writeUInt32BE(n,4),m[8]=this._options.bitDepth,m[9]=this._options.colorType,m[10]=0,m[11]=0,m[12]=0,this._packChunk(s.TYPE_IHDR,m)},u.prototype.packIDAT=function(o){return this._packChunk(s.TYPE_IDAT,o)},u.prototype.packIEND=function(){return this._packChunk(s.TYPE_IEND,null)}}).call(this,r("buffer").Buffer)},{"./bitpacker":111,"./constants":113,"./crc":114,"./filter-pack":115,buffer:48,zlib:35}],124:[function(r,d,a){d.exports=function(s,g,b){var c=s+g-b,h=Math.abs(c-s),u=Math.abs(c-g),o=Math.abs(c-b);return h<=u&&h<=o?s:u<=o?g:b}},{}],125:[function(r,d,a){var l=r("util"),s=r("zlib"),g=r("./chunkstream"),b=r("./filter-parse-async"),c=r("./parser"),h=r("./bitmapper"),u=r("./format-normaliser"),o=d.exports=function(n){g.call(this),this._parser=new c(n,{read:this.read.bind(this),error:this._handleError.bind(this),metadata:this._handleMetaData.bind(this),gamma:this.emit.bind(this,"gamma"),palette:this._handlePalette.bind(this),transColor:this._handleTransColor.bind(this),finished:this._finished.bind(this),inflateData:this._inflateData.bind(this)}),this._options=n,this.writable=!0,this._parser.start()};l.inherits(o,g),o.prototype._handleError=function(n){this.emit("error",n),this.writable=!1,this.destroy(),this._inflate&&this._inflate.destroy&&this._inflate.destroy(),this._filter&&(this._filter.destroy(),this._filter.on("error",function(){})),this.errord=!0},o.prototype._inflateData=function(n){if(!this._inflate)if(this._bitmapInfo.interlace)this._inflate=s.createInflate(),this._inflate.on("error",this.emit.bind(this,"error")),this._filter.on("complete",this._complete.bind(this)),this._inflate.pipe(this._filter);else{var m=(this._bitmapInfo.width*this._bitmapInfo.bpp*this._bitmapInfo.depth+7>>3)+1,y=m*this._bitmapInfo.height,f=Math.max(y,s.Z_MIN_CHUNK);this._inflate=s.createInflate({chunkSize:f});var v=y,p=this.emit.bind(this,"error");this._inflate.on("error",function(A){!v||p(A)}),this._filter.on("complete",this._complete.bind(this));var w=this._filter.write.bind(this._filter);this._inflate.on("data",function(A){!v||(A.length>v&&(A=A.slice(0,v)),v-=A.length,w(A))}),this._inflate.on("end",this._filter.end.bind(this._filter))}this._inflate.write(n)},o.prototype._handleMetaData=function(n){this.emit("metadata",n),this._bitmapInfo=Object.create(n),this._filter=new b(this._bitmapInfo)},o.prototype._handleTransColor=function(n){this._bitmapInfo.transColor=n},o.prototype._handlePalette=function(n){this._bitmapInfo.palette=n},o.prototype._finished=function(){this.errord||(this._inflate?this._inflate.end():this.emit("error","No Inflate block"),this.destroySoon())},o.prototype._complete=function(n){if(!this.errord){try{var m=h.dataToBitMap(n,this._bitmapInfo),y=u(m,this._bitmapInfo);m=null}catch(f){this._handleError(f);return}this.emit("parsed",y)}}},{"./bitmapper":110,"./chunkstream":112,"./filter-parse-async":116,"./format-normaliser":119,"./parser":127,util:186,zlib:35}],126:[function(r,d,a){(function(l){var s=!0,g=r("zlib"),b=r("./sync-inflate");g.deflateSync||(s=!1);var c=r("./sync-reader"),h=r("./filter-parse-sync"),u=r("./parser"),o=r("./bitmapper"),n=r("./format-normaliser");d.exports=function(m,y){if(!s)throw new Error("To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0");var f;function v(U){f=U}var p;function w(U){p=U}function A(U){p.transColor=U}function x(U){p.palette=U}var k;function N(U){k=U}var E=[];function S(U){E.push(U)}var R=new c(m),M=new u(y,{read:R.read.bind(R),error:v,metadata:w,gamma:N,palette:x,transColor:A,inflateData:S});if(M.start(),R.process(),f)throw f;var j=l.concat(E);E.length=0;var O;if(p.interlace)O=g.inflateSync(j);else{var V=(p.width*p.bpp*p.depth+7>>3)+1,J=V*p.height;O=b(j,{chunkSize:J,maxLength:J})}if(j=null,!O||!O.length)throw new Error("bad png - invalid inflate data response");var B=h.process(O,p);j=null;var z=o.dataToBitMap(B,p);B=null;var G=n(z,p);return p.data=G,p.gamma=k||0,p}}).call(this,r("buffer").Buffer)},{"./bitmapper":110,"./filter-parse-sync":117,"./format-normaliser":119,"./parser":127,"./sync-inflate":130,"./sync-reader":131,buffer:48,zlib:35}],127:[function(r,d,a){(function(l){var s=r("./constants"),g=r("./crc"),b=d.exports=function(c,h){this._options=c,c.checkCRC=c.checkCRC!==!1,this._hasIHDR=!1,this._hasIEND=!1,this._palette=[],this._colorType=0,this._chunks={},this._chunks[s.TYPE_IHDR]=this._handleIHDR.bind(this),this._chunks[s.TYPE_IEND]=this._handleIEND.bind(this),this._chunks[s.TYPE_IDAT]=this._handleIDAT.bind(this),this._chunks[s.TYPE_PLTE]=this._handlePLTE.bind(this),this._chunks[s.TYPE_tRNS]=this._handleTRNS.bind(this),this._chunks[s.TYPE_gAMA]=this._handleGAMA.bind(this),this.read=h.read,this.error=h.error,this.metadata=h.metadata,this.gamma=h.gamma,this.transColor=h.transColor,this.palette=h.palette,this.parsed=h.parsed,this.inflateData=h.inflateData,this.finished=h.finished};b.prototype.start=function(){this.read(s.PNG_SIGNATURE.length,this._parseSignature.bind(this))},b.prototype._parseSignature=function(c){for(var h=s.PNG_SIGNATURE,u=0;u<h.length;u++)if(c[u]!==h[u]){this.error(new Error("Invalid file signature"));return}this.read(8,this._parseChunkBegin.bind(this))},b.prototype._parseChunkBegin=function(c){for(var h=c.readUInt32BE(0),u=c.readUInt32BE(4),o="",n=4;n<8;n++)o+=String.fromCharCode(c[n]);var m=Boolean(c[4]&32);if(!this._hasIHDR&&u!==s.TYPE_IHDR){this.error(new Error("Expected IHDR on beggining"));return}if(this._crc=new g,this._crc.write(new l(o)),this._chunks[u])return this._chunks[u](h);if(!m){this.error(new Error("Unsupported critical chunk type "+o));return}this.read(h+4,this._skipChunk.bind(this))},b.prototype._skipChunk=function(){this.read(8,this._parseChunkBegin.bind(this))},b.prototype._handleChunkEnd=function(){this.read(4,this._parseChunkEnd.bind(this))},b.prototype._parseChunkEnd=function(c){var h=c.readInt32BE(0),u=this._crc.crc32();if(this._options.checkCRC&&u!==h){this.error(new Error("Crc error - "+h+" - "+u));return}this._hasIEND||this.read(8,this._parseChunkBegin.bind(this))},b.prototype._handleIHDR=function(c){this.read(c,this._parseIHDR.bind(this))},b.prototype._parseIHDR=function(c){this._crc.write(c);var h=c.readUInt32BE(0),u=c.readUInt32BE(4),o=c[8],n=c[9],m=c[10],y=c[11],f=c[12];if(o!==8&&o!==4&&o!==2&&o!==1&&o!==16){this.error(new Error("Unsupported bit depth "+o));return}if(!(n in s.COLORTYPE_TO_BPP_MAP)){this.error(new Error("Unsupported color type"));return}if(m!==0){this.error(new Error("Unsupported compression method"));return}if(y!==0){this.error(new Error("Unsupported filter method"));return}if(f!==0&&f!==1){this.error(new Error("Unsupported interlace method"));return}this._colorType=n;var v=s.COLORTYPE_TO_BPP_MAP[this._colorType];this._hasIHDR=!0,this.metadata({width:h,height:u,depth:o,interlace:Boolean(f),palette:Boolean(n&s.COLORTYPE_PALETTE),color:Boolean(n&s.COLORTYPE_COLOR),alpha:Boolean(n&s.COLORTYPE_ALPHA),bpp:v,colorType:n}),this._handleChunkEnd()},b.prototype._handlePLTE=function(c){this.read(c,this._parsePLTE.bind(this))},b.prototype._parsePLTE=function(c){this._crc.write(c);for(var h=Math.floor(c.length/3),u=0;u<h;u++)this._palette.push([c[u*3],c[u*3+1],c[u*3+2],255]);this.palette(this._palette),this._handleChunkEnd()},b.prototype._handleTRNS=function(c){this.read(c,this._parseTRNS.bind(this))},b.prototype._parseTRNS=function(c){if(this._crc.write(c),this._colorType===s.COLORTYPE_PALETTE_COLOR){if(this._palette.length===0){this.error(new Error("Transparency chunk must be after palette"));return}if(c.length>this._palette.length){this.error(new Error("More transparent colors than palette size"));return}for(var h=0;h<c.length;h++)this._palette[h][3]=c[h];this.palette(this._palette)}this._colorType===s.COLORTYPE_GRAYSCALE&&this.transColor([c.readUInt16BE(0)]),this._colorType===s.COLORTYPE_COLOR&&this.transColor([c.readUInt16BE(0),c.readUInt16BE(2),c.readUInt16BE(4)]),this._handleChunkEnd()},b.prototype._handleGAMA=function(c){this.read(c,this._parseGAMA.bind(this))},b.prototype._parseGAMA=function(c){this._crc.write(c),this.gamma(c.readUInt32BE(0)/s.GAMMA_DIVISION),this._handleChunkEnd()},b.prototype._handleIDAT=function(c){this.read(-c,this._parseIDAT.bind(this,c))},b.prototype._parseIDAT=function(c,h){if(this._crc.write(h),this._colorType===s.COLORTYPE_PALETTE_COLOR&&this._palette.length===0)throw new Error("Expected palette not found");this.inflateData(h);var u=c-h.length;u>0?this._handleIDAT(u):this._handleChunkEnd()},b.prototype._handleIEND=function(c){this.read(c,this._parseIEND.bind(this))},b.prototype._parseIEND=function(c){this._crc.write(c),this._hasIEND=!0,this._handleChunkEnd(),this.finished&&this.finished()}}).call(this,r("buffer").Buffer)},{"./constants":113,"./crc":114,buffer:48}],128:[function(r,d,a){var l=r("./parser-sync"),s=r("./packer-sync");a.read=function(g,b){return l(g,b||{})},a.write=function(g,b){return s(g,b)}},{"./packer-sync":122,"./parser-sync":126}],129:[function(r,d,a){(function(l,s){var g=r("util"),b=r("stream"),c=r("./parser-async"),h=r("./packer-async"),u=r("./png-sync"),o=a.PNG=function(n){b.call(this),n=n||{},this.width=n.width|0,this.height=n.height|0,this.data=this.width>0&&this.height>0?new s(4*this.width*this.height):null,n.fill&&this.data&&this.data.fill(0),this.gamma=0,this.readable=this.writable=!0,this._parser=new c(n),this._parser.on("error",this.emit.bind(this,"error")),this._parser.on("close",this._handleClose.bind(this)),this._parser.on("metadata",this._metadata.bind(this)),this._parser.on("gamma",this._gamma.bind(this)),this._parser.on("parsed",function(m){this.data=m,this.emit("parsed",m)}.bind(this)),this._packer=new h(n),this._packer.on("data",this.emit.bind(this,"data")),this._packer.on("end",this.emit.bind(this,"end")),this._parser.on("close",this._handleClose.bind(this)),this._packer.on("error",this.emit.bind(this,"error"))};g.inherits(o,b),o.sync=u,o.prototype.pack=function(){return!this.data||!this.data.length?(this.emit("error","No data provided"),this):(l.nextTick(function(){this._packer.pack(this.data,this.width,this.height,this.gamma)}.bind(this)),this)},o.prototype.parse=function(n,m){if(m){var y,f;y=function(v){this.removeListener("error",f),this.data=v,m(null,this)}.bind(this),f=function(v){this.removeListener("parsed",y),m(v,null)}.bind(this),this.once("parsed",y),this.once("error",f)}return this.end(n),this},o.prototype.write=function(n){return this._parser.write(n),!0},o.prototype.end=function(n){this._parser.end(n)},o.prototype._metadata=function(n){this.width=n.width,this.height=n.height,this.emit("metadata",n)},o.prototype._gamma=function(n){this.gamma=n},o.prototype._handleClose=function(){!this._parser.writable&&!this._packer.readable&&this.emit("close")},o.bitblt=function(n,m,y,f,v,p,w,A){if(y|=0,f|=0,v|=0,p|=0,w|=0,A|=0,y>n.width||f>n.height||y+v>n.width||f+p>n.height)throw new Error("bitblt reading outside image");if(w>m.width||A>m.height||w+v>m.width||A+p>m.height)throw new Error("bitblt writing outside image");for(var x=0;x<p;x++)n.data.copy(m.data,(A+x)*m.width+w<<2,(f+x)*n.width+y<<2,(f+x)*n.width+y+v<<2)},o.prototype.bitblt=function(n,m,y,f,v,p,w){return o.bitblt(this,n,m,y,f,v,p,w),this},o.adjustGamma=function(n){if(n.gamma){for(var m=0;m<n.height;m++)for(var y=0;y<n.width;y++)for(var f=n.width*m+y<<2,v=0;v<3;v++){var p=n.data[f+v]/255;p=Math.pow(p,1/2.2/n.gamma),n.data[f+v]=Math.round(p*255)}n.gamma=0}},o.prototype.adjustGamma=function(){o.adjustGamma(this)}}).call(this,r("_process"),r("buffer").Buffer)},{"./packer-async":121,"./parser-async":125,"./png-sync":128,_process:133,buffer:48,stream:155,util:186}],130:[function(r,d,a){(function(l,s){var g=r("assert").ok,b=r("zlib"),c=r("util"),h=r("buffer").kMaxLength;function u(f){if(!(this instanceof u))return new u(f);f&&f.chunkSize<b.Z_MIN_CHUNK&&(f.chunkSize=b.Z_MIN_CHUNK),b.Inflate.call(this,f),this._offset=this._offset===void 0?this._outOffset:this._offset,this._buffer=this._buffer||this._outBuffer,f&&f.maxLength!=null&&(this._maxLength=f.maxLength)}function o(f){return new u(f)}function n(f,v){v&&l.nextTick(v),f._handle&&(f._handle.close(),f._handle=null)}u.prototype._processChunk=function(f,v,p){if(typeof p=="function")return b.Inflate._processChunk.call(this,f,v,p);var w=this,A=f&&f.length,x=this._chunkSize-this._offset,k=this._maxLength,N=0,E=[],S=0,R;this.on("error",function(V){R=V});function M(V,J){if(!w._hadError){var B=x-J;if(g(B>=0,"have should not go down"),B>0){var z=w._buffer.slice(w._offset,w._offset+B);if(w._offset+=B,z.length>k&&(z=z.slice(0,k)),E.push(z),S+=z.length,k-=z.length,k===0)return!1}return(J===0||w._offset>=w._chunkSize)&&(x=w._chunkSize,w._offset=0,w._buffer=s.allocUnsafe(w._chunkSize)),J===0?(N+=A-V,A=V,!0):!1}}g(this._handle,"zlib binding closed");do{var j=this._handle.writeSync(v,f,N,A,this._buffer,this._offset,x);j=j||this._writeState}while(!this._hadError&&M(j[0],j[1]));if(this._hadError)throw R;if(S>=h)throw n(this),new RangeError("Cannot create final Buffer. It would be larger than 0x"+h.toString(16)+" bytes");var O=s.concat(E,S);return n(this),O},c.inherits(u,b.Inflate);function m(f,v){if(typeof v=="string"&&(v=s.from(v)),!(v instanceof s))throw new TypeError("Not a string or buffer");var p=f._finishFlushFlag;return p==null&&(p=b.Z_FINISH),f._processChunk(v,p)}function y(f,v){return m(new u(v),f)}d.exports=a=y,a.Inflate=u,a.createInflate=o,a.inflateSync=y}).call(this,r("_process"),r("buffer").Buffer)},{_process:133,assert:25,buffer:48,util:186,zlib:35}],131:[function(r,d,a){var l=d.exports=function(s){this._buffer=s,this._reads=[]};l.prototype.read=function(s,g){this._reads.push({length:Math.abs(s),allowLess:s<0,func:g})},l.prototype.process=function(){for(;this._reads.length>0&&this._buffer.length;){var s=this._reads[0];if(this._buffer.length&&(this._buffer.length>=s.length||s.allowLess)){this._reads.shift();var g=this._buffer;this._buffer=g.slice(s.length),s.func.call(this,g.slice(0,s.length))}else break}if(this._reads.length>0)return new Error("There are some read requests waitng on finished stream");if(this._buffer.length>0)return new Error("unrecognised content at end of stream")}},{}],132:[function(r,d,a){(function(l){typeof l=="undefined"||!l.version||l.version.indexOf("v0.")===0||l.version.indexOf("v1.")===0&&l.version.indexOf("v1.8.")!==0?d.exports={nextTick:s}:d.exports=l;function s(g,b,c,h){if(typeof g!="function")throw new TypeError('"callback" argument must be a function');var u=arguments.length,o,n;switch(u){case 0:case 1:return l.nextTick(g);case 2:return l.nextTick(function(){g.call(null,b)});case 3:return l.nextTick(function(){g.call(null,b,c)});case 4:return l.nextTick(function(){g.call(null,b,c,h)});default:for(o=new Array(u-1),n=0;n<o.length;)o[n++]=arguments[n];return l.nextTick(function(){g.apply(null,o)})}}}).call(this,r("_process"))},{_process:133}],133:[function(r,d,a){var l=d.exports={},s,g;function b(){throw new Error("setTimeout has not been defined")}function c(){throw new Error("clearTimeout has not been defined")}(function(){try{typeof setTimeout=="function"?s=setTimeout:s=b}catch{s=b}try{typeof clearTimeout=="function"?g=clearTimeout:g=c}catch{g=c}})();function h(A){if(s===setTimeout)return setTimeout(A,0);if((s===b||!s)&&setTimeout)return s=setTimeout,setTimeout(A,0);try{return s(A,0)}catch{try{return s.call(null,A,0)}catch{return s.call(this,A,0)}}}function u(A){if(g===clearTimeout)return clearTimeout(A);if((g===c||!g)&&clearTimeout)return g=clearTimeout,clearTimeout(A);try{return g(A)}catch{try{return g.call(null,A)}catch{return g.call(this,A)}}}var o=[],n=!1,m,y=-1;function f(){!n||!m||(n=!1,m.length?o=m.concat(o):y=-1,o.length&&v())}function v(){if(!n){var A=h(f);n=!0;for(var x=o.length;x;){for(m=o,o=[];++y<x;)m&&m[y].run();y=-1,x=o.length}m=null,n=!1,u(A)}}l.nextTick=function(A){var x=new Array(arguments.length-1);if(arguments.length>1)for(var k=1;k<arguments.length;k++)x[k-1]=arguments[k];o.push(new p(A,x)),o.length===1&&!n&&h(v)};function p(A,x){this.fun=A,this.array=x}p.prototype.run=function(){this.fun.apply(null,this.array)},l.title="browser",l.browser=!0,l.env={},l.argv=[],l.version="",l.versions={};function w(){}l.on=w,l.addListener=w,l.once=w,l.off=w,l.removeListener=w,l.removeAllListeners=w,l.emit=w,l.prependListener=w,l.prependOnceListener=w,l.listeners=function(A){return[]},l.binding=function(A){throw new Error("process.binding is not supported")},l.cwd=function(){return"/"},l.chdir=function(A){throw new Error("process.chdir is not supported")},l.umask=function(){return 0}},{}],134:[function(r,d,a){(function(l){(function(s){var g=typeof a=="object"&&a&&!a.nodeType&&a,b=typeof d=="object"&&d&&!d.nodeType&&d,c=typeof l=="object"&&l;(c.global===c||c.window===c||c.self===c)&&(s=c);var h,u=2147483647,o=36,n=1,m=26,y=38,f=700,v=72,p=128,w="-",A=/^xn--/,x=/[^\x20-\x7E]/,k=/[\x2E\u3002\uFF0E\uFF61]/g,N={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},E=o-n,S=Math.floor,R=String.fromCharCode,M;function j(ee){throw new RangeError(N[ee])}function O(ee,_){for(var re=ee.length,fe=[];re--;)fe[re]=_(ee[re]);return fe}function V(ee,_){var re=ee.split("@"),fe="";re.length>1&&(fe=re[0]+"@",ee=re[1]),ee=ee.replace(k,".");var pe=ee.split("."),he=O(pe,_).join(".");return fe+he}function J(ee){for(var _=[],re=0,fe=ee.length,pe,he;re<fe;)pe=ee.charCodeAt(re++),pe>=55296&&pe<=56319&&re<fe?(he=ee.charCodeAt(re++),(he&64512)==56320?_.push(((pe&1023)<<10)+(he&1023)+65536):(_.push(pe),re--)):_.push(pe);return _}function B(ee){return O(ee,function(_){var re="";return _>65535&&(_-=65536,re+=R(_>>>10&1023|55296),_=56320|_&1023),re+=R(_),re}).join("")}function z(ee){return ee-48<10?ee-22:ee-65<26?ee-65:ee-97<26?ee-97:o}function G(ee,_){return ee+22+75*(ee<26)-((_!=0)<<5)}function U(ee,_,re){var fe=0;for(ee=re?S(ee/f):ee>>1,ee+=S(ee/_);ee>E*m>>1;fe+=o)ee=S(ee/E);return S(fe+(E+1)*ee/(ee+y))}function ie(ee){var _=[],re=ee.length,fe,pe=0,he=p,se=v,ce,q,K,Y,$,te,L,T,F;for(ce=ee.lastIndexOf(w),ce<0&&(ce=0),q=0;q<ce;++q)ee.charCodeAt(q)>=128&&j("not-basic"),_.push(ee.charCodeAt(q));for(K=ce>0?ce+1:0;K<re;){for(Y=pe,$=1,te=o;K>=re&&j("invalid-input"),L=z(ee.charCodeAt(K++)),(L>=o||L>S((u-pe)/$))&&j("overflow"),pe+=L*$,T=te<=se?n:te>=se+m?m:te-se,!(L<T);te+=o)F=o-T,$>S(u/F)&&j("overflow"),$*=F;fe=_.length+1,se=U(pe-Y,fe,Y==0),S(pe/fe)>u-he&&j("overflow"),he+=S(pe/fe),pe%=fe,_.splice(pe++,0,he)}return B(_)}function oe(ee){var _,re,fe,pe,he,se,ce,q,K,Y,$,te=[],L,T,F,X;for(ee=J(ee),L=ee.length,_=p,re=0,he=v,se=0;se<L;++se)$=ee[se],$<128&&te.push(R($));for(fe=pe=te.length,pe&&te.push(w);fe<L;){for(ce=u,se=0;se<L;++se)$=ee[se],$>=_&&$<ce&&(ce=$);for(T=fe+1,ce-_>S((u-re)/T)&&j("overflow"),re+=(ce-_)*T,_=ce,se=0;se<L;++se)if($=ee[se],$<_&&++re>u&&j("overflow"),$==_){for(q=re,K=o;Y=K<=he?n:K>=he+m?m:K-he,!(q<Y);K+=o)X=q-Y,F=o-Y,te.push(R(G(Y+X%F,0))),q=S(X/F);te.push(R(G(q,0))),he=U(re,T,fe==pe),re=0,++fe}++re,++_}return te.join("")}function ae(ee){return V(ee,function(_){return A.test(_)?ie(_.slice(4).toLowerCase()):_})}function W(ee){return V(ee,function(_){return x.test(_)?"xn--"+oe(_):_})}if(h={version:"1.4.1",ucs2:{decode:J,encode:B},decode:ie,encode:oe,toASCII:W,toUnicode:ae},g&&b)if(d.exports==g)b.exports=h;else for(M in h)h.hasOwnProperty(M)&&(g[M]=h[M]);else s.punycode=h})(this)}).call(this,typeof ot!="undefined"?ot:typeof self!="undefined"?self:typeof i!="undefined"?i:{})},{}],135:[function(r,d,a){function l(g,b){return Object.prototype.hasOwnProperty.call(g,b)}d.exports=function(g,b,c,h){b=b||"&",c=c||"=";var u={};if(typeof g!="string"||g.length===0)return u;var o=/\+/g;g=g.split(b);var n=1e3;h&&typeof h.maxKeys=="number"&&(n=h.maxKeys);var m=g.length;n>0&&m>n&&(m=n);for(var y=0;y<m;++y){var f=g[y].replace(o,"%20"),v=f.indexOf(c),p,w,A,x;v>=0?(p=f.substr(0,v),w=f.substr(v+1)):(p=f,w=""),A=decodeURIComponent(p),x=decodeURIComponent(w),l(u,A)?s(u[A])?u[A].push(x):u[A]=[u[A],x]:u[A]=x}return u};var s=Array.isArray||function(g){return Object.prototype.toString.call(g)==="[object Array]"}},{}],136:[function(r,d,a){var l=function(c){switch(typeof c){case"string":return c;case"boolean":return c?"true":"false";case"number":return isFinite(c)?c:"";default:return""}};d.exports=function(c,h,u,o){return h=h||"&",u=u||"=",c===null&&(c=void 0),typeof c=="object"?g(b(c),function(n){var m=encodeURIComponent(l(n))+u;return s(c[n])?g(c[n],function(y){return m+encodeURIComponent(l(y))}).join(h):m+encodeURIComponent(l(c[n]))}).join(h):o?encodeURIComponent(l(o))+u+encodeURIComponent(l(c)):""};var s=Array.isArray||function(c){return Object.prototype.toString.call(c)==="[object Array]"};function g(c,h){if(c.map)return c.map(h);for(var u=[],o=0;o<c.length;o++)u.push(h(c[o],o));return u}var b=Object.keys||function(c){var h=[];for(var u in c)Object.prototype.hasOwnProperty.call(c,u)&&h.push(u);return h}},{}],137:[function(r,d,a){a.decode=a.parse=r("./decode"),a.encode=a.stringify=r("./encode")},{"./decode":135,"./encode":136}],138:[function(r,d,a){d.exports=r("./lib/_stream_duplex.js")},{"./lib/_stream_duplex.js":139}],139:[function(r,d,a){var l=r("process-nextick-args"),s=Object.keys||function(f){var v=[];for(var p in f)v.push(p);return v};d.exports=n;var g=r("core-util-is");g.inherits=r("inherits");var b=r("./_stream_readable"),c=r("./_stream_writable");g.inherits(n,b);for(var h=s(c.prototype),u=0;u<h.length;u++){var o=h[u];n.prototype[o]||(n.prototype[o]=c.prototype[o])}function n(f){if(!(this instanceof n))return new n(f);b.call(this,f),c.call(this,f),f&&f.readable===!1&&(this.readable=!1),f&&f.writable===!1&&(this.writable=!1),this.allowHalfOpen=!0,f&&f.allowHalfOpen===!1&&(this.allowHalfOpen=!1),this.once("end",m)}Object.defineProperty(n.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}});function m(){this.allowHalfOpen||this._writableState.ended||l.nextTick(y,this)}function y(f){f.end()}Object.defineProperty(n.prototype,"destroyed",{get:function(){return this._readableState===void 0||this._writableState===void 0?!1:this._readableState.destroyed&&this._writableState.destroyed},set:function(f){this._readableState===void 0||this._writableState===void 0||(this._readableState.destroyed=f,this._writableState.destroyed=f)}}),n.prototype._destroy=function(f,v){this.push(null),this.end(),l.nextTick(v,f)}},{"./_stream_readable":141,"./_stream_writable":143,"core-util-is":51,inherits:75,"process-nextick-args":132}],140:[function(r,d,a){d.exports=g;var l=r("./_stream_transform"),s=r("core-util-is");s.inherits=r("inherits"),s.inherits(g,l);function g(b){if(!(this instanceof g))return new g(b);l.call(this,b)}g.prototype._transform=function(b,c,h){h(null,b)}},{"./_stream_transform":142,"core-util-is":51,inherits:75}],141:[function(r,d,a){(function(l,s){var g=r("process-nextick-args");d.exports=S;var b=r("isarray"),c;S.ReadableState=E,r("events").EventEmitter;var h=function(Y,$){return Y.listeners($).length},u=r("./internal/streams/stream"),o=r("safe-buffer").Buffer,n=s.Uint8Array||function(){};function m(Y){return o.from(Y)}function y(Y){return o.isBuffer(Y)||Y instanceof n}var f=r("core-util-is");f.inherits=r("inherits");var v=r("util"),p=void 0;v&&v.debuglog?p=v.debuglog("stream"):p=function(){};var w=r("./internal/streams/BufferList"),A=r("./internal/streams/destroy"),x;f.inherits(S,u);var k=["error","close","destroy","pause","resume"];function N(Y,$,te){if(typeof Y.prependListener=="function")return Y.prependListener($,te);!Y._events||!Y._events[$]?Y.on($,te):b(Y._events[$])?Y._events[$].unshift(te):Y._events[$]=[te,Y._events[$]]}function E(Y,$){c=c||r("./_stream_duplex"),Y=Y||{};var te=$ instanceof c;this.objectMode=!!Y.objectMode,te&&(this.objectMode=this.objectMode||!!Y.readableObjectMode);var L=Y.highWaterMark,T=Y.readableHighWaterMark,F=this.objectMode?16:16*1024;L||L===0?this.highWaterMark=L:te&&(T||T===0)?this.highWaterMark=T:this.highWaterMark=F,this.highWaterMark=Math.floor(this.highWaterMark),this.buffer=new w,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.destroyed=!1,this.defaultEncoding=Y.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,Y.encoding&&(x||(x=r("string_decoder/").StringDecoder),this.decoder=new x(Y.encoding),this.encoding=Y.encoding)}function S(Y){if(c=c||r("./_stream_duplex"),!(this instanceof S))return new S(Y);this._readableState=new E(Y,this),this.readable=!0,Y&&(typeof Y.read=="function"&&(this._read=Y.read),typeof Y.destroy=="function"&&(this._destroy=Y.destroy)),u.call(this)}Object.defineProperty(S.prototype,"destroyed",{get:function(){return this._readableState===void 0?!1:this._readableState.destroyed},set:function(Y){!this._readableState||(this._readableState.destroyed=Y)}}),S.prototype.destroy=A.destroy,S.prototype._undestroy=A.undestroy,S.prototype._destroy=function(Y,$){this.push(null),$(Y)},S.prototype.push=function(Y,$){var te=this._readableState,L;return te.objectMode?L=!0:typeof Y=="string"&&($=$||te.defaultEncoding,$!==te.encoding&&(Y=o.from(Y,$),$=""),L=!0),R(this,Y,$,!1,L)},S.prototype.unshift=function(Y){return R(this,Y,null,!0,!1)};function R(Y,$,te,L,T){var F=Y._readableState;if($===null)F.reading=!1,z(Y,F);else{var X;T||(X=j(F,$)),X?Y.emit("error",X):F.objectMode||$&&$.length>0?(typeof $!="string"&&!F.objectMode&&Object.getPrototypeOf($)!==o.prototype&&($=m($)),L?F.endEmitted?Y.emit("error",new Error("stream.unshift() after end event")):M(Y,F,$,!0):F.ended?Y.emit("error",new Error("stream.push() after EOF")):(F.reading=!1,F.decoder&&!te?($=F.decoder.write($),F.objectMode||$.length!==0?M(Y,F,$,!1):ie(Y,F)):M(Y,F,$,!1))):L||(F.reading=!1)}return O(F)}function M(Y,$,te,L){$.flowing&&$.length===0&&!$.sync?(Y.emit("data",te),Y.read(0)):($.length+=$.objectMode?1:te.length,L?$.buffer.unshift(te):$.buffer.push(te),$.needReadable&&G(Y)),ie(Y,$)}function j(Y,$){var te;return!y($)&&typeof $!="string"&&$!==void 0&&!Y.objectMode&&(te=new TypeError("Invalid non-string/buffer chunk")),te}function O(Y){return!Y.ended&&(Y.needReadable||Y.length<Y.highWaterMark||Y.length===0)}S.prototype.isPaused=function(){return this._readableState.flowing===!1},S.prototype.setEncoding=function(Y){return x||(x=r("string_decoder/").StringDecoder),this._readableState.decoder=new x(Y),this._readableState.encoding=Y,this};var V=8388608;function J(Y){return Y>=V?Y=V:(Y--,Y|=Y>>>1,Y|=Y>>>2,Y|=Y>>>4,Y|=Y>>>8,Y|=Y>>>16,Y++),Y}function B(Y,$){return Y<=0||$.length===0&&$.ended?0:$.objectMode?1:Y!==Y?$.flowing&&$.length?$.buffer.head.data.length:$.length:(Y>$.highWaterMark&&($.highWaterMark=J(Y)),Y<=$.length?Y:$.ended?$.length:($.needReadable=!0,0))}S.prototype.read=function(Y){p("read",Y),Y=parseInt(Y,10);var $=this._readableState,te=Y;if(Y!==0&&($.emittedReadable=!1),Y===0&&$.needReadable&&($.length>=$.highWaterMark||$.ended))return p("read: emitReadable",$.length,$.ended),$.length===0&&$.ended?ce(this):G(this),null;if(Y=B(Y,$),Y===0&&$.ended)return $.length===0&&ce(this),null;var L=$.needReadable;p("need readable",L),($.length===0||$.length-Y<$.highWaterMark)&&(L=!0,p("length less than watermark",L)),$.ended||$.reading?(L=!1,p("reading or ended",L)):L&&(p("do read"),$.reading=!0,$.sync=!0,$.length===0&&($.needReadable=!0),this._read($.highWaterMark),$.sync=!1,$.reading||(Y=B(te,$)));var T;return Y>0?T=fe(Y,$):T=null,T===null?($.needReadable=!0,Y=0):$.length-=Y,$.length===0&&($.ended||($.needReadable=!0),te!==Y&&$.ended&&ce(this)),T!==null&&this.emit("data",T),T};function z(Y,$){if(!$.ended){if($.decoder){var te=$.decoder.end();te&&te.length&&($.buffer.push(te),$.length+=$.objectMode?1:te.length)}$.ended=!0,G(Y)}}function G(Y){var $=Y._readableState;$.needReadable=!1,$.emittedReadable||(p("emitReadable",$.flowing),$.emittedReadable=!0,$.sync?g.nextTick(U,Y):U(Y))}function U(Y){p("emit readable"),Y.emit("readable"),re(Y)}function ie(Y,$){$.readingMore||($.readingMore=!0,g.nextTick(oe,Y,$))}function oe(Y,$){for(var te=$.length;!$.reading&&!$.flowing&&!$.ended&&$.length<$.highWaterMark&&(p("maybeReadMore read 0"),Y.read(0),te!==$.length);)te=$.length;$.readingMore=!1}S.prototype._read=function(Y){this.emit("error",new Error("_read() is not implemented"))},S.prototype.pipe=function(Y,$){var te=this,L=this._readableState;switch(L.pipesCount){case 0:L.pipes=Y;break;case 1:L.pipes=[L.pipes,Y];break;default:L.pipes.push(Y);break}L.pipesCount+=1,p("pipe count=%d opts=%j",L.pipesCount,$);var T=(!$||$.end!==!1)&&Y!==l.stdout&&Y!==l.stderr,F=T?H:Ie;L.endEmitted?g.nextTick(F):te.once("end",F),Y.on("unpipe",X);function X(Oe,Fe){p("onunpipe"),Oe===te&&Fe&&Fe.hasUnpiped===!1&&(Fe.hasUnpiped=!0,Q())}function H(){p("onend"),Y.end()}var I=ae(te);Y.on("drain",I);var C=!1;function Q(){p("cleanup"),Y.removeListener("close",Ne),Y.removeListener("finish",Se),Y.removeListener("drain",I),Y.removeListener("error",ye),Y.removeListener("unpipe",X),te.removeListener("end",H),te.removeListener("end",Ie),te.removeListener("data",ge),C=!0,L.awaitDrain&&(!Y._writableState||Y._writableState.needDrain)&&I()}var le=!1;te.on("data",ge);function ge(Oe){p("ondata"),le=!1;var Fe=Y.write(Oe);Fe===!1&&!le&&((L.pipesCount===1&&L.pipes===Y||L.pipesCount>1&&K(L.pipes,Y)!==-1)&&!C&&(p("false write response, pause",te._readableState.awaitDrain),te._readableState.awaitDrain++,le=!0),te.pause())}function ye(Oe){p("onerror",Oe),Ie(),Y.removeListener("error",ye),h(Y,"error")===0&&Y.emit("error",Oe)}N(Y,"error",ye);function Ne(){Y.removeListener("finish",Se),Ie()}Y.once("close",Ne);function Se(){p("onfinish"),Y.removeListener("close",Ne),Ie()}Y.once("finish",Se);function Ie(){p("unpipe"),te.unpipe(Y)}return Y.emit("pipe",te),L.flowing||(p("pipe resume"),te.resume()),Y};function ae(Y){return function(){var $=Y._readableState;p("pipeOnDrain",$.awaitDrain),$.awaitDrain&&$.awaitDrain--,$.awaitDrain===0&&h(Y,"data")&&($.flowing=!0,re(Y))}}S.prototype.unpipe=function(Y){var $=this._readableState,te={hasUnpiped:!1};if($.pipesCount===0)return this;if($.pipesCount===1)return Y&&Y!==$.pipes?this:(Y||(Y=$.pipes),$.pipes=null,$.pipesCount=0,$.flowing=!1,Y&&Y.emit("unpipe",this,te),this);if(!Y){var L=$.pipes,T=$.pipesCount;$.pipes=null,$.pipesCount=0,$.flowing=!1;for(var F=0;F<T;F++)L[F].emit("unpipe",this,te);return this}var X=K($.pipes,Y);return X===-1?this:($.pipes.splice(X,1),$.pipesCount-=1,$.pipesCount===1&&($.pipes=$.pipes[0]),Y.emit("unpipe",this,te),this)},S.prototype.on=function(Y,$){var te=u.prototype.on.call(this,Y,$);if(Y==="data")this._readableState.flowing!==!1&&this.resume();else if(Y==="readable"){var L=this._readableState;!L.endEmitted&&!L.readableListening&&(L.readableListening=L.needReadable=!0,L.emittedReadable=!1,L.reading?L.length&&G(this):g.nextTick(W,this))}return te},S.prototype.addListener=S.prototype.on;function W(Y){p("readable nexttick read 0"),Y.read(0)}S.prototype.resume=function(){var Y=this._readableState;return Y.flowing||(p("resume"),Y.flowing=!0,ee(this,Y)),this};function ee(Y,$){$.resumeScheduled||($.resumeScheduled=!0,g.nextTick(_,Y,$))}function _(Y,$){$.reading||(p("resume read 0"),Y.read(0)),$.resumeScheduled=!1,$.awaitDrain=0,Y.emit("resume"),re(Y),$.flowing&&!$.reading&&Y.read(0)}S.prototype.pause=function(){return p("call pause flowing=%j",this._readableState.flowing),this._readableState.flowing!==!1&&(p("pause"),this._readableState.flowing=!1,this.emit("pause")),this};function re(Y){var $=Y._readableState;for(p("flow",$.flowing);$.flowing&&Y.read()!==null;);}S.prototype.wrap=function(Y){var $=this,te=this._readableState,L=!1;Y.on("end",function(){if(p("wrapped end"),te.decoder&&!te.ended){var X=te.decoder.end();X&&X.length&&$.push(X)}$.push(null)}),Y.on("data",function(X){if(p("wrapped data"),te.decoder&&(X=te.decoder.write(X)),!(te.objectMode&&X==null)&&!(!te.objectMode&&(!X||!X.length))){var H=$.push(X);H||(L=!0,Y.pause())}});for(var T in Y)this[T]===void 0&&typeof Y[T]=="function"&&(this[T]=function(X){return function(){return Y[X].apply(Y,arguments)}}(T));for(var F=0;F<k.length;F++)Y.on(k[F],this.emit.bind(this,k[F]));return this._read=function(X){p("wrapped _read",X),L&&(L=!1,Y.resume())},this},Object.defineProperty(S.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),S._fromList=fe;function fe(Y,$){if($.length===0)return null;var te;return $.objectMode?te=$.buffer.shift():!Y||Y>=$.length?($.decoder?te=$.buffer.join(""):$.buffer.length===1?te=$.buffer.head.data:te=$.buffer.concat($.length),$.buffer.clear()):te=pe(Y,$.buffer,$.decoder),te}function pe(Y,$,te){var L;return Y<$.head.data.length?(L=$.head.data.slice(0,Y),$.head.data=$.head.data.slice(Y)):Y===$.head.data.length?L=$.shift():L=te?he(Y,$):se(Y,$),L}function he(Y,$){var te=$.head,L=1,T=te.data;for(Y-=T.length;te=te.next;){var F=te.data,X=Y>F.length?F.length:Y;if(X===F.length?T+=F:T+=F.slice(0,Y),Y-=X,Y===0){X===F.length?(++L,te.next?$.head=te.next:$.head=$.tail=null):($.head=te,te.data=F.slice(X));break}++L}return $.length-=L,T}function se(Y,$){var te=o.allocUnsafe(Y),L=$.head,T=1;for(L.data.copy(te),Y-=L.data.length;L=L.next;){var F=L.data,X=Y>F.length?F.length:Y;if(F.copy(te,te.length-Y,0,X),Y-=X,Y===0){X===F.length?(++T,L.next?$.head=L.next:$.head=$.tail=null):($.head=L,L.data=F.slice(X));break}++T}return $.length-=T,te}function ce(Y){var $=Y._readableState;if($.length>0)throw new Error('"endReadable()" called on non-empty stream');$.endEmitted||($.ended=!0,g.nextTick(q,$,Y))}function q(Y,$){!Y.endEmitted&&Y.length===0&&(Y.endEmitted=!0,$.readable=!1,$.emit("end"))}function K(Y,$){for(var te=0,L=Y.length;te<L;te++)if(Y[te]===$)return te;return-1}}).call(this,r("_process"),typeof ot!="undefined"?ot:typeof self!="undefined"?self:typeof i!="undefined"?i:{})},{"./_stream_duplex":139,"./internal/streams/BufferList":144,"./internal/streams/destroy":145,"./internal/streams/stream":146,_process:133,"core-util-is":51,events:52,inherits:75,isarray:79,"process-nextick-args":132,"safe-buffer":147,"string_decoder/":148,util:33}],142:[function(r,d,a){d.exports=b;var l=r("./_stream_duplex"),s=r("core-util-is");s.inherits=r("inherits"),s.inherits(b,l);function g(u,o){var n=this._transformState;n.transforming=!1;var m=n.writecb;if(!m)return this.emit("error",new Error("write callback called multiple times"));n.writechunk=null,n.writecb=null,o!=null&&this.push(o),m(u);var y=this._readableState;y.reading=!1,(y.needReadable||y.length<y.highWaterMark)&&this._read(y.highWaterMark)}function b(u){if(!(this instanceof b))return new b(u);l.call(this,u),this._transformState={afterTransform:g.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,u&&(typeof u.transform=="function"&&(this._transform=u.transform),typeof u.flush=="function"&&(this._flush=u.flush)),this.on("prefinish",c)}function c(){var u=this;typeof this._flush=="function"?this._flush(function(o,n){h(u,o,n)}):h(this,null,null)}b.prototype.push=function(u,o){return this._transformState.needTransform=!1,l.prototype.push.call(this,u,o)},b.prototype._transform=function(u,o,n){throw new Error("_transform() is not implemented")},b.prototype._write=function(u,o,n){var m=this._transformState;if(m.writecb=n,m.writechunk=u,m.writeencoding=o,!m.transforming){var y=this._readableState;(m.needTransform||y.needReadable||y.length<y.highWaterMark)&&this._read(y.highWaterMark)}},b.prototype._read=function(u){var o=this._transformState;o.writechunk!==null&&o.writecb&&!o.transforming?(o.transforming=!0,this._transform(o.writechunk,o.writeencoding,o.afterTransform)):o.needTransform=!0},b.prototype._destroy=function(u,o){var n=this;l.prototype._destroy.call(this,u,function(m){o(m),n.emit("close")})};function h(u,o,n){if(o)return u.emit("error",o);if(n!=null&&u.push(n),u._writableState.length)throw new Error("Calling transform done when ws.length != 0");if(u._transformState.transforming)throw new Error("Calling transform done when still transforming");return u.push(null)}},{"./_stream_duplex":139,"core-util-is":51,inherits:75}],143:[function(r,d,a){(function(l,s,g){var b=r("process-nextick-args");d.exports=N;function c(_){var re=this;this.next=null,this.entry=null,this.finish=function(){ee(re,_)}}var h=!l.browser&&["v0.10","v0.9."].indexOf(l.version.slice(0,5))>-1?g:b.nextTick,u;N.WritableState=x;var o=r("core-util-is");o.inherits=r("inherits");var n={deprecate:r("util-deprecate")},m=r("./internal/streams/stream"),y=r("safe-buffer").Buffer,f=s.Uint8Array||function(){};function v(_){return y.from(_)}function p(_){return y.isBuffer(_)||_ instanceof f}var w=r("./internal/streams/destroy");o.inherits(N,m);function A(){}function x(_,re){u=u||r("./_stream_duplex"),_=_||{};var fe=re instanceof u;this.objectMode=!!_.objectMode,fe&&(this.objectMode=this.objectMode||!!_.writableObjectMode);var pe=_.highWaterMark,he=_.writableHighWaterMark,se=this.objectMode?16:16*1024;pe||pe===0?this.highWaterMark=pe:fe&&(he||he===0)?this.highWaterMark=he:this.highWaterMark=se,this.highWaterMark=Math.floor(this.highWaterMark),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var ce=_.decodeStrings===!1;this.decodeStrings=!ce,this.defaultEncoding=_.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(q){J(re,q)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new c(this)}x.prototype.getBuffer=function(){for(var re=this.bufferedRequest,fe=[];re;)fe.push(re),re=re.next;return fe},function(){try{Object.defineProperty(x.prototype,"buffer",{get:n.deprecate(function(){return this.getBuffer()},"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch{}}();var k;typeof Symbol=="function"&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]=="function"?(k=Function.prototype[Symbol.hasInstance],Object.defineProperty(N,Symbol.hasInstance,{value:function(_){return k.call(this,_)?!0:this!==N?!1:_&&_._writableState instanceof x}})):k=function(_){return _ instanceof this};function N(_){if(u=u||r("./_stream_duplex"),!k.call(N,this)&&!(this instanceof u))return new N(_);this._writableState=new x(_,this),this.writable=!0,_&&(typeof _.write=="function"&&(this._write=_.write),typeof _.writev=="function"&&(this._writev=_.writev),typeof _.destroy=="function"&&(this._destroy=_.destroy),typeof _.final=="function"&&(this._final=_.final)),m.call(this)}N.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe, not readable"))};function E(_,re){var fe=new Error("write after end");_.emit("error",fe),b.nextTick(re,fe)}function S(_,re,fe,pe){var he=!0,se=!1;return fe===null?se=new TypeError("May not write null values to stream"):typeof fe!="string"&&fe!==void 0&&!re.objectMode&&(se=new TypeError("Invalid non-string/buffer chunk")),se&&(_.emit("error",se),b.nextTick(pe,se),he=!1),he}N.prototype.write=function(_,re,fe){var pe=this._writableState,he=!1,se=!pe.objectMode&&p(_);return se&&!y.isBuffer(_)&&(_=v(_)),typeof re=="function"&&(fe=re,re=null),se?re="buffer":re||(re=pe.defaultEncoding),typeof fe!="function"&&(fe=A),pe.ended?E(this,fe):(se||S(this,pe,_,fe))&&(pe.pendingcb++,he=M(this,pe,se,_,re,fe)),he},N.prototype.cork=function(){var _=this._writableState;_.corked++},N.prototype.uncork=function(){var _=this._writableState;_.corked&&(_.corked--,!_.writing&&!_.corked&&!_.finished&&!_.bufferProcessing&&_.bufferedRequest&&G(this,_))},N.prototype.setDefaultEncoding=function(re){if(typeof re=="string"&&(re=re.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((re+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+re);return this._writableState.defaultEncoding=re,this};function R(_,re,fe){return!_.objectMode&&_.decodeStrings!==!1&&typeof re=="string"&&(re=y.from(re,fe)),re}Object.defineProperty(N.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}});function M(_,re,fe,pe,he,se){if(!fe){var ce=R(re,pe,he);pe!==ce&&(fe=!0,he="buffer",pe=ce)}var q=re.objectMode?1:pe.length;re.length+=q;var K=re.length<re.highWaterMark;if(K||(re.needDrain=!0),re.writing||re.corked){var Y=re.lastBufferedRequest;re.lastBufferedRequest={chunk:pe,encoding:he,isBuf:fe,callback:se,next:null},Y?Y.next=re.lastBufferedRequest:re.bufferedRequest=re.lastBufferedRequest,re.bufferedRequestCount+=1}else j(_,re,!1,q,pe,he,se);return K}function j(_,re,fe,pe,he,se,ce){re.writelen=pe,re.writecb=ce,re.writing=!0,re.sync=!0,fe?_._writev(he,re.onwrite):_._write(he,se,re.onwrite),re.sync=!1}function O(_,re,fe,pe,he){--re.pendingcb,fe?(b.nextTick(he,pe),b.nextTick(ae,_,re),_._writableState.errorEmitted=!0,_.emit("error",pe)):(he(pe),_._writableState.errorEmitted=!0,_.emit("error",pe),ae(_,re))}function V(_){_.writing=!1,_.writecb=null,_.length-=_.writelen,_.writelen=0}function J(_,re){var fe=_._writableState,pe=fe.sync,he=fe.writecb;if(V(fe),re)O(_,fe,pe,re,he);else{var se=U(fe);!se&&!fe.corked&&!fe.bufferProcessing&&fe.bufferedRequest&&G(_,fe),pe?h(B,_,fe,se,he):B(_,fe,se,he)}}function B(_,re,fe,pe){fe||z(_,re),re.pendingcb--,pe(),ae(_,re)}function z(_,re){re.length===0&&re.needDrain&&(re.needDrain=!1,_.emit("drain"))}function G(_,re){re.bufferProcessing=!0;var fe=re.bufferedRequest;if(_._writev&&fe&&fe.next){var pe=re.bufferedRequestCount,he=new Array(pe),se=re.corkedRequestsFree;se.entry=fe;for(var ce=0,q=!0;fe;)he[ce]=fe,fe.isBuf||(q=!1),fe=fe.next,ce+=1;he.allBuffers=q,j(_,re,!0,re.length,he,"",se.finish),re.pendingcb++,re.lastBufferedRequest=null,se.next?(re.corkedRequestsFree=se.next,se.next=null):re.corkedRequestsFree=new c(re),re.bufferedRequestCount=0}else{for(;fe;){var K=fe.chunk,Y=fe.encoding,$=fe.callback,te=re.objectMode?1:K.length;if(j(_,re,!1,te,K,Y,$),fe=fe.next,re.bufferedRequestCount--,re.writing)break}fe===null&&(re.lastBufferedRequest=null)}re.bufferedRequest=fe,re.bufferProcessing=!1}N.prototype._write=function(_,re,fe){fe(new Error("_write() is not implemented"))},N.prototype._writev=null,N.prototype.end=function(_,re,fe){var pe=this._writableState;typeof _=="function"?(fe=_,_=null,re=null):typeof re=="function"&&(fe=re,re=null),_!=null&&this.write(_,re),pe.corked&&(pe.corked=1,this.uncork()),!pe.ending&&!pe.finished&&W(this,pe,fe)};function U(_){return _.ending&&_.length===0&&_.bufferedRequest===null&&!_.finished&&!_.writing}function ie(_,re){_._final(function(fe){re.pendingcb--,fe&&_.emit("error",fe),re.prefinished=!0,_.emit("prefinish"),ae(_,re)})}function oe(_,re){!re.prefinished&&!re.finalCalled&&(typeof _._final=="function"?(re.pendingcb++,re.finalCalled=!0,b.nextTick(ie,_,re)):(re.prefinished=!0,_.emit("prefinish")))}function ae(_,re){var fe=U(re);return fe&&(oe(_,re),re.pendingcb===0&&(re.finished=!0,_.emit("finish"))),fe}function W(_,re,fe){re.ending=!0,ae(_,re),fe&&(re.finished?b.nextTick(fe):_.once("finish",fe)),re.ended=!0,_.writable=!1}function ee(_,re,fe){var pe=_.entry;for(_.entry=null;pe;){var he=pe.callback;re.pendingcb--,he(fe),pe=pe.next}re.corkedRequestsFree?re.corkedRequestsFree.next=_:re.corkedRequestsFree=_}Object.defineProperty(N.prototype,"destroyed",{get:function(){return this._writableState===void 0?!1:this._writableState.destroyed},set:function(_){!this._writableState||(this._writableState.destroyed=_)}}),N.prototype.destroy=w.destroy,N.prototype._undestroy=w.undestroy,N.prototype._destroy=function(_,re){this.end(),re(_)}}).call(this,r("_process"),typeof ot!="undefined"?ot:typeof self!="undefined"?self:typeof i!="undefined"?i:{},r("timers").setImmediate)},{"./_stream_duplex":139,"./internal/streams/destroy":145,"./internal/streams/stream":146,_process:133,"core-util-is":51,inherits:75,"process-nextick-args":132,"safe-buffer":147,timers:176,"util-deprecate":183}],144:[function(r,d,a){function l(c,h){if(!(c instanceof h))throw new TypeError("Cannot call a class as a function")}var s=r("safe-buffer").Buffer,g=r("util");function b(c,h,u){c.copy(h,u)}d.exports=function(){function c(){l(this,c),this.head=null,this.tail=null,this.length=0}return c.prototype.push=function(u){var o={data:u,next:null};this.length>0?this.tail.next=o:this.head=o,this.tail=o,++this.length},c.prototype.unshift=function(u){var o={data:u,next:this.head};this.length===0&&(this.tail=o),this.head=o,++this.length},c.prototype.shift=function(){if(this.length!==0){var u=this.head.data;return this.length===1?this.head=this.tail=null:this.head=this.head.next,--this.length,u}},c.prototype.clear=function(){this.head=this.tail=null,this.length=0},c.prototype.join=function(u){if(this.length===0)return"";for(var o=this.head,n=""+o.data;o=o.next;)n+=u+o.data;return n},c.prototype.concat=function(u){if(this.length===0)return s.alloc(0);if(this.length===1)return this.head.data;for(var o=s.allocUnsafe(u>>>0),n=this.head,m=0;n;)b(n.data,o,m),m+=n.data.length,n=n.next;return o},c}(),g&&g.inspect&&g.inspect.custom&&(d.exports.prototype[g.inspect.custom]=function(){var c=g.inspect({length:this.length});return this.constructor.name+" "+c})},{"safe-buffer":147,util:33}],145:[function(r,d,a){var l=r("process-nextick-args");function s(c,h){var u=this,o=this._readableState&&this._readableState.destroyed,n=this._writableState&&this._writableState.destroyed;return o||n?(h?h(c):c&&(!this._writableState||!this._writableState.errorEmitted)&&l.nextTick(b,this,c),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(c||null,function(m){!h&&m?(l.nextTick(b,u,m),u._writableState&&(u._writableState.errorEmitted=!0)):h&&h(m)}),this)}function g(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)}function b(c,h){c.emit("error",h)}d.exports={destroy:s,undestroy:g}},{"process-nextick-args":132}],146:[function(r,d,a){d.exports=r("events").EventEmitter},{events:52}],147:[function(r,d,a){var l=r("buffer"),s=l.Buffer;function g(c,h){for(var u in c)h[u]=c[u]}s.from&&s.alloc&&s.allocUnsafe&&s.allocUnsafeSlow?d.exports=l:(g(l,a),a.Buffer=b);function b(c,h,u){return s(c,h,u)}g(s,b),b.from=function(c,h,u){if(typeof c=="number")throw new TypeError("Argument must not be a number");return s(c,h,u)},b.alloc=function(c,h,u){if(typeof c!="number")throw new TypeError("Argument must be a number");var o=s(c);return h!==void 0?typeof u=="string"?o.fill(h,u):o.fill(h):o.fill(0),o},b.allocUnsafe=function(c){if(typeof c!="number")throw new TypeError("Argument must be a number");return s(c)},b.allocUnsafeSlow=function(c){if(typeof c!="number")throw new TypeError("Argument must be a number");return l.SlowBuffer(c)}},{buffer:48}],148:[function(r,d,a){var l=r("safe-buffer").Buffer,s=l.isEncoding||function(k){switch(k=""+k,k&&k.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function g(k){if(!k)return"utf8";for(var N;;)switch(k){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return k;default:if(N)return;k=(""+k).toLowerCase(),N=!0}}function b(k){var N=g(k);if(typeof N!="string"&&(l.isEncoding===s||!s(k)))throw new Error("Unknown encoding: "+k);return N||k}a.StringDecoder=c;function c(k){this.encoding=b(k);var N;switch(this.encoding){case"utf16le":this.text=f,this.end=v,N=4;break;case"utf8":this.fillLast=n,N=4;break;case"base64":this.text=p,this.end=w,N=3;break;default:this.write=A,this.end=x;return}this.lastNeed=0,this.lastTotal=0,this.lastChar=l.allocUnsafe(N)}c.prototype.write=function(k){if(k.length===0)return"";var N,E;if(this.lastNeed){if(N=this.fillLast(k),N===void 0)return"";E=this.lastNeed,this.lastNeed=0}else E=0;return E<k.length?N?N+this.text(k,E):this.text(k,E):N||""},c.prototype.end=y,c.prototype.text=m,c.prototype.fillLast=function(k){if(this.lastNeed<=k.length)return k.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);k.copy(this.lastChar,this.lastTotal-this.lastNeed,0,k.length),this.lastNeed-=k.length};function h(k){return k<=127?0:k>>5===6?2:k>>4===14?3:k>>3===30?4:k>>6===2?-1:-2}function u(k,N,E){var S=N.length-1;if(S<E)return 0;var R=h(N[S]);return R>=0?(R>0&&(k.lastNeed=R-1),R):--S<E||R===-2?0:(R=h(N[S]),R>=0?(R>0&&(k.lastNeed=R-2),R):--S<E||R===-2?0:(R=h(N[S]),R>=0?(R>0&&(R===2?R=0:k.lastNeed=R-3),R):0))}function o(k,N,E){if((N[0]&192)!==128)return k.lastNeed=0,"\uFFFD";if(k.lastNeed>1&&N.length>1){if((N[1]&192)!==128)return k.lastNeed=1,"\uFFFD";if(k.lastNeed>2&&N.length>2&&(N[2]&192)!==128)return k.lastNeed=2,"\uFFFD"}}function n(k){var N=this.lastTotal-this.lastNeed,E=o(this,k);if(E!==void 0)return E;if(this.lastNeed<=k.length)return k.copy(this.lastChar,N,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);k.copy(this.lastChar,N,0,k.length),this.lastNeed-=k.length}function m(k,N){var E=u(this,k,N);if(!this.lastNeed)return k.toString("utf8",N);this.lastTotal=E;var S=k.length-(E-this.lastNeed);return k.copy(this.lastChar,0,S),k.toString("utf8",N,S)}function y(k){var N=k&&k.length?this.write(k):"";return this.lastNeed?N+"\uFFFD":N}function f(k,N){if((k.length-N)%2===0){var E=k.toString("utf16le",N);if(E){var S=E.charCodeAt(E.length-1);if(S>=55296&&S<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=k[k.length-2],this.lastChar[1]=k[k.length-1],E.slice(0,-1)}return E}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=k[k.length-1],k.toString("utf16le",N,k.length-1)}function v(k){var N=k&&k.length?this.write(k):"";if(this.lastNeed){var E=this.lastTotal-this.lastNeed;return N+this.lastChar.toString("utf16le",0,E)}return N}function p(k,N){var E=(k.length-N)%3;return E===0?k.toString("base64",N):(this.lastNeed=3-E,this.lastTotal=3,E===1?this.lastChar[0]=k[k.length-1]:(this.lastChar[0]=k[k.length-2],this.lastChar[1]=k[k.length-1]),k.toString("base64",N,k.length-E))}function w(k){var N=k&&k.length?this.write(k):"";return this.lastNeed?N+this.lastChar.toString("base64",0,3-this.lastNeed):N}function A(k){return k.toString(this.encoding)}function x(k){return k&&k.length?this.write(k):""}},{"safe-buffer":147}],149:[function(r,d,a){d.exports=r("./readable").PassThrough},{"./readable":150}],150:[function(r,d,a){a=d.exports=r("./lib/_stream_readable.js"),a.Stream=a,a.Readable=a,a.Writable=r("./lib/_stream_writable.js"),a.Duplex=r("./lib/_stream_duplex.js"),a.Transform=r("./lib/_stream_transform.js"),a.PassThrough=r("./lib/_stream_passthrough.js")},{"./lib/_stream_duplex.js":139,"./lib/_stream_passthrough.js":140,"./lib/_stream_readable.js":141,"./lib/_stream_transform.js":142,"./lib/_stream_writable.js":143}],151:[function(r,d,a){d.exports=r("./readable").Transform},{"./readable":150}],152:[function(r,d,a){d.exports=r("./lib/_stream_writable.js")},{"./lib/_stream_writable.js":143}],153:[function(r,d,a){var l=function(s){var g=Object.prototype,b=g.hasOwnProperty,c,h=typeof Symbol=="function"?Symbol:{},u=h.iterator||"@@iterator",o=h.asyncIterator||"@@asyncIterator",n=h.toStringTag||"@@toStringTag";function m(oe,ae,W,ee){var _=ae&&ae.prototype instanceof x?ae:x,re=Object.create(_.prototype),fe=new G(ee||[]);return re._invoke=V(oe,W,fe),re}s.wrap=m;function y(oe,ae,W){try{return{type:"normal",arg:oe.call(ae,W)}}catch(ee){return{type:"throw",arg:ee}}}var f="suspendedStart",v="suspendedYield",p="executing",w="completed",A={};function x(){}function k(){}function N(){}var E={};E[u]=function(){return this};var S=Object.getPrototypeOf,R=S&&S(S(U([])));R&&R!==g&&b.call(R,u)&&(E=R);var M=N.prototype=x.prototype=Object.create(E);k.prototype=M.constructor=N,N.constructor=k,N[n]=k.displayName="GeneratorFunction";function j(oe){["next","throw","return"].forEach(function(ae){oe[ae]=function(W){return this._invoke(ae,W)}})}s.isGeneratorFunction=function(oe){var ae=typeof oe=="function"&&oe.constructor;return ae?ae===k||(ae.displayName||ae.name)==="GeneratorFunction":!1},s.mark=function(oe){return Object.setPrototypeOf?Object.setPrototypeOf(oe,N):(oe.__proto__=N,n in oe||(oe[n]="GeneratorFunction")),oe.prototype=Object.create(M),oe},s.awrap=function(oe){return{__await:oe}};function O(oe){function ae(_,re,fe,pe){var he=y(oe[_],oe,re);if(he.type==="throw")pe(he.arg);else{var se=he.arg,ce=se.value;return ce&&typeof ce=="object"&&b.call(ce,"__await")?Promise.resolve(ce.__await).then(function(q){ae("next",q,fe,pe)},function(q){ae("throw",q,fe,pe)}):Promise.resolve(ce).then(function(q){se.value=q,fe(se)},function(q){return ae("throw",q,fe,pe)})}}var W;function ee(_,re){function fe(){return new Promise(function(pe,he){ae(_,re,pe,he)})}return W=W?W.then(fe,fe):fe()}this._invoke=ee}j(O.prototype),O.prototype[o]=function(){return this},s.AsyncIterator=O,s.async=function(oe,ae,W,ee){var _=new O(m(oe,ae,W,ee));return s.isGeneratorFunction(ae)?_:_.next().then(function(re){return re.done?re.value:_.next()})};function V(oe,ae,W){var ee=f;return function(re,fe){if(ee===p)throw new Error("Generator is already running");if(ee===w){if(re==="throw")throw fe;return ie()}for(W.method=re,W.arg=fe;;){var pe=W.delegate;if(pe){var he=J(pe,W);if(he){if(he===A)continue;return he}}if(W.method==="next")W.sent=W._sent=W.arg;else if(W.method==="throw"){if(ee===f)throw ee=w,W.arg;W.dispatchException(W.arg)}else W.method==="return"&&W.abrupt("return",W.arg);ee=p;var se=y(oe,ae,W);if(se.type==="normal"){if(ee=W.done?w:v,se.arg===A)continue;return{value:se.arg,done:W.done}}else se.type==="throw"&&(ee=w,W.method="throw",W.arg=se.arg)}}}function J(oe,ae){var W=oe.iterator[ae.method];if(W===c){if(ae.delegate=null,ae.method==="throw"){if(oe.iterator.return&&(ae.method="return",ae.arg=c,J(oe,ae),ae.method==="throw"))return A;ae.method="throw",ae.arg=new TypeError("The iterator does not provide a 'throw' method")}return A}var ee=y(W,oe.iterator,ae.arg);if(ee.type==="throw")return ae.method="throw",ae.arg=ee.arg,ae.delegate=null,A;var _=ee.arg;if(!_)return ae.method="throw",ae.arg=new TypeError("iterator result is not an object"),ae.delegate=null,A;if(_.done)ae[oe.resultName]=_.value,ae.next=oe.nextLoc,ae.method!=="return"&&(ae.method="next",ae.arg=c);else return _;return ae.delegate=null,A}j(M),M[n]="Generator",M[u]=function(){return this},M.toString=function(){return"[object Generator]"};function B(oe){var ae={tryLoc:oe[0]};1 in oe&&(ae.catchLoc=oe[1]),2 in oe&&(ae.finallyLoc=oe[2],ae.afterLoc=oe[3]),this.tryEntries.push(ae)}function z(oe){var ae=oe.completion||{};ae.type="normal",delete ae.arg,oe.completion=ae}function G(oe){this.tryEntries=[{tryLoc:"root"}],oe.forEach(B,this),this.reset(!0)}s.keys=function(oe){var ae=[];for(var W in oe)ae.push(W);return ae.reverse(),function ee(){for(;ae.length;){var _=ae.pop();if(_ in oe)return ee.value=_,ee.done=!1,ee}return ee.done=!0,ee}};function U(oe){if(oe){var ae=oe[u];if(ae)return ae.call(oe);if(typeof oe.next=="function")return oe;if(!isNaN(oe.length)){var W=-1,ee=function _(){for(;++W<oe.length;)if(b.call(oe,W))return _.value=oe[W],_.done=!1,_;return _.value=c,_.done=!0,_};return ee.next=ee}}return{next:ie}}s.values=U;function ie(){return{value:c,done:!0}}return G.prototype={constructor:G,reset:function(oe){if(this.prev=0,this.next=0,this.sent=this._sent=c,this.done=!1,this.delegate=null,this.method="next",this.arg=c,this.tryEntries.forEach(z),!oe)for(var ae in this)ae.charAt(0)==="t"&&b.call(this,ae)&&!isNaN(+ae.slice(1))&&(this[ae]=c)},stop:function(){this.done=!0;var oe=this.tryEntries[0],ae=oe.completion;if(ae.type==="throw")throw ae.arg;return this.rval},dispatchException:function(oe){if(this.done)throw oe;var ae=this;function W(he,se){return re.type="throw",re.arg=oe,ae.next=he,se&&(ae.method="next",ae.arg=c),!!se}for(var ee=this.tryEntries.length-1;ee>=0;--ee){var _=this.tryEntries[ee],re=_.completion;if(_.tryLoc==="root")return W("end");if(_.tryLoc<=this.prev){var fe=b.call(_,"catchLoc"),pe=b.call(_,"finallyLoc");if(fe&&pe){if(this.prev<_.catchLoc)return W(_.catchLoc,!0);if(this.prev<_.finallyLoc)return W(_.finallyLoc)}else if(fe){if(this.prev<_.catchLoc)return W(_.catchLoc,!0)}else if(pe){if(this.prev<_.finallyLoc)return W(_.finallyLoc)}else throw new Error("try statement without catch or finally")}}},abrupt:function(oe,ae){for(var W=this.tryEntries.length-1;W>=0;--W){var ee=this.tryEntries[W];if(ee.tryLoc<=this.prev&&b.call(ee,"finallyLoc")&&this.prev<ee.finallyLoc){var _=ee;break}}_&&(oe==="break"||oe==="continue")&&_.tryLoc<=ae&&ae<=_.finallyLoc&&(_=null);var re=_?_.completion:{};return re.type=oe,re.arg=ae,_?(this.method="next",this.next=_.finallyLoc,A):this.complete(re)},complete:function(oe,ae){if(oe.type==="throw")throw oe.arg;return oe.type==="break"||oe.type==="continue"?this.next=oe.arg:oe.type==="return"?(this.rval=this.arg=oe.arg,this.method="return",this.next="end"):oe.type==="normal"&&ae&&(this.next=ae),A},finish:function(oe){for(var ae=this.tryEntries.length-1;ae>=0;--ae){var W=this.tryEntries[ae];if(W.finallyLoc===oe)return this.complete(W.completion,W.afterLoc),z(W),A}},catch:function(oe){for(var ae=this.tryEntries.length-1;ae>=0;--ae){var W=this.tryEntries[ae];if(W.tryLoc===oe){var ee=W.completion;if(ee.type==="throw"){var _=ee.arg;z(W)}return _}}throw new Error("illegal catch attempt")},delegateYield:function(oe,ae,W){return this.delegate={iterator:U(oe),resultName:ae,nextLoc:W},this.method==="next"&&(this.arg=c),A}},s}(typeof d=="object"?d.exports:{});try{regeneratorRuntime=l}catch{Function("r","regeneratorRuntime = r")(l)}},{}],154:[function(r,d,a){var l=r("buffer"),s=l.Buffer;function g(c,h){for(var u in c)h[u]=c[u]}s.from&&s.alloc&&s.allocUnsafe&&s.allocUnsafeSlow?d.exports=l:(g(l,a),a.Buffer=b);function b(c,h,u){return s(c,h,u)}b.prototype=Object.create(s.prototype),g(s,b),b.from=function(c,h,u){if(typeof c=="number")throw new TypeError("Argument must not be a number");return s(c,h,u)},b.alloc=function(c,h,u){if(typeof c!="number")throw new TypeError("Argument must be a number");var o=s(c);return h!==void 0?typeof u=="string"?o.fill(h,u):o.fill(h):o.fill(0),o},b.allocUnsafe=function(c){if(typeof c!="number")throw new TypeError("Argument must be a number");return s(c)},b.allocUnsafeSlow=function(c){if(typeof c!="number")throw new TypeError("Argument must be a number");return l.SlowBuffer(c)}},{buffer:48}],155:[function(r,d,a){d.exports=g;var l=r("events").EventEmitter,s=r("inherits");s(g,l),g.Readable=r("readable-stream/readable.js"),g.Writable=r("readable-stream/writable.js"),g.Duplex=r("readable-stream/duplex.js"),g.Transform=r("readable-stream/transform.js"),g.PassThrough=r("readable-stream/passthrough.js"),g.Stream=g;function g(){l.call(this)}g.prototype.pipe=function(b,c){var h=this;function u(p){b.writable&&b.write(p)===!1&&h.pause&&h.pause()}h.on("data",u);function o(){h.readable&&h.resume&&h.resume()}b.on("drain",o),!b._isStdio&&(!c||c.end!==!1)&&(h.on("end",m),h.on("close",y));var n=!1;function m(){n||(n=!0,b.end())}function y(){n||(n=!0,typeof b.destroy=="function"&&b.destroy())}function f(p){if(v(),l.listenerCount(this,"error")===0)throw p}h.on("error",f),b.on("error",f);function v(){h.removeListener("data",u),b.removeListener("drain",o),h.removeListener("end",m),h.removeListener("close",y),h.removeListener("error",f),b.removeListener("error",f),h.removeListener("end",v),h.removeListener("close",v),b.removeListener("close",v)}return h.on("end",v),h.on("close",v),b.on("close",v),b.emit("pipe",h),b}},{events:52,inherits:75,"readable-stream/duplex.js":138,"readable-stream/passthrough.js":149,"readable-stream/readable.js":150,"readable-stream/transform.js":151,"readable-stream/writable.js":152}],156:[function(r,d,a){(function(l){var s=r("./lib/request"),g=r("./lib/response"),b=r("xtend"),c=r("builtin-status-codes"),h=r("url"),u=a;u.request=function(o,n){typeof o=="string"?o=h.parse(o):o=b(o);var m=l.location.protocol.search(/^https?:$/)===-1?"http:":"",y=o.protocol||m,f=o.hostname||o.host,v=o.port,p=o.path||"/";f&&f.indexOf(":")!==-1&&(f="["+f+"]"),o.url=(f?y+"//"+f:"")+(v?":"+v:"")+p,o.method=(o.method||"GET").toUpperCase(),o.headers=o.headers||{};var w=new s(o);return n&&w.on("response",n),w},u.get=function(n,m){var y=u.request(n,m);return y.end(),y},u.ClientRequest=s,u.IncomingMessage=g.IncomingMessage,u.Agent=function(){},u.Agent.defaultMaxSockets=4,u.globalAgent=new u.Agent,u.STATUS_CODES=c,u.METHODS=["CHECKOUT","CONNECT","COPY","DELETE","GET","HEAD","LOCK","M-SEARCH","MERGE","MKACTIVITY","MKCOL","MOVE","NOTIFY","OPTIONS","PATCH","POST","PROPFIND","PROPPATCH","PURGE","PUT","REPORT","SEARCH","SUBSCRIBE","TRACE","UNLOCK","UNSUBSCRIBE"]}).call(this,typeof ot!="undefined"?ot:typeof self!="undefined"?self:typeof i!="undefined"?i:{})},{"./lib/request":158,"./lib/response":159,"builtin-status-codes":50,url:180,xtend:189}],157:[function(r,d,a){(function(l){a.fetch=c(l.fetch)&&c(l.ReadableStream),a.writableStream=c(l.WritableStream),a.abortController=c(l.AbortController);var s;function g(){if(s!==void 0)return s;if(l.XMLHttpRequest){s=new l.XMLHttpRequest;try{s.open("GET",l.XDomainRequest?"/":"https://example.com")}catch{s=null}}else s=null;return s}function b(h){var u=g();if(!u)return!1;try{return u.responseType=h,u.responseType===h}catch{}return!1}a.arraybuffer=a.fetch||b("arraybuffer"),a.msstream=!a.fetch&&b("ms-stream"),a.mozchunkedarraybuffer=!a.fetch&&b("moz-chunked-arraybuffer"),a.overrideMimeType=a.fetch||(g()?c(g().overrideMimeType):!1);function c(h){return typeof h=="function"}s=null}).call(this,typeof ot!="undefined"?ot:typeof self!="undefined"?self:typeof i!="undefined"?i:{})},{}],158:[function(r,d,a){(function(l,s,g){var b=r("./capability"),c=r("inherits"),h=r("./response"),u=r("readable-stream"),o=h.IncomingMessage,n=h.readyStates;function m(p,w){return b.fetch&&w?"fetch":b.mozchunkedarraybuffer?"moz-chunked-arraybuffer":b.msstream?"ms-stream":b.arraybuffer&&p?"arraybuffer":"text"}var y=d.exports=function(p){var w=this;u.Writable.call(w),w._opts=p,w._body=[],w._headers={},p.auth&&w.setHeader("Authorization","Basic "+g.from(p.auth).toString("base64")),Object.keys(p.headers).forEach(function(k){w.setHeader(k,p.headers[k])});var A,x=!0;if(p.mode==="disable-fetch"||"requestTimeout"in p&&!b.abortController)x=!1,A=!0;else if(p.mode==="prefer-streaming")A=!1;else if(p.mode==="allow-wrong-content-type")A=!b.overrideMimeType;else if(!p.mode||p.mode==="default"||p.mode==="prefer-fast")A=!0;else throw new Error("Invalid value for opts.mode");w._mode=m(A,x),w._fetchTimer=null,w.on("finish",function(){w._onFinish()})};c(y,u.Writable),y.prototype.setHeader=function(p,w){var A=this,x=p.toLowerCase();v.indexOf(x)===-1&&(A._headers[x]={name:p,value:w})},y.prototype.getHeader=function(p){var w=this._headers[p.toLowerCase()];return w?w.value:null},y.prototype.removeHeader=function(p){var w=this;delete w._headers[p.toLowerCase()]},y.prototype._onFinish=function(){var p=this;if(!p._destroyed){var w=p._opts,A=p._headers,x=null;w.method!=="GET"&&w.method!=="HEAD"&&(x=new Blob(p._body,{type:(A["content-type"]||{}).value||""}));var k=[];if(Object.keys(A).forEach(function(R){var M=A[R].name,j=A[R].value;Array.isArray(j)?j.forEach(function(O){k.push([M,O])}):k.push([M,j])}),p._mode==="fetch"){var N=null;if(b.abortController){var E=new AbortController;N=E.signal,p._fetchAbortController=E,"requestTimeout"in w&&w.requestTimeout!==0&&(p._fetchTimer=s.setTimeout(function(){p.emit("requestTimeout"),p._fetchAbortController&&p._fetchAbortController.abort()},w.requestTimeout))}s.fetch(p._opts.url,{method:p._opts.method,headers:k,body:x||void 0,mode:"cors",credentials:w.withCredentials?"include":"same-origin",signal:N}).then(function(R){p._fetchResponse=R,p._connect()},function(R){s.clearTimeout(p._fetchTimer),p._destroyed||p.emit("error",R)})}else{var S=p._xhr=new s.XMLHttpRequest;try{S.open(p._opts.method,p._opts.url,!0)}catch(R){l.nextTick(function(){p.emit("error",R)});return}"responseType"in S&&(S.responseType=p._mode),"withCredentials"in S&&(S.withCredentials=!!w.withCredentials),p._mode==="text"&&"overrideMimeType"in S&&S.overrideMimeType("text/plain; charset=x-user-defined"),"requestTimeout"in w&&(S.timeout=w.requestTimeout,S.ontimeout=function(){p.emit("requestTimeout")}),k.forEach(function(R){S.setRequestHeader(R[0],R[1])}),p._response=null,S.onreadystatechange=function(){switch(S.readyState){case n.LOADING:case n.DONE:p._onXHRProgress();break}},p._mode==="moz-chunked-arraybuffer"&&(S.onprogress=function(){p._onXHRProgress()}),S.onerror=function(){p._destroyed||p.emit("error",new Error("XHR error"))};try{S.send(x)}catch(R){l.nextTick(function(){p.emit("error",R)});return}}}};function f(p){try{var w=p.status;return w!==null&&w!==0}catch{return!1}}y.prototype._onXHRProgress=function(){var p=this;!f(p._xhr)||p._destroyed||(p._response||p._connect(),p._response._onXHRProgress())},y.prototype._connect=function(){var p=this;p._destroyed||(p._response=new o(p._xhr,p._fetchResponse,p._mode,p._fetchTimer),p._response.on("error",function(w){p.emit("error",w)}),p.emit("response",p._response))},y.prototype._write=function(p,w,A){var x=this;x._body.push(p),A()},y.prototype.abort=y.prototype.destroy=function(){var p=this;p._destroyed=!0,s.clearTimeout(p._fetchTimer),p._response&&(p._response._destroyed=!0),p._xhr?p._xhr.abort():p._fetchAbortController&&p._fetchAbortController.abort()},y.prototype.end=function(p,w,A){var x=this;typeof p=="function"&&(A=p,p=void 0),u.Writable.prototype.end.call(x,p,w,A)},y.prototype.flushHeaders=function(){},y.prototype.setTimeout=function(){},y.prototype.setNoDelay=function(){},y.prototype.setSocketKeepAlive=function(){};var v=["accept-charset","accept-encoding","access-control-request-headers","access-control-request-method","connection","content-length","cookie","cookie2","date","dnt","expect","host","keep-alive","origin","referer","te","trailer","transfer-encoding","upgrade","via"]}).call(this,r("_process"),typeof ot!="undefined"?ot:typeof self!="undefined"?self:typeof i!="undefined"?i:{},r("buffer").Buffer)},{"./capability":157,"./response":159,_process:133,buffer:48,inherits:75,"readable-stream":174}],159:[function(r,d,a){(function(l,s,g){var b=r("./capability"),c=r("inherits"),h=r("readable-stream"),u=a.readyStates={UNSENT:0,OPENED:1,HEADERS_RECEIVED:2,LOADING:3,DONE:4},o=a.IncomingMessage=function(n,m,y,f){var v=this;if(h.Readable.call(v),v._mode=y,v.headers={},v.rawHeaders=[],v.trailers={},v.rawTrailers=[],v.on("end",function(){l.nextTick(function(){v.emit("close")})}),y==="fetch"){let E=function(){w.read().then(function(S){if(!v._destroyed){if(S.done){s.clearTimeout(f),v.push(null);return}v.push(g.from(S.value)),E()}}).catch(function(S){s.clearTimeout(f),v._destroyed||v.emit("error",S)})};var N=E;if(v._fetchResponse=m,v.url=m.url,v.statusCode=m.status,v.statusMessage=m.statusText,m.headers.forEach(function(S,R){v.headers[R.toLowerCase()]=S,v.rawHeaders.push(R,S)}),b.writableStream){var p=new WritableStream({write:function(S){return new Promise(function(R,M){v._destroyed?M():v.push(g.from(S))?R():v._resumeFetch=R})},close:function(){s.clearTimeout(f),v._destroyed||v.push(null)},abort:function(S){v._destroyed||v.emit("error",S)}});try{m.body.pipeTo(p).catch(function(S){s.clearTimeout(f),v._destroyed||v.emit("error",S)});return}catch{}}var w=m.body.getReader();E()}else{v._xhr=n,v._pos=0,v.url=n.responseURL,v.statusCode=n.status,v.statusMessage=n.statusText;var A=n.getAllResponseHeaders().split(/\r?\n/);if(A.forEach(function(E){var S=E.match(/^([^:]+):\s*(.*)/);if(S){var R=S[1].toLowerCase();R==="set-cookie"?(v.headers[R]===void 0&&(v.headers[R]=[]),v.headers[R].push(S[2])):v.headers[R]!==void 0?v.headers[R]+=", "+S[2]:v.headers[R]=S[2],v.rawHeaders.push(S[1],S[2])}}),v._charset="x-user-defined",!b.overrideMimeType){var x=v.rawHeaders["mime-type"];if(x){var k=x.match(/;\s*charset=([^;])(;|$)/);k&&(v._charset=k[1].toLowerCase())}v._charset||(v._charset="utf-8")}}};c(o,h.Readable),o.prototype._read=function(){var n=this,m=n._resumeFetch;m&&(n._resumeFetch=null,m())},o.prototype._onXHRProgress=function(){var n=this,m=n._xhr,y=null;switch(n._mode){case"text":if(y=m.responseText,y.length>n._pos){var f=y.substr(n._pos);if(n._charset==="x-user-defined"){for(var v=g.alloc(f.length),p=0;p<f.length;p++)v[p]=f.charCodeAt(p)&255;n.push(v)}else n.push(f,n._charset);n._pos=y.length}break;case"arraybuffer":if(m.readyState!==u.DONE||!m.response)break;y=m.response,n.push(g.from(new Uint8Array(y)));break;case"moz-chunked-arraybuffer":if(y=m.response,m.readyState!==u.LOADING||!y)break;n.push(g.from(new Uint8Array(y)));break;case"ms-stream":if(y=m.response,m.readyState!==u.LOADING)break;var w=new s.MSStreamReader;w.onprogress=function(){w.result.byteLength>n._pos&&(n.push(g.from(new Uint8Array(w.result.slice(n._pos)))),n._pos=w.result.byteLength)},w.onload=function(){n.push(null)},w.readAsArrayBuffer(y);break}n._xhr.readyState===u.DONE&&n._mode!=="ms-stream"&&n.push(null)}}).call(this,r("_process"),typeof ot!="undefined"?ot:typeof self!="undefined"?self:typeof i!="undefined"?i:{},r("buffer").Buffer)},{"./capability":157,_process:133,buffer:48,inherits:75,"readable-stream":174}],160:[function(r,d,a){function l(o,n){o.prototype=Object.create(n.prototype),o.prototype.constructor=o,o.__proto__=n}var s={};function g(o,n,m){m||(m=Error);function y(v,p,w){return typeof n=="string"?n:n(v,p,w)}var f=function(v){l(p,v);function p(w,A,x){return v.call(this,y(w,A,x))||this}return p}(m);f.prototype.name=m.name,f.prototype.code=o,s[o]=f}function b(o,n){if(Array.isArray(o)){var m=o.length;return o=o.map(function(y){return String(y)}),m>2?"one of ".concat(n," ").concat(o.slice(0,m-1).join(", "),", or ")+o[m-1]:m===2?"one of ".concat(n," ").concat(o[0]," or ").concat(o[1]):"of ".concat(n," ").concat(o[0])}else return"of ".concat(n," ").concat(String(o))}function c(o,n,m){return o.substr(!m||m<0?0:+m,n.length)===n}function h(o,n,m){return(m===void 0||m>o.length)&&(m=o.length),o.substring(m-n.length,m)===n}function u(o,n,m){return typeof m!="number"&&(m=0),m+n.length>o.length?!1:o.indexOf(n,m)!==-1}g("ERR_INVALID_OPT_VALUE",function(o,n){return'The value "'+n+'" is invalid for option "'+o+'"'},TypeError),g("ERR_INVALID_ARG_TYPE",function(o,n,m){var y;typeof n=="string"&&c(n,"not ")?(y="must not be",n=n.replace(/^not /,"")):y="must be";var f;if(h(o," argument"))f="The ".concat(o," ").concat(y," ").concat(b(n,"type"));else{var v=u(o,".")?"property":"argument";f='The "'.concat(o,'" ').concat(v," ").concat(y," ").concat(b(n,"type"))}return f+=". Received type ".concat(typeof m),f},TypeError),g("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF"),g("ERR_METHOD_NOT_IMPLEMENTED",function(o){return"The "+o+" method is not implemented"}),g("ERR_STREAM_PREMATURE_CLOSE","Premature close"),g("ERR_STREAM_DESTROYED",function(o){return"Cannot call "+o+" after a stream was destroyed"}),g("ERR_MULTIPLE_CALLBACK","Callback called multiple times"),g("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable"),g("ERR_STREAM_WRITE_AFTER_END","write after end"),g("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError),g("ERR_UNKNOWN_ENCODING",function(o){return"Unknown encoding: "+o},TypeError),g("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event"),d.exports.codes=s},{}],161:[function(r,d,a){(function(l){var s=new Set;function g(c){if(!s.has(c)){var h=c+" is an experimental feature. This feature could change at any time";s.add(c),l.emitWarning(h,"ExperimentalWarning")}}function b(){}d.exports.emitExperimentalWarning=l.emitWarning?g:b}).call(this,r("_process"))},{_process:133}],162:[function(r,d,a){(function(l){var s=Object.keys||function(y){var f=[];for(var v in y)f.push(v);return f};d.exports=o;var g=r("./_stream_readable"),b=r("./_stream_writable");r("inherits")(o,g);for(var c=s(b.prototype),h=0;h<c.length;h++){var u=c[h];o.prototype[u]||(o.prototype[u]=b.prototype[u])}function o(y){if(!(this instanceof o))return new o(y);g.call(this,y),b.call(this,y),this.allowHalfOpen=!0,y&&(y.readable===!1&&(this.readable=!1),y.writable===!1&&(this.writable=!1),y.allowHalfOpen===!1&&(this.allowHalfOpen=!1,this.once("end",n)))}Object.defineProperty(o.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(o.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(o.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}});function n(){this._writableState.ended||l.nextTick(m,this)}function m(y){y.end()}Object.defineProperty(o.prototype,"destroyed",{enumerable:!1,get:function(){return this._readableState===void 0||this._writableState===void 0?!1:this._readableState.destroyed&&this._writableState.destroyed},set:function(f){this._readableState===void 0||this._writableState===void 0||(this._readableState.destroyed=f,this._writableState.destroyed=f)}})}).call(this,r("_process"))},{"./_stream_readable":164,"./_stream_writable":166,_process:133,inherits:75}],163:[function(r,d,a){d.exports=s;var l=r("./_stream_transform");r("inherits")(s,l);function s(g){if(!(this instanceof s))return new s(g);l.call(this,g)}s.prototype._transform=function(g,b,c){c(null,g)}},{"./_stream_transform":165,inherits:75}],164:[function(r,d,a){(function(l,s){d.exports=B;var g;B.ReadableState=J,r("events").EventEmitter;var b=function(F,X){return F.listeners(X).length},c=r("./internal/streams/stream"),h=r("buffer").Buffer,u=s.Uint8Array||function(){};function o(T){return h.from(T)}function n(T){return h.isBuffer(T)||T instanceof u}var m=r("util"),y;m&&m.debuglog?y=m.debuglog("stream"):y=function(){};var f=r("./internal/streams/buffer_list"),v=r("./internal/streams/destroy"),p=r("./internal/streams/state"),w=p.getHighWaterMark,A=r("../errors").codes,x=A.ERR_INVALID_ARG_TYPE,k=A.ERR_STREAM_PUSH_AFTER_EOF,N=A.ERR_METHOD_NOT_IMPLEMENTED,E=A.ERR_STREAM_UNSHIFT_AFTER_END_EVENT,S=r("../experimentalWarning"),R=S.emitExperimentalWarning,M,j;r("inherits")(B,c);var O=["error","close","destroy","pause","resume"];function V(T,F,X){if(typeof T.prependListener=="function")return T.prependListener(F,X);!T._events||!T._events[F]?T.on(F,X):Array.isArray(T._events[F])?T._events[F].unshift(X):T._events[F]=[X,T._events[F]]}function J(T,F,X){g=g||r("./_stream_duplex"),T=T||{},typeof X!="boolean"&&(X=F instanceof g),this.objectMode=!!T.objectMode,X&&(this.objectMode=this.objectMode||!!T.readableObjectMode),this.highWaterMark=w(this,T,"readableHighWaterMark",X),this.buffer=new f,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=T.emitClose!==!1,this.destroyed=!1,this.defaultEncoding=T.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,T.encoding&&(M||(M=r("string_decoder/").StringDecoder),this.decoder=new M(T.encoding),this.encoding=T.encoding)}function B(T){if(g=g||r("./_stream_duplex"),!(this instanceof B))return new B(T);var F=this instanceof g;this._readableState=new J(T,this,F),this.readable=!0,T&&(typeof T.read=="function"&&(this._read=T.read),typeof T.destroy=="function"&&(this._destroy=T.destroy)),c.call(this)}Object.defineProperty(B.prototype,"destroyed",{enumerable:!1,get:function(){return this._readableState===void 0?!1:this._readableState.destroyed},set:function(F){!this._readableState||(this._readableState.destroyed=F)}}),B.prototype.destroy=v.destroy,B.prototype._undestroy=v.undestroy,B.prototype._destroy=function(T,F){F(T)},B.prototype.push=function(T,F){var X=this._readableState,H;return X.objectMode?H=!0:typeof T=="string"&&(F=F||X.defaultEncoding,F!==X.encoding&&(T=h.from(T,F),F=""),H=!0),z(this,T,F,!1,H)},B.prototype.unshift=function(T){return z(this,T,null,!0,!1)};function z(T,F,X,H,I){y("readableAddChunk",F);var C=T._readableState;if(F===null)C.reading=!1,W(T,C);else{var Q;if(I||(Q=U(C,F)),Q)T.emit("error",Q);else if(C.objectMode||F&&F.length>0)if(typeof F!="string"&&!C.objectMode&&Object.getPrototypeOf(F)!==h.prototype&&(F=o(F)),H)C.endEmitted?T.emit("error",new E):G(T,C,F,!0);else if(C.ended)T.emit("error",new k);else{if(C.destroyed)return!1;C.reading=!1,C.decoder&&!X?(F=C.decoder.write(F),C.objectMode||F.length!==0?G(T,C,F,!1):re(T,C)):G(T,C,F,!1)}else H||(C.reading=!1,re(T,C))}return!C.ended&&(C.length<C.highWaterMark||C.length===0)}function G(T,F,X,H){F.flowing&&F.length===0&&!F.sync?(F.awaitDrain=0,T.emit("data",X)):(F.length+=F.objectMode?1:X.length,H?F.buffer.unshift(X):F.buffer.push(X),F.needReadable&&ee(T)),re(T,F)}function U(T,F){var X;return!n(F)&&typeof F!="string"&&F!==void 0&&!T.objectMode&&(X=new x("chunk",["string","Buffer","Uint8Array"],F)),X}B.prototype.isPaused=function(){return this._readableState.flowing===!1},B.prototype.setEncoding=function(T){return M||(M=r("string_decoder/").StringDecoder),this._readableState.decoder=new M(T),this._readableState.encoding=this._readableState.decoder.encoding,this};var ie=8388608;function oe(T){return T>=ie?T=ie:(T--,T|=T>>>1,T|=T>>>2,T|=T>>>4,T|=T>>>8,T|=T>>>16,T++),T}function ae(T,F){return T<=0||F.length===0&&F.ended?0:F.objectMode?1:T!==T?F.flowing&&F.length?F.buffer.head.data.length:F.length:(T>F.highWaterMark&&(F.highWaterMark=oe(T)),T<=F.length?T:F.ended?F.length:(F.needReadable=!0,0))}B.prototype.read=function(T){y("read",T),T=parseInt(T,10);var F=this._readableState,X=T;if(T!==0&&(F.emittedReadable=!1),T===0&&F.needReadable&&((F.highWaterMark!==0?F.length>=F.highWaterMark:F.length>0)||F.ended))return y("read: emitReadable",F.length,F.ended),F.length===0&&F.ended?$(this):ee(this),null;if(T=ae(T,F),T===0&&F.ended)return F.length===0&&$(this),null;var H=F.needReadable;y("need readable",H),(F.length===0||F.length-T<F.highWaterMark)&&(H=!0,y("length less than watermark",H)),F.ended||F.reading?(H=!1,y("reading or ended",H)):H&&(y("do read"),F.reading=!0,F.sync=!0,F.length===0&&(F.needReadable=!0),this._read(F.highWaterMark),F.sync=!1,F.reading||(T=ae(X,F)));var I;return T>0?I=Y(T,F):I=null,I===null?(F.needReadable=!0,T=0):(F.length-=T,F.awaitDrain=0),F.length===0&&(F.ended||(F.needReadable=!0),X!==T&&F.ended&&$(this)),I!==null&&this.emit("data",I),I};function W(T,F){if(!F.ended){if(F.decoder){var X=F.decoder.end();X&&X.length&&(F.buffer.push(X),F.length+=F.objectMode?1:X.length)}F.ended=!0,F.sync?ee(T):(F.needReadable=!1,F.emittedReadable||(F.emittedReadable=!0,_(T)))}}function ee(T){var F=T._readableState;F.needReadable=!1,F.emittedReadable||(y("emitReadable",F.flowing),F.emittedReadable=!0,l.nextTick(_,T))}function _(T){var F=T._readableState;y("emitReadable_",F.destroyed,F.length,F.ended),!F.destroyed&&(F.length||F.ended)&&T.emit("readable"),F.needReadable=!F.flowing&&!F.ended&&F.length<=F.highWaterMark,K(T)}function re(T,F){F.readingMore||(F.readingMore=!0,l.nextTick(fe,T,F))}function fe(T,F){for(;!F.reading&&!F.ended&&(F.length<F.highWaterMark||F.flowing&&F.length===0);){var X=F.length;if(y("maybeReadMore read 0"),T.read(0),X===F.length)break}F.readingMore=!1}B.prototype._read=function(T){this.emit("error",new N("_read()"))},B.prototype.pipe=function(T,F){var X=this,H=this._readableState;switch(H.pipesCount){case 0:H.pipes=T;break;case 1:H.pipes=[H.pipes,T];break;default:H.pipes.push(T);break}H.pipesCount+=1,y("pipe count=%d opts=%j",H.pipesCount,F);var I=(!F||F.end!==!1)&&T!==l.stdout&&T!==l.stderr,C=I?le:Ee;H.endEmitted?l.nextTick(C):X.once("end",C),T.on("unpipe",Q);function Q(Ze,Me){y("onunpipe"),Ze===X&&Me&&Me.hasUnpiped===!1&&(Me.hasUnpiped=!0,Ne())}function le(){y("onend"),T.end()}var ge=pe(X);T.on("drain",ge);var ye=!1;function Ne(){y("cleanup"),T.removeListener("close",Oe),T.removeListener("finish",Fe),T.removeListener("drain",ge),T.removeListener("error",Ie),T.removeListener("unpipe",Q),X.removeListener("end",le),X.removeListener("end",Ee),X.removeListener("data",Se),ye=!0,H.awaitDrain&&(!T._writableState||T._writableState.needDrain)&&ge()}X.on("data",Se);function Se(Ze){y("ondata");var Me=T.write(Ze);y("dest.write",Me),Me===!1&&((H.pipesCount===1&&H.pipes===T||H.pipesCount>1&&L(H.pipes,T)!==-1)&&!ye&&(y("false write response, pause",H.awaitDrain),H.awaitDrain++),X.pause())}function Ie(Ze){y("onerror",Ze),Ee(),T.removeListener("error",Ie),b(T,"error")===0&&T.emit("error",Ze)}V(T,"error",Ie);function Oe(){T.removeListener("finish",Fe),Ee()}T.once("close",Oe);function Fe(){y("onfinish"),T.removeListener("close",Oe),Ee()}T.once("finish",Fe);function Ee(){y("unpipe"),X.unpipe(T)}return T.emit("pipe",X),H.flowing||(y("pipe resume"),X.resume()),T};function pe(T){return function(){var X=T._readableState;y("pipeOnDrain",X.awaitDrain),X.awaitDrain&&X.awaitDrain--,X.awaitDrain===0&&b(T,"data")&&(X.flowing=!0,K(T))}}B.prototype.unpipe=function(T){var F=this._readableState,X={hasUnpiped:!1};if(F.pipesCount===0)return this;if(F.pipesCount===1)return T&&T!==F.pipes?this:(T||(T=F.pipes),F.pipes=null,F.pipesCount=0,F.flowing=!1,T&&T.emit("unpipe",this,X),this);if(!T){var H=F.pipes,I=F.pipesCount;F.pipes=null,F.pipesCount=0,F.flowing=!1;for(var C=0;C<I;C++)H[C].emit("unpipe",this,{hasUnpiped:!1});return this}var Q=L(F.pipes,T);return Q===-1?this:(F.pipes.splice(Q,1),F.pipesCount-=1,F.pipesCount===1&&(F.pipes=F.pipes[0]),T.emit("unpipe",this,X),this)},B.prototype.on=function(T,F){var X=c.prototype.on.call(this,T,F),H=this._readableState;return T==="data"?(H.readableListening=this.listenerCount("readable")>0,H.flowing!==!1&&this.resume()):T==="readable"&&!H.endEmitted&&!H.readableListening&&(H.readableListening=H.needReadable=!0,H.flowing=!1,H.emittedReadable=!1,y("on readable",H.length,H.reading),H.length?ee(this):H.reading||l.nextTick(se,this)),X},B.prototype.addListener=B.prototype.on,B.prototype.removeListener=function(T,F){var X=c.prototype.removeListener.call(this,T,F);return T==="readable"&&l.nextTick(he,this),X},B.prototype.removeAllListeners=function(T){var F=c.prototype.removeAllListeners.apply(this,arguments);return(T==="readable"||T===void 0)&&l.nextTick(he,this),F};function he(T){var F=T._readableState;F.readableListening=T.listenerCount("readable")>0,F.resumeScheduled&&!F.paused?F.flowing=!0:T.listenerCount("data")>0&&T.resume()}function se(T){y("readable nexttick read 0"),T.read(0)}B.prototype.resume=function(){var T=this._readableState;return T.flowing||(y("resume"),T.flowing=!T.readableListening,ce(this,T)),T.paused=!1,this};function ce(T,F){F.resumeScheduled||(F.resumeScheduled=!0,l.nextTick(q,T,F))}function q(T,F){y("resume",F.reading),F.reading||T.read(0),F.resumeScheduled=!1,T.emit("resume"),K(T),F.flowing&&!F.reading&&T.read(0)}B.prototype.pause=function(){return y("call pause flowing=%j",this._readableState.flowing),this._readableState.flowing!==!1&&(y("pause"),this._readableState.flowing=!1,this.emit("pause")),this._readableState.paused=!0,this};function K(T){var F=T._readableState;for(y("flow",F.flowing);F.flowing&&T.read()!==null;);}B.prototype.wrap=function(T){var F=this,X=this._readableState,H=!1;T.on("end",function(){if(y("wrapped end"),X.decoder&&!X.ended){var Q=X.decoder.end();Q&&Q.length&&F.push(Q)}F.push(null)}),T.on("data",function(Q){if(y("wrapped data"),X.decoder&&(Q=X.decoder.write(Q)),!(X.objectMode&&Q==null)&&!(!X.objectMode&&(!Q||!Q.length))){var le=F.push(Q);le||(H=!0,T.pause())}});for(var I in T)this[I]===void 0&&typeof T[I]=="function"&&(this[I]=function(le){return function(){return T[le].apply(T,arguments)}}(I));for(var C=0;C<O.length;C++)T.on(O[C],this.emit.bind(this,O[C]));return this._read=function(Q){y("wrapped _read",Q),H&&(H=!1,T.resume())},this},typeof Symbol=="function"&&(B.prototype[Symbol.asyncIterator]=function(){return R("Readable[Symbol.asyncIterator]"),j===void 0&&(j=r("./internal/streams/async_iterator")),j(this)}),Object.defineProperty(B.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(B.prototype,"readableBuffer",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(B.prototype,"readableFlowing",{enumerable:!1,get:function(){return this._readableState.flowing},set:function(F){this._readableState&&(this._readableState.flowing=F)}}),B._fromList=Y,Object.defineProperty(B.prototype,"readableLength",{enumerable:!1,get:function(){return this._readableState.length}});function Y(T,F){if(F.length===0)return null;var X;return F.objectMode?X=F.buffer.shift():!T||T>=F.length?(F.decoder?X=F.buffer.join(""):F.buffer.length===1?X=F.buffer.first():X=F.buffer.concat(F.length),F.buffer.clear()):X=F.buffer.consume(T,F.decoder),X}function $(T){var F=T._readableState;y("endReadable",F.endEmitted),F.endEmitted||(F.ended=!0,l.nextTick(te,F,T))}function te(T,F){y("endReadableNT",T.endEmitted,T.length),!T.endEmitted&&T.length===0&&(T.endEmitted=!0,F.readable=!1,F.emit("end"))}function L(T,F){for(var X=0,H=T.length;X<H;X++)if(T[X]===F)return X;return-1}}).call(this,r("_process"),typeof ot!="undefined"?ot:typeof self!="undefined"?self:typeof i!="undefined"?i:{})},{"../errors":160,"../experimentalWarning":161,"./_stream_duplex":162,"./internal/streams/async_iterator":167,"./internal/streams/buffer_list":168,"./internal/streams/destroy":169,"./internal/streams/state":172,"./internal/streams/stream":173,_process:133,buffer:48,events:52,inherits:75,"string_decoder/":175,util:33}],165:[function(r,d,a){d.exports=o;var l=r("../errors").codes,s=l.ERR_METHOD_NOT_IMPLEMENTED,g=l.ERR_MULTIPLE_CALLBACK,b=l.ERR_TRANSFORM_ALREADY_TRANSFORMING,c=l.ERR_TRANSFORM_WITH_LENGTH_0,h=r("./_stream_duplex");r("inherits")(o,h);function u(y,f){var v=this._transformState;v.transforming=!1;var p=v.writecb;if(p===null)return this.emit("error",new g);v.writechunk=null,v.writecb=null,f!=null&&this.push(f),p(y);var w=this._readableState;w.reading=!1,(w.needReadable||w.length<w.highWaterMark)&&this._read(w.highWaterMark)}function o(y){if(!(this instanceof o))return new o(y);h.call(this,y),this._transformState={afterTransform:u.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,y&&(typeof y.transform=="function"&&(this._transform=y.transform),typeof y.flush=="function"&&(this._flush=y.flush)),this.on("prefinish",n)}function n(){var y=this;typeof this._flush=="function"&&!this._readableState.destroyed?this._flush(function(f,v){m(y,f,v)}):m(this,null,null)}o.prototype.push=function(y,f){return this._transformState.needTransform=!1,h.prototype.push.call(this,y,f)},o.prototype._transform=function(y,f,v){v(new s("_transform()"))},o.prototype._write=function(y,f,v){var p=this._transformState;if(p.writecb=v,p.writechunk=y,p.writeencoding=f,!p.transforming){var w=this._readableState;(p.needTransform||w.needReadable||w.length<w.highWaterMark)&&this._read(w.highWaterMark)}},o.prototype._read=function(y){var f=this._transformState;f.writechunk!==null&&!f.transforming?(f.transforming=!0,this._transform(f.writechunk,f.writeencoding,f.afterTransform)):f.needTransform=!0},o.prototype._destroy=function(y,f){h.prototype._destroy.call(this,y,function(v){f(v)})};function m(y,f,v){if(f)return y.emit("error",f);if(v!=null&&y.push(v),y._writableState.length)throw new c;if(y._transformState.transforming)throw new b;return y.push(null)}},{"../errors":160,"./_stream_duplex":162,inherits:75}],166:[function(r,d,a){(function(l,s){d.exports=V;function g(q){var K=this;this.next=null,this.entry=null,this.finish=function(){ce(K,q)}}var b;V.WritableState=j;var c={deprecate:r("util-deprecate")},h=r("./internal/streams/stream"),u=r("buffer").Buffer,o=s.Uint8Array||function(){};function n(q){return u.from(q)}function m(q){return u.isBuffer(q)||q instanceof o}var y=r("./internal/streams/destroy"),f=r("./internal/streams/state"),v=f.getHighWaterMark,p=r("../errors").codes,w=p.ERR_INVALID_ARG_TYPE,A=p.ERR_METHOD_NOT_IMPLEMENTED,x=p.ERR_MULTIPLE_CALLBACK,k=p.ERR_STREAM_CANNOT_PIPE,N=p.ERR_STREAM_DESTROYED,E=p.ERR_STREAM_NULL_VALUES,S=p.ERR_STREAM_WRITE_AFTER_END,R=p.ERR_UNKNOWN_ENCODING;r("inherits")(V,h);function M(){}function j(q,K,Y){b=b||r("./_stream_duplex"),q=q||{},typeof Y!="boolean"&&(Y=K instanceof b),this.objectMode=!!q.objectMode,Y&&(this.objectMode=this.objectMode||!!q.writableObjectMode),this.highWaterMark=v(this,q,"writableHighWaterMark",Y),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var $=q.decodeStrings===!1;this.decodeStrings=!$,this.defaultEncoding=q.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(te){ae(K,te)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=q.emitClose!==!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new g(this)}j.prototype.getBuffer=function(){for(var K=this.bufferedRequest,Y=[];K;)Y.push(K),K=K.next;return Y},function(){try{Object.defineProperty(j.prototype,"buffer",{get:c.deprecate(function(){return this.getBuffer()},"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch{}}();var O;typeof Symbol=="function"&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]=="function"?(O=Function.prototype[Symbol.hasInstance],Object.defineProperty(V,Symbol.hasInstance,{value:function(K){return O.call(this,K)?!0:this!==V?!1:K&&K._writableState instanceof j}})):O=function(K){return K instanceof this};function V(q){b=b||r("./_stream_duplex");var K=this instanceof b;if(!K&&!O.call(V,this))return new V(q);this._writableState=new j(q,this,K),this.writable=!0,q&&(typeof q.write=="function"&&(this._write=q.write),typeof q.writev=="function"&&(this._writev=q.writev),typeof q.destroy=="function"&&(this._destroy=q.destroy),typeof q.final=="function"&&(this._final=q.final)),h.call(this)}V.prototype.pipe=function(){this.emit("error",new k)};function J(q,K){var Y=new S;q.emit("error",Y),l.nextTick(K,Y)}function B(q,K,Y,$){var te;return Y===null?te=new E:typeof Y!="string"&&!K.objectMode&&(te=new w("chunk",["string","Buffer"],Y)),te?(q.emit("error",te),l.nextTick($,te),!1):!0}V.prototype.write=function(q,K,Y){var $=this._writableState,te=!1,L=!$.objectMode&&m(q);return L&&!u.isBuffer(q)&&(q=n(q)),typeof K=="function"&&(Y=K,K=null),L?K="buffer":K||(K=$.defaultEncoding),typeof Y!="function"&&(Y=M),$.ending?J(this,Y):(L||B(this,$,q,Y))&&($.pendingcb++,te=G(this,$,L,q,K,Y)),te},V.prototype.cork=function(){this._writableState.corked++},V.prototype.uncork=function(){var q=this._writableState;q.corked&&(q.corked--,!q.writing&&!q.corked&&!q.bufferProcessing&&q.bufferedRequest&&_(this,q))},V.prototype.setDefaultEncoding=function(K){if(typeof K=="string"&&(K=K.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((K+"").toLowerCase())>-1))throw new R(K);return this._writableState.defaultEncoding=K,this},Object.defineProperty(V.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}});function z(q,K,Y){return!q.objectMode&&q.decodeStrings!==!1&&typeof K=="string"&&(K=u.from(K,Y)),K}Object.defineProperty(V.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}});function G(q,K,Y,$,te,L){if(!Y){var T=z(K,$,te);$!==T&&(Y=!0,te="buffer",$=T)}var F=K.objectMode?1:$.length;K.length+=F;var X=K.length<K.highWaterMark;if(X||(K.needDrain=!0),K.writing||K.corked){var H=K.lastBufferedRequest;K.lastBufferedRequest={chunk:$,encoding:te,isBuf:Y,callback:L,next:null},H?H.next=K.lastBufferedRequest:K.bufferedRequest=K.lastBufferedRequest,K.bufferedRequestCount+=1}else U(q,K,!1,F,$,te,L);return X}function U(q,K,Y,$,te,L,T){K.writelen=$,K.writecb=T,K.writing=!0,K.sync=!0,K.destroyed?K.onwrite(new N("write")):Y?q._writev(te,K.onwrite):q._write(te,L,K.onwrite),K.sync=!1}function ie(q,K,Y,$,te){--K.pendingcb,Y?(l.nextTick(te,$),l.nextTick(he,q,K),q._writableState.errorEmitted=!0,q.emit("error",$)):(te($),q._writableState.errorEmitted=!0,q.emit("error",$),he(q,K))}function oe(q){q.writing=!1,q.writecb=null,q.length-=q.writelen,q.writelen=0}function ae(q,K){var Y=q._writableState,$=Y.sync,te=Y.writecb;if(typeof te!="function")throw new x;if(oe(Y),K)ie(q,Y,$,K,te);else{var L=re(Y)||q.destroyed;!L&&!Y.corked&&!Y.bufferProcessing&&Y.bufferedRequest&&_(q,Y),$?l.nextTick(W,q,Y,L,te):W(q,Y,L,te)}}function W(q,K,Y,$){Y||ee(q,K),K.pendingcb--,$(),he(q,K)}function ee(q,K){K.length===0&&K.needDrain&&(K.needDrain=!1,q.emit("drain"))}function _(q,K){K.bufferProcessing=!0;var Y=K.bufferedRequest;if(q._writev&&Y&&Y.next){var $=K.bufferedRequestCount,te=new Array($),L=K.corkedRequestsFree;L.entry=Y;for(var T=0,F=!0;Y;)te[T]=Y,Y.isBuf||(F=!1),Y=Y.next,T+=1;te.allBuffers=F,U(q,K,!0,K.length,te,"",L.finish),K.pendingcb++,K.lastBufferedRequest=null,L.next?(K.corkedRequestsFree=L.next,L.next=null):K.corkedRequestsFree=new g(K),K.bufferedRequestCount=0}else{for(;Y;){var X=Y.chunk,H=Y.encoding,I=Y.callback,C=K.objectMode?1:X.length;if(U(q,K,!1,C,X,H,I),Y=Y.next,K.bufferedRequestCount--,K.writing)break}Y===null&&(K.lastBufferedRequest=null)}K.bufferedRequest=Y,K.bufferProcessing=!1}V.prototype._write=function(q,K,Y){Y(new A("_write()"))},V.prototype._writev=null,V.prototype.end=function(q,K,Y){var $=this._writableState;return typeof q=="function"?(Y=q,q=null,K=null):typeof K=="function"&&(Y=K,K=null),q!=null&&this.write(q,K),$.corked&&($.corked=1,this.uncork()),$.ending||se(this,$,Y),this},Object.defineProperty(V.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}});function re(q){return q.ending&&q.length===0&&q.bufferedRequest===null&&!q.finished&&!q.writing}function fe(q,K){q._final(function(Y){K.pendingcb--,Y&&q.emit("error",Y),K.prefinished=!0,q.emit("prefinish"),he(q,K)})}function pe(q,K){!K.prefinished&&!K.finalCalled&&(typeof q._final=="function"&&!K.destroyed?(K.pendingcb++,K.finalCalled=!0,l.nextTick(fe,q,K)):(K.prefinished=!0,q.emit("prefinish")))}function he(q,K){var Y=re(K);return Y&&(pe(q,K),K.pendingcb===0&&(K.finished=!0,q.emit("finish"))),Y}function se(q,K,Y){K.ending=!0,he(q,K),Y&&(K.finished?l.nextTick(Y):q.once("finish",Y)),K.ended=!0,q.writable=!1}function ce(q,K,Y){var $=q.entry;for(q.entry=null;$;){var te=$.callback;K.pendingcb--,te(Y),$=$.next}K.corkedRequestsFree.next=q}Object.defineProperty(V.prototype,"destroyed",{enumerable:!1,get:function(){return this._writableState===void 0?!1:this._writableState.destroyed},set:function(K){!this._writableState||(this._writableState.destroyed=K)}}),V.prototype.destroy=y.destroy,V.prototype._undestroy=y.undestroy,V.prototype._destroy=function(q,K){K(q)}}).call(this,r("_process"),typeof ot!="undefined"?ot:typeof self!="undefined"?self:typeof i!="undefined"?i:{})},{"../errors":160,"./_stream_duplex":162,"./internal/streams/destroy":169,"./internal/streams/state":172,"./internal/streams/stream":173,_process:133,buffer:48,inherits:75,"util-deprecate":183}],167:[function(r,d,a){(function(l){var s;function g(N,E,S){return E in N?Object.defineProperty(N,E,{value:S,enumerable:!0,configurable:!0,writable:!0}):N[E]=S,N}var b=r("./end-of-stream"),c=Symbol("lastResolve"),h=Symbol("lastReject"),u=Symbol("error"),o=Symbol("ended"),n=Symbol("lastPromise"),m=Symbol("handlePromise"),y=Symbol("stream");function f(N,E){return{value:N,done:E}}function v(N){var E=N[c];if(E!==null){var S=N[y].read();S!==null&&(N[n]=null,N[c]=null,N[h]=null,E(f(S,!1)))}}function p(N){l.nextTick(v,N)}function w(N,E){return function(S,R){N.then(function(){if(E[o]){S(f(void 0,!0));return}E[m](S,R)},R)}}var A=Object.getPrototypeOf(function(){}),x=Object.setPrototypeOf((s={get stream(){return this[y]},next:function(){var E=this,S=this[u];if(S!==null)return Promise.reject(S);if(this[o])return Promise.resolve(f(void 0,!0));if(this[y].destroyed)return new Promise(function(O,V){l.nextTick(function(){E[u]?V(E[u]):O(f(void 0,!0))})});var R=this[n],M;if(R)M=new Promise(w(R,this));else{var j=this[y].read();if(j!==null)return Promise.resolve(f(j,!1));M=new Promise(this[m])}return this[n]=M,M}},g(s,Symbol.asyncIterator,function(){return this}),g(s,"return",function(){var E=this;return new Promise(function(S,R){E[y].destroy(null,function(M){if(M){R(M);return}S(f(void 0,!0))})})}),s),A),k=function(E){var S,R=Object.create(x,(S={},g(S,y,{value:E,writable:!0}),g(S,c,{value:null,writable:!0}),g(S,h,{value:null,writable:!0}),g(S,u,{value:null,writable:!0}),g(S,o,{value:E._readableState.endEmitted,writable:!0}),g(S,m,{value:function(j,O){var V=R[y].read();V?(R[n]=null,R[c]=null,R[h]=null,j(f(V,!1))):(R[c]=j,R[h]=O)},writable:!0}),S));return R[n]=null,b(E,function(M){if(M&&M.code!=="ERR_STREAM_PREMATURE_CLOSE"){var j=R[h];j!==null&&(R[n]=null,R[c]=null,R[h]=null,j(M)),R[u]=M;return}var O=R[c];O!==null&&(R[n]=null,R[c]=null,R[h]=null,O(f(void 0,!0))),R[o]=!0}),E.on("readable",p.bind(null,R)),R};d.exports=k}).call(this,r("_process"))},{"./end-of-stream":170,_process:133}],168:[function(r,d,a){function l(n){for(var m=1;m<arguments.length;m++){var y=arguments[m]!=null?arguments[m]:{},f=Object.keys(y);typeof Object.getOwnPropertySymbols=="function"&&(f=f.concat(Object.getOwnPropertySymbols(y).filter(function(v){return Object.getOwnPropertyDescriptor(y,v).enumerable}))),f.forEach(function(v){s(n,v,y[v])})}return n}function s(n,m,y){return m in n?Object.defineProperty(n,m,{value:y,enumerable:!0,configurable:!0,writable:!0}):n[m]=y,n}var g=r("buffer"),b=g.Buffer,c=r("util"),h=c.inspect,u=h&&h.custom||"inspect";function o(n,m,y){b.prototype.copy.call(n,m,y)}d.exports=function(){function n(){this.head=null,this.tail=null,this.length=0}var m=n.prototype;return m.push=function(f){var v={data:f,next:null};this.length>0?this.tail.next=v:this.head=v,this.tail=v,++this.length},m.unshift=function(f){var v={data:f,next:this.head};this.length===0&&(this.tail=v),this.head=v,++this.length},m.shift=function(){if(this.length!==0){var f=this.head.data;return this.length===1?this.head=this.tail=null:this.head=this.head.next,--this.length,f}},m.clear=function(){this.head=this.tail=null,this.length=0},m.join=function(f){if(this.length===0)return"";for(var v=this.head,p=""+v.data;v=v.next;)p+=f+v.data;return p},m.concat=function(f){if(this.length===0)return b.alloc(0);for(var v=b.allocUnsafe(f>>>0),p=this.head,w=0;p;)o(p.data,v,w),w+=p.data.length,p=p.next;return v},m.consume=function(f,v){var p;return f<this.head.data.length?(p=this.head.data.slice(0,f),this.head.data=this.head.data.slice(f)):f===this.head.data.length?p=this.shift():p=v?this._getString(f):this._getBuffer(f),p},m.first=function(){return this.head.data},m._getString=function(f){var v=this.head,p=1,w=v.data;for(f-=w.length;v=v.next;){var A=v.data,x=f>A.length?A.length:f;if(x===A.length?w+=A:w+=A.slice(0,f),f-=x,f===0){x===A.length?(++p,v.next?this.head=v.next:this.head=this.tail=null):(this.head=v,v.data=A.slice(x));break}++p}return this.length-=p,w},m._getBuffer=function(f){var v=b.allocUnsafe(f),p=this.head,w=1;for(p.data.copy(v),f-=p.data.length;p=p.next;){var A=p.data,x=f>A.length?A.length:f;if(A.copy(v,v.length-f,0,x),f-=x,f===0){x===A.length?(++w,p.next?this.head=p.next:this.head=this.tail=null):(this.head=p,p.data=A.slice(x));break}++w}return this.length-=w,v},m[u]=function(y,f){return h(this,l({},f,{depth:0,customInspect:!1}))},n}()},{buffer:48,util:33}],169:[function(r,d,a){(function(l){function s(u,o){var n=this,m=this._readableState&&this._readableState.destroyed,y=this._writableState&&this._writableState.destroyed;return m||y?(o?o(u):u&&(!this._writableState||!this._writableState.errorEmitted)&&l.nextTick(h,this,u),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(u||null,function(f){!o&&f?(l.nextTick(g,n,f),n._writableState&&(n._writableState.errorEmitted=!0)):o?(l.nextTick(b,n),o(f)):l.nextTick(b,n)}),this)}function g(u,o){h(u,o),b(u)}function b(u){u._writableState&&!u._writableState.emitClose||u._readableState&&!u._readableState.emitClose||u.emit("close")}function c(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)}function h(u,o){u.emit("error",o)}d.exports={destroy:s,undestroy:c}}).call(this,r("_process"))},{_process:133}],170:[function(r,d,a){var l=r("../../../errors").codes.ERR_STREAM_PREMATURE_CLOSE;function s(h){var u=!1;return function(){if(!u){u=!0;for(var o=arguments.length,n=new Array(o),m=0;m<o;m++)n[m]=arguments[m];h.apply(this,n)}}}function g(){}function b(h){return h.setHeader&&typeof h.abort=="function"}function c(h,u,o){if(typeof u=="function")return c(h,null,u);u||(u={}),o=s(o||g);var n=u.readable||u.readable!==!1&&h.readable,m=u.writable||u.writable!==!1&&h.writable,y=function(){h.writable||v()},f=h._writableState&&h._writableState.finished,v=function(){m=!1,f=!0,n||o.call(h)},p=h._readableState&&h._readableState.endEmitted,w=function(){n=!1,p=!0,m||o.call(h)},A=function(E){o.call(h,E)},x=function(){var E;if(n&&!p)return(!h._readableState||!h._readableState.ended)&&(E=new l),o.call(h,E);if(m&&!f)return(!h._writableState||!h._writableState.ended)&&(E=new l),o.call(h,E)},k=function(){h.req.on("finish",v)};return b(h)?(h.on("complete",v),h.on("abort",x),h.req?k():h.on("request",k)):m&&!h._writableState&&(h.on("end",y),h.on("close",y)),h.on("end",w),h.on("finish",v),u.error!==!1&&h.on("error",A),h.on("close",x),function(){h.removeListener("complete",v),h.removeListener("abort",x),h.removeListener("request",k),h.req&&h.req.removeListener("finish",v),h.removeListener("end",y),h.removeListener("close",y),h.removeListener("finish",v),h.removeListener("end",w),h.removeListener("error",A),h.removeListener("close",x)}}d.exports=c},{"../../../errors":160}],171:[function(r,d,a){var l;function s(v){var p=!1;return function(){p||(p=!0,v.apply(void 0,arguments))}}var g=r("../../../errors").codes,b=g.ERR_MISSING_ARGS,c=g.ERR_STREAM_DESTROYED;function h(v){if(v)throw v}function u(v){return v.setHeader&&typeof v.abort=="function"}function o(v,p,w,A){A=s(A);var x=!1;v.on("close",function(){x=!0}),l===void 0&&(l=r("./end-of-stream")),l(v,{readable:p,writable:w},function(N){if(N)return A(N);x=!0,A()});var k=!1;return function(N){if(!x&&!k){if(k=!0,u(v))return v.abort();if(typeof v.destroy=="function")return v.destroy();A(N||new c("pipe"))}}}function n(v){v()}function m(v,p){return v.pipe(p)}function y(v){return!v.length||typeof v[v.length-1]!="function"?h:v.pop()}function f(){for(var v=arguments.length,p=new Array(v),w=0;w<v;w++)p[w]=arguments[w];var A=y(p);if(Array.isArray(p[0])&&(p=p[0]),p.length<2)throw new b("streams");var x,k=p.map(function(N,E){var S=E<p.length-1,R=E>0;return o(N,S,R,function(M){x||(x=M),M&&k.forEach(n),!S&&(k.forEach(n),A(x))})});return p.reduce(m)}d.exports=f},{"../../../errors":160,"./end-of-stream":170}],172:[function(r,d,a){var l=r("../../../errors").codes.ERR_INVALID_OPT_VALUE;function s(b,c,h){return b.highWaterMark!=null?b.highWaterMark:c?b[h]:null}function g(b,c,h,u){var o=s(c,u,h);if(o!=null){if(!(isFinite(o)&&Math.floor(o)===o)||o<0){var n=u?h:"highWaterMark";throw new l(n,o)}return Math.floor(o)}return b.objectMode?16:16*1024}d.exports={getHighWaterMark:g}},{"../../../errors":160}],173:[function(r,d,a){arguments[4][146][0].apply(a,arguments)},{dup:146,events:52}],174:[function(r,d,a){a=d.exports=r("./lib/_stream_readable.js"),a.Stream=a,a.Readable=a,a.Writable=r("./lib/_stream_writable.js"),a.Duplex=r("./lib/_stream_duplex.js"),a.Transform=r("./lib/_stream_transform.js"),a.PassThrough=r("./lib/_stream_passthrough.js"),a.finished=r("./lib/internal/streams/end-of-stream.js"),a.pipeline=r("./lib/internal/streams/pipeline.js")},{"./lib/_stream_duplex.js":162,"./lib/_stream_passthrough.js":163,"./lib/_stream_readable.js":164,"./lib/_stream_transform.js":165,"./lib/_stream_writable.js":166,"./lib/internal/streams/end-of-stream.js":170,"./lib/internal/streams/pipeline.js":171}],175:[function(r,d,a){arguments[4][148][0].apply(a,arguments)},{dup:148,"safe-buffer":154}],176:[function(r,d,a){(function(l,s){var g=r("process/browser.js").nextTick,b=Function.prototype.apply,c=Array.prototype.slice,h={},u=0;a.setTimeout=function(){return new o(b.call(setTimeout,i,arguments),clearTimeout)},a.setInterval=function(){return new o(b.call(setInterval,i,arguments),clearInterval)},a.clearTimeout=a.clearInterval=function(n){n.close()};function o(n,m){this._id=n,this._clearFn=m}o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(i,this._id)},a.enroll=function(n,m){clearTimeout(n._idleTimeoutId),n._idleTimeout=m},a.unenroll=function(n){clearTimeout(n._idleTimeoutId),n._idleTimeout=-1},a._unrefActive=a.active=function(n){clearTimeout(n._idleTimeoutId);var m=n._idleTimeout;m>=0&&(n._idleTimeoutId=setTimeout(function(){n._onTimeout&&n._onTimeout()},m))},a.setImmediate=typeof l=="function"?l:function(n){var m=u++,y=arguments.length<2?!1:c.call(arguments,1);return h[m]=!0,g(function(){h[m]&&(y?n.apply(null,y):n.call(null),a.clearImmediate(m))}),m},a.clearImmediate=typeof s=="function"?s:function(n){delete h[n]}}).call(this,r("timers").setImmediate,r("timers").clearImmediate)},{"process/browser.js":133,timers:176}],177:[function(r,d,a){(function(l){Object.defineProperty(a,"__esModule",{value:!0});var s=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(z){return typeof z}:function(z){return z&&typeof Symbol=="function"&&z.constructor===Symbol&&z!==Symbol.prototype?"symbol":typeof z};a.clone=u,a.addLast=m,a.addFirst=y,a.removeLast=f,a.removeFirst=v,a.insert=p,a.removeAt=w,a.replaceAt=A,a.getIn=x,a.set=k,a.setIn=E,a.update=S,a.updateIn=R,a.merge=M,a.mergeDeep=j,a.mergeIn=O,a.omit=V,a.addDefaults=J;/*!
 * Timm
 *
 * Immutability helpers with fast reads and acceptable writes.
 *
 * @copyright Guillermo Grau Panea 2016
 * @license MIT
 */var g="INVALID_ARGS";function b(z){throw new Error(z)}function c(z){var G=Object.keys(z);return Object.getOwnPropertySymbols?G.concat(Object.getOwnPropertySymbols(z)):G}var h={}.hasOwnProperty;function u(z){if(Array.isArray(z))return z.slice();for(var G=c(z),U={},ie=0;ie<G.length;ie++){var oe=G[ie];U[oe]=z[oe]}return U}function o(z,G,U){var ie=U;ie==null&&b(g);for(var oe=!1,ae=arguments.length,W=Array(ae>3?ae-3:0),ee=3;ee<ae;ee++)W[ee-3]=arguments[ee];for(var _=0;_<W.length;_++){var re=W[_];if(re!=null){var fe=c(re);if(!!fe.length)for(var pe=0;pe<=fe.length;pe++){var he=fe[pe];if(!(z&&ie[he]!==void 0)){var se=re[he];G&&n(ie[he])&&n(se)&&(se=o(z,G,ie[he],se)),!(se===void 0||se===ie[he])&&(oe||(oe=!0,ie=u(ie)),ie[he]=se)}}}}return ie}function n(z){var G=typeof z=="undefined"?"undefined":s(z);return z!=null&&G==="object"}function m(z,G){return Array.isArray(G)?z.concat(G):z.concat([G])}function y(z,G){return Array.isArray(G)?G.concat(z):[G].concat(z)}function f(z){return z.length?z.slice(0,z.length-1):z}function v(z){return z.length?z.slice(1):z}function p(z,G,U){return z.slice(0,G).concat(Array.isArray(U)?U:[U]).concat(z.slice(G))}function w(z,G){return G>=z.length||G<0?z:z.slice(0,G).concat(z.slice(G+1))}function A(z,G,U){if(z[G]===U)return z;for(var ie=z.length,oe=Array(ie),ae=0;ae<ie;ae++)oe[ae]=z[ae];return oe[G]=U,oe}function x(z,G){if(!Array.isArray(G)&&b(g),z!=null){for(var U=z,ie=0;ie<G.length;ie++){var oe=G[ie];if(U=U!=null?U[oe]:void 0,U===void 0)return U}return U}}function k(z,G,U){var ie=typeof G=="number"?[]:{},oe=z==null?ie:z;if(oe[G]===U)return oe;var ae=u(oe);return ae[G]=U,ae}function N(z,G,U,ie){var oe=void 0,ae=G[ie];if(ie===G.length-1)oe=U;else{var W=n(z)&&n(z[ae])?z[ae]:typeof G[ie+1]=="number"?[]:{};oe=N(W,G,U,ie+1)}return k(z,ae,oe)}function E(z,G,U){return G.length?N(z,G,U,0):U}function S(z,G,U){var ie=z==null?void 0:z[G],oe=U(ie);return k(z,G,oe)}function R(z,G,U){var ie=x(z,G),oe=U(ie);return E(z,G,oe)}function M(z,G,U,ie,oe,ae){for(var W=arguments.length,ee=Array(W>6?W-6:0),_=6;_<W;_++)ee[_-6]=arguments[_];return ee.length?o.call.apply(o,[null,!1,!1,z,G,U,ie,oe,ae].concat(ee)):o(!1,!1,z,G,U,ie,oe,ae)}function j(z,G,U,ie,oe,ae){for(var W=arguments.length,ee=Array(W>6?W-6:0),_=6;_<W;_++)ee[_-6]=arguments[_];return ee.length?o.call.apply(o,[null,!1,!0,z,G,U,ie,oe,ae].concat(ee)):o(!1,!0,z,G,U,ie,oe,ae)}function O(z,G,U,ie,oe,ae,W){var ee=x(z,G);ee==null&&(ee={});for(var _=void 0,re=arguments.length,fe=Array(re>7?re-7:0),pe=7;pe<re;pe++)fe[pe-7]=arguments[pe];return fe.length?_=o.call.apply(o,[null,!1,!1,ee,U,ie,oe,ae,W].concat(fe)):_=o(!1,!1,ee,U,ie,oe,ae,W),E(z,G,_)}function V(z,G){for(var U=Array.isArray(G)?G:[G],ie=!1,oe=0;oe<U.length;oe++)if(h.call(z,U[oe])){ie=!0;break}if(!ie)return z;for(var ae={},W=c(z),ee=0;ee<W.length;ee++){var _=W[ee];U.indexOf(_)>=0||(ae[_]=z[_])}return ae}function J(z,G,U,ie,oe,ae){for(var W=arguments.length,ee=Array(W>6?W-6:0),_=6;_<W;_++)ee[_-6]=arguments[_];return ee.length?o.call.apply(o,[null,!0,!1,z,G,U,ie,oe,ae].concat(ee)):o(!0,!1,z,G,U,ie,oe,ae)}var B={clone:u,addLast:m,addFirst:y,removeLast:f,removeFirst:v,insert:p,removeAt:w,replaceAt:A,getIn:x,set:k,setIn:E,update:S,updateIn:R,merge:M,mergeDeep:j,mergeIn:O,omit:V,addDefaults:J};a.default=B}).call(this,r("_process"))},{_process:133}],178:[function(r,d,a){(function(l){var s=/^\s+/,g=/\s+$/,b=0,c=l.round,h=l.min,u=l.max,o=l.random;function n(L,T){if(L=L||"",T=T||{},L instanceof n)return L;if(!(this instanceof n))return new n(L,T);var F=m(L);this._originalInput=L,this._r=F.r,this._g=F.g,this._b=F.b,this._a=F.a,this._roundA=c(100*this._a)/100,this._format=T.format||F.format,this._gradientType=T.gradientType,this._r<1&&(this._r=c(this._r)),this._g<1&&(this._g=c(this._g)),this._b<1&&(this._b=c(this._b)),this._ok=F.ok,this._tc_id=b++}n.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var L=this.toRgb();return(L.r*299+L.g*587+L.b*114)/1e3},getLuminance:function(){var L=this.toRgb(),T,F,X,H,I,C;return T=L.r/255,F=L.g/255,X=L.b/255,T<=.03928?H=T/12.92:H=l.pow((T+.055)/1.055,2.4),F<=.03928?I=F/12.92:I=l.pow((F+.055)/1.055,2.4),X<=.03928?C=X/12.92:C=l.pow((X+.055)/1.055,2.4),.2126*H+.7152*I+.0722*C},setAlpha:function(L){return this._a=W(L),this._roundA=c(100*this._a)/100,this},toHsv:function(){var L=p(this._r,this._g,this._b);return{h:L.h*360,s:L.s,v:L.v,a:this._a}},toHsvString:function(){var L=p(this._r,this._g,this._b),T=c(L.h*360),F=c(L.s*100),X=c(L.v*100);return this._a==1?"hsv("+T+", "+F+"%, "+X+"%)":"hsva("+T+", "+F+"%, "+X+"%, "+this._roundA+")"},toHsl:function(){var L=f(this._r,this._g,this._b);return{h:L.h*360,s:L.s,l:L.l,a:this._a}},toHslString:function(){var L=f(this._r,this._g,this._b),T=c(L.h*360),F=c(L.s*100),X=c(L.l*100);return this._a==1?"hsl("+T+", "+F+"%, "+X+"%)":"hsla("+T+", "+F+"%, "+X+"%, "+this._roundA+")"},toHex:function(L){return A(this._r,this._g,this._b,L)},toHexString:function(L){return"#"+this.toHex(L)},toHex8:function(L){return x(this._r,this._g,this._b,this._a,L)},toHex8String:function(L){return"#"+this.toHex8(L)},toRgb:function(){return{r:c(this._r),g:c(this._g),b:c(this._b),a:this._a}},toRgbString:function(){return this._a==1?"rgb("+c(this._r)+", "+c(this._g)+", "+c(this._b)+")":"rgba("+c(this._r)+", "+c(this._g)+", "+c(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:c(ee(this._r,255)*100)+"%",g:c(ee(this._g,255)*100)+"%",b:c(ee(this._b,255)*100)+"%",a:this._a}},toPercentageRgbString:function(){return this._a==1?"rgb("+c(ee(this._r,255)*100)+"%, "+c(ee(this._g,255)*100)+"%, "+c(ee(this._b,255)*100)+"%)":"rgba("+c(ee(this._r,255)*100)+"%, "+c(ee(this._g,255)*100)+"%, "+c(ee(this._b,255)*100)+"%, "+this._roundA+")"},toName:function(){return this._a===0?"transparent":this._a<1?!1:oe[A(this._r,this._g,this._b,!0)]||!1},toFilter:function(L){var T="#"+k(this._r,this._g,this._b,this._a),F=T,X=this._gradientType?"GradientType = 1, ":"";if(L){var H=n(L);F="#"+k(H._r,H._g,H._b,H._a)}return"progid:DXImageTransform.Microsoft.gradient("+X+"startColorstr="+T+",endColorstr="+F+")"},toString:function(L){var T=!!L;L=L||this._format;var F=!1,X=this._a<1&&this._a>=0,H=!T&&X&&(L==="hex"||L==="hex6"||L==="hex3"||L==="hex4"||L==="hex8"||L==="name");return H?L==="name"&&this._a===0?this.toName():this.toRgbString():(L==="rgb"&&(F=this.toRgbString()),L==="prgb"&&(F=this.toPercentageRgbString()),(L==="hex"||L==="hex6")&&(F=this.toHexString()),L==="hex3"&&(F=this.toHexString(!0)),L==="hex4"&&(F=this.toHex8String(!0)),L==="hex8"&&(F=this.toHex8String()),L==="name"&&(F=this.toName()),L==="hsl"&&(F=this.toHslString()),L==="hsv"&&(F=this.toHsvString()),F||this.toHexString())},clone:function(){return n(this.toString())},_applyModification:function(L,T){var F=L.apply(null,[this].concat([].slice.call(T)));return this._r=F._r,this._g=F._g,this._b=F._b,this.setAlpha(F._a),this},lighten:function(){return this._applyModification(R,arguments)},brighten:function(){return this._applyModification(M,arguments)},darken:function(){return this._applyModification(j,arguments)},desaturate:function(){return this._applyModification(N,arguments)},saturate:function(){return this._applyModification(E,arguments)},greyscale:function(){return this._applyModification(S,arguments)},spin:function(){return this._applyModification(O,arguments)},_applyCombination:function(L,T){return L.apply(null,[this].concat([].slice.call(T)))},analogous:function(){return this._applyCombination(G,arguments)},complement:function(){return this._applyCombination(V,arguments)},monochromatic:function(){return this._applyCombination(U,arguments)},splitcomplement:function(){return this._applyCombination(z,arguments)},triad:function(){return this._applyCombination(J,arguments)},tetrad:function(){return this._applyCombination(B,arguments)}},n.fromRatio=function(L,T){if(typeof L=="object"){var F={};for(var X in L)L.hasOwnProperty(X)&&(X==="a"?F[X]=L[X]:F[X]=se(L[X]));L=F}return n(L,T)};function m(L){var T={r:0,g:0,b:0},F=1,X=null,H=null,I=null,C=!1,Q=!1;return typeof L=="string"&&(L=$(L)),typeof L=="object"&&(Y(L.r)&&Y(L.g)&&Y(L.b)?(T=y(L.r,L.g,L.b),C=!0,Q=String(L.r).substr(-1)==="%"?"prgb":"rgb"):Y(L.h)&&Y(L.s)&&Y(L.v)?(X=se(L.s),H=se(L.v),T=w(L.h,X,H),C=!0,Q="hsv"):Y(L.h)&&Y(L.s)&&Y(L.l)&&(X=se(L.s),I=se(L.l),T=v(L.h,X,I),C=!0,Q="hsl"),L.hasOwnProperty("a")&&(F=L.a)),F=W(F),{ok:C,format:L.format||Q,r:h(255,u(T.r,0)),g:h(255,u(T.g,0)),b:h(255,u(T.b,0)),a:F}}function y(L,T,F){return{r:ee(L,255)*255,g:ee(T,255)*255,b:ee(F,255)*255}}function f(L,T,F){L=ee(L,255),T=ee(T,255),F=ee(F,255);var X=u(L,T,F),H=h(L,T,F),I,C,Q=(X+H)/2;if(X==H)I=C=0;else{var le=X-H;switch(C=Q>.5?le/(2-X-H):le/(X+H),X){case L:I=(T-F)/le+(T<F?6:0);break;case T:I=(F-L)/le+2;break;case F:I=(L-T)/le+4;break}I/=6}return{h:I,s:C,l:Q}}function v(L,T,F){var X,H,I;L=ee(L,360),T=ee(T,100),F=ee(F,100);function C(ge,ye,Ne){return Ne<0&&(Ne+=1),Ne>1&&(Ne-=1),Ne<1/6?ge+(ye-ge)*6*Ne:Ne<1/2?ye:Ne<2/3?ge+(ye-ge)*(2/3-Ne)*6:ge}if(T===0)X=H=I=F;else{var Q=F<.5?F*(1+T):F+T-F*T,le=2*F-Q;X=C(le,Q,L+1/3),H=C(le,Q,L),I=C(le,Q,L-1/3)}return{r:X*255,g:H*255,b:I*255}}function p(L,T,F){L=ee(L,255),T=ee(T,255),F=ee(F,255);var X=u(L,T,F),H=h(L,T,F),I,C,Q=X,le=X-H;if(C=X===0?0:le/X,X==H)I=0;else{switch(X){case L:I=(T-F)/le+(T<F?6:0);break;case T:I=(F-L)/le+2;break;case F:I=(L-T)/le+4;break}I/=6}return{h:I,s:C,v:Q}}function w(L,T,F){L=ee(L,360)*6,T=ee(T,100),F=ee(F,100);var X=l.floor(L),H=L-X,I=F*(1-T),C=F*(1-H*T),Q=F*(1-(1-H)*T),le=X%6,ge=[F,C,I,I,Q,F][le],ye=[Q,F,F,C,I,I][le],Ne=[I,I,Q,F,F,C][le];return{r:ge*255,g:ye*255,b:Ne*255}}function A(L,T,F,X){var H=[he(c(L).toString(16)),he(c(T).toString(16)),he(c(F).toString(16))];return X&&H[0].charAt(0)==H[0].charAt(1)&&H[1].charAt(0)==H[1].charAt(1)&&H[2].charAt(0)==H[2].charAt(1)?H[0].charAt(0)+H[1].charAt(0)+H[2].charAt(0):H.join("")}function x(L,T,F,X,H){var I=[he(c(L).toString(16)),he(c(T).toString(16)),he(c(F).toString(16)),he(ce(X))];return H&&I[0].charAt(0)==I[0].charAt(1)&&I[1].charAt(0)==I[1].charAt(1)&&I[2].charAt(0)==I[2].charAt(1)&&I[3].charAt(0)==I[3].charAt(1)?I[0].charAt(0)+I[1].charAt(0)+I[2].charAt(0)+I[3].charAt(0):I.join("")}function k(L,T,F,X){var H=[he(ce(X)),he(c(L).toString(16)),he(c(T).toString(16)),he(c(F).toString(16))];return H.join("")}n.equals=function(L,T){return!L||!T?!1:n(L).toRgbString()==n(T).toRgbString()},n.random=function(){return n.fromRatio({r:o(),g:o(),b:o()})};function N(L,T){T=T===0?0:T||10;var F=n(L).toHsl();return F.s-=T/100,F.s=_(F.s),n(F)}function E(L,T){T=T===0?0:T||10;var F=n(L).toHsl();return F.s+=T/100,F.s=_(F.s),n(F)}function S(L){return n(L).desaturate(100)}function R(L,T){T=T===0?0:T||10;var F=n(L).toHsl();return F.l+=T/100,F.l=_(F.l),n(F)}function M(L,T){T=T===0?0:T||10;var F=n(L).toRgb();return F.r=u(0,h(255,F.r-c(255*-(T/100)))),F.g=u(0,h(255,F.g-c(255*-(T/100)))),F.b=u(0,h(255,F.b-c(255*-(T/100)))),n(F)}function j(L,T){T=T===0?0:T||10;var F=n(L).toHsl();return F.l-=T/100,F.l=_(F.l),n(F)}function O(L,T){var F=n(L).toHsl(),X=(F.h+T)%360;return F.h=X<0?360+X:X,n(F)}function V(L){var T=n(L).toHsl();return T.h=(T.h+180)%360,n(T)}function J(L){var T=n(L).toHsl(),F=T.h;return[n(L),n({h:(F+120)%360,s:T.s,l:T.l}),n({h:(F+240)%360,s:T.s,l:T.l})]}function B(L){var T=n(L).toHsl(),F=T.h;return[n(L),n({h:(F+90)%360,s:T.s,l:T.l}),n({h:(F+180)%360,s:T.s,l:T.l}),n({h:(F+270)%360,s:T.s,l:T.l})]}function z(L){var T=n(L).toHsl(),F=T.h;return[n(L),n({h:(F+72)%360,s:T.s,l:T.l}),n({h:(F+216)%360,s:T.s,l:T.l})]}function G(L,T,F){T=T||6,F=F||30;var X=n(L).toHsl(),H=360/F,I=[n(L)];for(X.h=(X.h-(H*T>>1)+720)%360;--T;)X.h=(X.h+H)%360,I.push(n(X));return I}function U(L,T){T=T||6;for(var F=n(L).toHsv(),X=F.h,H=F.s,I=F.v,C=[],Q=1/T;T--;)C.push(n({h:X,s:H,v:I})),I=(I+Q)%1;return C}n.mix=function(L,T,F){F=F===0?0:F||50;var X=n(L).toRgb(),H=n(T).toRgb(),I=F/100,C={r:(H.r-X.r)*I+X.r,g:(H.g-X.g)*I+X.g,b:(H.b-X.b)*I+X.b,a:(H.a-X.a)*I+X.a};return n(C)},n.readability=function(L,T){var F=n(L),X=n(T);return(l.max(F.getLuminance(),X.getLuminance())+.05)/(l.min(F.getLuminance(),X.getLuminance())+.05)},n.isReadable=function(L,T,F){var X=n.readability(L,T),H,I;switch(I=!1,H=te(F),H.level+H.size){case"AAsmall":case"AAAlarge":I=X>=4.5;break;case"AAlarge":I=X>=3;break;case"AAAsmall":I=X>=7;break}return I},n.mostReadable=function(L,T,F){var X=null,H=0,I,C,Q,le;F=F||{},C=F.includeFallbackColors,Q=F.level,le=F.size;for(var ge=0;ge<T.length;ge++)I=n.readability(L,T[ge]),I>H&&(H=I,X=n(T[ge]));return n.isReadable(L,X,{level:Q,size:le})||!C?X:(F.includeFallbackColors=!1,n.mostReadable(L,["#fff","#000"],F))};var ie=n.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},oe=n.hexNames=ae(ie);function ae(L){var T={};for(var F in L)L.hasOwnProperty(F)&&(T[L[F]]=F);return T}function W(L){return L=parseFloat(L),(isNaN(L)||L<0||L>1)&&(L=1),L}function ee(L,T){fe(L)&&(L="100%");var F=pe(L);return L=h(T,u(0,parseFloat(L))),F&&(L=parseInt(L*T,10)/100),l.abs(L-T)<1e-6?1:L%T/parseFloat(T)}function _(L){return h(1,u(0,L))}function re(L){return parseInt(L,16)}function fe(L){return typeof L=="string"&&L.indexOf(".")!=-1&&parseFloat(L)===1}function pe(L){return typeof L=="string"&&L.indexOf("%")!=-1}function he(L){return L.length==1?"0"+L:""+L}function se(L){return L<=1&&(L=L*100+"%"),L}function ce(L){return l.round(parseFloat(L)*255).toString(16)}function q(L){return re(L)/255}var K=function(){var L="[-\\+]?\\d+%?",T="[-\\+]?\\d*\\.\\d+%?",F="(?:"+T+")|(?:"+L+")",X="[\\s|\\(]+("+F+")[,|\\s]+("+F+")[,|\\s]+("+F+")\\s*\\)?",H="[\\s|\\(]+("+F+")[,|\\s]+("+F+")[,|\\s]+("+F+")[,|\\s]+("+F+")\\s*\\)?";return{CSS_UNIT:new RegExp(F),rgb:new RegExp("rgb"+X),rgba:new RegExp("rgba"+H),hsl:new RegExp("hsl"+X),hsla:new RegExp("hsla"+H),hsv:new RegExp("hsv"+X),hsva:new RegExp("hsva"+H),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();function Y(L){return!!K.CSS_UNIT.exec(L)}function $(L){L=L.replace(s,"").replace(g,"").toLowerCase();var T=!1;if(ie[L])L=ie[L],T=!0;else if(L=="transparent")return{r:0,g:0,b:0,a:0,format:"name"};var F;return(F=K.rgb.exec(L))?{r:F[1],g:F[2],b:F[3]}:(F=K.rgba.exec(L))?{r:F[1],g:F[2],b:F[3],a:F[4]}:(F=K.hsl.exec(L))?{h:F[1],s:F[2],l:F[3]}:(F=K.hsla.exec(L))?{h:F[1],s:F[2],l:F[3],a:F[4]}:(F=K.hsv.exec(L))?{h:F[1],s:F[2],v:F[3]}:(F=K.hsva.exec(L))?{h:F[1],s:F[2],v:F[3],a:F[4]}:(F=K.hex8.exec(L))?{r:re(F[1]),g:re(F[2]),b:re(F[3]),a:q(F[4]),format:T?"name":"hex8"}:(F=K.hex6.exec(L))?{r:re(F[1]),g:re(F[2]),b:re(F[3]),format:T?"name":"hex"}:(F=K.hex4.exec(L))?{r:re(F[1]+""+F[1]),g:re(F[2]+""+F[2]),b:re(F[3]+""+F[3]),a:q(F[4]+""+F[4]),format:T?"name":"hex8"}:(F=K.hex3.exec(L))?{r:re(F[1]+""+F[1]),g:re(F[2]+""+F[2]),b:re(F[3]+""+F[3]),format:T?"name":"hex"}:!1}function te(L){var T,F;return L=L||{level:"AA",size:"small"},T=(L.level||"AA").toUpperCase(),F=(L.size||"small").toLowerCase(),T!=="AA"&&T!=="AAA"&&(T="AA"),F!=="small"&&F!=="large"&&(F="small"),{level:T,size:F}}typeof d!="undefined"&&d.exports?d.exports=n:i.tinycolor=n})(Math)},{}],179:[function(r,d,a){a=d.exports=l;function l(s){return s.replace(/^\s*|\s*$/g,"")}a.left=function(s){return s.replace(/^\s*/,"")},a.right=function(s){return s.replace(/\s*$/,"")}},{}],180:[function(r,d,a){var l=r("punycode"),s=r("./util");a.parse=N,a.resolve=S,a.resolveObject=R,a.format=E,a.Url=g;function g(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}var b=/^([a-z0-9.+-]+:)/i,c=/:[0-9]*$/,h=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,u=["<",">",'"',"`"," ","\r",`
`,"	"],o=["{","}","|","\\","^","`"].concat(u),n=["'"].concat(o),m=["%","/","?",";","#"].concat(n),y=["/","?","#"],f=255,v=/^[+a-z0-9A-Z_-]{0,63}$/,p=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,w={javascript:!0,"javascript:":!0},A={javascript:!0,"javascript:":!0},x={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},k=r("querystring");function N(M,j,O){if(M&&s.isObject(M)&&M instanceof g)return M;var V=new g;return V.parse(M,j,O),V}g.prototype.parse=function(M,j,O){if(!s.isString(M))throw new TypeError("Parameter 'url' must be a string, not "+typeof M);var V=M.indexOf("?"),J=V!==-1&&V<M.indexOf("#")?"?":"#",B=M.split(J),z=/\\/g;B[0]=B[0].replace(z,"/"),M=B.join(J);var G=M;if(G=G.trim(),!O&&M.split("#").length===1){var U=h.exec(G);if(U)return this.path=G,this.href=G,this.pathname=U[1],U[2]?(this.search=U[2],j?this.query=k.parse(this.search.substr(1)):this.query=this.search.substr(1)):j&&(this.search="",this.query={}),this}var ie=b.exec(G);if(ie){ie=ie[0];var oe=ie.toLowerCase();this.protocol=oe,G=G.substr(ie.length)}if(O||ie||G.match(/^\/\/[^@\/]+@[^@\/]+/)){var ae=G.substr(0,2)==="//";ae&&!(ie&&A[ie])&&(G=G.substr(2),this.slashes=!0)}if(!A[ie]&&(ae||ie&&!x[ie])){for(var W=-1,ee=0;ee<y.length;ee++){var _=G.indexOf(y[ee]);_!==-1&&(W===-1||_<W)&&(W=_)}var re,fe;W===-1?fe=G.lastIndexOf("@"):fe=G.lastIndexOf("@",W),fe!==-1&&(re=G.slice(0,fe),G=G.slice(fe+1),this.auth=decodeURIComponent(re)),W=-1;for(var ee=0;ee<m.length;ee++){var _=G.indexOf(m[ee]);_!==-1&&(W===-1||_<W)&&(W=_)}W===-1&&(W=G.length),this.host=G.slice(0,W),G=G.slice(W),this.parseHost(),this.hostname=this.hostname||"";var pe=this.hostname[0]==="["&&this.hostname[this.hostname.length-1]==="]";if(!pe)for(var he=this.hostname.split(/\./),ee=0,se=he.length;ee<se;ee++){var ce=he[ee];if(!!ce&&!ce.match(v)){for(var q="",K=0,Y=ce.length;K<Y;K++)ce.charCodeAt(K)>127?q+="x":q+=ce[K];if(!q.match(v)){var $=he.slice(0,ee),te=he.slice(ee+1),L=ce.match(p);L&&($.push(L[1]),te.unshift(L[2])),te.length&&(G="/"+te.join(".")+G),this.hostname=$.join(".");break}}}this.hostname.length>f?this.hostname="":this.hostname=this.hostname.toLowerCase(),pe||(this.hostname=l.toASCII(this.hostname));var T=this.port?":"+this.port:"",F=this.hostname||"";this.host=F+T,this.href+=this.host,pe&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),G[0]!=="/"&&(G="/"+G))}if(!w[oe])for(var ee=0,se=n.length;ee<se;ee++){var X=n[ee];if(G.indexOf(X)!==-1){var H=encodeURIComponent(X);H===X&&(H=escape(X)),G=G.split(X).join(H)}}var I=G.indexOf("#");I!==-1&&(this.hash=G.substr(I),G=G.slice(0,I));var C=G.indexOf("?");if(C!==-1?(this.search=G.substr(C),this.query=G.substr(C+1),j&&(this.query=k.parse(this.query)),G=G.slice(0,C)):j&&(this.search="",this.query={}),G&&(this.pathname=G),x[oe]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){var T=this.pathname||"",Q=this.search||"";this.path=T+Q}return this.href=this.format(),this};function E(M){return s.isString(M)&&(M=N(M)),M instanceof g?M.format():g.prototype.format.call(M)}g.prototype.format=function(){var M=this.auth||"";M&&(M=encodeURIComponent(M),M=M.replace(/%3A/i,":"),M+="@");var j=this.protocol||"",O=this.pathname||"",V=this.hash||"",J=!1,B="";this.host?J=M+this.host:this.hostname&&(J=M+(this.hostname.indexOf(":")===-1?this.hostname:"["+this.hostname+"]"),this.port&&(J+=":"+this.port)),this.query&&s.isObject(this.query)&&Object.keys(this.query).length&&(B=k.stringify(this.query));var z=this.search||B&&"?"+B||"";return j&&j.substr(-1)!==":"&&(j+=":"),this.slashes||(!j||x[j])&&J!==!1?(J="//"+(J||""),O&&O.charAt(0)!=="/"&&(O="/"+O)):J||(J=""),V&&V.charAt(0)!=="#"&&(V="#"+V),z&&z.charAt(0)!=="?"&&(z="?"+z),O=O.replace(/[?#]/g,function(G){return encodeURIComponent(G)}),z=z.replace("#","%23"),j+J+O+z+V};function S(M,j){return N(M,!1,!0).resolve(j)}g.prototype.resolve=function(M){return this.resolveObject(N(M,!1,!0)).format()};function R(M,j){return M?N(M,!1,!0).resolveObject(j):j}g.prototype.resolveObject=function(M){if(s.isString(M)){var j=new g;j.parse(M,!1,!0),M=j}for(var O=new g,V=Object.keys(this),J=0;J<V.length;J++){var B=V[J];O[B]=this[B]}if(O.hash=M.hash,M.href==="")return O.href=O.format(),O;if(M.slashes&&!M.protocol){for(var z=Object.keys(M),G=0;G<z.length;G++){var U=z[G];U!=="protocol"&&(O[U]=M[U])}return x[O.protocol]&&O.hostname&&!O.pathname&&(O.path=O.pathname="/"),O.href=O.format(),O}if(M.protocol&&M.protocol!==O.protocol){if(!x[M.protocol]){for(var ie=Object.keys(M),oe=0;oe<ie.length;oe++){var ae=ie[oe];O[ae]=M[ae]}return O.href=O.format(),O}if(O.protocol=M.protocol,!M.host&&!A[M.protocol]){for(var se=(M.pathname||"").split("/");se.length&&!(M.host=se.shift()););M.host||(M.host=""),M.hostname||(M.hostname=""),se[0]!==""&&se.unshift(""),se.length<2&&se.unshift(""),O.pathname=se.join("/")}else O.pathname=M.pathname;if(O.search=M.search,O.query=M.query,O.host=M.host||"",O.auth=M.auth,O.hostname=M.hostname||M.host,O.port=M.port,O.pathname||O.search){var W=O.pathname||"",ee=O.search||"";O.path=W+ee}return O.slashes=O.slashes||M.slashes,O.href=O.format(),O}var _=O.pathname&&O.pathname.charAt(0)==="/",re=M.host||M.pathname&&M.pathname.charAt(0)==="/",fe=re||_||O.host&&M.pathname,pe=fe,he=O.pathname&&O.pathname.split("/")||[],se=M.pathname&&M.pathname.split("/")||[],ce=O.protocol&&!x[O.protocol];if(ce&&(O.hostname="",O.port=null,O.host&&(he[0]===""?he[0]=O.host:he.unshift(O.host)),O.host="",M.protocol&&(M.hostname=null,M.port=null,M.host&&(se[0]===""?se[0]=M.host:se.unshift(M.host)),M.host=null),fe=fe&&(se[0]===""||he[0]==="")),re)O.host=M.host||M.host===""?M.host:O.host,O.hostname=M.hostname||M.hostname===""?M.hostname:O.hostname,O.search=M.search,O.query=M.query,he=se;else if(se.length)he||(he=[]),he.pop(),he=he.concat(se),O.search=M.search,O.query=M.query;else if(!s.isNullOrUndefined(M.search)){if(ce){O.hostname=O.host=he.shift();var q=O.host&&O.host.indexOf("@")>0?O.host.split("@"):!1;q&&(O.auth=q.shift(),O.host=O.hostname=q.shift())}return O.search=M.search,O.query=M.query,(!s.isNull(O.pathname)||!s.isNull(O.search))&&(O.path=(O.pathname?O.pathname:"")+(O.search?O.search:"")),O.href=O.format(),O}if(!he.length)return O.pathname=null,O.search?O.path="/"+O.search:O.path=null,O.href=O.format(),O;for(var K=he.slice(-1)[0],Y=(O.host||M.host||he.length>1)&&(K==="."||K==="..")||K==="",$=0,te=he.length;te>=0;te--)K=he[te],K==="."?he.splice(te,1):K===".."?(he.splice(te,1),$++):$&&(he.splice(te,1),$--);if(!fe&&!pe)for(;$--;$)he.unshift("..");fe&&he[0]!==""&&(!he[0]||he[0].charAt(0)!=="/")&&he.unshift(""),Y&&he.join("/").substr(-1)!=="/"&&he.push("");var L=he[0]===""||he[0]&&he[0].charAt(0)==="/";if(ce){O.hostname=O.host=L?"":he.length?he.shift():"";var q=O.host&&O.host.indexOf("@")>0?O.host.split("@"):!1;q&&(O.auth=q.shift(),O.host=O.hostname=q.shift())}return fe=fe||O.host&&he.length,fe&&!L&&he.unshift(""),he.length?O.pathname=he.join("/"):(O.pathname=null,O.path=null),(!s.isNull(O.pathname)||!s.isNull(O.search))&&(O.path=(O.pathname?O.pathname:"")+(O.search?O.search:"")),O.auth=M.auth||O.auth,O.slashes=O.slashes||M.slashes,O.href=O.format(),O},g.prototype.parseHost=function(){var M=this.host,j=c.exec(M);j&&(j=j[0],j!==":"&&(this.port=j.substr(1)),M=M.substr(0,M.length-j.length)),M&&(this.hostname=M)}},{"./util":181,punycode:134,querystring:137}],181:[function(r,d,a){d.exports={isString:function(l){return typeof l=="string"},isObject:function(l){return typeof l=="object"&&l!==null},isNull:function(l){return l===null},isNullOrUndefined:function(l){return l==null}}},{}],182:[function(r,d,a){(function(l){(function(){var s={};typeof d=="object"?d.exports=s:self.UTIF=s;var g;typeof r=="function"?g=r("pako"):g=self.pako;function b(){typeof l=="undefined"&&console.log.apply(console,arguments)}(function(c,h){(function(){var u=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(m){return typeof m}:function(m){return m&&typeof Symbol=="function"&&m.constructor===Symbol&&m!==Symbol.prototype?"symbol":typeof m},o=function(){function m(y){this.message="JPEG error: "+y}return m.prototype=Error(),m.prototype.name="JpegError",m.constructor=m}(),n=function(){function m(y,f){this.message=y,this.g=f}return m.prototype=Error(),m.prototype.name="DNLMarkerError",m.constructor=m}();(function(){function m(){this.M=null,this.B=-1}function y(A,x){for(var k=0,N=[],E,S,R=16;0<R&&!A[R-1];)R--;N.push({children:[],index:0});var M=N[0],j;for(E=0;E<R;E++){for(S=0;S<A[E];S++){for(M=N.pop(),M.children[M.index]=x[k];0<M.index;)M=N.pop();for(M.index++,N.push(M);N.length<=E;)N.push(j={children:[],index:0}),M.children[M.index]=j.children,M=j;k++}E+1<R&&(N.push(j={children:[],index:0}),M.children[M.index]=j.children,M=j)}return N[0].children}function f(A,x,k,N,E,S,R,M,j){function O(){if(0<re)return re--,_>>re&1;if(_=A[x++],_===255){var I=A[x++];if(I){if(I===220&&ae){x+=2;var C=A[x++]<<8|A[x++];if(0<C&&C!==k.g)throw new n("Found DNL marker (0xFFDC) while parsing scan data",C)}throw new o("unexpected marker "+(_<<8|I).toString(16))}}return re=7,_>>>7}function V(I){for(;;){if(I=I[O()],typeof I=="number")return I;if((typeof I=="undefined"?"undefined":u(I))!=="object")throw new o("invalid huffman sequence")}}function J(I){for(var C=0;0<I;)C=C<<1|O(),I--;return C}function B(I){if(I===1)return O()===1?1:-1;var C=J(I);return C>=1<<I-1?C:C+(-1<<I)+1}function z(I,C){var Q=V(I.D);for(Q=Q===0?0:B(Q),I.a[C]=I.m+=Q,Q=1;64>Q;){var le=V(I.o),ge=le&15;if(le>>=4,ge===0){if(15>le)break;Q+=16}else Q+=le,I.a[C+w[Q]]=B(ge),Q++}}function G(I,C){var Q=V(I.D);Q=Q===0?0:B(Q)<<j,I.a[C]=I.m+=Q}function U(I,C){I.a[C]|=O()<<j}function ie(I,C){if(0<fe)fe--;else for(var Q=S;Q<=R;){var le=V(I.o),ge=le&15;if(le>>=4,ge===0){if(15>le){fe=J(le)+(1<<le)-1;break}Q+=16}else Q+=le,I.a[C+w[Q]]=B(ge)*(1<<j),Q++}}function oe(I,C){for(var Q=S,le=0,ge;Q<=R;){ge=C+w[Q];var ye=0>I.a[ge]?-1:1;switch(pe){case 0:if(le=V(I.o),ge=le&15,le>>=4,ge===0)15>le?(fe=J(le)+(1<<le),pe=4):(le=16,pe=1);else{if(ge!==1)throw new o("invalid ACn encoding");he=B(ge),pe=le?2:3}continue;case 1:case 2:I.a[ge]?I.a[ge]+=ye*(O()<<j):(le--,le===0&&(pe=pe===2?3:0));break;case 3:I.a[ge]?I.a[ge]+=ye*(O()<<j):(I.a[ge]=he<<j,pe=0);break;case 4:I.a[ge]&&(I.a[ge]+=ye*(O()<<j))}Q++}pe===4&&(fe--,fe===0&&(pe=0))}for(var ae=9<arguments.length&&arguments[9]!==void 0?arguments[9]:!1,W=k.P,ee=x,_=0,re=0,fe=0,pe=0,he,se=N.length,ce,q,K,Y,$=k.S?S===0?M===0?G:U:M===0?ie:oe:z,te=0,L=se===1?N[0].c*N[0].l:W*k.O,T,F;te<L;){var X=E?Math.min(L-te,E):L;for(ce=0;ce<se;ce++)N[ce].m=0;if(fe=0,se===1){var H=N[0];for(Y=0;Y<X;Y++)$(H,64*((H.c+1)*(te/H.c|0)+te%H.c)),te++}else for(Y=0;Y<X;Y++){for(ce=0;ce<se;ce++)for(H=N[ce],T=H.h,F=H.j,q=0;q<F;q++)for(K=0;K<T;K++)$(H,64*((H.c+1)*((te/W|0)*H.j+q)+(te%W*H.h+K)));te++}if(re=0,(H=p(A,x))&&H.f&&((0,_util.warn)("decodeScan - unexpected MCU data, current marker is: "+H.f),x=H.offset),H=H&&H.F,!H||65280>=H)throw new o("marker was not found");if(65488<=H&&65495>=H)x+=2;else break}return(H=p(A,x))&&H.f&&((0,_util.warn)("decodeScan - unexpected Scan data, current marker is: "+H.f),x=H.offset),x-ee}function v(A,x){for(var k=x.c,N=x.l,E=new Int16Array(64),S=0;S<N;S++)for(var R=0;R<k;R++){var M=64*((x.c+1)*S+R),j=E,O=x.G,V=x.a;if(!O)throw new o("missing required Quantization Table.");for(var J=0;64>J;J+=8){var B=V[M+J],z=V[M+J+1],G=V[M+J+2],U=V[M+J+3],ie=V[M+J+4],oe=V[M+J+5],ae=V[M+J+6],W=V[M+J+7];if(B*=O[J],(z|G|U|ie|oe|ae|W)===0)B=5793*B+512>>10,j[J]=B,j[J+1]=B,j[J+2]=B,j[J+3]=B,j[J+4]=B,j[J+5]=B,j[J+6]=B,j[J+7]=B;else{z*=O[J+1],G*=O[J+2],U*=O[J+3],ie*=O[J+4],oe*=O[J+5],ae*=O[J+6],W*=O[J+7];var ee=5793*B+128>>8,_=5793*ie+128>>8,re=G,fe=ae;ie=2896*(z-W)+128>>8,W=2896*(z+W)+128>>8,U<<=4,oe<<=4,ee=ee+_+1>>1,_=ee-_,B=3784*re+1567*fe+128>>8,re=1567*re-3784*fe+128>>8,fe=B,ie=ie+oe+1>>1,oe=ie-oe,W=W+U+1>>1,U=W-U,ee=ee+fe+1>>1,fe=ee-fe,_=_+re+1>>1,re=_-re,B=2276*ie+3406*W+2048>>12,ie=3406*ie-2276*W+2048>>12,W=B,B=799*U+4017*oe+2048>>12,U=4017*U-799*oe+2048>>12,oe=B,j[J]=ee+W,j[J+7]=ee-W,j[J+1]=_+oe,j[J+6]=_-oe,j[J+2]=re+U,j[J+5]=re-U,j[J+3]=fe+ie,j[J+4]=fe-ie}}for(O=0;8>O;++O)B=j[O],z=j[O+8],G=j[O+16],U=j[O+24],ie=j[O+32],oe=j[O+40],ae=j[O+48],W=j[O+56],(z|G|U|ie|oe|ae|W)===0?(B=5793*B+8192>>14,B=-2040>B?0:2024<=B?255:B+2056>>4,V[M+O]=B,V[M+O+8]=B,V[M+O+16]=B,V[M+O+24]=B,V[M+O+32]=B,V[M+O+40]=B,V[M+O+48]=B,V[M+O+56]=B):(ee=5793*B+2048>>12,_=5793*ie+2048>>12,re=G,fe=ae,ie=2896*(z-W)+2048>>12,W=2896*(z+W)+2048>>12,ee=(ee+_+1>>1)+4112,_=ee-_,B=3784*re+1567*fe+2048>>12,re=1567*re-3784*fe+2048>>12,fe=B,ie=ie+oe+1>>1,oe=ie-oe,W=W+U+1>>1,U=W-U,ee=ee+fe+1>>1,fe=ee-fe,_=_+re+1>>1,re=_-re,B=2276*ie+3406*W+2048>>12,ie=3406*ie-2276*W+2048>>12,W=B,B=799*U+4017*oe+2048>>12,U=4017*U-799*oe+2048>>12,oe=B,B=ee+W,W=ee-W,z=_+oe,ae=_-oe,G=re+U,oe=re-U,U=fe+ie,ie=fe-ie,B=16>B?0:4080<=B?255:B>>4,z=16>z?0:4080<=z?255:z>>4,G=16>G?0:4080<=G?255:G>>4,U=16>U?0:4080<=U?255:U>>4,ie=16>ie?0:4080<=ie?255:ie>>4,oe=16>oe?0:4080<=oe?255:oe>>4,ae=16>ae?0:4080<=ae?255:ae>>4,W=16>W?0:4080<=W?255:W>>4,V[M+O]=B,V[M+O+8]=z,V[M+O+16]=G,V[M+O+24]=U,V[M+O+32]=ie,V[M+O+40]=oe,V[M+O+48]=ae,V[M+O+56]=W)}return x.a}function p(A,x){var k=2<arguments.length&&arguments[2]!==void 0?arguments[2]:x,N=A.length-1;if(k=k<x?k:x,x>=N)return null;var E=A[x]<<8|A[x+1];if(65472<=E&&65534>=E)return{f:null,F:E,offset:x};for(var S=A[k]<<8|A[k+1];!(65472<=S&&65534>=S);){if(++k>=N)return null;S=A[k]<<8|A[k+1]}return{f:E.toString(16),F:S,offset:k}}var w=new Uint8Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]);m.prototype={parse:function(A){function x(){var re=A[R]<<8|A[R+1];return R+=2,re}function k(){var re=x();re=R+re-2;var fe=p(A,re,R);return fe&&fe.f&&((0,_util.warn)("readDataBlock - incorrect length, current marker is: "+fe.f),re=fe.offset),re=A.subarray(R,re),R+=re.length,re}function N(re){for(var fe=Math.ceil(re.v/8/re.s),pe=Math.ceil(re.g/8/re.u),he=0;he<re.b.length;he++){ee=re.b[he];var se=Math.ceil(Math.ceil(re.v/8)*ee.h/re.s),ce=Math.ceil(Math.ceil(re.g/8)*ee.j/re.u);ee.a=new Int16Array(64*pe*ee.j*(fe*ee.h+1)),ee.c=se,ee.l=ce}re.P=fe,re.O=pe}var E=(1<arguments.length&&arguments[1]!==void 0?arguments[1]:{}).N,S=E===void 0?null:E,R=0,M=null,j=0;E=[];var O=[],V=[],J=x();if(J!==65496)throw new o("SOI not found");for(J=x();J!==65497;){switch(J){case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:var B=k();J===65518&&B[0]===65&&B[1]===100&&B[2]===111&&B[3]===98&&B[4]===101&&(M={version:B[5]<<8|B[6],Y:B[7]<<8|B[8],Z:B[9]<<8|B[10],W:B[11]});break;case 65499:J=x()+R-2;for(var z;R<J;){var G=A[R++],U=new Uint16Array(64);if(G>>4===0)for(B=0;64>B;B++)z=w[B],U[z]=A[R++];else if(G>>4===1)for(B=0;64>B;B++)z=w[B],U[z]=x();else throw new o("DQT - invalid table spec");E[G&15]=U}break;case 65472:case 65473:case 65474:if(ie)throw new o("Only single frame JPEGs supported");x();var ie={};for(ie.X=J===65473,ie.S=J===65474,ie.precision=A[R++],J=x(),ie.g=S||J,ie.v=x(),ie.b=[],ie.C={},B=A[R++],J=U=G=0;J<B;J++){z=A[R];var oe=A[R+1]>>4,ae=A[R+1]&15;G<oe&&(G=oe),U<ae&&(U=ae),oe=ie.b.push({h:oe,j:ae,T:A[R+2],G:null}),ie.C[z]=oe-1,R+=3}ie.s=G,ie.u=U,N(ie);break;case 65476:for(z=x(),J=2;J<z;){for(G=A[R++],U=new Uint8Array(16),B=oe=0;16>B;B++,R++)oe+=U[B]=A[R];for(ae=new Uint8Array(oe),B=0;B<oe;B++,R++)ae[B]=A[R];J+=17+oe,(G>>4===0?V:O)[G&15]=y(U,ae)}break;case 65501:x();var W=x();break;case 65498:for(B=++j===1&&!S,x(),G=A[R++],z=[],J=0;J<G;J++){U=ie.C[A[R++]];var ee=ie.b[U];U=A[R++],ee.D=V[U>>4],ee.o=O[U&15],z.push(ee)}J=A[R++],G=A[R++],U=A[R++];try{var _=f(A,R,ie,z,W,J,G,U>>4,U&15,B);R+=_}catch(re){if(re instanceof n)return(0,_util.warn)('Attempting to re-parse JPEG image using "scanLines" parameter found in DNL marker (0xFFDC) segment.'),this.parse(A,{N:re.g});throw re}break;case 65500:R+=4;break;case 65535:A[R]!==255&&R--;break;default:if(A[R-3]===255&&192<=A[R-2]&&254>=A[R-2])R-=3;else if((B=p(A,R-2))&&B.f)(0,_util.warn)("JpegImage.parse - unexpected data, current marker is: "+B.f),R=B.offset;else throw new o("unknown marker "+J.toString(16))}J=x()}for(this.width=ie.v,this.height=ie.g,this.A=M,this.b=[],J=0;J<ie.b.length;J++)ee=ie.b[J],(W=E[ee.T])&&(ee.G=W),this.b.push({R:v(ie,ee),U:ee.h/ie.s,V:ee.j/ie.u,c:ee.c,l:ee.l});this.i=this.b.length},L:function(A,x){var k=this.width/A,N=this.height/x,E,S,R=this.b.length,M=A*x*R,j=new Uint8ClampedArray(M),O=new Uint32Array(A);for(S=0;S<R;S++){var V=this.b[S],J=V.U*k,B=V.V*N,z=S,G=V.R,U=V.c+1<<3;for(E=0;E<A;E++)V=0|E*J,O[E]=(V&4294967288)<<3|V&7;for(J=0;J<x;J++)for(V=0|J*B,V=U*(V&4294967288)|(V&7)<<3,E=0;E<A;E++)j[z]=G[V+O[E]],z+=R}if(N=this.M)for(S=0;S<M;)for(k=V=0;V<R;V++,S++,k+=2)j[S]=(j[S]*N[k]>>8)+N[k+1];return j},w:function(){return this.A?!!this.A.W:this.i===3?this.B!==0:this.B===1},I:function(A){for(var x,k,N,E=0,S=A.length;E<S;E+=3)x=A[E],k=A[E+1],N=A[E+2],A[E]=x-179.456+1.402*N,A[E+1]=x+135.459-.344*k-.714*N,A[E+2]=x-226.816+1.772*k;return A},K:function(A){for(var x,k,N,E,S=0,R=0,M=A.length;R<M;R+=4)x=A[R],k=A[R+1],N=A[R+2],E=A[R+3],A[S++]=-122.67195406894+k*(-660635669420364e-19*k+.000437130475926232*N-54080610064599e-18*x+.00048449797120281*E-.154362151871126)+N*(-.000957964378445773*N+.000817076911346625*x-.00477271405408747*E+1.53380253221734)+x*(.000961250184130688*x-.00266257332283933*E+.48357088451265)+E*(-.000336197177618394*E+.484791561490776),A[S++]=107.268039397724+k*(219927104525741e-19*k-.000640992018297945*N+.000659397001245577*x+.000426105652938837*E-.176491792462875)+N*(-.000778269941513683*N+.00130872261408275*x+.000770482631801132*E-.151051492775562)+x*(.00126935368114843*x-.00265090189010898*E+.25802910206845)+E*(-.000318913117588328*E-.213742400323665),A[S++]=-20.810012546947+k*(-.000570115196973677*k-263409051004589e-19*N+.0020741088115012*x-.00288260236853442*E+.814272968359295)+N*(-153496057440975e-19*N-.000132689043961446*x+.000560833691242812*E-.195152027534049)+x*(.00174418132927582*x-.00255243321439347*E+.116935020465145)+E*(-.000343531996510555*E+.24165260232407);return A.subarray(0,S)},J:function(A){for(var x,k,N,E=0,S=A.length;E<S;E+=4)x=A[E],k=A[E+1],N=A[E+2],A[E]=434.456-x-1.402*N,A[E+1]=119.541-x+.344*k+.714*N,A[E+2]=481.816-x-1.772*k;return A},H:function(A){for(var x,k,N,E,S=0,R=1/255,M=0,j=A.length;M<j;M+=4)x=A[M]*R,k=A[M+1]*R,N=A[M+2]*R,E=A[M+3]*R,A[S++]=255+x*(-4.387332384609988*x+54.48615194189176*k+18.82290502165302*N+212.25662451639585*E-285.2331026137004)+k*(1.7149763477362134*k-5.6096736904047315*N-17.873870861415444*E-5.497006427196366)+N*(-2.5217340131683033*N-21.248923337353073*E+17.5119270841813)-E*(21.86122147463605*E+189.48180835922747),A[S++]=255+x*(8.841041422036149*x+60.118027045597366*k+6.871425592049007*N+31.159100130055922*E-79.2970844816548)+k*(-15.310361306967817*k+17.575251261109482*N+131.35250912493976*E-190.9453302588951)+N*(4.444339102852739*N+9.8632861493405*E-24.86741582555878)-E*(20.737325471181034*E+187.80453709719578),A[S++]=255+x*(.8842522430003296*x+8.078677503112928*k+30.89978309703729*N-.23883238689178934*E-14.183576799673286)+k*(10.49593273432072*k+63.02378494754052*N+50.606957656360734*E-112.23884253719248)+N*(.03296041114873217*N+115.60384449646641*E-193.58209356861505)-E*(22.33816807309886*E+180.12613974708367);return A.subarray(0,S)},getData:function(A,x,k){if(4<this.i)throw new o("Unsupported color mode");if(A=this.L(A,x),this.i===1&&k){k=A.length,x=new Uint8ClampedArray(3*k);for(var N=0,E=0;E<k;E++){var S=A[E];x[N++]=S,x[N++]=S,x[N++]=S}return x}if(this.i===3&&this.w())return this.I(A);if(this.i===4){if(this.w())return k?this.K(A):this.J(A);if(k)return this.H(A)}return A}},c.JpegDecoder=m})()})(),c.encodeImage=function(u,o,n,m){var y={t256:[o],t257:[n],t258:[8,8,8,8],t259:[1],t262:[2],t273:[1e3],t277:[4],t278:[n],t279:[o*n*4],t282:[1],t283:[1],t284:[1],t286:[0],t287:[0],t296:[1],t305:["Photopea (UTIF.js)"],t338:[1]};if(m)for(var f in m)y[f]=m[f];for(var v=new Uint8Array(c.encode([y])),p=new Uint8Array(u),w=new Uint8Array(1e3+o*n*4),f=0;f<v.length;f++)w[f]=v[f];for(var f=0;f<p.length;f++)w[1e3+f]=p[f];return w.buffer},c.encode=function(u){var o=new Uint8Array(2e4),n=4,m=c._binBE;o[0]=77,o[1]=77,o[3]=42;var y=8;m.writeUint(o,n,y),n+=4;for(var f=0;f<u.length;f++){var v=c._writeIFD(m,o,y,u[f]);y=v[1],f<u.length-1&&m.writeUint(o,v[0],y)}return o.slice(0,y).buffer},c.decode=function(u){c.decode._decodeG3.allow2D=null;var o=new Uint8Array(u),n=0,m=c._binBE.readASCII(o,n,2);n+=2;var y=m=="II"?c._binLE:c._binBE;y.readUshort(o,n),n+=2;var f=y.readUint(o,n);n+=4;for(var v=[];;){var p=c._readIFD(y,o,f,v);if(f=y.readUint(o,p),f==0)break}return v},c.decodeImages=function(u,o){for(var n=new Uint8Array(u),m=c._binBE.readASCII(n,0,2),y=0;y<o.length;y++){var f=o[y];if(f.t256!=null){f.isLE=m=="II",f.width=f.t256[0],f.height=f.t257[0];var v=f.t259?f.t259[0]:1,p=f.t266?f.t266[0]:1;f.t284&&f.t284[0]==2&&b("PlanarConfiguration 2 should not be used!");var w=(f.t258?Math.min(32,f.t258[0]):1)*(f.t277?f.t277[0]:1),A=Math.ceil(f.width*w/8)*8,x=f.t273;x==null&&(x=f.t324);var k=f.t279;v==1&&x.length==1&&(k=[f.height*(A>>>3)]),k==null&&(k=f.t325);var N=new Uint8Array(f.height*(A>>>3)),E=0;if(f.t322!=null){for(var S=f.t322[0],R=f.t323[0],M=Math.floor((f.width+S-1)/S),j=Math.floor((f.height+R-1)/R),O=new Uint8Array(Math.ceil(S*R*w/8)|0),V=0;V<j;V++)for(var J=0;J<M;J++){for(var B=V*M+J,z=0;z<O.length;z++)O[z]=0;c.decode._decompress(f,n,x[B],k[B],v,O,0,p),v==6?N=O:c._copyTile(O,Math.ceil(S*w/8)|0,R,N,Math.ceil(f.width*w/8)|0,f.height,Math.ceil(J*S*w/8)|0,V*R)}E=N.length*8}else{var G=f.t278?f.t278[0]:f.height;G=Math.min(G,f.height);for(var B=0;B<x.length;B++)c.decode._decompress(f,n,x[B],k[B],v,N,Math.ceil(E/8)|0,p),E+=A*G;E=Math.min(E,N.length*8)}f.data=new Uint8Array(N.buffer,0,Math.ceil(E/8)|0)}}},c.decode._decompress=function(u,o,n,m,y,f,v,p){if(y==1)for(var w=0;w<m;w++)f[v+w]=o[n+w];else if(y==3)c.decode._decodeG3(o,n,m,f,v,u.width,p);else if(y==4)c.decode._decodeG4(o,n,m,f,v,u.width,p);else if(y==5)c.decode._decodeLZW(o,n,f,v);else if(y==6)c.decode._decodeOldJPEG(u,o,n,m,f,v);else if(y==7)c.decode._decodeNewJPEG(u,o,n,m,f,v);else if(y==8)for(var A=new Uint8Array(o.buffer,n,m),x=h.inflate(A),k=0;k<x.length;k++)f[v+k]=x[k];else y==32773?c.decode._decodePackBits(o,n,m,f,v):y==32809?c.decode._decodeThunder(o,n,m,f,v):b("Unknown compression",y);if(u.t317&&u.t317[0]==2)for(var N=u.t277?u.t277[0]:1,E=u.t278?u.t278[0]:u.height,S=u.width*N,R=0;R<E;R++){var M=v+R*S;if(N==3)for(var w=3;w<S;w+=3)f[M+w]=f[M+w]+f[M+w-3]&255,f[M+w+1]=f[M+w+1]+f[M+w-2]&255,f[M+w+2]=f[M+w+2]+f[M+w-1]&255;else for(var w=N;w<S;w++)f[M+w]=f[M+w]+f[M+w-N]&255}},c.decode._decodeNikon=function(u,o,p,m,y){var f,v,p;b(u.slice(o,o+100)),f=u[o],o++,v=u[o],o++,b(f.toString(16),v.toString(16),p)},c.decode._decodeNewJPEG=function(u,o,n,m,y,f){var v=u.t347,p=v?v.length:0,w=new Uint8Array(p+m);if(v){for(var A=216,x=217,k=0,N=0;N<p-1&&!(v[N]==255&&v[N+1]==x);N++)w[k++]=v[N];var E=o[n],S=o[n+1];(E!=255||S!=A)&&(w[k++]=E,w[k++]=S);for(var N=2;N<m;N++)w[k++]=o[n+N]}else for(var N=0;N<m;N++)w[N]=o[n+N];if(u.t262==32803){var R=u.t258[0],M=new LosslessJpegDecoder,j=M.decode(w),O=j.length;if(R==16)for(var N=0;N<O;N++)y[f++]=j[N]&255,y[f++]=j[N]>>>8;else if(R==12)for(var N=0;N<O;N+=2)y[f++]=j[N]>>>4,y[f++]=(j[N]<<4|j[N+1]>>>8)&255,y[f++]=j[N+1]&255;else throw new Error("unsupported bit depth "+R)}else{var V=new c.JpegDecoder;V.parse(w);for(var J=V.getData(V.width,V.height),N=0;N<J.length;N++)y[f+N]=J[N]}u.t262[0]==6&&(u.t262[0]=2)},c.decode._decodeOldJPEGInit=function(u,o,n,m){var y=216,f=219,v=196,p=221,w=192,A=218,x=0,k=0,N,E,S=!1,R,M,j,O=u.t513,V=O?O[0]:0,J=u.t514,B=J?J[0]:0,z=u.t324||u.t273||O,G=u.t530,U=0,ie=0,oe=u.t277?u.t277[0]:1,ae=u.t515;if(z&&(k=z[0],S=z.length>1),!S){if(o[n]==255&&o[n+1]==y)return{jpegOffset:n};if(O!=null&&(o[n+V]==255&&o[n+V+1]==y?x=n+V:b("JPEGInterchangeFormat does not point to SOI"),J==null?b("JPEGInterchangeFormatLength field is missing"):(V>=k||V+B<=k)&&b("JPEGInterchangeFormatLength field value is invalid"),x!=null))return{jpegOffset:x}}if(G!=null&&(U=G[0],ie=G[1]),O!=null&&J!=null)if(B>=2&&V+B<=k){for(o[n+V+B-2]==255&&o[n+V+B-1]==y?N=new Uint8Array(B-2):N=new Uint8Array(B),R=0;R<N.length;R++)N[R]=o[n+V+R];b("Incorrect JPEG interchange format: using JPEGInterchangeFormat offset to derive tables")}else b("JPEGInterchangeFormat+JPEGInterchangeFormatLength > offset to first strip or tile");if(N==null){var W=0,ee=[];ee[W++]=255,ee[W++]=y;var _=u.t519;if(_==null)throw new Error("JPEGQTables tag is missing");for(R=0;R<_.length;R++)for(ee[W++]=255,ee[W++]=f,ee[W++]=0,ee[W++]=67,ee[W++]=R,M=0;M<64;M++)ee[W++]=o[n+_[R]+M];for(j=0;j<2;j++){var re=u[j==0?"t520":"t521"];if(re==null)throw new Error((j==0?"JPEGDCTables":"JPEGACTables")+" tag is missing");for(R=0;R<re.length;R++){ee[W++]=255,ee[W++]=v;var fe=19;for(M=0;M<16;M++)fe+=o[n+re[R]+M];for(ee[W++]=fe>>>8,ee[W++]=fe&255,ee[W++]=R|j<<4,M=0;M<16;M++)ee[W++]=o[n+re[R]+M];for(M=0;M<fe;M++)ee[W++]=o[n+re[R]+16+M]}}if(ee[W++]=255,ee[W++]=w,ee[W++]=0,ee[W++]=8+3*oe,ee[W++]=8,ee[W++]=u.height>>>8&255,ee[W++]=u.height&255,ee[W++]=u.width>>>8&255,ee[W++]=u.width&255,ee[W++]=oe,oe==1)ee[W++]=1,ee[W++]=17,ee[W++]=0;else for(R=0;R<3;R++)ee[W++]=R+1,ee[W++]=R!=0?17:(U&15)<<4|ie&15,ee[W++]=R;ae!=null&&ae[0]!=0&&(ee[W++]=255,ee[W++]=p,ee[W++]=0,ee[W++]=4,ee[W++]=ae[0]>>>8&255,ee[W++]=ae[0]&255),N=new Uint8Array(ee)}var pe=-1;for(R=0;R<N.length-1;){if(N[R]==255&&N[R+1]==w){pe=R;break}R++}if(pe==-1){var he=new Uint8Array(N.length+10+3*oe);he.set(N);var se=N.length;if(pe=N.length,N=he,N[se++]=255,N[se++]=w,N[se++]=0,N[se++]=8+3*oe,N[se++]=8,N[se++]=u.height>>>8&255,N[se++]=u.height&255,N[se++]=u.width>>>8&255,N[se++]=u.width&255,N[se++]=oe,oe==1)N[se++]=1,N[se++]=17,N[se++]=0;else for(R=0;R<3;R++)N[se++]=R+1,N[se++]=R!=0?17:(U&15)<<4|ie&15,N[se++]=R}if(o[k]==255&&o[k+1]==A){var ce=o[k+2]<<8|o[k+3];for(E=new Uint8Array(ce+2),E[0]=o[k],E[1]=o[k+1],E[2]=o[k+2],E[3]=o[k+3],R=0;R<ce-2;R++)E[R+4]=o[k+R+4]}else{E=new Uint8Array(2+6+2*oe);var q=0;if(E[q++]=255,E[q++]=A,E[q++]=0,E[q++]=6+2*oe,E[q++]=oe,oe==1)E[q++]=1,E[q++]=0;else for(R=0;R<3;R++)E[q++]=R+1,E[q++]=R<<4|R;E[q++]=0,E[q++]=63,E[q++]=0}return{jpegOffset:n,tables:N,sosMarker:E,sofPosition:pe}},c.decode._decodeOldJPEG=function(u,o,n,m,y,f){var v,p,w,A,x=c.decode._decodeOldJPEGInit(u,o,n,m);if(x.jpegOffset!=null)for(p=n+m-x.jpegOffset,A=new Uint8Array(p),v=0;v<p;v++)A[v]=o[x.jpegOffset+v];else{for(w=x.tables.length,A=new Uint8Array(w+x.sosMarker.length+m+2),A.set(x.tables),A[x.sofPosition+5]=u.height>>>8&255,A[x.sofPosition+6]=u.height&255,A[x.sofPosition+7]=u.width>>>8&255,A[x.sofPosition+8]=u.width&255,(o[n]!=255||o[n+1]!=SOS)&&(A.set(x.sosMarker,bufoff),bufoff+=sosMarker.length),v=0;v<m;v++)A[bufoff++]=o[n+v];A[bufoff++]=255,A[bufoff++]=EOI}var k=new c.JpegDecoder;k.parse(A);for(var N=k.getData(k.width,k.height),v=0;v<N.length;v++)y[f+v]=N[v];u.t262[0]==6&&(u.t262[0]=2)},c.decode._decodePackBits=function(u,o,n,m,y){for(var f=new Int8Array(u.buffer),v=new Int8Array(m.buffer),p=o+n;o<p;){var w=f[o];if(o++,w>=0&&w<128)for(var A=0;A<w+1;A++)v[y]=f[o],y++,o++;if(w>=-127&&w<0){for(var A=0;A<-w+1;A++)v[y]=f[o],y++;o++}}},c.decode._decodeThunder=function(u,o,n,m,y){for(var f=[0,1,0,-1],v=[0,1,2,3,0,-3,-2,-1],p=o+n,w=y*2,A=0;o<p;){var x=u[o],k=x>>>6,N=x&63;if(o++,k==3&&(A=N&15,m[w>>>1]|=A<<4*(1-w&1),w++),k==0)for(var E=0;E<N;E++)m[w>>>1]|=A<<4*(1-w&1),w++;if(k==2)for(var E=0;E<2;E++){var S=N>>>3*(1-E)&7;S!=4&&(A+=v[S],m[w>>>1]|=A<<4*(1-w&1),w++)}if(k==1)for(var E=0;E<3;E++){var S=N>>>2*(2-E)&3;S!=2&&(A+=f[S],m[w>>>1]|=A<<4*(1-w&1),w++)}}},c.decode._dmap={"1":0,"011":1,"000011":2,"0000011":3,"010":-1,"000010":-2,"0000010":-3},c.decode._lens=function(){var u=function(w,A,x,k){for(var N=0;N<A.length;N++)w[A[N]]=x+N*k},o="00110101,000111,0111,1000,1011,1100,1110,1111,10011,10100,00111,01000,001000,000011,110100,110101,101010,101011,0100111,0001100,0001000,0010111,0000011,0000100,0101000,0101011,0010011,0100100,0011000,00000010,00000011,00011010,00011011,00010010,00010011,00010100,00010101,00010110,00010111,00101000,00101001,00101010,00101011,00101100,00101101,00000100,00000101,00001010,00001011,01010010,01010011,01010100,01010101,00100100,00100101,01011000,01011001,01011010,01011011,01001010,01001011,00110010,00110011,00110100",n="0000110111,010,11,10,011,0011,0010,00011,000101,000100,0000100,0000101,0000111,00000100,00000111,000011000,0000010111,0000011000,0000001000,00001100111,00001101000,00001101100,00000110111,00000101000,00000010111,00000011000,000011001010,000011001011,000011001100,000011001101,000001101000,000001101001,000001101010,000001101011,000011010010,000011010011,000011010100,000011010101,000011010110,000011010111,000001101100,000001101101,000011011010,000011011011,000001010100,000001010101,000001010110,000001010111,000001100100,000001100101,000001010010,000001010011,000000100100,000000110111,000000111000,000000100111,000000101000,000001011000,000001011001,000000101011,000000101100,000001011010,000001100110,000001100111",m="11011,10010,010111,0110111,00110110,00110111,01100100,01100101,01101000,01100111,011001100,011001101,011010010,011010011,011010100,011010101,011010110,011010111,011011000,011011001,011011010,011011011,010011000,010011001,010011010,011000,010011011",y="0000001111,000011001000,000011001001,000001011011,000000110011,000000110100,000000110101,0000001101100,0000001101101,0000001001010,0000001001011,0000001001100,0000001001101,0000001110010,0000001110011,0000001110100,0000001110101,0000001110110,0000001110111,0000001010010,0000001010011,0000001010100,0000001010101,0000001011010,0000001011011,0000001100100,0000001100101",f="00000001000,00000001100,00000001101,000000010010,000000010011,000000010100,000000010101,000000010110,000000010111,000000011100,000000011101,000000011110,000000011111";o=o.split(","),n=n.split(","),m=m.split(","),y=y.split(","),f=f.split(",");var v={},p={};return u(v,o,0,1),u(v,m,64,64),u(v,f,1792,64),u(p,n,0,1),u(p,y,64,64),u(p,f,1792,64),[v,p]}(),c.decode._decodeG4=function(u,o,n,m,y,f,v){for(var p=c.decode,w=o<<3,A=0,x="",k=[],N=[],E=0;E<f;E++)N.push(0);N=p._makeDiff(N);for(var S=0,R=0,M=0,j=0,O=0,V=0,J="",B=0,z=Math.ceil(f/8)*8;w>>>3<o+n;){M=p._findDiff(N,S+(S==0?0:1),1-O),j=p._findDiff(N,M,O);var G=0;if(v==1&&(G=u[w>>>3]>>>7-(w&7)&1),v==2&&(G=u[w>>>3]>>>(w&7)&1),w++,x+=G,J=="H"){if(p._lens[O][x]!=null){var U=p._lens[O][x];x="",A+=U,U<64&&(p._addNtimes(k,A,O),S+=A,O=1-O,A=0,B--,B==0&&(J=""))}}else x=="0001"&&(x="",p._addNtimes(k,j-S,O),S=j),x=="001"&&(x="",J="H",B=2),p._dmap[x]!=null&&(R=M+p._dmap[x],p._addNtimes(k,R-S,O),S=R,x="",O=1-O);k.length==f&&J==""&&(p._writeBits(k,m,y*8+V*z),O=0,V++,S=0,N=p._makeDiff(k),k=[])}},c.decode._findDiff=function(u,o,n){for(var m=0;m<u.length;m+=2)if(u[m]>=o&&u[m+1]==n)return u[m]},c.decode._makeDiff=function(u){var o=[];u[0]==1&&o.push(0,1);for(var n=1;n<u.length;n++)u[n-1]!=u[n]&&o.push(n,u[n]);return o.push(u.length,0,u.length,1),o},c.decode._decodeG3=function(u,o,n,m,y,f,v){for(var p=c.decode,w=o<<3,A=0,x="",k=[],N=[],E=0;E<f;E++)k.push(0);for(var S=0,R=0,M=0,j=0,O=0,V=-1,J="",B=0,z=!1,G=Math.ceil(f/8)*8;w>>>3<o+n;){M=p._findDiff(N,S+(S==0?0:1),1-O),j=p._findDiff(N,M,O);var U=0;if(v==1&&(U=u[w>>>3]>>>7-(w&7)&1),v==2&&(U=u[w>>>3]>>>(w&7)&1),w++,x+=U,z){if(p._lens[O][x]!=null){var ie=p._lens[O][x];x="",A+=ie,ie<64&&(p._addNtimes(k,A,O),O=1-O,A=0)}}else if(J=="H"){if(p._lens[O][x]!=null){var ie=p._lens[O][x];x="",A+=ie,ie<64&&(p._addNtimes(k,A,O),S+=A,O=1-O,A=0,B--,B==0&&(J=""))}}else x=="0001"&&(x="",p._addNtimes(k,j-S,O),S=j),x=="001"&&(x="",J="H",B=2),p._dmap[x]!=null&&(R=M+p._dmap[x],p._addNtimes(k,R-S,O),S=R,x="",O=1-O);x.endsWith("000000000001")&&(V>=0&&p._writeBits(k,m,y*8+V*G),v==1&&(z=(u[w>>>3]>>>7-(w&7)&1)==1),v==2&&(z=(u[w>>>3]>>>(w&7)&1)==1),w++,p._decodeG3.allow2D==null&&(p._decodeG3.allow2D=z),p._decodeG3.allow2D||(z=!0,w--),x="",O=0,V++,S=0,N=p._makeDiff(k),k=[])}k.length==f&&p._writeBits(k,m,y*8+V*G)},c.decode._addNtimes=function(u,o,n){for(var m=0;m<o;m++)u.push(n)},c.decode._writeBits=function(u,o,n){for(var m=0;m<u.length;m++)o[n+m>>>3]|=u[m]<<7-(n+m&7)},c.decode._decodeLZW=function(u,o,n,m){if(c.decode._lzwTab==null){for(var y=new Uint32Array(65535),f=new Uint16Array(65535),x=new Uint8Array(2e6),v=0;v<256;v++)x[v<<2]=v,y[v]=v<<2,f[v]=1;c.decode._lzwTab=[y,f,x]}for(var p=c.decode._copyData,w=c.decode._lzwTab[0],A=c.decode._lzwTab[1],x=c.decode._lzwTab[2],k=258,N=258<<2,E=9,S=o<<3,R=256,M=257,j=0,O=0,V=0;j=u[S>>>3]<<16|u[S+8>>>3]<<8|u[S+16>>>3],O=j>>24-(S&7)-E&(1<<E)-1,S+=E,O!=M;){if(O==R){if(E=9,k=258,N=258<<2,j=u[S>>>3]<<16|u[S+8>>>3]<<8|u[S+16>>>3],O=j>>24-(S&7)-E&(1<<E)-1,S+=E,O==M)break;n[m]=O,m++}else if(O<k){var J=w[O],B=A[O];if(p(x,J,n,m,B),m+=B,V>=k)w[k]=N,x[w[k]]=J[0],A[k]=1,N=N+1+3&-4,k++;else{w[k]=N;var z=w[V],G=A[V];p(x,z,x,N,G),x[N+G]=x[J],G++,A[k]=G,k++,N=N+G+3&-4}k+1==1<<E&&E++}else{if(V>=k)w[k]=N,A[k]=0,k++;else{w[k]=N;var z=w[V],G=A[V];p(x,z,x,N,G),x[N+G]=x[N],G++,A[k]=G,k++,p(x,N,n,m,G),m+=G,N=N+G+3&-4}k+1==1<<E&&E++}V=O}},c.decode._copyData=function(u,o,n,m,y){for(var f=0;f<y;f+=4)n[m+f]=u[o+f],n[m+f+1]=u[o+f+1],n[m+f+2]=u[o+f+2],n[m+f+3]=u[o+f+3]},c.tags={254:"NewSubfileType",255:"SubfileType",256:"ImageWidth",257:"ImageLength",258:"BitsPerSample",259:"Compression",262:"PhotometricInterpretation",266:"FillOrder",269:"DocumentName",270:"ImageDescription",271:"Make",272:"Model",273:"StripOffset",274:"Orientation",277:"SamplesPerPixel",278:"RowsPerStrip",279:"StripByteCounts",280:"MinSampleValue",281:"MaxSampleValue",282:"XResolution",283:"YResolution",284:"PlanarConfiguration",285:"PageName",286:"XPosition",287:"YPosition",292:"T4Options",296:"ResolutionUnit",297:"PageNumber",305:"Software",306:"DateTime",315:"Artist",316:"HostComputer",317:"Predictor",318:"WhitePoint",319:"PrimaryChromaticities",320:"ColorMap",321:"HalftoneHints",322:"TileWidth",323:"TileLength",324:"TileOffset",325:"TileByteCounts",330:"SubIFDs",336:"DotRange",338:"ExtraSample",339:"SampleFormat",347:"JPEGTables",512:"JPEGProc",513:"JPEGInterchangeFormat",514:"JPEGInterchangeFormatLength",519:"JPEGQTables",520:"JPEGDCTables",521:"JPEGACTables",529:"YCbCrCoefficients",530:"YCbCrSubSampling",531:"YCbCrPositioning",532:"ReferenceBlackWhite",700:"XMP",33421:"CFARepeatPatternDim",33422:"CFAPattern",33432:"Copyright",33434:"ExposureTime",33437:"FNumber",33723:"IPTC/NAA",34377:"Photoshop",34665:"ExifIFD",34675:"ICC Profile",34850:"ExposureProgram",34853:"GPSInfo",34855:"ISOSpeedRatings",34858:"TimeZoneOffset",34859:"SelfTimeMode",36867:"DateTimeOriginal",36868:"DateTimeDigitized",37377:"ShutterSpeedValue",37378:"ApertureValue",37380:"ExposureBiasValue",37383:"MeteringMode",37385:"Flash",37386:"FocalLength",37390:"FocalPlaneXResolution",37391:"FocalPlaneYResolution",37392:"FocalPlaneResolutionUnit",37393:"ImageNumber",37398:"TIFF/EPStandardID",37399:"SensingMethod",37500:"MakerNote",37510:"UserComment",37724:"ImageSourceData",40092:"XPComment",40094:"XPKeywords",40961:"ColorSpace",40962:"PixelXDimension",40963:"PixelXDimension",41486:"FocalPlaneXResolution",41487:"FocalPlaneYResolution",41488:"FocalPlaneResolutionUnit",41985:"CustomRendered",41986:"ExposureMode",41987:"WhiteBalance",41990:"SceneCaptureType",50706:"DNGVersion",50707:"DNGBackwardVersion",50708:"UniqueCameraModel",50709:"LocalizedCameraModel",50710:"CFAPlaneColor",50711:"CFALayout",50712:"LinearizationTable",50713:"BlackLevelRepeatDim",50714:"BlackLevel",50716:"BlackLevelDeltaV",50717:"WhiteLevel",50718:"DefaultScale",50719:"DefaultCropOrigin",50720:"DefaultCropSize",50733:"BayerGreenSplit",50738:"AntiAliasStrength",50721:"ColorMatrix1",50722:"ColorMatrix2",50723:"CameraCalibration1",50724:"CameraCalibration2",50727:"AnalogBalance",50728:"AsShotNeutral",50730:"BaselineExposure",50731:"BaselineNoise",50732:"BaselineSharpness",50734:"LinearResponseLimit",50735:"CameraSerialNumber",50736:"LensInfo",50739:"ShadowScale",50740:"DNGPrivateData",50741:"MakerNoteSafety",50778:"CalibrationIlluminant1",50779:"CalibrationIlluminant2",50780:"BestQualityScale",50781:"RawDataUniqueID",50827:"OriginalRawFileName",50829:"ActiveArea",50830:"MaskedAreas",50931:"CameraCalibrationSignature",50932:"ProfileCalibrationSignature",50935:"NoiseReductionApplied",50936:"ProfileName",50937:"ProfileHueSatMapDims",50938:"ProfileHueSatMapData1",50939:"ProfileHueSatMapData2",50940:"ProfileToneCurve",50941:"ProfileEmbedPolicy",50942:"ProfileCopyright",50964:"ForwardMatrix1",50965:"ForwardMatrix2",50966:"PreviewApplicationName",50967:"PreviewApplicationVersion",50969:"PreviewSettingsDigest",50970:"PreviewColorSpace",50971:"PreviewDateTime",50972:"RawImageDigest",51008:"OpcodeList1",51009:"OpcodeList2",51022:"OpcodeList3",51041:"NoiseProfile",51089:"OriginalDefaultFinalSize",51090:"OriginalBestQualityFinalSize",51091:"OriginalDefaultCropSize",51125:"DefaultUserCrop"},c.ttypes={256:3,257:3,258:3,259:3,262:3,273:4,274:3,277:3,278:4,279:4,282:5,283:5,284:3,286:5,287:5,296:3,305:2,306:2,338:3,513:4,514:4,34665:4},c._readIFD=function(u,o,n,m){var y=u.readUshort(o,n);n+=2;var f={};m.push(f);for(var v=0;v<y;v++){var p=u.readUshort(o,n);n+=2;var w=u.readUshort(o,n);n+=2;var A=u.readUint(o,n);n+=4;var x=u.readUint(o,n);n+=4;var k=[];if(f["t"+p]=k,w==1||w==7)for(var N=0;N<A;N++)k.push(o[(A<5?n-4:x)+N]);if(w==2&&k.push(u.readASCII(o,A<5?n-4:x,A-1)),w==3)for(var N=0;N<A;N++)k.push(u.readUshort(o,(A<3?n-4:x)+2*N));if(w==4)for(var N=0;N<A;N++)k.push(u.readUint(o,(A<2?n-4:x)+4*N));if(w==5)for(var N=0;N<A;N++)k.push(u.readUint(o,x+N*8)/u.readUint(o,x+N*8+4));if(w==8)for(var N=0;N<A;N++)k.push(u.readShort(o,(A<3?n-4:x)+2*N));if(w==9)for(var N=0;N<A;N++)k.push(u.readInt(o,(A<2?n-4:x)+4*N));if(w==10)for(var N=0;N<A;N++)k.push(u.readInt(o,x+N*8)/u.readInt(o,x+N*8+4));if(w==11)for(var N=0;N<A;N++)k.push(u.readFloat(o,x+N*4));if(w==12)for(var N=0;N<A;N++)k.push(u.readDouble(o,x+N*8));if(A!=0&&k.length==0&&b("unknown TIFF tag type: ",w,"num:",A),p==330)for(var N=0;N<A;N++)c._readIFD(u,o,k[N],m)}return n},c._writeIFD=function(u,o,n,m){var y=Object.keys(m);u.writeUshort(o,n,y.length),n+=2;for(var f=n+y.length*12+4,v=0;v<y.length;v++){var p=y[v],w=parseInt(p.slice(1)),A=c.ttypes[w];if(A==null)throw new Error("unknown type of tag: "+w);var x=m[p];A==2&&(x=x[0]+"\0");var k=x.length;u.writeUshort(o,n,w),n+=2,u.writeUshort(o,n,A),n+=2,u.writeUint(o,n,k),n+=4;var N=[-1,1,1,2,4,8,0,0,0,0,0,0,8][A]*k,E=n;if(N>4&&(u.writeUint(o,n,f),E=f),A==2&&u.writeASCII(o,E,x),A==3)for(var S=0;S<k;S++)u.writeUshort(o,E+2*S,x[S]);if(A==4)for(var S=0;S<k;S++)u.writeUint(o,E+4*S,x[S]);if(A==5)for(var S=0;S<k;S++)u.writeUint(o,E+8*S,Math.round(x[S]*1e4)),u.writeUint(o,E+8*S+4,1e4);if(A==12)for(var S=0;S<k;S++)u.writeDouble(o,E+8*S,x[S]);N>4&&(N+=N&1,f+=N),n+=4}return[n,f]},c.toRGBA8=function(u){var o=u.width,n=u.height,m=o*n,y=m*4,f=u.data,v=new Uint8Array(m*4),p=u.t262[0],w=u.t258?Math.min(32,u.t258[0]):1,A=u.isLE?1:0;if(p==0)for(var x=Math.ceil(w*o/8),k=0;k<n;k++){var N=k*x,E=k*o;if(w==1)for(var S=0;S<o;S++){var R=E+S<<2,M=f[N+(S>>3)]>>7-(S&7)&1;v[R]=v[R+1]=v[R+2]=(1-M)*255,v[R+3]=255}if(w==4)for(var S=0;S<o;S++){var R=E+S<<2,M=f[N+(S>>1)]>>4-4*(S&1)&15;v[R]=v[R+1]=v[R+2]=(15-M)*17,v[R+3]=255}if(w==8)for(var S=0;S<o;S++){var R=E+S<<2,M=f[N+S];v[R]=v[R+1]=v[R+2]=255-M,v[R+3]=255}}else if(p==1)for(var x=Math.ceil(w*o/8),k=0;k<n;k++){var N=k*x,E=k*o;if(w==1)for(var S=0;S<o;S++){var R=E+S<<2,M=f[N+(S>>3)]>>7-(S&7)&1;v[R]=v[R+1]=v[R+2]=M*255,v[R+3]=255}if(w==2)for(var S=0;S<o;S++){var R=E+S<<2,M=f[N+(S>>2)]>>6-2*(S&3)&3;v[R]=v[R+1]=v[R+2]=M*85,v[R+3]=255}if(w==8)for(var S=0;S<o;S++){var R=E+S<<2,M=f[N+S];v[R]=v[R+1]=v[R+2]=M,v[R+3]=255}if(w==16)for(var S=0;S<o;S++){var R=E+S<<2,M=f[N+(2*S+A)];v[R]=v[R+1]=v[R+2]=Math.min(255,M),v[R+3]=255}}else if(p==2)if(w==8)if(u.t338)if(u.t338[0]>0)for(var S=0;S<y;S++)v[S]=f[S];else for(var S=0;S<y;S+=4)v[S]=f[S],v[S+1]=f[S+1],v[S+2]=f[S+2],v[S+3]=255;else{var j=u.t258?u.t258.length:3;if(j==4)for(var S=0;S<y;S++)v[S]=f[S];if(j==3)for(var S=0;S<m;S++){var R=S<<2,O=S*3;v[R]=f[O],v[R+1]=f[O+1],v[R+2]=f[O+2],v[R+3]=255}}else for(var S=0;S<m;S++){var R=S<<2,O=S*6;v[R]=f[O],v[R+1]=f[O+2],v[R+2]=f[O+4],v[R+3]=255}else if(p==3)for(var V=u.t320,S=0;S<m;S++){var R=S<<2,J=f[S];v[R]=V[J]>>8,v[R+1]=V[256+J]>>8,v[R+2]=V[512+J]>>8,v[R+3]=255}else if(p==5)for(var j=u.t258?u.t258.length:4,B=j>4?1:0,S=0;S<m;S++){var R=S<<2,z=S*j,G=255-f[z],U=255-f[z+1],ie=255-f[z+2],oe=(255-f[z+3])*(1/255);v[R]=~~(G*oe+.5),v[R+1]=~~(U*oe+.5),v[R+2]=~~(ie*oe+.5),v[R+3]=255*(1-B)+f[z+4]*B}else b("Unknown Photometric interpretation: "+p);return v},c.replaceIMG=function(){for(var u=document.getElementsByTagName("img"),o=0;o<u.length;o++){var n=u[o],m=n.getAttribute("src");if(m!=null){var y=m.split(".").pop().toLowerCase();if(!(y!="tif"&&y!="tiff")){var f=new XMLHttpRequest;c._xhrs.push(f),c._imgs.push(n),f.open("GET",m),f.responseType="arraybuffer",f.onload=c._imgLoaded,f.send()}}}},c._xhrs=[],c._imgs=[],c._imgLoaded=function(u){var o=u.target.response,n=c.decode(o),m=n[0];c.decodeImages(o,n);var y=c.toRGBA8(m),f=m.width,v=m.height,p=c._xhrs.indexOf(u.target),w=c._imgs[p];c._xhrs.splice(p,1),c._imgs.splice(p,1);var A=document.createElement("canvas");A.width=f,A.height=v;for(var x=A.getContext("2d"),k=x.createImageData(f,v),N=0;N<y.length;N++)k.data[N]=y[N];x.putImageData(k,0,0);for(var E=["style","class","id"],N=0;N<E.length;N++)A.setAttribute(E[N],w.getAttribute(E[N]));w.parentNode.replaceChild(A,w)},c._binBE={nextZero:function(u,o){for(;u[o]!=0;)o++;return o},readUshort:function(u,o){return u[o]<<8|u[o+1]},readShort:function(u,o){var n=c._binBE.ui8;return n[0]=u[o+1],n[1]=u[o+0],c._binBE.i16[0]},readInt:function(u,o){var n=c._binBE.ui8;return n[0]=u[o+3],n[1]=u[o+2],n[2]=u[o+1],n[3]=u[o+0],c._binBE.i32[0]},readUint:function(u,o){var n=c._binBE.ui8;return n[0]=u[o+3],n[1]=u[o+2],n[2]=u[o+1],n[3]=u[o+0],c._binBE.ui32[0]},readASCII:function(u,o,n){for(var m="",y=0;y<n;y++)m+=String.fromCharCode(u[o+y]);return m},readFloat:function(u,o){for(var n=c._binBE.ui8,m=0;m<4;m++)n[m]=u[o+3-m];return c._binBE.fl32[0]},readDouble:function(u,o){for(var n=c._binBE.ui8,m=0;m<8;m++)n[m]=u[o+7-m];return c._binBE.fl64[0]},writeUshort:function(u,o,n){u[o]=n>>8&255,u[o+1]=n&255},writeUint:function(u,o,n){u[o]=n>>24&255,u[o+1]=n>>16&255,u[o+2]=n>>8&255,u[o+3]=n>>0&255},writeASCII:function(u,o,n){for(var m=0;m<n.length;m++)u[o+m]=n.charCodeAt(m)},writeDouble:function(u,o,n){c._binBE.fl64[0]=n;for(var m=0;m<8;m++)u[o+m]=c._binBE.ui8[7-m]}},c._binBE.ui8=new Uint8Array(8),c._binBE.i16=new Int16Array(c._binBE.ui8.buffer),c._binBE.i32=new Int32Array(c._binBE.ui8.buffer),c._binBE.ui32=new Uint32Array(c._binBE.ui8.buffer),c._binBE.fl32=new Float32Array(c._binBE.ui8.buffer),c._binBE.fl64=new Float64Array(c._binBE.ui8.buffer),c._binLE={nextZero:c._binBE.nextZero,readUshort:function(u,o){return u[o+1]<<8|u[o]},readShort:function(u,o){var n=c._binBE.ui8;return n[0]=u[o+0],n[1]=u[o+1],c._binBE.i16[0]},readInt:function(u,o){var n=c._binBE.ui8;return n[0]=u[o+0],n[1]=u[o+1],n[2]=u[o+2],n[3]=u[o+3],c._binBE.i32[0]},readUint:function(u,o){var n=c._binBE.ui8;return n[0]=u[o+0],n[1]=u[o+1],n[2]=u[o+2],n[3]=u[o+3],c._binBE.ui32[0]},readASCII:c._binBE.readASCII,readFloat:function(u,o){for(var n=c._binBE.ui8,m=0;m<4;m++)n[m]=u[o+m];return c._binBE.fl32[0]},readDouble:function(u,o){for(var n=c._binBE.ui8,m=0;m<8;m++)n[m]=u[o+m];return c._binBE.fl64[0]}},c._copyTile=function(u,o,n,m,y,f,v,p){for(var w=Math.min(o,y-v),A=Math.min(n,f-p),x=0;x<A;x++)for(var k=(p+x)*y+v,N=x*o,E=0;E<w;E++)m[k+E]=u[N+E]}})(s,g)})()}).call(this,r("_process"))},{_process:133,pako:86}],183:[function(r,d,a){(function(l){d.exports=s;function s(b,c){if(g("noDeprecation"))return b;var h=!1;function u(){if(!h){if(g("throwDeprecation"))throw new Error(c);g("traceDeprecation")?console.trace(c):console.warn(c),h=!0}return b.apply(this,arguments)}return u}function g(b){try{if(!l.localStorage)return!1}catch{return!1}var c=l.localStorage[b];return c==null?!1:String(c).toLowerCase()==="true"}}).call(this,typeof ot!="undefined"?ot:typeof self!="undefined"?self:typeof i!="undefined"?i:{})},{}],184:[function(r,d,a){arguments[4][26][0].apply(a,arguments)},{dup:26}],185:[function(r,d,a){arguments[4][27][0].apply(a,arguments)},{dup:27}],186:[function(r,d,a){arguments[4][28][0].apply(a,arguments)},{"./support/isBuffer":185,_process:133,dup:28,inherits:184}],187:[function(r,d,a){var l=r("global/window"),s=r("is-function"),g=r("parse-headers"),b=r("xtend");d.exports=o,d.exports.default=o,o.XMLHttpRequest=l.XMLHttpRequest||y,o.XDomainRequest="withCredentials"in new o.XMLHttpRequest?o.XMLHttpRequest:l.XDomainRequest,c(["get","put","post","patch","head","delete"],function(f){o[f==="delete"?"del":f]=function(v,p,w){return p=u(v,p,w),p.method=f.toUpperCase(),n(p)}});function c(f,v){for(var p=0;p<f.length;p++)v(f[p])}function h(f){for(var v in f)if(f.hasOwnProperty(v))return!1;return!0}function u(f,v,p){var w=f;return s(v)?(p=v,typeof f=="string"&&(w={uri:f})):w=b(v,{uri:f}),w.callback=p,w}function o(f,v,p){return v=u(f,v,p),n(v)}function n(f){if(typeof f.callback=="undefined")throw new Error("callback argument missing");var v=!1,p=function(U,ie,oe){v||(v=!0,f.callback(U,ie,oe))};function w(){N.readyState===4&&setTimeout(k,0)}function A(){var G=void 0;if(N.response?G=N.response:G=N.responseText||m(N),J)try{G=JSON.parse(G)}catch{}return G}function x(G){return clearTimeout(B),G instanceof Error||(G=new Error(""+(G||"Unknown XMLHttpRequest Error"))),G.statusCode=0,p(G,z)}function k(){if(!S){var G;clearTimeout(B),f.useXDR&&N.status===void 0?G=200:G=N.status===1223?204:N.status;var U=z,ie=null;return G!==0?(U={body:A(),statusCode:G,method:M,headers:{},url:R,rawRequest:N},N.getAllResponseHeaders&&(U.headers=g(N.getAllResponseHeaders()))):ie=new Error("Internal XMLHttpRequest Error"),p(ie,U,U.body)}}var N=f.xhr||null;N||(f.cors||f.useXDR?N=new o.XDomainRequest:N=new o.XMLHttpRequest);var E,S,R=N.url=f.uri||f.url,M=N.method=f.method||"GET",j=f.body||f.data,O=N.headers=f.headers||{},V=!!f.sync,J=!1,B,z={body:void 0,headers:{},statusCode:0,method:M,url:R,rawRequest:N};if("json"in f&&f.json!==!1&&(J=!0,O.accept||O.Accept||(O.Accept="application/json"),M!=="GET"&&M!=="HEAD"&&(O["content-type"]||O["Content-Type"]||(O["Content-Type"]="application/json"),j=JSON.stringify(f.json===!0?j:f.json))),N.onreadystatechange=w,N.onload=k,N.onerror=x,N.onprogress=function(){},N.onabort=function(){S=!0},N.ontimeout=x,N.open(M,R,!V,f.username,f.password),V||(N.withCredentials=!!f.withCredentials),!V&&f.timeout>0&&(B=setTimeout(function(){if(!S){S=!0,N.abort("timeout");var G=new Error("XMLHttpRequest timeout");G.code="ETIMEDOUT",x(G)}},f.timeout)),N.setRequestHeader)for(E in O)O.hasOwnProperty(E)&&N.setRequestHeader(E,O[E]);else if(f.headers&&!h(f.headers))throw new Error("Headers cannot be set on an XDomainRequest object");return"responseType"in f&&(N.responseType=f.responseType),"beforeSend"in f&&typeof f.beforeSend=="function"&&f.beforeSend(N),N.send(j||null),N}function m(f){try{if(f.responseType==="document")return f.responseXML;var v=f.responseXML&&f.responseXML.documentElement.nodeName==="parsererror";if(f.responseType===""&&!v)return f.responseXML}catch{}return null}function y(){}},{"global/window":71,"is-function":78,"parse-headers":106,xtend:189}],188:[function(r,d,a){d.exports=function(){return typeof self.DOMParser!="undefined"?function(s){var g=new self.DOMParser;return g.parseFromString(s,"application/xml")}:typeof self.ActiveXObject!="undefined"&&new self.ActiveXObject("Microsoft.XMLDOM")?function(s){var g=new self.ActiveXObject("Microsoft.XMLDOM");return g.async="false",g.loadXML(s),g}:function(s){var g=document.createElement("div");return g.innerHTML=s,g}}()},{}],189:[function(r,d,a){d.exports=s;var l=Object.prototype.hasOwnProperty;function s(){for(var g={},b=0;b<arguments.length;b++){var c=arguments[b];for(var h in c)l.call(c,h)&&(g[h]=c[h])}return g}},{}],190:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.srcOver=l,a.dstOver=s,a.multiply=g,a.add=b,a.screen=c,a.overlay=h,a.darken=u,a.lighten=o,a.hardLight=n,a.difference=m,a.exclusion=y;function l(f,v){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;f.a*=p;var w=v.a+f.a-v.a*f.a,A=(f.r*f.a+v.r*v.a*(1-f.a))/w,x=(f.g*f.a+v.g*v.a*(1-f.a))/w,k=(f.b*f.a+v.b*v.a*(1-f.a))/w;return{r:A,g:x,b:k,a:w}}function s(f,v){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;f.a*=p;var w=v.a+f.a-v.a*f.a,A=(v.r*v.a+f.r*f.a*(1-v.a))/w,x=(v.g*v.a+f.g*f.a*(1-v.a))/w,k=(v.b*v.a+f.b*f.a*(1-v.a))/w;return{r:A,g:x,b:k,a:w}}function g(f,v){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;f.a*=p;var w=v.a+f.a-v.a*f.a,A=f.r*f.a,x=f.g*f.a,k=f.b*f.a,N=v.r*v.a,E=v.g*v.a,S=v.b*v.a,R=(A*N+A*(1-v.a)+N*(1-f.a))/w,M=(x*E+x*(1-v.a)+E*(1-f.a))/w,j=(k*S+k*(1-v.a)+S*(1-f.a))/w;return{r:R,g:M,b:j,a:w}}function b(f,v){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;f.a*=p;var w=v.a+f.a-v.a*f.a,A=f.r*f.a,x=f.g*f.a,k=f.b*f.a,N=v.r*v.a,E=v.g*v.a,S=v.b*v.a,R=(A+N)/w,M=(x+E)/w,j=(k+S)/w;return{r:R,g:M,b:j,a:w}}function c(f,v){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;f.a*=p;var w=v.a+f.a-v.a*f.a,A=f.r*f.a,x=f.g*f.a,k=f.b*f.a,N=v.r*v.a,E=v.g*v.a,S=v.b*v.a,R=(A*v.a+N*f.a-A*N+A*(1-v.a)+N*(1-f.a))/w,M=(x*v.a+E*f.a-x*E+x*(1-v.a)+E*(1-f.a))/w,j=(k*v.a+S*f.a-k*S+k*(1-v.a)+S*(1-f.a))/w;return{r:R,g:M,b:j,a:w}}function h(f,v){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;f.a*=p;var w=v.a+f.a-v.a*f.a,A=f.r*f.a,x=f.g*f.a,k=f.b*f.a,N=v.r*v.a,E=v.g*v.a,S=v.b*v.a,R=(2*N<=v.a?2*A*N+A*(1-v.a)+N*(1-f.a):A*(1+v.a)+N*(1+f.a)-2*N*A-v.a*f.a)/w,M=(2*E<=v.a?2*x*E+x*(1-v.a)+E*(1-f.a):x*(1+v.a)+E*(1+f.a)-2*E*x-v.a*f.a)/w,j=(2*S<=v.a?2*k*S+k*(1-v.a)+S*(1-f.a):k*(1+v.a)+S*(1+f.a)-2*S*k-v.a*f.a)/w;return{r:R,g:M,b:j,a:w}}function u(f,v){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;f.a*=p;var w=v.a+f.a-v.a*f.a,A=f.r*f.a,x=f.g*f.a,k=f.b*f.a,N=v.r*v.a,E=v.g*v.a,S=v.b*v.a,R=(Math.min(A*v.a,N*f.a)+A*(1-v.a)+N*(1-f.a))/w,M=(Math.min(x*v.a,E*f.a)+x*(1-v.a)+E*(1-f.a))/w,j=(Math.min(k*v.a,S*f.a)+k*(1-v.a)+S*(1-f.a))/w;return{r:R,g:M,b:j,a:w}}function o(f,v){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;f.a*=p;var w=v.a+f.a-v.a*f.a,A=f.r*f.a,x=f.g*f.a,k=f.b*f.a,N=v.r*v.a,E=v.g*v.a,S=v.b*v.a,R=(Math.max(A*v.a,N*f.a)+A*(1-v.a)+N*(1-f.a))/w,M=(Math.max(x*v.a,E*f.a)+x*(1-v.a)+E*(1-f.a))/w,j=(Math.max(k*v.a,S*f.a)+k*(1-v.a)+S*(1-f.a))/w;return{r:R,g:M,b:j,a:w}}function n(f,v){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;f.a*=p;var w=v.a+f.a-v.a*f.a,A=f.r*f.a,x=f.g*f.a,k=f.b*f.a,N=v.r*v.a,E=v.g*v.a,S=v.b*v.a,R=(2*A<=f.a?2*A*N+A*(1-v.a)+N*(1-f.a):A*(1+v.a)+N*(1+f.a)-2*N*A-v.a*f.a)/w,M=(2*x<=f.a?2*x*E+x*(1-v.a)+E*(1-f.a):x*(1+v.a)+E*(1+f.a)-2*E*x-v.a*f.a)/w,j=(2*k<=f.a?2*k*S+k*(1-v.a)+S*(1-f.a):k*(1+v.a)+S*(1+f.a)-2*S*k-v.a*f.a)/w;return{r:R,g:M,b:j,a:w}}function m(f,v){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;f.a*=p;var w=v.a+f.a-v.a*f.a,A=f.r*f.a,x=f.g*f.a,k=f.b*f.a,N=v.r*v.a,E=v.g*v.a,S=v.b*v.a,R=(A+N-2*Math.min(A*v.a,N*f.a))/w,M=(x+E-2*Math.min(x*v.a,E*f.a))/w,j=(k+S-2*Math.min(k*v.a,S*f.a))/w;return{r:R,g:M,b:j,a:w}}function y(f,v){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;f.a*=p;var w=v.a+f.a-v.a*f.a,A=f.r*f.a,x=f.g*f.a,k=f.b*f.a,N=v.r*v.a,E=v.g*v.a,S=v.b*v.a,R=(A*v.a+N*f.a-2*A*N+A*(1-v.a)+N*(1-f.a))/w,M=(x*v.a+E*f.a-2*x*E+x*(1-v.a)+E*(1-f.a))/w,j=(k*v.a+S*f.a-2*k*S+k*(1-v.a)+S*(1-f.a))/w;return{r:R,g:M,b:j,a:w}}},{}],191:[function(r,d,a){var l=r("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(a,"__esModule",{value:!0}),a.default=c;var s=r("@jimp/utils"),g=l(r("../constants")),b=l(r("./composite-modes"));function c(h,u,o){var n=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},m=arguments.length>4?arguments[4]:void 0;if(typeof n=="function"&&(m=n,n={}),!(h instanceof this.constructor))return s.throwError.call(this,"The source must be a Jimp image",m);if(typeof u!="number"||typeof o!="number")return s.throwError.call(this,"x and y must be numbers",m);var y=n,f=y.mode,v=y.opacitySource,p=y.opacityDest;f||(f=g.BLEND_SOURCE_OVER),(typeof v!="number"||v<0||v>1)&&(v=1),(typeof p!="number"||p<0||p>1)&&(p=1);var w=b[f];u=Math.round(u),o=Math.round(o);var A=this;return p!==1&&A.opacity(p),h.scanQuiet(0,0,h.bitmap.width,h.bitmap.height,function(x,k,N){var E=A.getPixelIndex(u+x,o+k,g.EDGE_CROP),S=w({r:this.bitmap.data[N+0]/255,g:this.bitmap.data[N+1]/255,b:this.bitmap.data[N+2]/255,a:this.bitmap.data[N+3]/255},{r:A.bitmap.data[E+0]/255,g:A.bitmap.data[E+1]/255,b:A.bitmap.data[E+2]/255,a:A.bitmap.data[E+3]/255},v);A.bitmap.data[E+0]=this.constructor.limit255(S.r*255),A.bitmap.data[E+1]=this.constructor.limit255(S.g*255),A.bitmap.data[E+2]=this.constructor.limit255(S.b*255),A.bitmap.data[E+3]=this.constructor.limit255(S.a*255)}),(0,s.isNodePattern)(m)&&m.call(this,null,this),this}d.exports=a.default},{"../constants":192,"./composite-modes":190,"@babel/runtime/helpers/interopRequireWildcard":12,"@jimp/utils":235}],192:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.EDGE_CROP=a.EDGE_WRAP=a.EDGE_EXTEND=a.BLEND_EXCLUSION=a.BLEND_DIFFERENCE=a.BLEND_HARDLIGHT=a.BLEND_LIGHTEN=a.BLEND_DARKEN=a.BLEND_OVERLAY=a.BLEND_SCREEN=a.BLEND_ADD=a.BLEND_MULTIPLY=a.BLEND_DESTINATION_OVER=a.BLEND_SOURCE_OVER=a.VERTICAL_ALIGN_BOTTOM=a.VERTICAL_ALIGN_MIDDLE=a.VERTICAL_ALIGN_TOP=a.HORIZONTAL_ALIGN_RIGHT=a.HORIZONTAL_ALIGN_CENTER=a.HORIZONTAL_ALIGN_LEFT=a.AUTO=void 0;var l=-1;a.AUTO=l;var s=1;a.HORIZONTAL_ALIGN_LEFT=s;var g=2;a.HORIZONTAL_ALIGN_CENTER=g;var b=4;a.HORIZONTAL_ALIGN_RIGHT=b;var c=8;a.VERTICAL_ALIGN_TOP=c;var h=16;a.VERTICAL_ALIGN_MIDDLE=h;var u=32;a.VERTICAL_ALIGN_BOTTOM=u;var o="srcOver";a.BLEND_SOURCE_OVER=o;var n="dstOver";a.BLEND_DESTINATION_OVER=n;var m="multiply";a.BLEND_MULTIPLY=m;var y="add";a.BLEND_ADD=y;var f="screen";a.BLEND_SCREEN=f;var v="overlay";a.BLEND_OVERLAY=v;var p="darken";a.BLEND_DARKEN=p;var w="lighten";a.BLEND_LIGHTEN=w;var A="hardLight";a.BLEND_HARDLIGHT=A;var x="difference";a.BLEND_DIFFERENCE=x;var k="exclusion";a.BLEND_EXCLUSION=k;var N=1;a.EDGE_EXTEND=N;var E=2;a.EDGE_WRAP=E;var S=3;a.EDGE_CROP=S},{}],193:[function(r,d,a){(function(l){var s=r("@babel/runtime/helpers/interopRequireWildcard"),g=r("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(a,"__esModule",{value:!0}),a.addConstants=se,a.addJimpMethods=ce,a.jimpEvMethod=q,a.jimpEvChange=K,Object.defineProperty(a,"addType",{enumerable:!0,get:function(){return V.addType}}),a.default=void 0;for(var b=g(r("@babel/runtime/helpers/construct")),c=g(r("@babel/runtime/helpers/slicedToArray")),h=g(r("@babel/runtime/helpers/classCallCheck")),u=g(r("@babel/runtime/helpers/createClass")),o=g(r("@babel/runtime/helpers/possibleConstructorReturn")),n=g(r("@babel/runtime/helpers/getPrototypeOf")),m=g(r("@babel/runtime/helpers/assertThisInitialized")),y=g(r("@babel/runtime/helpers/inherits")),f=g(r("@babel/runtime/helpers/defineProperty")),v=g(r("@babel/runtime/helpers/typeof")),p=g(r("fs")),w=g(r("path")),A=g(r("events")),x=r("@jimp/utils"),k=g(r("any-base")),N=g(r("mkdirp")),E=g(r("pixelmatch")),S=g(r("tinycolor2")),R=g(r("./modules/phash")),M=g(r("./request")),j=g(r("./composite")),O=g(r("./utils/promisify")),V=s(r("./utils/mime")),J=r("./utils/image-bitmap"),B=s(r("./constants")),z="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_",G=[NaN,NaN],U=2;U<65;U++){var ie=(0,k.default)(k.default.BIN,z.slice(0,U))(new Array(65).join("1"));G.push(ie.length)}function oe(){}function ae(te){return Object.prototype.toString.call(te).toLowerCase().indexOf("arraybuffer")>-1}function W(te){for(var L=l.alloc(te.byteLength),T=new Uint8Array(te),F=0;F<L.length;++F)L[F]=T[F];return L}function ee(te,L){(0,M.default)(te,function(T,F,X){if(T)return L(T);if("headers"in F&&"location"in F.headers)return te.url=F.headers.location,ee(te,L);if((0,v.default)(X)==="object"&&l.isBuffer(X))return L(null,X);var H="Could not load Buffer from <"+te.url+"> (HTTP: "+F.statusCode+")";return new Error(H)})}function _(te,L){p.default&&typeof p.default.readFile=="function"&&!te.match(/^(http|ftp)s?:\/\/./)?p.default.readFile(te,L):ee({url:te},L)}function re(te){return te&&(0,v.default)(te)==="object"&&typeof te.width=="number"&&typeof te.height=="number"&&(l.isBuffer(te.data)||te.data instanceof Uint8Array||typeof Uint8ClampedArray=="function"&&te.data instanceof Uint8ClampedArray)&&(te.data.length===te.width*te.height*4||te.data.length===te.width*te.height*3)}function fe(te){if(te.length%3!==0)throw new Error("Buffer length is incorrect");for(var L=l.allocUnsafe(te.length/3*4),T=0,F=0;F<te.length;F++)L[T]=te[F],(F+1)%3===0&&(L[++T]=255),T++;return L}var pe={data:null,width:null,height:null},he=function(te){(0,y.default)(L,te);function L(){for(var T,F=arguments.length,X=new Array(F),H=0;H<F;H++)X[H]=arguments[H];(0,h.default)(this,L),T=(0,o.default)(this,(0,n.default)(L).call(this)),(0,f.default)((0,m.default)(T),"bitmap",pe),(0,f.default)((0,m.default)(T),"_background",0),(0,f.default)((0,m.default)(T),"_originalMime",L.MIME_PNG),(0,f.default)((0,m.default)(T),"_exif",null),(0,f.default)((0,m.default)(T),"_rgba",!0),(0,f.default)((0,m.default)(T),"writeAsync",function(Me){return(0,O.default)(T.write,(0,m.default)(T),Me)}),(0,f.default)((0,m.default)(T),"getBase64Async",function(Me){return(0,O.default)(T.getBase64,(0,m.default)(T),Me)}),(0,f.default)((0,m.default)(T),"getBuffer",J.getBuffer),(0,f.default)((0,m.default)(T),"getBufferAsync",J.getBufferAsync),(0,f.default)((0,m.default)(T),"getPixelColour",T.getPixelColor),(0,f.default)((0,m.default)(T),"setPixelColour",T.setPixelColor);var I=(0,m.default)(T),C=oe;ae(X[0])&&(X[0]=W(X[0]));function Q(){for(var Me=arguments.length,Z=new Array(Me),ve=0;ve<Me;ve++)Z[ve]=arguments[ve];var be=Z[0],Pe=be||{};Pe.methodName="constructor",setTimeout(function(){var me;be&&C===oe?I.emitError("constructor",be):be||I.emitMulti("constructor","initialized"),(me=C).call.apply(me,[I].concat(Z))},1)}if(typeof X[0]=="number"&&typeof X[1]=="number"||parseInt(X[0],10)&&parseInt(X[1],10)){var le=parseInt(X[0],10),ge=parseInt(X[1],10);if(C=X[2],typeof X[2]=="number"&&(T._background=X[2],C=X[3]),typeof X[2]=="string"&&(T._background=L.cssColorToHex(X[2]),C=X[3]),typeof C=="undefined"&&(C=oe),typeof C!="function")return(0,o.default)(T,x.throwError.call((0,m.default)(T),"cb must be a function",Q));T.bitmap={data:l.alloc(le*ge*4),width:le,height:ge};for(var ye=0;ye<T.bitmap.data.length;ye+=4)T.bitmap.data.writeUInt32BE(T._background,ye);Q(null,(0,m.default)(T))}else if((0,v.default)(X[0])==="object"&&X[0].url){if(C=X[1]||oe,typeof C!="function")return(0,o.default)(T,x.throwError.call((0,m.default)(T),"cb must be a function",Q));ee(X[0],function(Me,Z){if(Me)return x.throwError.call((0,m.default)(T),Me,Q);T.parseBitmap(Z,X[0].url,Q)})}else if(X[0]instanceof L){var Ne=X[0];if(C=X[1],typeof C=="undefined"&&(C=oe),typeof C!="function")return(0,o.default)(T,x.throwError.call((0,m.default)(T),"cb must be a function",Q));T.bitmap={data:l.from(Ne.bitmap.data),width:Ne.bitmap.width,height:Ne.bitmap.height},T._quality=Ne._quality,T._deflateLevel=Ne._deflateLevel,T._deflateStrategy=Ne._deflateStrategy,T._filterType=Ne._filterType,T._rgba=Ne._rgba,T._background=Ne._background,T._originalMime=Ne._originalMime,Q(null,(0,m.default)(T))}else if(re(X[0])){var Se=X[0];C=X[1]||oe;var Ie=Se.width*Se.height*4===Se.data.length,Oe=Ie?l.from(Se.data):fe(Se.data);T.bitmap={data:Oe,width:Se.width,height:Se.height},Q(null,(0,m.default)(T))}else if(typeof X[0]=="string"){var Fe=X[0];if(C=X[1],typeof C=="undefined"&&(C=oe),typeof C!="function")return(0,o.default)(T,x.throwError.call((0,m.default)(T),"cb must be a function",Q));_(Fe,function(Me,Z){if(Me)return x.throwError.call((0,m.default)(T),Me,Q);T.parseBitmap(Z,Fe,Q)})}else if((0,v.default)(X[0])==="object"&&l.isBuffer(X[0])){var Ee=X[0];if(C=X[1],typeof C!="function")return(0,o.default)(T,x.throwError.call((0,m.default)(T),"cb must be a function",Q));T.parseBitmap(Ee,null,Q)}else{C=X[X.length-1],typeof C!="function"&&(C=X[X.length-2],typeof C!="function"&&(C=oe));var Ze=L.__extraConstructors.find(function(Me){return Me.test.apply(Me,X)});if(Ze)new Promise(function(Me,Z){var ve;return(ve=Ze.run).call.apply(ve,[(0,m.default)(T),Me,Z].concat(X))}).then(function(){return Q(null,(0,m.default)(T))}).catch(Q);else return(0,o.default)(T,x.throwError.call((0,m.default)(T),"No matching constructor overloading was found. Please see the docs for how to call the Jimp constructor.",Q))}return T}return(0,u.default)(L,[{key:"parseBitmap",value:function(F,X,H){J.parseBitmap.call(this,F,null,H)}},{key:"rgba",value:function(F,X){return typeof F!="boolean"?x.throwError.call(this,"bool must be a boolean, true for RGBA or false for RGB",X):(this._rgba=F,(0,x.isNodePattern)(X)&&X.call(this,null,this),this)}},{key:"emitMulti",value:function(F,X){var H=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};H=Object.assign(H,{methodName:F,eventName:X}),this.emit("any",H),F&&this.emit(F,H),this.emit(X,H)}},{key:"emitError",value:function(F,X){this.emitMulti(F,"error",X)}},{key:"getHeight",value:function(){return this.bitmap.height}},{key:"getWidth",value:function(){return this.bitmap.width}},{key:"inspect",value:function(){return"<Jimp "+(this.bitmap===pe?"pending...":this.bitmap.width+"x"+this.bitmap.height)+">"}},{key:"toString",value:function(){return"[object Jimp]"}},{key:"getMIME",value:function(){var F=this._originalMime||L.MIME_PNG;return F}},{key:"getExtension",value:function(){var F=this.getMIME();return V.getExtension(F)}},{key:"write",value:function(F,X){var H=this;if(!p.default||!p.default.createWriteStream)throw new Error("Cant access the filesystem. You can use the getBase64 method.");if(typeof F!="string")return x.throwError.call(this,"path must be a string",X);if(typeof X=="undefined"&&(X=oe),typeof X!="function")return x.throwError.call(this,"cb must be a function",X);var I=V.getType(F)||this.getMIME(),C=w.default.parse(F);return C.dir&&N.default.sync(C.dir),this.getBuffer(I,function(Q,le){if(Q)return x.throwError.call(H,Q,X);var ge=p.default.createWriteStream(F);ge.on("open",function(){ge.write(le),ge.end()}).on("error",function(ye){return x.throwError.call(H,ye,X)}),ge.on("finish",function(){X.call(H,null,H)})}),this}},{key:"getBase64",value:function(F,X){return F===L.AUTO&&(F=this.getMIME()),typeof F!="string"?x.throwError.call(this,"mime must be a string",X):typeof X!="function"?x.throwError.call(this,"cb must be a function",X):(this.getBuffer(F,function(H,I){if(H)return x.throwError.call(this,H,X);var C="data:"+F+";base64,"+I.toString("base64");X.call(this,null,C)}),this)}},{key:"hash",value:function(F,X){if(F=F||64,typeof F=="function"&&(X=F,F=64),typeof F!="number")return x.throwError.call(this,"base must be a number",X);if(F<2||F>64)return x.throwError.call(this,"base must be a number between 2 and 64",X);var H=this.pHash();for(H=(0,k.default)(k.default.BIN,z.slice(0,F))(H);H.length<G[F];)H="0"+H;return(0,x.isNodePattern)(X)&&X.call(this,null,H),H}},{key:"pHash",value:function(){var F=new R.default;return F.getHash(this)}},{key:"distanceFromHash",value:function(F){var X=new R.default,H=X.getHash(this);return X.distance(H,F)}},{key:"getPixelIndex",value:function(F,X,H,I){var C,Q;if(typeof H=="function"&&typeof I=="undefined"&&(I=H,H=null),H||(H=L.EDGE_EXTEND),typeof F!="number"||typeof X!="number")return x.throwError.call(this,"x and y must be numbers",I);F=Math.round(F),X=Math.round(X),C=F,Q=X,H===L.EDGE_EXTEND&&(F<0&&(C=0),F>=this.bitmap.width&&(C=this.bitmap.width-1),X<0&&(Q=0),X>=this.bitmap.height&&(Q=this.bitmap.height-1)),H===L.EDGE_WRAP&&(F<0&&(C=this.bitmap.width+F),F>=this.bitmap.width&&(C=F%this.bitmap.width),X<0&&(C=this.bitmap.height+X),X>=this.bitmap.height&&(Q=X%this.bitmap.height));var le=this.bitmap.width*Q+C<<2;return(C<0||C>=this.bitmap.width)&&(le=-1),(Q<0||Q>=this.bitmap.height)&&(le=-1),(0,x.isNodePattern)(I)&&I.call(this,null,le),le}},{key:"getPixelColor",value:function(F,X,H){if(typeof F!="number"||typeof X!="number")return x.throwError.call(this,"x and y must be numbers",H);F=Math.round(F),X=Math.round(X);var I=this.getPixelIndex(F,X),C=this.bitmap.data.readUInt32BE(I);return(0,x.isNodePattern)(H)&&H.call(this,null,C),C}},{key:"setPixelColor",value:function(F,X,H,I){if(typeof F!="number"||typeof X!="number"||typeof H!="number")return x.throwError.call(this,"hex, x and y must be numbers",I);X=Math.round(X),H=Math.round(H);var C=this.getPixelIndex(X,H);return this.bitmap.data.writeUInt32BE(F,C),(0,x.isNodePattern)(I)&&I.call(this,null,this),this}},{key:"hasAlpha",value:function(){for(var F=0;F<this.bitmap.height;F++)for(var X=0;X<this.bitmap.width;X++){var H=this.bitmap.width*F+X<<2,I=this.bitmap.data[H+3];if(I!==255)return!0}return!1}},{key:"scanIterator",value:function(F,X,H,I){return typeof F!="number"||typeof X!="number"?x.throwError.call(this,"x and y must be numbers"):typeof H!="number"||typeof I!="number"?x.throwError.call(this,"w and h must be numbers"):(0,x.scanIterator)(this,F,X,H,I)}}]),L}(A.default);function se(te){var L=arguments.length>1&&arguments[1]!==void 0?arguments[1]:he;Object.entries(te).forEach(function(T){var F=(0,c.default)(T,2),X=F[0],H=F[1];L[X]=H})}function ce(te){var L=arguments.length>1&&arguments[1]!==void 0?arguments[1]:he;Object.entries(te).forEach(function(T){var F=(0,c.default)(T,2),X=F[0],H=F[1];L.prototype[X]=H})}se(B),ce({composite:j.default}),he.__extraConstructors=[],he.appendConstructorOption=function(te,L,T){he.__extraConstructors.push({name:te,test:L,run:T})},he.read=function(){for(var te=arguments.length,L=new Array(te),T=0;T<te;T++)L[T]=arguments[T];return new Promise(function(F,X){(0,b.default)(he,L.concat([function(H,I){H?X(H):F(I)}]))})},he.create=he.read,he.rgbaToInt=function(te,L,T,F,X){if(typeof te!="number"||typeof L!="number"||typeof T!="number"||typeof F!="number")return x.throwError.call(this,"r, g, b and a must be numbers",X);if(te<0||te>255)return x.throwError.call(this,"r must be between 0 and 255",X);if((L<0||L>255)&&x.throwError.call(this,"g must be between 0 and 255",X),T<0||T>255)return x.throwError.call(this,"b must be between 0 and 255",X);if(F<0||F>255)return x.throwError.call(this,"a must be between 0 and 255",X);te=Math.round(te),T=Math.round(T),L=Math.round(L),F=Math.round(F);var H=te*Math.pow(256,3)+L*Math.pow(256,2)+T*Math.pow(256,1)+F*Math.pow(256,0);return(0,x.isNodePattern)(X)&&X.call(this,null,H),H},he.intToRGBA=function(te,L){if(typeof te!="number")return x.throwError.call(this,"i must be a number",L);var T={};return T.r=Math.floor(te/Math.pow(256,3)),T.g=Math.floor((te-T.r*Math.pow(256,3))/Math.pow(256,2)),T.b=Math.floor((te-T.r*Math.pow(256,3)-T.g*Math.pow(256,2))/Math.pow(256,1)),T.a=Math.floor((te-T.r*Math.pow(256,3)-T.g*Math.pow(256,2)-T.b*Math.pow(256,1))/Math.pow(256,0)),(0,x.isNodePattern)(L)&&L.call(this,null,T),T},he.cssColorToHex=function(te){return te=te||0,typeof te=="number"?Number(te):parseInt((0,S.default)(te).toHex8(),16)},he.limit255=function(te){return te=Math.max(te,0),te=Math.min(te,255),te},he.diff=function(te,L){var T=arguments.length>2&&arguments[2]!==void 0?arguments[2]:.1;if(!(te instanceof he)||!(L instanceof he))return x.throwError.call(this,"img1 and img2 must be an Jimp images");var F=te.bitmap,X=L.bitmap;if((F.width!==X.width||F.height!==X.height)&&(F.width*F.height>X.width*X.height?te=te.cloneQuiet().resize(X.width,X.height):L=L.cloneQuiet().resize(F.width,F.height)),typeof T!="number"||T<0||T>1)return x.throwError.call(this,"threshold must be a number between 0 and 1");var H=new he(F.width,F.height,4294967295),I=(0,E.default)(F.data,X.data,H.bitmap.data,H.bitmap.width,H.bitmap.height,{threshold:T});return{percent:I/(H.bitmap.width*H.bitmap.height),image:H}},he.distance=function(te,L){var T=new R.default,F=T.getHash(te),X=T.getHash(L);return T.distance(F,X)},he.compareHashes=function(te,L){var T=new R.default;return T.distance(te,L)},he.colorDiff=function(te,L){var T=function(I){return Math.pow(I,2)},F=Math.max,X=255*255*3;return te.a!==0&&!te.a&&(te.a=255),L.a!==0&&!L.a&&(L.a=255),(F(T(te.r-L.r),T(te.r-L.r-te.a+L.a))+F(T(te.g-L.g),T(te.g-L.g-te.a+L.a))+F(T(te.b-L.b),T(te.b-L.b-te.a+L.a)))/X};function q(te,L,T){var F="before-"+L,X=L.replace(/e$/,"")+"ed";he.prototype[te]=function(){for(var H,I=arguments.length,C=new Array(I),Q=0;Q<I;Q++)C[Q]=arguments[Q];var le=C[T.length-1],ge=this;typeof le=="function"?(H=function(){for(var Se=arguments.length,Ie=new Array(Se),Oe=0;Oe<Se;Oe++)Ie[Oe]=arguments[Oe];var Fe=Ie[0],Ee=Ie[1];Fe?ge.emitError(te,Fe):ge.emitMulti(te,X,(0,f.default)({},te,Ee)),le.apply(this,Ie)},C[C.length-1]=H):H=!1,this.emitMulti(te,F);var ye;try{ye=T.apply(this,C),H||this.emitMulti(te,X,(0,f.default)({},te,ye))}catch(Ne){Ne.methodName=te,this.emitError(te,Ne)}return ye},he.prototype[te+"Quiet"]=T}q("clone","clone",function(te){var L=new he(this);return(0,x.isNodePattern)(te)&&te.call(L,null,L),L});function K(te,L){q(te,"change",L)}K("background",function(te,L){return typeof te!="number"?x.throwError.call(this,"hex must be a hexadecimal rgba value",L):(this._background=te,(0,x.isNodePattern)(L)&&L.call(this,null,this),this)}),K("scan",function(te,L,T,F,X,H){if(typeof te!="number"||typeof L!="number")return x.throwError.call(this,"x and y must be numbers",H);if(typeof T!="number"||typeof F!="number")return x.throwError.call(this,"w and h must be numbers",H);if(typeof X!="function")return x.throwError.call(this,"f must be a function",H);var I=(0,x.scan)(this,te,L,T,F,X);return(0,x.isNodePattern)(H)&&H.call(this,null,I),I});{var Y;typeof i!="undefined"&&(typeof i=="undefined"?"undefined":(0,v.default)(i))==="object"&&(Y=i),typeof self!="undefined"&&(typeof self=="undefined"?"undefined":(0,v.default)(self))==="object"&&(Y=self),Y.Jimp=he,Y.Buffer=l}var $=he;a.default=$}).call(this,r("buffer").Buffer)},{"./composite":191,"./constants":192,"./modules/phash":194,"./request":195,"./utils/image-bitmap":196,"./utils/mime":197,"./utils/promisify":198,"@babel/runtime/helpers/assertThisInitialized":3,"@babel/runtime/helpers/classCallCheck":4,"@babel/runtime/helpers/construct":5,"@babel/runtime/helpers/createClass":6,"@babel/runtime/helpers/defineProperty":7,"@babel/runtime/helpers/getPrototypeOf":9,"@babel/runtime/helpers/inherits":10,"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/interopRequireWildcard":12,"@babel/runtime/helpers/possibleConstructorReturn":17,"@babel/runtime/helpers/slicedToArray":19,"@babel/runtime/helpers/typeof":21,"@jimp/utils":235,"any-base":23,buffer:48,events:52,fs:47,mkdirp:83,path:107,pixelmatch:109,tinycolor2:178}],194:[function(r,d,a){function l(h,u){this.size=this.size||h,this.smallerSize=this.smallerSize||u,b(this.size)}l.prototype.size=32,l.prototype.smallerSize=8,l.prototype.distance=function(h,u){for(var o=0,n=0;n<h.length;n++)h[n]!==u[n]&&o++;return o/h.length},l.prototype.getHash=function(h){h=h.clone().resize(this.size,this.size),h.grayscale();for(var u=[],o=0;o<h.bitmap.width;o++){u[o]=[];for(var n=0;n<h.bitmap.height;n++)u[o][n]=s(h.getPixelColor(o,n)).b}for(var m=c(u,this.size),y=0,f=0;f<this.smallerSize;f++)for(var v=0;v<this.smallerSize;v++)y+=m[f][v];for(var p=y/(this.smallerSize*this.smallerSize),w="",A=0;A<this.smallerSize;A++)for(var x=0;x<this.smallerSize;x++)w+=m[A][x]>p?"1":"0";return w};function s(h){var u={};return u.r=Math.floor(h/Math.pow(256,3)),u.g=Math.floor((h-u.r*Math.pow(256,3))/Math.pow(256,2)),u.b=Math.floor((h-u.r*Math.pow(256,3)-u.g*Math.pow(256,2))/Math.pow(256,1)),u.a=Math.floor((h-u.r*Math.pow(256,3)-u.g*Math.pow(256,2)-u.b*Math.pow(256,1))/Math.pow(256,0)),u}var g=[];function b(h){for(var u=1;u<h;u++)g[u]=1;g[0]=1/Math.sqrt(2)}function c(h,u){for(var o=u,n=[],m=0;m<o;m++){n[m]=[];for(var y=0;y<o;y++){for(var f=0,v=0;v<o;v++)for(var p=0;p<o;p++)f+=Math.cos((2*v+1)/(2*o)*m*Math.PI)*Math.cos((2*p+1)/(2*o)*y*Math.PI)*h[v][p];f*=g[m]*g[y]/4,n[m][y]=f}}return n}d.exports=l},{}],195:[function(r,d,a){(function(l,s){var g=r("@babel/runtime/helpers/interopRequireDefault"),b=g(r("@babel/runtime/helpers/defineProperty")),c=g(r("@babel/runtime/helpers/extends"));function h(o,n){var m=Object.keys(o);if(Object.getOwnPropertySymbols){var y=Object.getOwnPropertySymbols(o);n&&(y=y.filter(function(f){return Object.getOwnPropertyDescriptor(o,f).enumerable})),m.push.apply(m,y)}return m}function u(o){for(var n=1;n<arguments.length;n++){var m=arguments[n]!=null?arguments[n]:{};n%2?h(m,!0).forEach(function(y){(0,b.default)(o,y,m[y])}):Object.getOwnPropertyDescriptors?Object.defineProperties(o,Object.getOwnPropertyDescriptors(m)):h(m).forEach(function(y){Object.defineProperty(o,y,Object.getOwnPropertyDescriptor(m,y))})}return o}l.browser,d.exports=function(o,n){var m=new XMLHttpRequest;m.open("GET",o.url,!0),m.responseType="arraybuffer",m.addEventListener("load",function(){if(m.status<400)try{var y=s.from(this.response);n(null,m,y)}catch(f){return n(new Error("Response is not a buffer for url "+o.url+". Error: "+f.message))}else n(new Error("HTTP Status "+m.status+" for url "+o.url))}),m.addEventListener("error",function(y){n(y)}),m.send()}}).call(this,r("_process"),r("buffer").Buffer)},{"@babel/runtime/helpers/defineProperty":7,"@babel/runtime/helpers/extends":8,"@babel/runtime/helpers/interopRequireDefault":11,_process:133,buffer:48,phin:108}],196:[function(r,d,a){(function(l){var s=r("@babel/runtime/helpers/interopRequireWildcard"),g=r("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(a,"__esModule",{value:!0}),a.parseBitmap=A,a.getBuffer=k,a.getBufferAsync=N;var b=g(r("@babel/runtime/helpers/slicedToArray")),c=g(r("file-type")),h=g(r("exif-parser")),u=r("@jimp/utils"),o=s(r("../constants")),n=s(r("./mime")),m=g(r("./promisify"));function y(E,S){var R=(0,c.default)(E);return R?R.mime:S?n.getType(S):null}function f(E){return E._exif&&E._exif.tags&&E._exif.tags.Orientation||1}function v(E){var S=E.getWidth(),R=E.getHeight();switch(f(E)){case 1:return null;case 2:return function(M,j){return[S-M-1,j]};case 3:return function(M,j){return[S-M-1,R-j-1]};case 4:return function(M,j){return[M,R-j-1]};case 5:return function(M,j){return[j,M]};case 6:return function(M,j){return[j,R-M-1]};case 7:return function(M,j){return[S-j-1,R-M-1]};case 8:return function(M,j){return[S-j-1,M]};default:return null}}function p(E,S,R,M){for(var j=E.bitmap.data,O=E.bitmap.width,V=l.alloc(j.length),J=0;J<S;J++)for(var B=0;B<R;B++){var z=M(J,B),G=(0,b.default)(z,2),U=G[0],ie=G[1],oe=S*B+J<<2,ae=O*ie+U<<2,W=j.readUInt32BE(ae);V.writeUInt32BE(W,oe)}E.bitmap.data=V,E.bitmap.width=S,E.bitmap.height=R}function w(E){if(!(f(E)<2)){var S=v(E),R=f(E)>4,M=R?E.bitmap.height:E.bitmap.width,j=R?E.bitmap.width:E.bitmap.height;p(E,M,j,S)}}function A(E,S,R){var M=y(E,S);if(typeof M!="string")return R(new Error("Could not find MIME for Buffer <"+S+">"));this._originalMime=M.toLowerCase();try{var j=this.getMIME();if(this.constructor.decoders[j])this.bitmap=this.constructor.decoders[j](E);else return u.throwError.call(this,"Unsupported MIME type: "+j,R)}catch(O){return R.call(this,O,this)}try{this._exif=h.default.create(E).parse(),w(this)}catch{}return R.call(this,null,this),this}function x(E,S){return new E(S.bitmap.width,S.bitmap.height,S._background).composite(S,0,0).bitmap}function k(E,S){if(E===o.AUTO&&(E=this.getMIME()),typeof E!="string")return u.throwError.call(this,"mime must be a string",S);if(typeof S!="function")return u.throwError.call(this,"cb must be a function",S);if(E=E.toLowerCase(),this._rgba&&this.constructor.hasAlpha[E]?this.bitmap.data=l.from(this.bitmap.data):this.bitmap.data=x(this.constructor,this).data,this.constructor.encoders[E]){var R=this.constructor.encoders[E](this);S.call(this,null,R)}else S.call(this,"Unsupported MIME type: "+E);return this}function N(E){return(0,m.default)(k,this,E)}}).call(this,r("buffer").Buffer)},{"../constants":192,"./mime":197,"./promisify":198,"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/interopRequireWildcard":12,"@babel/runtime/helpers/slicedToArray":19,"@jimp/utils":235,buffer:48,"exif-parser":53,"file-type":62}],197:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.getExtension=a.getType=a.addType=void 0;var l={},s=function(u){return Object.entries(l).find(function(o){return o[1].includes(u)})||[]},g=function(u,o){l[u]=o};a.addType=g;var b=function(u){var o=u.split("/").slice(-1),n=o[o.length-1].split(".").pop(),m=s(n);return m[0]};a.getType=b;var c=function(u){return(l[u.toLowerCase()]||[])[0]};a.getExtension=c},{}],198:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var l=function(b,c){for(var h=arguments.length,u=new Array(h>2?h-2:0),o=2;o<h;o++)u[o-2]=arguments[o];return new Promise(function(n,m){u.push(function(y,f){y&&m(y),n(f)}),b.bind(c).apply(void 0,u)})},s=l;a.default=s,d.exports=a.default},{}],199:[function(r,d,a){var l=r("@babel/runtime/helpers/interopRequireWildcard"),s=r("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(a,"__esModule",{value:!0}),a.default=n;var g=s(r("@babel/runtime/helpers/toConsumableArray")),b=s(r("@babel/runtime/helpers/defineProperty")),c=s(r("@babel/runtime/helpers/slicedToArray")),h=l(r("@jimp/core"));function u(m,y){var f=Object.keys(m);if(Object.getOwnPropertySymbols){var v=Object.getOwnPropertySymbols(m);y&&(v=v.filter(function(p){return Object.getOwnPropertyDescriptor(m,p).enumerable})),f.push.apply(f,v)}return f}function o(m){for(var y=1;y<arguments.length;y++){var f=arguments[y]!=null?arguments[y]:{};y%2?u(f,!0).forEach(function(v){(0,b.default)(m,v,f[v])}):Object.getOwnPropertyDescriptors?Object.defineProperties(m,Object.getOwnPropertyDescriptors(f)):u(f).forEach(function(v){Object.defineProperty(m,v,Object.getOwnPropertyDescriptor(f,v))})}return m}function n(m){var y=arguments.length>1&&arguments[1]!==void 0?arguments[1]:h.default,f={hasAlpha:{},encoders:{},decoders:{},class:{},constants:{}};function v(A){Object.entries(A).forEach(function(x){var k=(0,c.default)(x,2),N=k[0],E=k[1];f[N]=o({},f[N],{},E)})}function p(A){var x=A();Array.isArray(x.mime)?h.addType.apply(void 0,(0,g.default)(x.mime)):Object.entries(x.mime).forEach(function(k){return h.addType.apply(void 0,(0,g.default)(k))}),delete x.mime,v(x)}function w(A){var x=A(h.jimpEvChange)||{};!x.class&&!x.constants?v({class:x}):v(x)}return m.types&&(m.types.forEach(p),y.decoders=o({},y.decoders,{},f.decoders),y.encoders=o({},y.encoders,{},f.encoders),y.hasAlpha=o({},y.hasAlpha,{},f.hasAlpha)),m.plugins&&m.plugins.forEach(w),(0,h.addJimpMethods)(f.class,y),(0,h.addConstants)(f.constants,y),h.default}d.exports=a.default},{"@babel/runtime/helpers/defineProperty":7,"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/interopRequireWildcard":12,"@babel/runtime/helpers/slicedToArray":19,"@babel/runtime/helpers/toConsumableArray":20,"@jimp/core":193}],200:[function(r,d,a){var l=r("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var s=l(r("@jimp/custom")),g=l(r("@jimp/types")),b=l(r("@jimp/plugins")),c=(0,s.default)({types:[g.default],plugins:[b.default]});a.default=c,d.exports=a.default},{"@babel/runtime/helpers/interopRequireDefault":11,"@jimp/custom":199,"@jimp/plugins":228,"@jimp/types":234}],201:[function(r,d,a){var l=r("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var s=l(r("@babel/runtime/helpers/typeof")),g=r("@jimp/utils"),b=function(){return{blit:function(u,o,n,m,y,f,v,p){if(!(u instanceof this.constructor))return g.throwError.call(this,"The source must be a Jimp image",p);if(typeof o!="number"||typeof n!="number")return g.throwError.call(this,"x and y must be numbers",p);if(typeof m=="function")p=m,m=0,y=0,f=u.bitmap.width,v=u.bitmap.height;else if((0,s.default)(m)===(0,s.default)(y)&&(0,s.default)(y)===(0,s.default)(f)&&(0,s.default)(f)===(0,s.default)(v))m=m||0,y=y||0,f=f||u.bitmap.width,v=v||u.bitmap.height;else return g.throwError.call(this,"srcx, srcy, srcw, srch must be numbers",p);o=Math.round(o),n=Math.round(n),m=Math.round(m),y=Math.round(y),f=Math.round(f),v=Math.round(v);var w=this.bitmap.width,A=this.bitmap.height,x=this;return u.scanQuiet(m,y,f,v,function(k,N,E){var S=o+k-m,R=n+N-y;if(S>=0&&R>=0&&w-S>0&&A-R>0){var M=x.getPixelIndex(S,R),j={r:this.bitmap.data[E],g:this.bitmap.data[E+1],b:this.bitmap.data[E+2],a:this.bitmap.data[E+3]},O={r:x.bitmap.data[M],g:x.bitmap.data[M+1],b:x.bitmap.data[M+2],a:x.bitmap.data[M+3]};x.bitmap.data[M]=(j.a*(j.r-O.r)-O.r+255>>8)+O.r,x.bitmap.data[M+1]=(j.a*(j.g-O.g)-O.g+255>>8)+O.g,x.bitmap.data[M+2]=(j.a*(j.b-O.b)-O.b+255>>8)+O.b,x.bitmap.data[M+3]=this.constructor.limit255(O.a+j.a)}}),(0,g.isNodePattern)(p)&&p.call(this,null,this),this}}};a.default=b,d.exports=a.default},{"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/typeof":21,"@jimp/utils":235}],202:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.shgTable=a.mulTable=void 0;var l=[1,57,41,21,203,34,97,73,227,91,149,62,105,45,39,137,241,107,3,173,39,71,65,238,219,101,187,87,81,151,141,133,249,117,221,209,197,187,177,169,5,153,73,139,133,127,243,233,223,107,103,99,191,23,177,171,165,159,77,149,9,139,135,131,253,245,119,231,224,109,211,103,25,195,189,23,45,175,171,83,81,79,155,151,147,9,141,137,67,131,129,251,123,30,235,115,113,221,217,53,13,51,50,49,193,189,185,91,179,175,43,169,83,163,5,79,155,19,75,147,145,143,35,69,17,67,33,65,255,251,247,243,239,59,29,229,113,111,219,27,213,105,207,51,201,199,49,193,191,47,93,183,181,179,11,87,43,85,167,165,163,161,159,157,155,77,19,75,37,73,145,143,141,35,138,137,135,67,33,131,129,255,63,250,247,61,121,239,237,117,29,229,227,225,111,55,109,216,213,211,209,207,205,203,201,199,197,195,193,48,190,47,93,185,183,181,179,178,176,175,173,171,85,21,167,165,41,163,161,5,79,157,78,154,153,19,75,149,74,147,73,144,143,71,141,140,139,137,17,135,134,133,66,131,65,129,1];a.mulTable=l;var s=[0,9,10,10,14,12,14,14,16,15,16,15,16,15,15,17,18,17,12,18,16,17,17,19,19,18,19,18,18,19,19,19,20,19,20,20,20,20,20,20,15,20,19,20,20,20,21,21,21,20,20,20,21,18,21,21,21,21,20,21,17,21,21,21,22,22,21,22,22,21,22,21,19,22,22,19,20,22,22,21,21,21,22,22,22,18,22,22,21,22,22,23,22,20,23,22,22,23,23,21,19,21,21,21,23,23,23,22,23,23,21,23,22,23,18,22,23,20,22,23,23,23,21,22,20,22,21,22,24,24,24,24,24,22,21,24,23,23,24,21,24,23,24,22,24,24,22,24,24,22,23,24,24,24,20,23,22,23,24,24,24,24,24,24,24,23,21,23,22,23,24,24,24,22,24,24,24,23,22,24,24,25,23,25,25,23,24,25,25,24,22,25,25,25,24,23,24,25,25,25,25,25,25,25,25,25,25,25,25,23,25,23,24,25,25,25,25,25,25,25,25,25,24,22,25,25,23,25,25,20,24,25,24,25,25,22,24,25,24,25,24,25,25,24,25,25,25,25,22,25,25,25,24,25,24,25,18];a.shgTable=s},{}],203:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var l=r("@jimp/utils"),s=r("./blur-tables"),g=function(){return{blur:function(h,u){if(typeof h!="number")return l.throwError.call(this,"r must be a number",u);if(h<1)return l.throwError.call(this,"r must be greater than 0",u);for(var o,n,m,y,f,v,p,w,A,x,k,N,E,S,R=this.bitmap.width-1,M=this.bitmap.height-1,j=h+1,O=s.mulTable[h],V=s.shgTable[h],J=[],B=[],z=[],G=[],U=[],ie=[],oe=2;oe-- >0;){for(N=0,E=0,v=0;v<this.bitmap.height;v++){for(o=this.bitmap.data[E]*j,n=this.bitmap.data[E+1]*j,m=this.bitmap.data[E+2]*j,y=this.bitmap.data[E+3]*j,p=1;p<=h;p++)w=E+((p>R?R:p)<<2),o+=this.bitmap.data[w++],n+=this.bitmap.data[w++],m+=this.bitmap.data[w++],y+=this.bitmap.data[w];for(f=0;f<this.bitmap.width;f++)J[N]=o,B[N]=n,z[N]=m,G[N]=y,v===0&&(U[f]=((w=f+j)<R?w:R)<<2,ie[f]=(w=f-h)>0?w<<2:0),A=E+U[f],x=E+ie[f],o+=this.bitmap.data[A++]-this.bitmap.data[x++],n+=this.bitmap.data[A++]-this.bitmap.data[x++],m+=this.bitmap.data[A++]-this.bitmap.data[x++],y+=this.bitmap.data[A]-this.bitmap.data[x],N++;E+=this.bitmap.width<<2}for(f=0;f<this.bitmap.width;f++){for(k=f,o=J[k]*j,n=B[k]*j,m=z[k]*j,y=G[k]*j,p=1;p<=h;p++)k+=p>M?0:this.bitmap.width,o+=J[k],n+=B[k],m+=z[k],y+=G[k];for(N=f<<2,v=0;v<this.bitmap.height;v++)S=y*O>>>V,this.bitmap.data[N+3]=S,S>255&&(this.bitmap.data[N+3]=255),S>0?(S=255/S,this.bitmap.data[N]=(o*O>>>V)*S,this.bitmap.data[N+1]=(n*O>>>V)*S,this.bitmap.data[N+2]=(m*O>>>V)*S):(this.bitmap.data[N+2]=0,this.bitmap.data[N+1]=0,this.bitmap.data[N]=0),f===0&&(U[v]=((w=v+j)<M?w:M)*this.bitmap.width,ie[v]=(w=v-h)>0?w*this.bitmap.width:0),A=f+U[v],x=f+ie[v],o+=J[A]-J[x],n+=B[A]-B[x],m+=z[A]-z[x],y+=G[A]-G[x],N+=this.bitmap.width<<2}}return(0,l.isNodePattern)(u)&&u.call(this,null,this),this}}};a.default=g,d.exports=a.default},{"./blur-tables":202,"@jimp/utils":235}],204:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var l=r("@jimp/utils"),s=function(){return{circle:function(){var c=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},h=arguments.length>1?arguments[1]:void 0;typeof c=="function"&&(h=c,c={});var u=c.radius||(this.bitmap.width>this.bitmap.height?this.bitmap.height:this.bitmap.width)/2,o={x:typeof c.x=="number"?c.x:this.bitmap.width/2,y:typeof c.y=="number"?c.y:this.bitmap.height/2};return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(n,m,y){var f=Math.sqrt(Math.pow(n-o.x,2)+Math.pow(m-o.y,2));u-f<=0?this.bitmap.data[y+3]=0:u-f<1&&(this.bitmap.data[y+3]=255*(u-f))}),(0,l.isNodePattern)(h)&&h.call(this,null,this),this}}};a.default=s,d.exports=a.default},{"@jimp/utils":235}],205:[function(r,d,a){(function(l){var s=r("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var g=s(r("@babel/runtime/helpers/toConsumableArray")),b=s(r("tinycolor2")),c=r("@jimp/utils");function h(f,v,p,w){for(var A=[0,0,0],x=(v.length-1)/2,k=0;k<v.length;k+=1)for(var N=0;N<v[k].length;N+=1){var E=f.getPixelIndex(p+k-x,w+N-x);A[0]+=f.bitmap.data[E]*v[k][N],A[1]+=f.bitmap.data[E+1]*v[k][N],A[2]+=f.bitmap.data[E+2]*v[k][N]}return A}var u=function(v){return typeof v!="undefined"&&v!==null};function o(f){return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(v,p,w){var A=parseInt(.2126*this.bitmap.data[w]+.7152*this.bitmap.data[w+1]+.0722*this.bitmap.data[w+2],10);this.bitmap.data[w]=A,this.bitmap.data[w+1]=A,this.bitmap.data[w+2]=A}),(0,c.isNodePattern)(f)&&f.call(this,null,this),this}function n(f,v){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:50;return{r:(v.r-f.r)*(p/100)+f.r,g:(v.g-f.g)*(p/100)+f.g,b:(v.b-f.b)*(p/100)+f.b}}function m(f,v){var p=this;return!f||!Array.isArray(f)?c.throwError.call(this,"actions must be an array",v):(f=f.map(function(w){return(w.apply==="xor"||w.apply==="mix")&&(w.params[0]=(0,b.default)(w.params[0]).toRgb()),w}),this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(w,A,x){var k={r:p.bitmap.data[x],g:p.bitmap.data[x+1],b:p.bitmap.data[x+2]},N=function(S,R){return p.constructor.limit255(k[S]+R)};f.forEach(function(E){if(E.apply==="mix")k=n(k,E.params[0],E.params[1]);else if(E.apply==="tint")k=n(k,{r:255,g:255,b:255},E.params[0]);else if(E.apply==="shade")k=n(k,{r:0,g:0,b:0},E.params[0]);else if(E.apply==="xor")k={r:k.r^E.params[0].r,g:k.g^E.params[0].g,b:k.b^E.params[0].b};else if(E.apply==="red")k.r=N("r",E.params[0]);else if(E.apply==="green")k.g=N("g",E.params[0]);else if(E.apply==="blue")k.b=N("b",E.params[0]);else{var S;if(E.apply==="hue"&&(E.apply="spin"),k=(0,b.default)(k),!k[E.apply])return c.throwError.call(p,"action "+E.apply+" not supported",v);k=(S=k)[E.apply].apply(S,(0,g.default)(E.params)).toRgb()}}),p.bitmap.data[x]=k.r,p.bitmap.data[x+1]=k.g,p.bitmap.data[x+2]=k.b}),(0,c.isNodePattern)(v)&&v.call(this,null,this),this)}var y=function(){return{brightness:function(p,w){return typeof p!="number"?c.throwError.call(this,"val must be numbers",w):p<-1||p>1?c.throwError.call(this,"val must be a number between -1 and +1",w):(this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(A,x,k){p<0?(this.bitmap.data[k]=this.bitmap.data[k]*(1+p),this.bitmap.data[k+1]=this.bitmap.data[k+1]*(1+p),this.bitmap.data[k+2]=this.bitmap.data[k+2]*(1+p)):(this.bitmap.data[k]=this.bitmap.data[k]+(255-this.bitmap.data[k])*p,this.bitmap.data[k+1]=this.bitmap.data[k+1]+(255-this.bitmap.data[k+1])*p,this.bitmap.data[k+2]=this.bitmap.data[k+2]+(255-this.bitmap.data[k+2])*p)}),(0,c.isNodePattern)(w)&&w.call(this,null,this),this)},contrast:function(p,w){if(typeof p!="number")return c.throwError.call(this,"val must be numbers",w);if(p<-1||p>1)return c.throwError.call(this,"val must be a number between -1 and +1",w);var A=(p+1)/(1-p);function x(k){return k=Math.floor(A*(k-127)+127),k<0?0:k>255?255:k}return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(k,N,E){this.bitmap.data[E]=x(this.bitmap.data[E]),this.bitmap.data[E+1]=x(this.bitmap.data[E+1]),this.bitmap.data[E+2]=x(this.bitmap.data[E+2])}),(0,c.isNodePattern)(w)&&w.call(this,null,this),this},posterize:function(p,w){return typeof p!="number"?c.throwError.call(this,"n must be numbers",w):(p<2&&(p=2),this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(A,x,k){this.bitmap.data[k]=Math.floor(this.bitmap.data[k]/255*(p-1))/(p-1)*255,this.bitmap.data[k+1]=Math.floor(this.bitmap.data[k+1]/255*(p-1))/(p-1)*255,this.bitmap.data[k+2]=Math.floor(this.bitmap.data[k+2]/255*(p-1))/(p-1)*255}),(0,c.isNodePattern)(w)&&w.call(this,null,this),this)},greyscale:o,grayscale:o,opacity:function(p,w){return typeof p!="number"?c.throwError.call(this,"f must be a number",w):p<0||p>1?c.throwError.call(this,"f must be a number from 0 to 1",w):(this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(A,x,k){var N=this.bitmap.data[k+3]*p;this.bitmap.data[k+3]=N}),(0,c.isNodePattern)(w)&&w.call(this,null,this),this)},sepia:function(p){return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(w,A,x){var k=this.bitmap.data[x],N=this.bitmap.data[x+1],E=this.bitmap.data[x+2];k=k*.393+N*.769+E*.189,N=k*.349+N*.686+E*.168,E=k*.272+N*.534+E*.131,this.bitmap.data[x]=k<255?k:255,this.bitmap.data[x+1]=N<255?N:255,this.bitmap.data[x+2]=E<255?E:255}),(0,c.isNodePattern)(p)&&p.call(this,null,this),this},fade:function(p,w){return typeof p!="number"?c.throwError.call(this,"f must be a number",w):p<0||p>1?c.throwError.call(this,"f must be a number from 0 to 1",w):(this.opacity(1-p),(0,c.isNodePattern)(w)&&w.call(this,null,this),this)},convolution:function(p,w,A){typeof w=="function"&&typeof A=="undefined"&&(A=w,w=null),w||(w=this.constructor.EDGE_EXTEND);var x=l.from(this.bitmap.data),k=p.length,N=p[0].length,E=Math.floor(k/2),S=Math.floor(N/2),R=-E,M=-S,j,O,V,J,B,z,G,U,ie,oe;return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(ae,W,ee){J=0,V=0,O=0;for(var _=R;_<=E;_++)for(var re=M;re<=S;re++)U=ae+re,ie=W+_,j=p[_+E][re+S],oe=this.getPixelIndex(U,ie,w),oe===-1?(G=0,z=0,B=0):(B=this.bitmap.data[oe+0],z=this.bitmap.data[oe+1],G=this.bitmap.data[oe+2]),O+=j*B,V+=j*z,J+=j*G;O<0&&(O=0),V<0&&(V=0),J<0&&(J=0),O>255&&(O=255),V>255&&(V=255),J>255&&(J=255),x[ee+0]=O,x[ee+1]=V,x[ee+2]=J}),this.bitmap.data=x,(0,c.isNodePattern)(A)&&A.call(this,null,this),this},opaque:function(p){return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(w,A,x){this.bitmap.data[x+3]=255}),(0,c.isNodePattern)(p)&&p.call(this,null,this),this},pixelate:function(p,w,A,x,k,N){if(typeof w=="function")N=w,k=null,x=null,A=null,w=null;else{if(typeof p!="number")return c.throwError.call(this,"size must be a number",N);if(u(w)&&typeof w!="number")return c.throwError.call(this,"x must be a number",N);if(u(A)&&typeof A!="number")return c.throwError.call(this,"y must be a number",N);if(u(x)&&typeof x!="number")return c.throwError.call(this,"w must be a number",N);if(u(k)&&typeof k!="number")return c.throwError.call(this,"h must be a number",N)}var E=[[1/16,2/16,1/16],[2/16,4/16,2/16],[1/16,2/16,1/16]];w=w||0,A=A||0,x=u(x)?x:this.bitmap.width-w,k=u(k)?k:this.bitmap.height-A;var S=this.cloneQuiet();return this.scanQuiet(w,A,x,k,function(R,M,j){R=p*Math.floor(R/p),M=p*Math.floor(M/p);var O=h(S,E,R,M);this.bitmap.data[j]=O[0],this.bitmap.data[j+1]=O[1],this.bitmap.data[j+2]=O[2]}),(0,c.isNodePattern)(N)&&N.call(this,null,this),this},convolute:function(p,w,A,x,k,N){if(!Array.isArray(p))return c.throwError.call(this,"the kernel must be an array",N);if(typeof w=="function")N=w,w=null,A=null,x=null,k=null;else{if(u(w)&&typeof w!="number")return c.throwError.call(this,"x must be a number",N);if(u(A)&&typeof A!="number")return c.throwError.call(this,"y must be a number",N);if(u(x)&&typeof x!="number")return c.throwError.call(this,"w must be a number",N);if(u(k)&&typeof k!="number")return c.throwError.call(this,"h must be a number",N)}var E=(p.length-1)/2;w=u(w)?w:E,A=u(A)?A:E,x=u(x)?x:this.bitmap.width-w,k=u(k)?k:this.bitmap.height-A;var S=this.cloneQuiet();return this.scanQuiet(w,A,x,k,function(R,M,j){var O=h(S,p,R,M);this.bitmap.data[j]=this.constructor.limit255(O[0]),this.bitmap.data[j+1]=this.constructor.limit255(O[1]),this.bitmap.data[j+2]=this.constructor.limit255(O[2])}),(0,c.isNodePattern)(N)&&N.call(this,null,this),this},color:m,colour:m}};a.default=y,d.exports=a.default}).call(this,r("buffer").Buffer)},{"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/toConsumableArray":20,"@jimp/utils":235,buffer:48,tinycolor2:178}],206:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var l=r("@jimp/utils"),s=function(){return{contain:function(c,h,u,o,n){if(typeof c!="number"||typeof h!="number")return l.throwError.call(this,"w and h must be numbers",n);typeof u=="string"&&(typeof o=="function"&&typeof n=="undefined"&&(n=o),o=u,u=null),typeof u=="function"&&(typeof n=="undefined"&&(n=u),o=null,u=null),typeof o=="function"&&typeof n=="undefined"&&(n=o,o=null),u=u||this.constructor.HORIZONTAL_ALIGN_CENTER|this.constructor.VERTICAL_ALIGN_MIDDLE;var m=u&(1<<3)-1,y=u>>3;if(!(m!==0&&!(m&m-1)||y!==0&&!(y&y-1)))return l.throwError.call(this,"only use one flag per alignment direction",n);var f=m>>1,v=y>>1,p=c/h>this.bitmap.width/this.bitmap.height?h/this.bitmap.height:c/this.bitmap.width,w=this.cloneQuiet().scale(p,o);return this.resize(c,h,o),this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(A,x,k){this.bitmap.data.writeUInt32BE(this._background,k)}),this.blit(w,(this.bitmap.width-w.bitmap.width)/2*f,(this.bitmap.height-w.bitmap.height)/2*v),(0,l.isNodePattern)(n)&&n.call(this,null,this),this}}};a.default=s,d.exports=a.default},{"@jimp/utils":235}],207:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var l=r("@jimp/utils"),s=function(){return{cover:function(c,h,u,o,n){if(typeof c!="number"||typeof h!="number")return l.throwError.call(this,"w and h must be numbers",n);u&&typeof u=="function"&&typeof n=="undefined"?(n=u,u=null,o=null):typeof o=="function"&&typeof n=="undefined"&&(n=o,o=null),u=u||this.constructor.HORIZONTAL_ALIGN_CENTER|this.constructor.VERTICAL_ALIGN_MIDDLE;var m=u&(1<<3)-1,y=u>>3;if(!(m!==0&&!(m&m-1)||y!==0&&!(y&y-1)))return l.throwError.call(this,"only use one flag per alignment direction",n);var f=m>>1,v=y>>1,p=c/h>this.bitmap.width/this.bitmap.height?c/this.bitmap.width:h/this.bitmap.height;return this.scale(p,o),this.crop((this.bitmap.width-c)/2*f,(this.bitmap.height-h)/2*v,c,h),(0,l.isNodePattern)(n)&&n.call(this,null,this),this}}};a.default=s,d.exports=a.default},{"@jimp/utils":235}],208:[function(r,d,a){(function(l){var s=r("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(a,"__esModule",{value:!0}),a.default=c;var g=s(r("@babel/runtime/helpers/typeof")),b=r("@jimp/utils");function c(h){return h("crop",function(u,o,n,m,y){if(typeof u!="number"||typeof o!="number")return b.throwError.call(this,"x and y must be numbers",y);if(typeof n!="number"||typeof m!="number")return b.throwError.call(this,"w and h must be numbers",y);if(u=Math.round(u),o=Math.round(o),n=Math.round(n),m=Math.round(m),u===0&&n===this.bitmap.width){var f=n*o+u<<2,v=f+m*n<<2;this.bitmap.data=this.bitmap.data.slice(f,v)}else{var p=l.allocUnsafe(n*m*4),w=0;this.scanQuiet(u,o,n,m,function(A,x,k){var N=this.bitmap.data.readUInt32BE(k,!0);p.writeUInt32BE(N,w,!0),w+=4}),this.bitmap.data=p}return this.bitmap.width=n,this.bitmap.height=m,(0,b.isNodePattern)(y)&&y.call(this,null,this),this}),{class:{autocrop:function(){for(var o=this.bitmap.width,n=this.bitmap.height,m=1,y,f=0,v=2e-4,p=!0,w=!1,A={north:!1,south:!1,east:!1,west:!1},x=arguments.length,k=new Array(x),N=0;N<x;N++)k[N]=arguments[N];for(var E=0,S=k.length;E<S;E++)if(typeof k[E]=="number"&&(v=k[E]),typeof k[E]=="boolean"&&(p=k[E]),typeof k[E]=="function"&&(y=k[E]),(0,g.default)(k[E])==="object"){var R=k[E];typeof R.tolerance!="undefined"&&(v=R.tolerance),typeof R.cropOnlyFrames!="undefined"&&(p=R.cropOnlyFrames),typeof R.cropSymmetric!="undefined"&&(w=R.cropSymmetric),typeof R.leaveBorder!="undefined"&&(f=R.leaveBorder),typeof R.ignoreSides!="undefined"&&(A=R.ignoreSides)}var M=this.getPixelColor(0,0),j=this.constructor.intToRGBA(M),O=0,V=0,J=0,B=0;if(M=this.getPixelColor(0,0),!A.north){e:for(var z=0;z<n-m;z++){for(var G=0;G<o;G++){var U=this.getPixelColor(G,z),ie=this.constructor.intToRGBA(U);if(this.constructor.colorDiff(j,ie)>v)break e}O++}}if(M=this.getPixelColor(o,0),!A.east){e:for(var oe=0;oe<o-m;oe++){for(var ae=0+O;ae<n;ae++){var W=this.getPixelColor(oe,ae),ee=this.constructor.intToRGBA(W);if(this.constructor.colorDiff(j,ee)>v)break e}V++}}if(M=this.getPixelColor(0,n),!A.south){e:for(var _=n-1;_>=O+m;_--){for(var re=o-V-1;re>=0;re--){var fe=this.getPixelColor(re,_),pe=this.constructor.intToRGBA(fe);if(this.constructor.colorDiff(j,pe)>v)break e}J++}}if(M=this.getPixelColor(o,n),!A.west){e:for(var he=o-1;he>=0+V+m;he--){for(var se=n-1;se>=0+O;se--){var ce=this.getPixelColor(he,se),q=this.constructor.intToRGBA(ce);if(this.constructor.colorDiff(j,q)>v)break e}B++}}var K=!1;if(B-=f,V-=f,O-=f,J-=f,w){var Y=Math.min(V,B),$=Math.min(O,J);B=Y,V=Y,O=$,J=$}B=B>=0?B:0,V=V>=0?V:0,O=O>=0?O:0,J=J>=0?J:0;var te=o-(B+V),L=n-(J+O);return p?K=V!==0&&O!==0&&B!==0&&J!==0:K=V!==0||O!==0||B!==0||J!==0,K&&this.crop(V,O,te,L),(0,b.isNodePattern)(y)&&y.call(this,null,this),this}}}}d.exports=a.default}).call(this,r("buffer").Buffer)},{"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/typeof":21,"@jimp/utils":235,buffer:48}],209:[function(r,d,a){var l=r("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var s=l(r("@babel/runtime/helpers/typeof")),g=r("@jimp/utils"),b=function(){return{displace:function(u,o,n){if((0,s.default)(u)!=="object"||u.constructor!==this.constructor)return g.throwError.call(this,"The source must be a Jimp image",n);if(typeof o!="number")return g.throwError.call(this,"factor must be a number",n);var m=this.cloneQuiet();return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(y,f,v){var p=u.bitmap.data[v]/256*o;p=Math.round(p);var w=this.getPixelIndex(y+p,f);this.bitmap.data[w]=m.bitmap.data[v],this.bitmap.data[w+1]=m.bitmap.data[v+1],this.bitmap.data[w+2]=m.bitmap.data[v+2]}),(0,g.isNodePattern)(n)&&n.call(this,null,this),this}}};a.default=b,d.exports=a.default},{"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/typeof":21,"@jimp/utils":235}],210:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var l=r("@jimp/utils");function s(b){var c=[1,9,3,11,13,5,15,7,4,12,2,10,16,8,14,6];return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(h,u,o){var n=((u&3)<<2)+h%4,m=c[n];this.bitmap.data[o]=Math.min(this.bitmap.data[o]+m,255),this.bitmap.data[o+1]=Math.min(this.bitmap.data[o+1]+m,255),this.bitmap.data[o+2]=Math.min(this.bitmap.data[o+2]+m,255)}),(0,l.isNodePattern)(b)&&b.call(this,null,this),this}var g=function(){return{dither565:s,dither16:s}};a.default=g,d.exports=a.default},{"@jimp/utils":235}],211:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var l=r("@jimp/utils"),s=function(){return{fisheye:function(){var c=this,h=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{r:2.5},u=arguments.length>1?arguments[1]:void 0;typeof h=="function"&&(u=h,h={r:2.5});var o=this.cloneQuiet(),n=o.bitmap,m=n.width,y=n.height;return o.scanQuiet(0,0,m,y,function(f,v){var p=f/m,w=v/y,A=Math.sqrt(Math.pow(p-.5,2)+Math.pow(w-.5,2)),x=2*Math.pow(A,h.r),k=(p-.5)/A,N=(w-.5)/A,E=Math.round((x*k+.5)*m),S=Math.round((x*N+.5)*y),R=o.getPixelColor(E,S);c.setPixelColor(R,f,v)}),this.setPixelColor(o.getPixelColor(m/2,y/2),m/2,y/2),(0,l.isNodePattern)(u)&&u.call(this,null,this),this}}};a.default=s,d.exports=a.default},{"@jimp/utils":235}],212:[function(r,d,a){(function(l){Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var s=r("@jimp/utils");function g(c,h,u){if(typeof c!="boolean"||typeof h!="boolean")return s.throwError.call(this,"horizontal and vertical must be Booleans",u);var o=l.alloc(this.bitmap.data.length);return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(n,m,y){var f=c?this.bitmap.width-1-n:n,v=h?this.bitmap.height-1-m:m,p=this.bitmap.width*v+f<<2,w=this.bitmap.data.readUInt32BE(y);o.writeUInt32BE(w,p)}),this.bitmap.data=l.from(o),(0,s.isNodePattern)(u)&&u.call(this,null,this),this}var b=function(){return{flip:g,mirror:g}};a.default=b,d.exports=a.default}).call(this,r("buffer").Buffer)},{"@jimp/utils":235,buffer:48}],213:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var l=r("@jimp/utils"),s=function(){return{gaussian:function(c,h){if(typeof c!="number")return l.throwError.call(this,"r must be a number",h);if(c<1)return l.throwError.call(this,"r must be greater than 0",h);for(var u=Math.ceil(c*2.57),o=u*2+1,n=c*c*2,m=n*Math.PI,y=[],f=0;f<o;f++){y[f]=[];for(var v=0;v<o;v++){var p=Math.pow(v-u,2)+Math.pow(f-u,2);y[f][v]=Math.exp(-p/n)/m}}for(var w=0;w<this.bitmap.height;w++)for(var A=0;A<this.bitmap.width;A++)for(var x=0,k=0,N=0,E=0,S=0,R=0;R<o;R++){for(var M=0;M<o;M++){var j=Math.min(this.bitmap.width-1,Math.max(0,M+A-u)),O=Math.min(this.bitmap.height-1,Math.max(0,R+w-u)),V=y[R][M],J=O*this.bitmap.width+j<<2;x+=this.bitmap.data[J]*V,k+=this.bitmap.data[J+1]*V,N+=this.bitmap.data[J+2]*V,E+=this.bitmap.data[J+3]*V,S+=V}var B=w*this.bitmap.width+A<<2;this.bitmap.data[B]=Math.round(x/S),this.bitmap.data[B+1]=Math.round(k/S),this.bitmap.data[B+2]=Math.round(N/S),this.bitmap.data[B+3]=Math.round(E/S)}return(0,l.isNodePattern)(h)&&h.call(this,null,this),this}}};a.default=s,d.exports=a.default},{"@jimp/utils":235}],214:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var l=r("@jimp/utils"),s=function(){return{invert:function(c){return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(h,u,o){this.bitmap.data[o]=255-this.bitmap.data[o],this.bitmap.data[o+1]=255-this.bitmap.data[o+1],this.bitmap.data[o+2]=255-this.bitmap.data[o+2]}),(0,l.isNodePattern)(c)&&c.call(this,null,this),this}}};a.default=s,d.exports=a.default},{"@jimp/utils":235}],215:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var l=r("@jimp/utils"),s=function(){return{mask:function(c){var h=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,u=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,o=arguments.length>3?arguments[3]:void 0;if(!(c instanceof this.constructor))return l.throwError.call(this,"The source must be a Jimp image",o);if(typeof h!="number"||typeof u!="number")return l.throwError.call(this,"x and y must be numbers",o);h=Math.round(h),u=Math.round(u);var n=this.bitmap.width,m=this.bitmap.height,y=this;return c.scanQuiet(0,0,c.bitmap.width,c.bitmap.height,function(f,v,p){var w=h+f,A=u+v;if(w>=0&&A>=0&&w<n&&A<m){var x=y.getPixelIndex(w,A),k=this.bitmap.data,N=(k[p+0]+k[p+1]+k[p+2])/3;y.bitmap.data[x+3]*=N/255}}),(0,l.isNodePattern)(o)&&o.call(this,null,this),this}}};a.default=s,d.exports=a.default},{"@jimp/utils":235}],216:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var l=r("@jimp/utils");function s(){var h={r:new Array(256).fill(0),g:new Array(256).fill(0),b:new Array(256).fill(0)};return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(u,o,n){h.r[this.bitmap.data[n+0]]++,h.g[this.bitmap.data[n+1]]++,h.b[this.bitmap.data[n+2]]++}),h}var g=function(u,o,n){return(u-o)*255/(n-o)},b=function(u){return[u.findIndex(function(o){return o>0}),255-u.slice().reverse().findIndex(function(o){return o>0})]},c=function(){return{normalize:function(o){var n=s.call(this),m={r:b(n.r),g:b(n.g),b:b(n.b)};return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(y,f,v){var p=this.bitmap.data[v+0],w=this.bitmap.data[v+1],A=this.bitmap.data[v+2];this.bitmap.data[v+0]=g(p,m.r[0],m.r[1]),this.bitmap.data[v+1]=g(w,m.g[0],m.g[1]),this.bitmap.data[v+2]=g(A,m.b[0],m.b[1])}),(0,l.isNodePattern)(o)&&o.call(this,null,this),this}}};a.default=c,d.exports=a.default},{"@jimp/utils":235}],217:[function(r,d,a){(function(l){var s=r("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var g=s(r("@babel/runtime/helpers/typeof")),b=s(r("@babel/runtime/helpers/toConsumableArray")),c=s(r("path")),h=s(r("load-bmfont")),u=r("@jimp/utils"),o=r("./measure-text");function n(A,x,k,N,E){return E===A.HORIZONTAL_ALIGN_LEFT?0:E===A.HORIZONTAL_ALIGN_CENTER?(N-(0,o.measureText)(x,k))/2:N-(0,o.measureText)(x,k)}function m(A,x,k,N,E){if(E.width>0&&E.height>0){var S=x.pages[E.page];A.blit(S,k+E.xoffset,N+E.yoffset,E.x,E.y,E.width,E.height)}return A}function y(A,x,k,N,E){for(var S=0;S<N.length;S++){var R=void 0;A.chars[N[S]]?R=N[S]:/\s/.test(N[S])?R="":R="?";var M=A.chars[R]||{},j=A.kernings[R];m(this,A,x,k,M||{});var O=j&&j[N[S+1]]?j[N[S+1]]:0;x+=O+(M.xadvance||E)}}function f(A,x,k){var N=x.split(" "),E=[],S=[],R=0;return N.forEach(function(M){var j=[].concat((0,b.default)(S),[M]).join(" "),O=(0,o.measureText)(A,j);O<=k?(O>R&&(R=O),S.push(M)):(E.push(S),S=[M])}),E.push(S),{lines:E,longestLine:R}}function v(A,x,k){var N=k.map(function(E){return A.read(x+"/"+E)});return Promise.all(N)}var p="browser/lib/",w=function(){return{constants:{measureText:o.measureText,measureTextHeight:o.measureTextHeight,FONT_SANS_8_BLACK:c.default.join(p,"fonts/open-sans/open-sans-8-black/open-sans-8-black.fnt"),FONT_SANS_10_BLACK:c.default.join(p,"fonts/open-sans/open-sans-10-black/open-sans-10-black.fnt"),FONT_SANS_12_BLACK:c.default.join(p,"fonts/open-sans/open-sans-12-black/open-sans-12-black.fnt"),FONT_SANS_14_BLACK:c.default.join(p,"fonts/open-sans/open-sans-14-black/open-sans-14-black.fnt"),FONT_SANS_16_BLACK:c.default.join(p,"fonts/open-sans/open-sans-16-black/open-sans-16-black.fnt"),FONT_SANS_32_BLACK:c.default.join(p,"fonts/open-sans/open-sans-32-black/open-sans-32-black.fnt"),FONT_SANS_64_BLACK:c.default.join(p,"fonts/open-sans/open-sans-64-black/open-sans-64-black.fnt"),FONT_SANS_128_BLACK:c.default.join(p,"fonts/open-sans/open-sans-128-black/open-sans-128-black.fnt"),FONT_SANS_8_WHITE:c.default.join(p,"fonts/open-sans/open-sans-8-white/open-sans-8-white.fnt"),FONT_SANS_16_WHITE:c.default.join(p,"fonts/open-sans/open-sans-16-white/open-sans-16-white.fnt"),FONT_SANS_32_WHITE:c.default.join(p,"fonts/open-sans/open-sans-32-white/open-sans-32-white.fnt"),FONT_SANS_64_WHITE:c.default.join(p,"fonts/open-sans/open-sans-64-white/open-sans-64-white.fnt"),FONT_SANS_128_WHITE:c.default.join(p,"fonts/open-sans/open-sans-128-white/open-sans-128-white.fnt"),loadFont:function(k,N){var E=this;return typeof k!="string"?u.throwError.call(this,"file must be a string",N):new Promise(function(S,R){N=N||function(M,j){M?R(M):S(j)},(0,h.default)(k,function(M,j){var O={},V={};if(M)return u.throwError.call(E,M,N);for(var J=0;J<j.chars.length;J++)O[String.fromCharCode(j.chars[J].id)]=j.chars[J];for(var B=0;B<j.kernings.length;B++){var z=String.fromCharCode(j.kernings[B].first);V[z]=V[z]||{},V[z][String.fromCharCode(j.kernings[B].second)]=j.kernings[B].amount}v(E,c.default.dirname(k),j.pages).then(function(G){N(null,{chars:O,kernings:V,pages:G,common:j.common,info:j.info})})})})}},class:{print:function(k,N,E,S,R,M,j){var O=this;if(typeof R=="function"&&typeof j=="undefined"&&(j=R,R=1/0),typeof R=="undefined"&&(R=1/0),typeof M=="function"&&typeof j=="undefined"&&(j=M,M=1/0),typeof M=="undefined"&&(M=1/0),(0,g.default)(k)!=="object")return u.throwError.call(this,"font must be a Jimp loadFont",j);if(typeof N!="number"||typeof E!="number"||typeof R!="number")return u.throwError.call(this,"x, y and maxWidth must be numbers",j);if(typeof R!="number")return u.throwError.call(this,"maxWidth must be a number",j);if(typeof M!="number")return u.throwError.call(this,"maxHeight must be a number",j);var V,J;if((0,g.default)(S)==="object"&&S.text!==null&&S.text!==void 0){V=S.alignmentX||this.constructor.HORIZONTAL_ALIGN_LEFT,J=S.alignmentY||this.constructor.VERTICAL_ALIGN_TOP;var B=S;S=B.text}else V=this.constructor.HORIZONTAL_ALIGN_LEFT,J=this.constructor.VERTICAL_ALIGN_TOP,S=S.toString();M!==1/0&&J===this.constructor.VERTICAL_ALIGN_BOTTOM?E+=M-(0,o.measureTextHeight)(k,S,R):M!==1/0&&J===this.constructor.VERTICAL_ALIGN_MIDDLE&&(E+=M/2-(0,o.measureTextHeight)(k,S,R)/2);var z=Object.entries(k.chars)[0][1].xadvance,G=f(k,S,R),U=G.lines,ie=G.longestLine;return U.forEach(function(oe){var ae=oe.join(" "),W=n(O.constructor,k,ae,R,V);y.call(O,k,N+W,E,ae,z),E+=k.common.lineHeight}),(0,u.isNodePattern)(j)&&j.call(this,null,this,{x:N+ie,y:E}),this}}}};a.default=w,d.exports=a.default}).call(this,"/../../node_modules/@jimp/plugin-print/dist")},{"./measure-text":218,"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/toConsumableArray":20,"@babel/runtime/helpers/typeof":21,"@jimp/utils":235,"load-bmfont":219,path:107}],218:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.measureText=l,a.measureTextHeight=s;function l(g,b){for(var c=0,h=0;h<b.length;h++)if(g.chars[b[h]]){var u=g.kernings[b[h]]&&g.kernings[b[h]][b[h+1]]?g.kernings[b[h]][b[h+1]]:0;c+=(g.chars[b[h]].xadvance||0)+u}return c}function s(g,b,c){for(var h=b.split(" "),u="",o=g.common.lineHeight,n=0;n<h.length;n++){var m=u+h[n]+" ",y=l(g,m);y>c&&n>0?(o+=g.common.lineHeight,u=h[n]+" "):u=m}return o}},{}],219:[function(r,d,a){(function(l){var s=r("xhr"),g=function(){},b=r("parse-bmfont-ascii"),c=r("parse-bmfont-xml"),h=r("parse-bmfont-binary"),u=r("./lib/is-binary"),o=r("xtend"),n=function(){return self.XMLHttpRequest&&"withCredentials"in new XMLHttpRequest}();d.exports=function(f,v){v=typeof v=="function"?v:g,typeof f=="string"?f={uri:f}:f||(f={});var p=f.binary;p&&(f=y(f)),s(f,function(w,A,x){if(w)return v(w);if(!/^2/.test(A.statusCode))return v(new Error("http status code: "+A.statusCode));if(!x)return v(new Error("no body result"));var k=!1;if(m(x)){var N=new Uint8Array(x);x=new l(N,"binary")}u(x)&&(k=!0,typeof x=="string"&&(x=new l(x,"binary"))),k||(l.isBuffer(x)&&(x=x.toString(f.encoding)),x=x.trim());var E;try{var S=A.headers["content-type"];k?E=h(x):/json/.test(S)||x.charAt(0)==="{"?E=JSON.parse(x):/xml/.test(S)||x.charAt(0)==="<"?E=c(x):E=b(x)}catch(R){v(new Error("error parsing font "+R.message)),v=g}v(null,E)})};function m(f){var v=Object.prototype.toString;return v.call(f)==="[object ArrayBuffer]"}function y(f){if(n)return o(f,{responseType:"arraybuffer"});if(typeof self.XMLHttpRequest=="undefined")throw new Error("your browser does not support XHR loading");var v=new self.XMLHttpRequest;return v.overrideMimeType("text/plain; charset=x-user-defined"),o({xhr:v},f)}}).call(this,r("buffer").Buffer)},{"./lib/is-binary":220,buffer:48,"parse-bmfont-ascii":102,"parse-bmfont-binary":103,"parse-bmfont-xml":104,xhr:187,xtend:189}],220:[function(r,d,a){(function(l){var s=r("buffer-equal"),g=new l([66,77,70,3]);d.exports=function(b){return typeof b=="string"?b.substring(0,3)==="BMF":b.length>4&&s(b.slice(0,4),g)}}).call(this,r("buffer").Buffer)},{buffer:48,"buffer-equal":49}],221:[function(r,d,a){(function(l){var s=r("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var g=r("@jimp/utils"),b=s(r("./modules/resize")),c=s(r("./modules/resize2")),h=function(){return{constants:{RESIZE_NEAREST_NEIGHBOR:"nearestNeighbor",RESIZE_BILINEAR:"bilinearInterpolation",RESIZE_BICUBIC:"bicubicInterpolation",RESIZE_HERMITE:"hermiteInterpolation",RESIZE_BEZIER:"bezierInterpolation"},class:{resize:function(n,m,y,f){if(typeof n!="number"||typeof m!="number")return g.throwError.call(this,"w and h must be numbers",f);if(typeof y=="function"&&typeof f=="undefined"&&(f=y,y=null),n===this.constructor.AUTO&&m===this.constructor.AUTO)return g.throwError.call(this,"w and h cannot both be set to auto",f);if(n===this.constructor.AUTO&&(n=this.bitmap.width*(m/this.bitmap.height)),m===this.constructor.AUTO&&(m=this.bitmap.height*(n/this.bitmap.width)),n<0||m<0)return g.throwError.call(this,"w and h must be positive numbers",f);if(n=Math.round(n),m=Math.round(m),typeof c.default[y]=="function"){var v={data:l.alloc(n*m*4),width:n,height:m};c.default[y](this.bitmap,v),this.bitmap=v}else{var p=this,w=new b.default(this.bitmap.width,this.bitmap.height,n,m,!0,!0,function(A){p.bitmap.data=l.from(A),p.bitmap.width=n,p.bitmap.height=m});w.resize(this.bitmap.data)}return(0,g.isNodePattern)(f)&&f.call(this,null,this),this}}}};a.default=h,d.exports=a.default}).call(this,r("buffer").Buffer)},{"./modules/resize":222,"./modules/resize2":223,"@babel/runtime/helpers/interopRequireDefault":11,"@jimp/utils":235,buffer:48}],222:[function(r,d,a){function l(s,g,b,c,h,u,o){this.widthOriginal=Math.abs(Math.floor(s)||0),this.heightOriginal=Math.abs(Math.floor(g)||0),this.targetWidth=Math.abs(Math.floor(b)||0),this.targetHeight=Math.abs(Math.floor(c)||0),this.colorChannels=h?4:3,this.interpolationPass=Boolean(u),this.resizeCallback=typeof o=="function"?o:function(){},this.targetWidthMultipliedByChannels=this.targetWidth*this.colorChannels,this.originalWidthMultipliedByChannels=this.widthOriginal*this.colorChannels,this.originalHeightMultipliedByChannels=this.heightOriginal*this.colorChannels,this.widthPassResultSize=this.targetWidthMultipliedByChannels*this.heightOriginal,this.finalResultSize=this.targetWidthMultipliedByChannels*this.targetHeight,this.initialize()}l.prototype.initialize=function(){if(this.widthOriginal>0&&this.heightOriginal>0&&this.targetWidth>0&&this.targetHeight>0)this.configurePasses();else throw new Error("Invalid settings specified for the resizer.")},l.prototype.configurePasses=function(){this.widthOriginal===this.targetWidth?this.resizeWidth=this.bypassResizer:(this.ratioWeightWidthPass=this.widthOriginal/this.targetWidth,this.ratioWeightWidthPass<1&&this.interpolationPass?(this.initializeFirstPassBuffers(!0),this.resizeWidth=this.colorChannels===4?this.resizeWidthInterpolatedRGBA:this.resizeWidthInterpolatedRGB):(this.initializeFirstPassBuffers(!1),this.resizeWidth=this.colorChannels===4?this.resizeWidthRGBA:this.resizeWidthRGB)),this.heightOriginal===this.targetHeight?this.resizeHeight=this.bypassResizer:(this.ratioWeightHeightPass=this.heightOriginal/this.targetHeight,this.ratioWeightHeightPass<1&&this.interpolationPass?(this.initializeSecondPassBuffers(!0),this.resizeHeight=this.resizeHeightInterpolated):(this.initializeSecondPassBuffers(!1),this.resizeHeight=this.colorChannels===4?this.resizeHeightRGBA:this.resizeHeightRGB))},l.prototype._resizeWidthInterpolatedRGBChannels=function(s,g){var b=g?4:3,c=this.ratioWeightWidthPass,h=this.widthBuffer,u=0,o=0,n=0,m=0,y=0,f;for(f=0;u<1/3;f+=b,u+=c)for(o=f,n=0;o<this.widthPassResultSize;n+=this.originalWidthMultipliedByChannels,o+=this.targetWidthMultipliedByChannels)h[o]=s[n],h[o+1]=s[n+1],h[o+2]=s[n+2],g&&(h[o+3]=s[n+3]);u-=1/3;var v;for(v=this.widthOriginal-1;u<v;f+=b,u+=c)for(y=u%1,m=1-y,o=f,n=Math.floor(u)*b;o<this.widthPassResultSize;n+=this.originalWidthMultipliedByChannels,o+=this.targetWidthMultipliedByChannels)h[o+0]=s[n+0]*m+s[n+b+0]*y,h[o+1]=s[n+1]*m+s[n+b+1]*y,h[o+2]=s[n+2]*m+s[n+b+2]*y,g&&(h[o+3]=s[n+3]*m+s[n+b+3]*y);for(v=this.originalWidthMultipliedByChannels-b;f<this.targetWidthMultipliedByChannels;f+=b)for(o=f,n=v;o<this.widthPassResultSize;n+=this.originalWidthMultipliedByChannels,o+=this.targetWidthMultipliedByChannels)h[o]=s[n],h[o+1]=s[n+1],h[o+2]=s[n+2],g&&(h[o+3]=s[n+3]);return h},l.prototype._resizeWidthRGBChannels=function(s,g){var b=g?4:3,c=this.ratioWeightWidthPass,h=1/c,u=this.originalWidthMultipliedByChannels-b+1,o=this.targetWidthMultipliedByChannels-b+1,n=this.outputWidthWorkBench,m=this.widthBuffer,y=this.outputWidthWorkBenchOpaquePixelsCount,f=0,v=0,p=0,w=0,A=0,x=0,k=0,N=1,E=0,S=0,R=0,M=0;do{for(A=0;A<this.originalHeightMultipliedByChannels;)n[A++]=0,n[A++]=0,n[A++]=0,g&&(n[A++]=0,y[A/b-1]=0);f=c;do{for(v=1+p-w,N=Math.min(f,v),A=0,x=p;A<this.originalHeightMultipliedByChannels;x+=u)E=s[x],S=s[++x],R=s[++x],M=g?s[++x]:255,n[A++]+=(M?E:0)*N,n[A++]+=(M?S:0)*N,n[A++]+=(M?R:0)*N,g&&(n[A++]+=M*N,y[A/b-1]+=M?N:0);if(f>=v)p+=b,w=p,f-=v;else{w+=f;break}}while(f>0&&p<this.originalWidthMultipliedByChannels);for(A=0,x=k;A<this.originalHeightMultipliedByChannels;x+=o)f=g?y[A/b]:1,N=g?f?1/f:0:h,m[x]=n[A++]*N,m[++x]=n[A++]*N,m[++x]=n[A++]*N,g&&(m[++x]=n[A++]*h);k+=b}while(k<this.targetWidthMultipliedByChannels);return m},l.prototype._resizeHeightRGBChannels=function(s,g){var b=this.ratioWeightHeightPass,c=1/b,h=this.outputHeightWorkBench,u=this.heightBuffer,o=this.outputHeightWorkBenchOpaquePixelsCount,n=0,m=0,y=0,f=0,v=0,p=0,w=0,A=1,x=0,k=0,N=0,E=0;do{for(v=0;v<this.targetWidthMultipliedByChannels;)h[v++]=0,h[v++]=0,h[v++]=0,g&&(h[v++]=0,o[v/4-1]=0);n=b;do{for(m=1+y-f,A=Math.min(n,m),w=y,v=0;v<this.targetWidthMultipliedByChannels;)x=s[w++],k=s[w++],N=s[w++],E=g?s[w++]:255,h[v++]+=(E?x:0)*A,h[v++]+=(E?k:0)*A,h[v++]+=(E?N:0)*A,g&&(h[v++]+=E*A,o[v/4-1]+=E?A:0);if(n>=m)y=w,f=y,n-=m;else{f+=n;break}}while(n>0&&y<this.widthPassResultSize);for(v=0;v<this.targetWidthMultipliedByChannels;)n=g?o[v/4]:1,A=g?n?1/n:0:c,u[p++]=Math.round(h[v++]*A),u[p++]=Math.round(h[v++]*A),u[p++]=Math.round(h[v++]*A),g&&(u[p++]=Math.round(h[v++]*c))}while(p<this.finalResultSize);return u},l.prototype.resizeWidthInterpolatedRGB=function(s){return this._resizeWidthInterpolatedRGBChannels(s,!1)},l.prototype.resizeWidthInterpolatedRGBA=function(s){return this._resizeWidthInterpolatedRGBChannels(s,!0)},l.prototype.resizeWidthRGB=function(s){return this._resizeWidthRGBChannels(s,!1)},l.prototype.resizeWidthRGBA=function(s){return this._resizeWidthRGBChannels(s,!0)},l.prototype.resizeHeightInterpolated=function(s){for(var g=this.ratioWeightHeightPass,b=this.heightBuffer,c=0,h=0,u=0,o=0,n=0,m=0,y=0,f;c<1/3;c+=g)for(u=0;u<this.targetWidthMultipliedByChannels;)b[h++]=Math.round(s[u++]);for(c-=1/3,f=this.heightOriginal-1;c<f;c+=g)for(y=c%1,m=1-y,o=Math.floor(c)*this.targetWidthMultipliedByChannels,n=o+this.targetWidthMultipliedByChannels,u=0;u<this.targetWidthMultipliedByChannels;++u)b[h++]=Math.round(s[o++]*m+s[n++]*y);for(;h<this.finalResultSize;)for(u=0,o=f*this.targetWidthMultipliedByChannels;u<this.targetWidthMultipliedByChannels;++u)b[h++]=Math.round(s[o++]);return b},l.prototype.resizeHeightRGB=function(s){return this._resizeHeightRGBChannels(s,!1)},l.prototype.resizeHeightRGBA=function(s){return this._resizeHeightRGBChannels(s,!0)},l.prototype.resize=function(s){this.resizeCallback(this.resizeHeight(this.resizeWidth(s)))},l.prototype.bypassResizer=function(s){return s},l.prototype.initializeFirstPassBuffers=function(s){this.widthBuffer=this.generateFloatBuffer(this.widthPassResultSize),s||(this.outputWidthWorkBench=this.generateFloatBuffer(this.originalHeightMultipliedByChannels),this.colorChannels>3&&(this.outputWidthWorkBenchOpaquePixelsCount=this.generateFloat64Buffer(this.heightOriginal)))},l.prototype.initializeSecondPassBuffers=function(s){this.heightBuffer=this.generateUint8Buffer(this.finalResultSize),s||(this.outputHeightWorkBench=this.generateFloatBuffer(this.targetWidthMultipliedByChannels),this.colorChannels>3&&(this.outputHeightWorkBenchOpaquePixelsCount=this.generateFloat64Buffer(this.targetWidth)))},l.prototype.generateFloatBuffer=function(s){try{return new Float32Array(s)}catch{return[]}},l.prototype.generateFloat64Buffer=function(s){try{return new Float64Array(s)}catch{return[]}},l.prototype.generateUint8Buffer=function(s){try{return new Uint8Array(s)}catch{return[]}},d.exports=l},{}],223:[function(r,d,a){(function(l){d.exports={nearestNeighbor:function(g,b){for(var c=g.width,h=g.height,u=b.width,o=b.height,n=g.data,m=b.data,y=0;y<o;y++)for(var f=0;f<u;f++){var v=(y*u+f)*4,p=Math.floor(y*h/o),w=Math.floor(f*c/u),A=(p*c+w)*4;m[v++]=n[A++],m[v++]=n[A++],m[v++]=n[A++],m[v++]=n[A++]}},bilinearInterpolation:function(g,b){for(var c=g.width,h=g.height,u=b.width,o=b.height,n=g.data,m=b.data,y=function(M,j,O,V,J){return j===V?O:Math.round((M-j)*J+(V-M)*O)},f=function(M,j,O,V,J,B,z,G){var U=(z*c+V)*4+j,ie=(z*c+J)*4+j,oe=y(O,V,n[U],J,n[ie]);if(G===z)m[M+j]=oe;else{U=(G*c+V)*4+j,ie=(G*c+J)*4+j;var ae=y(O,V,n[U],J,n[ie]);m[M+j]=y(B,z,oe,G,ae)}},v=0;v<o;v++)for(var p=0;p<u;p++){var w=(v*u+p)*4,A=p*c/u,x=Math.floor(A),k=Math.min(Math.ceil(A),c-1),N=v*h/o,E=Math.floor(N),S=Math.min(Math.ceil(N),h-1);f(w,0,A,x,k,N,E,S),f(w,1,A,x,k,N,E,S),f(w,2,A,x,k,N,E,S),f(w,3,A,x,k,N,E,S)}},_interpolate2D:function(g,b,c,h){for(var u=g.data,o=b.data,n=g.width,m=g.height,y=b.width,f=b.height,v=Math.max(1,Math.floor(n/y)),p=y*v,w=Math.max(1,Math.floor(m/f)),A=f*w,x=l.alloc(p*m*4),k=0;k<m;k++)for(var N=0;N<p;N++)for(var E=N*(n-1)/p,S=Math.floor(E),R=E-S,M=(k*n+S)*4,j=(k*p+N)*4,O=0;O<4;O++){var V=M+O,J=S>0?u[V-4]:2*u[V]-u[V+4],B=u[V],z=u[V+4],G=S<n-2?u[V+8]:2*u[V+4]-u[V];x[j+O]=h(J,B,z,G,R)}for(var U=l.alloc(p*A*4),ie=0;ie<A;ie++)for(var oe=0;oe<p;oe++)for(var ae=ie*(m-1)/A,W=Math.floor(ae),ee=ae-W,_=(W*p+oe)*4,re=(ie*p+oe)*4,fe=0;fe<4;fe++){var pe=_+fe,he=W>0?x[pe-p*4]:2*x[pe]-x[pe+p*4],se=x[pe],ce=x[pe+p*4],q=W<m-2?x[pe+p*8]:2*x[pe+p*4]-x[pe];U[re+fe]=h(he,se,ce,q,ee)}var K=v*w;if(K>1)for(var Y=0;Y<f;Y++)for(var $=0;$<y;$++){for(var te=0,L=0,T=0,F=0,X=0,H=0;H<w;H++)for(var I=Y*w+H,C=0;C<v;C++){var Q=$*v+C,le=(I*p+Q)*4,ge=U[le+3];ge&&(te+=U[le],L+=U[le+1],T+=U[le+2],X++),F+=ge}var ye=(Y*y+$)*4;o[ye]=X?Math.round(te/X):0,o[ye+1]=X?Math.round(L/X):0,o[ye+2]=X?Math.round(T/X):0,o[ye+3]=Math.round(F/K)}else b.data=U},bicubicInterpolation:function(g,b,c){var h=function(o,n,m,y,f){var v=y-m-o+n,p=o-n-v,w=m-o,A=n;return Math.max(0,Math.min(255,v*(f*f*f)+p*(f*f)+w*f+A))};return this._interpolate2D(g,b,c,h)},hermiteInterpolation:function(g,b,c){var h=function(o,n,m,y,f){var v=n,p=.5*(m-o),w=o-2.5*n+2*m-.5*y,A=.5*(y-o)+1.5*(n-m);return Math.max(0,Math.min(255,Math.round(((A*f+w)*f+p)*f+v)))};return this._interpolate2D(g,b,c,h)},bezierInterpolation:function(g,b,c){var h=function(o,n,m,y,f){var v=n+(m-o)/4,p=m-(y-n)/4,w=1-f,A=n*w*w*w,x=3*v*w*w*f,k=3*p*w*f*f,N=m*f*f*f;return Math.max(0,Math.min(255,Math.round(A+x+k+N)))};return this._interpolate2D(g,b,c,h)}}}).call(this,r("buffer").Buffer)},{buffer:48}],224:[function(r,d,a){(function(l){Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var s=r("@jimp/utils");function g(c,h){c%=360;var u=c*Math.PI/180,o=Math.cos(u),n=Math.sin(u),m=this.bitmap.width,y=this.bitmap.height;if(h===!0||typeof h=="string"){m=Math.ceil(Math.abs(this.bitmap.width*o)+Math.abs(this.bitmap.height*n))+1,y=Math.ceil(Math.abs(this.bitmap.width*n)+Math.abs(this.bitmap.height*o))+1,m%2!==0&&m++,y%2!==0&&y++;var f=this.cloneQuiet();this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(z,G,U){this.bitmap.data.writeUInt32BE(this._background,U)});var v=Math.max(m,y,this.bitmap.width,this.bitmap.height);this.resize(v,v,h),this.blit(f,this.bitmap.width/2-f.bitmap.width/2,this.bitmap.height/2-f.bitmap.height/2)}var p=this.bitmap.width,w=this.bitmap.height,A=l.alloc(this.bitmap.data.length);function x(z,G){return function(U,ie){return{x:U+z,y:ie+G}}}for(var k=x(-(p/2),-(w/2)),N=x(p/2+.5,w/2+.5),E=1;E<=w;E++)for(var S=1;S<=p;S++){var R=k(S,E),M=N(o*R.x-n*R.y,o*R.y+n*R.x),j=p*(E-1)+S-1<<2;if(M.x>=0&&M.x<p&&M.y>=0&&M.y<w){var O=(p*(M.y|0)+M.x|0)<<2,V=this.bitmap.data.readUInt32BE(O);A.writeUInt32BE(V,j)}else A.writeUInt32BE(this._background,j)}if(this.bitmap.data=A,h===!0||typeof h=="string"){var J=p/2-m/2,B=w/2-y/2;this.crop(J,B,m,y)}}var b=function(){return{rotate:function(u,o,n){return(typeof o=="undefined"||o===null)&&(o=!0),typeof o=="function"&&typeof n=="undefined"&&(n=o,o=!0),typeof u!="number"?s.throwError.call(this,"deg must be a number",n):typeof o!="boolean"&&typeof o!="string"?s.throwError.call(this,"mode must be a boolean or a string",n):(g.call(this,u,o,n),(0,s.isNodePattern)(n)&&n.call(this,null,this),this)}}};a.default=b,d.exports=a.default}).call(this,r("buffer").Buffer)},{"@jimp/utils":235,buffer:48}],225:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var l=r("@jimp/utils"),s=function(){return{scale:function(c,h,u){if(typeof c!="number")return l.throwError.call(this,"f must be a number",u);if(c<0)return l.throwError.call(this,"f must be a positive number",u);typeof h=="function"&&typeof u=="undefined"&&(u=h,h=null);var o=this.bitmap.width*c,n=this.bitmap.height*c;return this.resize(o,n,h),(0,l.isNodePattern)(u)&&u.call(this,null,this),this},scaleToFit:function(c,h,u,o){if(typeof c!="number"||typeof h!="number")return l.throwError.call(this,"w and h must be numbers",o);typeof u=="function"&&typeof o=="undefined"&&(o=u,u=null);var n=c/h>this.bitmap.width/this.bitmap.height?h/this.bitmap.height:c/this.bitmap.width;return this.scale(n,u),(0,l.isNodePattern)(o)&&o.call(this,null,this),this}}};a.default=s,d.exports=a.default},{"@jimp/utils":235}],226:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var l=r("@jimp/utils"),s=function(){return{shadow:function(){var c=this,h=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},u=arguments.length>1?arguments[1]:void 0;typeof h=="function"&&(u=h,h={});var o=h,n=o.opacity,m=n===void 0?.7:n,y=o.size,f=y===void 0?1.1:y,v=o.x,p=v===void 0?-25:v,w=o.y,A=w===void 0?25:w,x=o.blur,k=x===void 0?5:x,N=this.clone(),E=this.clone();return E.scan(0,0,E.bitmap.width,E.bitmap.height,function(S,R,M){E.bitmap.data[M]=0,E.bitmap.data[M+1]=0,E.bitmap.data[M+2]=0,E.bitmap.data[M+3]=E.constructor.limit255(E.bitmap.data[M+3]*m),c.bitmap.data[M]=0,c.bitmap.data[M+1]=0,c.bitmap.data[M+2]=0,c.bitmap.data[M+3]=0}),E.resize(E.bitmap.width*f,E.bitmap.height*f).blur(k),this.composite(E,p,A),this.composite(N,0,0),(0,l.isNodePattern)(u)&&u.call(this,null,this),this}}};a.default=s,d.exports=a.default},{"@jimp/utils":235}],227:[function(r,d,a){Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var l=r("@jimp/utils"),s=function(){return{threshold:function(c,h){var u=this,o=c.max,n=c.replace,m=n===void 0?255:n,y=c.autoGreyscale,f=y===void 0?!0:y;return typeof o!="number"?l.throwError.call(this,"max must be a number",h):typeof m!="number"?l.throwError.call(this,"replace must be a number",h):typeof f!="boolean"?l.throwError.call(this,"autoGreyscale must be a boolean",h):(o=this.constructor.limit255(o),m=this.constructor.limit255(m),f&&this.greyscale(),this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(v,p,w){var A=u.bitmap.data[w]<o?u.bitmap.data[w]:m;u.bitmap.data[w]=A,u.bitmap.data[w+1]=A,u.bitmap.data[w+2]=A}),(0,l.isNodePattern)(h)&&h.call(this,null,this),this)}}};a.default=s,d.exports=a.default},{"@jimp/utils":235}],228:[function(r,d,a){var l=r("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var s=l(r("@babel/runtime/helpers/toConsumableArray")),g=r("timm"),b=l(r("@jimp/plugin-blit")),c=l(r("@jimp/plugin-blur")),h=l(r("@jimp/plugin-circle")),u=l(r("@jimp/plugin-color")),o=l(r("@jimp/plugin-contain")),n=l(r("@jimp/plugin-cover")),m=l(r("@jimp/plugin-crop")),y=l(r("@jimp/plugin-displace")),f=l(r("@jimp/plugin-dither")),v=l(r("@jimp/plugin-fisheye")),p=l(r("@jimp/plugin-flip")),w=l(r("@jimp/plugin-gaussian")),A=l(r("@jimp/plugin-invert")),x=l(r("@jimp/plugin-mask")),k=l(r("@jimp/plugin-normalize")),N=l(r("@jimp/plugin-print")),E=l(r("@jimp/plugin-resize")),S=l(r("@jimp/plugin-rotate")),R=l(r("@jimp/plugin-scale")),M=l(r("@jimp/plugin-shadow")),j=l(r("@jimp/plugin-threshold")),O=[b.default,c.default,h.default,u.default,o.default,n.default,m.default,y.default,f.default,v.default,p.default,w.default,A.default,x.default,k.default,N.default,E.default,S.default,R.default,M.default,j.default],V=function(B){var z=O.map(function(G){var U=G(B)||{};return!U.class&&!U.constants&&(U={class:U}),U});return g.mergeDeep.apply(void 0,(0,s.default)(z))};a.default=V,d.exports=a.default},{"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/toConsumableArray":20,"@jimp/plugin-blit":201,"@jimp/plugin-blur":203,"@jimp/plugin-circle":204,"@jimp/plugin-color":205,"@jimp/plugin-contain":206,"@jimp/plugin-cover":207,"@jimp/plugin-crop":208,"@jimp/plugin-displace":209,"@jimp/plugin-dither":210,"@jimp/plugin-fisheye":211,"@jimp/plugin-flip":212,"@jimp/plugin-gaussian":213,"@jimp/plugin-invert":214,"@jimp/plugin-mask":215,"@jimp/plugin-normalize":216,"@jimp/plugin-print":217,"@jimp/plugin-resize":221,"@jimp/plugin-rotate":224,"@jimp/plugin-scale":225,"@jimp/plugin-shadow":226,"@jimp/plugin-threshold":227,timm:177}],229:[function(r,d,a){var l=r("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var s=l(r("@babel/runtime/helpers/defineProperty")),g=l(r("bmp-js")),b=r("@jimp/utils"),c="image/bmp",h="image/x-ms-bmp";function u(f){return(0,b.scan)(f,0,0,f.bitmap.width,f.bitmap.height,function(v,p,w){var A=this.bitmap.data[w+0],x=this.bitmap.data[w+1],k=this.bitmap.data[w+2],N=this.bitmap.data[w+3];this.bitmap.data[w+0]=N,this.bitmap.data[w+1]=k,this.bitmap.data[w+2]=x,this.bitmap.data[w+3]=A}).bitmap}function o(f){return(0,b.scan)({bitmap:f},0,0,f.width,f.height,function(v,p,w){var A=this.bitmap.data[w+0],x=this.bitmap.data[w+1],k=this.bitmap.data[w+2],N=this.bitmap.data[w+3];this.bitmap.data[w+0]=N,this.bitmap.data[w+1]=k,this.bitmap.data[w+2]=x,this.bitmap.data[w+3]=f.is_with_alpha?A:255}).bitmap}var n=function(v){return o(g.default.decode(v))},m=function(v){return g.default.encode(u(v)).data},y=function(){var v,p;return{mime:(0,s.default)({},c,["bmp"]),constants:{MIME_BMP:c,MIME_X_MS_BMP:h},decoders:(v={},(0,s.default)(v,c,n),(0,s.default)(v,h,n),v),encoders:(p={},(0,s.default)(p,c,m),(0,s.default)(p,h,m),p)}};a.default=y,d.exports=a.default},{"@babel/runtime/helpers/defineProperty":7,"@babel/runtime/helpers/interopRequireDefault":11,"@jimp/utils":235,"bmp-js":30}],230:[function(r,d,a){(function(l){var s=r("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var g=s(r("@babel/runtime/helpers/defineProperty")),b=s(r("omggif")),c=r("gifwrap"),h="image/gif",u=function(){return{mime:(0,g.default)({},h,["gif"]),constants:{MIME_GIF:h},decoders:(0,g.default)({},h,function(n){var m=new b.default.GifReader(n),y=l.alloc(m.width*m.height*4);return m.decodeAndBlitFrameRGBA(0,y),{data:y,width:m.width,height:m.height}}),encoders:(0,g.default)({},h,function(n){var m=new c.BitmapImage(n.bitmap);c.GifUtil.quantizeDekker(m,256);var y=new c.GifFrame(m),f=new c.GifCodec;return f.encodeGif([y],{}).then(function(v){return v.buffer})})}};a.default=u,d.exports=a.default}).call(this,r("buffer").Buffer)},{"@babel/runtime/helpers/defineProperty":7,"@babel/runtime/helpers/interopRequireDefault":11,buffer:48,gifwrap:70,omggif:85}],231:[function(r,d,a){var l=r("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var s=l(r("@babel/runtime/helpers/defineProperty")),g=l(r("jpeg-js")),b=r("@jimp/utils"),c="image/jpeg",h=function(){return{mime:(0,s.default)({},c,["jpeg","jpg","jpe"]),constants:{MIME_JPEG:c},decoders:(0,s.default)({},c,g.default.decode),encoders:(0,s.default)({},c,function(o){return g.default.encode(o.bitmap,o._quality).data}),class:{_quality:100,quality:function(n,m){return typeof n!="number"?b.throwError.call(this,"n must be a number",m):n<0||n>100?b.throwError.call(this,"n must be a number 0 - 100",m):(this._quality=Math.round(n),(0,b.isNodePattern)(m)&&m.call(this,null,this),this)}}}};a.default=h,d.exports=a.default},{"@babel/runtime/helpers/defineProperty":7,"@babel/runtime/helpers/interopRequireDefault":11,"@jimp/utils":235,"jpeg-js":80}],232:[function(r,d,a){var l=r("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var s=l(r("@babel/runtime/helpers/defineProperty")),g=r("pngjs"),b=r("@jimp/utils"),c="image/png",h=-1,u=0,o=1,n=2,m=3,y=4,f=function(){return{mime:(0,s.default)({},c,["png"]),constants:{MIME_PNG:c,PNG_FILTER_AUTO:h,PNG_FILTER_NONE:u,PNG_FILTER_SUB:o,PNG_FILTER_UP:n,PNG_FILTER_AVERAGE:m,PNG_FILTER_PATH:y},hasAlpha:(0,s.default)({},c,!0),decoders:(0,s.default)({},c,g.PNG.sync.read),encoders:(0,s.default)({},c,function(p){var w=new g.PNG({width:p.bitmap.width,height:p.bitmap.height});return w.data=p.bitmap.data,g.PNG.sync.write(w,{width:p.bitmap.width,height:p.bitmap.height,deflateLevel:p._deflateLevel,deflateStrategy:p._deflateStrategy,filterType:p._filterType,colorType:typeof p._colorType=="number"?p._colorType:p._rgba?6:2,inputHasAlpha:p._rgba})}),class:{_deflateLevel:9,_deflateStrategy:3,_filterType:h,_colorType:null,deflateLevel:function(w,A){return typeof w!="number"?b.throwError.call(this,"l must be a number",A):w<0||w>9?b.throwError.call(this,"l must be a number 0 - 9",A):(this._deflateLevel=Math.round(w),(0,b.isNodePattern)(A)&&A.call(this,null,this),this)},deflateStrategy:function(w,A){return typeof w!="number"?b.throwError.call(this,"s must be a number",A):w<0||w>3?b.throwError.call(this,"s must be a number 0 - 3",A):(this._deflateStrategy=Math.round(w),(0,b.isNodePattern)(A)&&A.call(this,null,this),this)},filterType:function(w,A){return typeof w!="number"?b.throwError.call(this,"n must be a number",A):w<-1||w>4?b.throwError.call(this,"n must be -1 (auto) or a number 0 - 4",A):(this._filterType=Math.round(w),(0,b.isNodePattern)(A)&&A.call(this,null,this),this)},colorType:function(w,A){return typeof w!="number"?b.throwError.call(this,"s must be a number",A):w!==0&&w!==2&&w!==4&&w!==6?b.throwError.call(this,"s must be a number 0, 2, 4, 6.",A):(this._colorType=Math.round(w),(0,b.isNodePattern)(A)&&A.call(this,null,this),this)}}}};a.default=f,d.exports=a.default},{"@babel/runtime/helpers/defineProperty":7,"@babel/runtime/helpers/interopRequireDefault":11,"@jimp/utils":235,pngjs:129}],233:[function(r,d,a){(function(l){var s=r("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var g=s(r("@babel/runtime/helpers/defineProperty")),b=s(r("utif")),c="image/tiff",h=function(){return{mime:(0,g.default)({},c,["tiff","tif"]),constants:{MIME_TIFF:c},decoders:(0,g.default)({},c,function(o){var n=b.default.decode(o),m=n[0];b.default.decodeImages(o,n);var y=b.default.toRGBA8(m);return{data:l.from(y),width:m.t256[0],height:m.t257[0]}}),encoders:(0,g.default)({},c,function(o){var n=b.default.encodeImage(o.bitmap.data,o.bitmap.width,o.bitmap.height);return l.from(n)})}};a.default=h,d.exports=a.default}).call(this,r("buffer").Buffer)},{"@babel/runtime/helpers/defineProperty":7,"@babel/runtime/helpers/interopRequireDefault":11,buffer:48,utif:182}],234:[function(r,d,a){var l=r("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var s=r("timm"),g=l(r("@jimp/jpeg")),b=l(r("@jimp/png")),c=l(r("@jimp/bmp")),h=l(r("@jimp/tiff")),u=l(r("@jimp/gif")),o=function(){return(0,s.mergeDeep)((0,g.default)(),(0,b.default)(),(0,c.default)(),(0,h.default)(),(0,u.default)())};a.default=o,d.exports=a.default},{"@babel/runtime/helpers/interopRequireDefault":11,"@jimp/bmp":229,"@jimp/gif":230,"@jimp/jpeg":231,"@jimp/png":232,"@jimp/tiff":233,timm:177}],235:[function(r,d,a){var l=r("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(a,"__esModule",{value:!0}),a.isNodePattern=b,a.throwError=c,a.scan=h,a.scanIterator=u;var s=l(r("@babel/runtime/regenerator")),g=s.default.mark(u);function b(o){if(typeof o=="undefined")return!1;if(typeof o!="function")throw new TypeError("Callback must be a function");return!0}function c(o,n){if(typeof o=="string"&&(o=new Error(o)),typeof n=="function")return n.call(this,o);throw o}function h(o,n,m,y,f,v){n=Math.round(n),m=Math.round(m),y=Math.round(y),f=Math.round(f);for(var p=m;p<m+f;p++)for(var w=n;w<n+y;w++){var A=o.bitmap.width*p+w<<2;v.call(o,w,p,A)}return o}function u(o,n,m,y,f){var v,p,w;return s.default.wrap(function(x){for(;;)switch(x.prev=x.next){case 0:n=Math.round(n),m=Math.round(m),y=Math.round(y),f=Math.round(f),v=m;case 5:if(!(v<m+f)){x.next=17;break}p=n;case 7:if(!(p<n+y)){x.next=14;break}return w=o.bitmap.width*v+p<<2,x.next=11,{x:p,y:v,idx:w,image:o};case 11:p++,x.next=7;break;case 14:v++,x.next=5;break;case 17:case"end":return x.stop()}},g)}},{"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/regenerator":22}]},{},[200])(200)})})(ri);var Tp={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]};const vi=Tp,Cu={};for(const e of Object.keys(vi))Cu[vi[e]]=e;const Ve={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};var Ru=Ve;for(const e of Object.keys(Ve)){if(!("channels"in Ve[e]))throw new Error("missing channels property: "+e);if(!("labels"in Ve[e]))throw new Error("missing channel labels property: "+e);if(Ve[e].labels.length!==Ve[e].channels)throw new Error("channel and label counts mismatch: "+e);const{channels:t,labels:i}=Ve[e];delete Ve[e].channels,delete Ve[e].labels,Object.defineProperty(Ve[e],"channels",{value:t}),Object.defineProperty(Ve[e],"labels",{value:i})}Ve.rgb.hsl=function(e){const t=e[0]/255,i=e[1]/255,r=e[2]/255,d=Math.min(t,i,r),a=Math.max(t,i,r),l=a-d;let s,g;a===d?s=0:t===a?s=(i-r)/l:i===a?s=2+(r-t)/l:r===a&&(s=4+(t-i)/l),s=Math.min(s*60,360),s<0&&(s+=360);const b=(d+a)/2;return a===d?g=0:b<=.5?g=l/(a+d):g=l/(2-a-d),[s,g*100,b*100]};Ve.rgb.hsv=function(e){let t,i,r,d,a;const l=e[0]/255,s=e[1]/255,g=e[2]/255,b=Math.max(l,s,g),c=b-Math.min(l,s,g),h=function(u){return(b-u)/6/c+1/2};return c===0?(d=0,a=0):(a=c/b,t=h(l),i=h(s),r=h(g),l===b?d=r-i:s===b?d=1/3+t-r:g===b&&(d=2/3+i-t),d<0?d+=1:d>1&&(d-=1)),[d*360,a*100,b*100]};Ve.rgb.hwb=function(e){const t=e[0],i=e[1];let r=e[2];const d=Ve.rgb.hsl(e)[0],a=1/255*Math.min(t,Math.min(i,r));return r=1-1/255*Math.max(t,Math.max(i,r)),[d,a*100,r*100]};Ve.rgb.cmyk=function(e){const t=e[0]/255,i=e[1]/255,r=e[2]/255,d=Math.min(1-t,1-i,1-r),a=(1-t-d)/(1-d)||0,l=(1-i-d)/(1-d)||0,s=(1-r-d)/(1-d)||0;return[a*100,l*100,s*100,d*100]};function zp(e,t){return(e[0]-t[0])**2+(e[1]-t[1])**2+(e[2]-t[2])**2}Ve.rgb.keyword=function(e){const t=Cu[e];if(t)return t;let i=1/0,r;for(const d of Object.keys(vi)){const a=vi[d],l=zp(e,a);l<i&&(i=l,r=d)}return r};Ve.keyword.rgb=function(e){return vi[e]};Ve.rgb.xyz=function(e){let t=e[0]/255,i=e[1]/255,r=e[2]/255;t=t>.04045?((t+.055)/1.055)**2.4:t/12.92,i=i>.04045?((i+.055)/1.055)**2.4:i/12.92,r=r>.04045?((r+.055)/1.055)**2.4:r/12.92;const d=t*.4124+i*.3576+r*.1805,a=t*.2126+i*.7152+r*.0722,l=t*.0193+i*.1192+r*.9505;return[d*100,a*100,l*100]};Ve.rgb.lab=function(e){const t=Ve.rgb.xyz(e);let i=t[0],r=t[1],d=t[2];i/=95.047,r/=100,d/=108.883,i=i>.008856?i**(1/3):7.787*i+16/116,r=r>.008856?r**(1/3):7.787*r+16/116,d=d>.008856?d**(1/3):7.787*d+16/116;const a=116*r-16,l=500*(i-r),s=200*(r-d);return[a,l,s]};Ve.hsl.rgb=function(e){const t=e[0]/360,i=e[1]/100,r=e[2]/100;let d,a,l;if(i===0)return l=r*255,[l,l,l];r<.5?d=r*(1+i):d=r+i-r*i;const s=2*r-d,g=[0,0,0];for(let b=0;b<3;b++)a=t+1/3*-(b-1),a<0&&a++,a>1&&a--,6*a<1?l=s+(d-s)*6*a:2*a<1?l=d:3*a<2?l=s+(d-s)*(2/3-a)*6:l=s,g[b]=l*255;return g};Ve.hsl.hsv=function(e){const t=e[0];let i=e[1]/100,r=e[2]/100,d=i;const a=Math.max(r,.01);r*=2,i*=r<=1?r:2-r,d*=a<=1?a:2-a;const l=(r+i)/2,s=r===0?2*d/(a+d):2*i/(r+i);return[t,s*100,l*100]};Ve.hsv.rgb=function(e){const t=e[0]/60,i=e[1]/100;let r=e[2]/100;const d=Math.floor(t)%6,a=t-Math.floor(t),l=255*r*(1-i),s=255*r*(1-i*a),g=255*r*(1-i*(1-a));switch(r*=255,d){case 0:return[r,g,l];case 1:return[s,r,l];case 2:return[l,r,g];case 3:return[l,s,r];case 4:return[g,l,r];case 5:return[r,l,s]}};Ve.hsv.hsl=function(e){const t=e[0],i=e[1]/100,r=e[2]/100,d=Math.max(r,.01);let a,l;l=(2-i)*r;const s=(2-i)*d;return a=i*d,a/=s<=1?s:2-s,a=a||0,l/=2,[t,a*100,l*100]};Ve.hwb.rgb=function(e){const t=e[0]/360;let i=e[1]/100,r=e[2]/100;const d=i+r;let a;d>1&&(i/=d,r/=d);const l=Math.floor(6*t),s=1-r;a=6*t-l,(l&1)!==0&&(a=1-a);const g=i+a*(s-i);let b,c,h;switch(l){default:case 6:case 0:b=s,c=g,h=i;break;case 1:b=g,c=s,h=i;break;case 2:b=i,c=s,h=g;break;case 3:b=i,c=g,h=s;break;case 4:b=g,c=i,h=s;break;case 5:b=s,c=i,h=g;break}return[b*255,c*255,h*255]};Ve.cmyk.rgb=function(e){const t=e[0]/100,i=e[1]/100,r=e[2]/100,d=e[3]/100,a=1-Math.min(1,t*(1-d)+d),l=1-Math.min(1,i*(1-d)+d),s=1-Math.min(1,r*(1-d)+d);return[a*255,l*255,s*255]};Ve.xyz.rgb=function(e){const t=e[0]/100,i=e[1]/100,r=e[2]/100;let d,a,l;return d=t*3.2406+i*-1.5372+r*-.4986,a=t*-.9689+i*1.8758+r*.0415,l=t*.0557+i*-.204+r*1.057,d=d>.0031308?1.055*d**(1/2.4)-.055:d*12.92,a=a>.0031308?1.055*a**(1/2.4)-.055:a*12.92,l=l>.0031308?1.055*l**(1/2.4)-.055:l*12.92,d=Math.min(Math.max(0,d),1),a=Math.min(Math.max(0,a),1),l=Math.min(Math.max(0,l),1),[d*255,a*255,l*255]};Ve.xyz.lab=function(e){let t=e[0],i=e[1],r=e[2];t/=95.047,i/=100,r/=108.883,t=t>.008856?t**(1/3):7.787*t+16/116,i=i>.008856?i**(1/3):7.787*i+16/116,r=r>.008856?r**(1/3):7.787*r+16/116;const d=116*i-16,a=500*(t-i),l=200*(i-r);return[d,a,l]};Ve.lab.xyz=function(e){const t=e[0],i=e[1],r=e[2];let d,a,l;a=(t+16)/116,d=i/500+a,l=a-r/200;const s=a**3,g=d**3,b=l**3;return a=s>.008856?s:(a-16/116)/7.787,d=g>.008856?g:(d-16/116)/7.787,l=b>.008856?b:(l-16/116)/7.787,d*=95.047,a*=100,l*=108.883,[d,a,l]};Ve.lab.lch=function(e){const t=e[0],i=e[1],r=e[2];let d;d=Math.atan2(r,i)*360/2/Math.PI,d<0&&(d+=360);const l=Math.sqrt(i*i+r*r);return[t,l,d]};Ve.lch.lab=function(e){const t=e[0],i=e[1],d=e[2]/360*2*Math.PI,a=i*Math.cos(d),l=i*Math.sin(d);return[t,a,l]};Ve.rgb.ansi16=function(e,t=null){const[i,r,d]=e;let a=t===null?Ve.rgb.hsv(e)[2]:t;if(a=Math.round(a/50),a===0)return 30;let l=30+(Math.round(d/255)<<2|Math.round(r/255)<<1|Math.round(i/255));return a===2&&(l+=60),l};Ve.hsv.ansi16=function(e){return Ve.rgb.ansi16(Ve.hsv.rgb(e),e[2])};Ve.rgb.ansi256=function(e){const t=e[0],i=e[1],r=e[2];return t===i&&i===r?t<8?16:t>248?231:Math.round((t-8)/247*24)+232:16+36*Math.round(t/255*5)+6*Math.round(i/255*5)+Math.round(r/255*5)};Ve.ansi16.rgb=function(e){let t=e%10;if(t===0||t===7)return e>50&&(t+=3.5),t=t/10.5*255,[t,t,t];const i=(~~(e>50)+1)*.5,r=(t&1)*i*255,d=(t>>1&1)*i*255,a=(t>>2&1)*i*255;return[r,d,a]};Ve.ansi256.rgb=function(e){if(e>=232){const a=(e-232)*10+8;return[a,a,a]}e-=16;let t;const i=Math.floor(e/36)/5*255,r=Math.floor((t=e%36)/6)/5*255,d=t%6/5*255;return[i,r,d]};Ve.rgb.hex=function(e){const i=(((Math.round(e[0])&255)<<16)+((Math.round(e[1])&255)<<8)+(Math.round(e[2])&255)).toString(16).toUpperCase();return"000000".substring(i.length)+i};Ve.hex.rgb=function(e){const t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return[0,0,0];let i=t[0];t[0].length===3&&(i=i.split("").map(s=>s+s).join(""));const r=parseInt(i,16),d=r>>16&255,a=r>>8&255,l=r&255;return[d,a,l]};Ve.rgb.hcg=function(e){const t=e[0]/255,i=e[1]/255,r=e[2]/255,d=Math.max(Math.max(t,i),r),a=Math.min(Math.min(t,i),r),l=d-a;let s,g;return l<1?s=a/(1-l):s=0,l<=0?g=0:d===t?g=(i-r)/l%6:d===i?g=2+(r-t)/l:g=4+(t-i)/l,g/=6,g%=1,[g*360,l*100,s*100]};Ve.hsl.hcg=function(e){const t=e[1]/100,i=e[2]/100,r=i<.5?2*t*i:2*t*(1-i);let d=0;return r<1&&(d=(i-.5*r)/(1-r)),[e[0],r*100,d*100]};Ve.hsv.hcg=function(e){const t=e[1]/100,i=e[2]/100,r=t*i;let d=0;return r<1&&(d=(i-r)/(1-r)),[e[0],r*100,d*100]};Ve.hcg.rgb=function(e){const t=e[0]/360,i=e[1]/100,r=e[2]/100;if(i===0)return[r*255,r*255,r*255];const d=[0,0,0],a=t%1*6,l=a%1,s=1-l;let g=0;switch(Math.floor(a)){case 0:d[0]=1,d[1]=l,d[2]=0;break;case 1:d[0]=s,d[1]=1,d[2]=0;break;case 2:d[0]=0,d[1]=1,d[2]=l;break;case 3:d[0]=0,d[1]=s,d[2]=1;break;case 4:d[0]=l,d[1]=0,d[2]=1;break;default:d[0]=1,d[1]=0,d[2]=s}return g=(1-i)*r,[(i*d[0]+g)*255,(i*d[1]+g)*255,(i*d[2]+g)*255]};Ve.hcg.hsv=function(e){const t=e[1]/100,i=e[2]/100,r=t+i*(1-t);let d=0;return r>0&&(d=t/r),[e[0],d*100,r*100]};Ve.hcg.hsl=function(e){const t=e[1]/100,r=e[2]/100*(1-t)+.5*t;let d=0;return r>0&&r<.5?d=t/(2*r):r>=.5&&r<1&&(d=t/(2*(1-r))),[e[0],d*100,r*100]};Ve.hcg.hwb=function(e){const t=e[1]/100,i=e[2]/100,r=t+i*(1-t);return[e[0],(r-t)*100,(1-r)*100]};Ve.hwb.hcg=function(e){const t=e[1]/100,i=e[2]/100,r=1-i,d=r-t;let a=0;return d<1&&(a=(r-d)/(1-d)),[e[0],d*100,a*100]};Ve.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]};Ve.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]};Ve.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]};Ve.gray.hsl=function(e){return[0,0,e[0]]};Ve.gray.hsv=Ve.gray.hsl;Ve.gray.hwb=function(e){return[0,100,e[0]]};Ve.gray.cmyk=function(e){return[0,0,0,e[0]]};Ve.gray.lab=function(e){return[e[0],0,0]};Ve.gray.hex=function(e){const t=Math.round(e[0]/100*255)&255,r=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return"000000".substring(r.length)+r};Ve.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]};const aa=Ru;function Hp(){const e={},t=Object.keys(aa);for(let i=t.length,r=0;r<i;r++)e[t[r]]={distance:-1,parent:null};return e}function Bp(e){const t=Hp(),i=[e];for(t[e].distance=0;i.length;){const r=i.pop(),d=Object.keys(aa[r]);for(let a=d.length,l=0;l<a;l++){const s=d[l],g=t[s];g.distance===-1&&(g.distance=t[r].distance+1,g.parent=r,i.unshift(s))}}return t}function Dp(e,t){return function(i){return t(e(i))}}function Zp(e,t){const i=[t[e].parent,e];let r=aa[t[e].parent][e],d=t[e].parent;for(;t[d].parent;)i.unshift(t[d].parent),r=Dp(aa[t[d].parent][d],r),d=t[d].parent;return r.conversion=i,r}var Gp=function(e){const t=Bp(e),i={},r=Object.keys(t);for(let d=r.length,a=0;a<d;a++){const l=r[a];t[l].parent!==null&&(i[l]=Zp(l,t))}return i};const yo=Ru,jp=Gp,Pn={},Vp=Object.keys(yo);function Lp(e){const t=function(...i){const r=i[0];return r==null?r:(r.length>1&&(i=r),e(i))};return"conversion"in e&&(t.conversion=e.conversion),t}function Yp(e){const t=function(...i){const r=i[0];if(r==null)return r;r.length>1&&(i=r);const d=e(i);if(typeof d=="object")for(let a=d.length,l=0;l<a;l++)d[l]=Math.round(d[l]);return d};return"conversion"in e&&(t.conversion=e.conversion),t}Vp.forEach(e=>{Pn[e]={},Object.defineProperty(Pn[e],"channels",{value:yo[e].channels}),Object.defineProperty(Pn[e],"labels",{value:yo[e].labels});const t=jp(e);Object.keys(t).forEach(r=>{const d=t[r];Pn[e][r]=Yp(d),Pn[e][r].raw=Lp(d)})});var Jp=Pn;function Fu(e,t){this.x1=e,this.x2=t}Fu.prototype.getDeltaE=function(){var e=this.x1,t=this.x2;return Math.sqrt(Math.pow(t.L-e.L,2)+Math.pow(t.A-e.A,2)+Math.pow(t.B-e.B,2))};var Xp=Fu;function Ni(e,t,i){this.x1=e,this.x2=t,this.weights=i||{},this.weights.lightness=this.weights.lightness||1,this.weights.chroma=this.weights.chroma||1,this.weights.hue=this.weights.hue||1,this.weights.lightness===1?(this.weights.K1=.045,this.weights.K2=.015):(this.weights.K1=.048,this.weights.K2=.014)}Ni.prototype.getDeltaE=function(){var e=this.x1,t=this.x2,i=Math.sqrt,r=Math.pow;return i(r(this.calculateL(e,t),2)+r(this.calculateA(e,t),2)+r(this.calculateB(e,t),2))};Ni.prototype.calculateL=function(e,t){return(e.L-t.L)/this.weights.lightness};Ni.prototype.calculateA=function(e,t){var i=Math.sqrt,r=Math.pow,d=i(r(e.A,2)+r(e.B,2)),a=i(r(t.A,2)+r(t.B,2)),l=d-a,s=1+this.weights.K1*d;return l/(this.weights.chroma*s)};Ni.prototype.calculateB=function(e,t){var i=Math.sqrt,r=Math.pow,b=i(r(e.A,2)+r(e.B,2)),d=i(r(t.A,2)+r(t.B,2)),a=b-d,l=e.A-t.A,s=e.B-t.B,g=i(r(l,2)+r(s,2)-r(a,2))||0,b=i(r(e.A,2)+r(e.B,2)),c=1+this.weights.K2*b;return g/c};var qp=Ni;function nr(e,t,i){var r=Math.sqrt,d=Math.pow;this.x1=e,this.x2=t,this.weights=i||{},this.ksubL=this.weights.lightness||1,this.ksubC=this.weights.chroma||1,this.ksubH=this.weights.hue||1,this.deltaLPrime=t.L-e.L,this.LBar=(e.L+t.L)/2,this.C1=r(d(e.A,2)+d(e.B,2)),this.C2=r(d(t.A,2)+d(t.B,2)),this.CBar=(this.C1+this.C2)/2,this.aPrime1=e.A+e.A/2*(1-r(d(this.CBar,7)/(d(this.CBar,7)+d(25,7)))),this.aPrime2=t.A+t.A/2*(1-r(d(this.CBar,7)/(d(this.CBar,7)+d(25,7)))),this.CPrime1=r(d(this.aPrime1,2)+d(e.B,2)),this.CPrime2=r(d(this.aPrime2,2)+d(t.B,2)),this.CBarPrime=(this.CPrime1+this.CPrime2)/2,this.deltaCPrime=this.CPrime2-this.CPrime1,this.SsubL=1+.015*d(this.LBar-50,2)/r(20+d(this.LBar-50,2)),this.SsubC=1+.045*this.CBarPrime,this.hPrime1=0,this.hPrime2=0,this.deltahPrime=0,this.deltaHPrime=0,this.HBarPrime=0,this.T=0,this.SsubH=0,this.RsubT=0}nr.prototype.getDeltaE=function(){var e=Math.sqrt,t=Math.sin,i=Math.pow;this.hPrime1=this.gethPrime1(),this.hPrime2=this.gethPrime2(),this.deltahPrime=this.getDeltahPrime(),this.deltaHPrime=2*e(this.CPrime1*this.CPrime2)*t(this.degreesToRadians(this.deltahPrime)/2),this.HBarPrime=this.getHBarPrime(),this.T=this.getT(),this.SsubH=1+.015*this.CBarPrime*this.T,this.RsubT=this.getRsubT();var r=this.deltaLPrime/(this.ksubL*this.SsubL),d=this.deltaCPrime/(this.ksubC*this.SsubC),a=this.deltaHPrime/(this.ksubH*this.SsubH);return e(i(r,2)+i(d,2)+i(a,2)+this.RsubT*d*a)};nr.prototype.getRsubT=function(){var e=Math.sin,t=Math.sqrt,i=Math.pow,r=Math.exp;return-2*t(i(this.CBarPrime,7)/(i(this.CBarPrime,7)+i(25,7)))*e(this.degreesToRadians(60*r(-i((this.HBarPrime-275)/25,2))))};nr.prototype.getT=function(){var e=Math.cos;return 1-.17*e(this.degreesToRadians(this.HBarPrime-30))+.24*e(this.degreesToRadians(2*this.HBarPrime))+.32*e(this.degreesToRadians(3*this.HBarPrime+6))-.2*e(this.degreesToRadians(4*this.HBarPrime-63))};nr.prototype.getHBarPrime=function(){var e=Math.abs;return e(this.hPrime1-this.hPrime2)>180?(this.hPrime1+this.hPrime2+360)/2:(this.hPrime1+this.hPrime2)/2};nr.prototype.getDeltahPrime=function(){var e=Math.abs;return this.C1===0||this.C2===0?0:e(this.hPrime1-this.hPrime2)<=180?this.hPrime2-this.hPrime1:this.hPrime2<=this.hPrime1?this.hPrime2-this.hPrime1+360:this.hPrime2-this.hPrime1-360};nr.prototype.gethPrime1=function(){return this._gethPrimeFn(this.x1.B,this.aPrime1)};nr.prototype.gethPrime2=function(){return this._gethPrimeFn(this.x2.B,this.aPrime2)};nr.prototype._gethPrimeFn=function(e,t){var i;return e===0&&t===0?0:(i=this.radiansToDegrees(Math.atan2(e,t)),i>=0?i:i+360)};nr.prototype.radiansToDegrees=function(e){return e*(180/Math.PI)};nr.prototype.degreesToRadians=function(e){return e*(Math.PI/180)};var Up=nr,Wp=Xp,Kp=qp,Qp=Up;function Ra(){}Ra.prototype.getDeltaE76=function(e,t){var i=new Wp(e,t);return i.getDeltaE()};Ra.prototype.getDeltaE94=function(e,t){var i=new Kp(e,t);return i.getDeltaE()};Ra.prototype.getDeltaE00=function(e,t){var i=new Qp(e,t);return i.getDeltaE()};var _p=new Ra;const Fa=new pn({records:{None:0,Arrow:1,ArrowSilver:2,Bomb:3,Boomerang:4,BoomerangMagical:5,Bow:6,Candle:7,CandleRed:8,Clock:9,Compass:10,Flute:11,Food:12,Heart:13,HeartHalf:130,HeartEmpty:131,HeartAlt:133,HeartContainer:14,Key:15,KeySkeleton:16,Ladder:17,Letter:18,MagicBook:19,Map:20,PotionBlue:21,PotionRed:22,PowerBracelet:23,Raft:24,RingBlue:25,RingGreen:26,RingRed:27,RupeeFive:28,RupeeOne:29,Shield:30,ShieldMagical:31,Sword:32,SwordWhite:33,SwordMagical:34,TriforceShard:35,TriforceShardAlt:355,Wand:36}});new pn(["Fairy","Link","Merchant","OldMan","OldMan2","OldWoman","Zelda"]);const He=new pn(["Armos","Bubble","BubbleBlue","BubbleRed","Darknut","DarknutBlue","Gel","GelBlue","Ghini","Gibdo","GleeokHead","Goriya","GoriyaBlue","Keese","KeeseBlue","KeeseRed","Lanmola","LanmolaBlue","Leever","LeeverBlue","LikeLike","Lynel","LynelBlue","Moblin","MoblinBlue","Moldorm","MoldormBlue","Octorok","OctorokBlue","Patra","PatraHead","Peahat","PolsVoice","Rock","Rope","RopeBlue","Stalfos","Tektite","TektiteBlue","Trap","Vire","Wallmaster","Wizzrobe","WizzrobeBlue","Zol","ZolGray","ZolGreen","Zora"]);new pn(["Aquamentus","Digdogger","Dodongo","Ganon","Gleeok","Gohma","GohmaBlue","Manhandla"]);const Ir=new ki(["Tiles","Enemies","Items"],!1),$p=new ki(["E00","E94","E76"],!1),Xa={};function e1(e,t,i){return _p[`getDelta${i}`]({L:e[0],A:e[1],B:e[2]},{L:t[0],A:t[1],B:t[2]})}function qa(e,t,i){let r=null;return e==="hex"&&i.length===9&&(r=i.slice(1,3),i=i.slice(0,1)+i.slice(3),r=parseInt(r,16)),e==="rgb"&&i.length===4&&(r=i.pop(),r=Math.round(r*255)),e===t?[...i,r]:[...Jp[e][t](i),r]}async function Ou({image:e,type:t=Ir.Tiles,replaceColors:i,targetColors:r,formula:d=$p.E00,deltaE:a=2.3}){if(Pu(e)&&(e=await Rn({name:e,type:t})),!(mi(i)||mi(r))){i=sr(i),r=sr(r);const l=[],s=[],{bitmap:g}=e,{data:b}=g;r.forEach((c,h)=>{l.push(qa("hex","lab",c)),s.push(qa("hex","rgb",i[h]))}),e.scan(0,0,g.width,g.height,(c,h,u)=>{const o=qa("rgb","lab",[b[u],b[u+1],b[u+2]]);for(let n=0;n<l.length;n++){const m=l[n],y=s[n];if(e1(o,m,d)<=a){b[u]=y[0],b[u+1]=y[1],b[u+2]=y[2],y[3]!==null&&(b[u+3]=y[3]);break}}})}return e.getBase64Async(ri.exports.MIME_PNG)}async function t1(){const e=[],t=[De.None,De.SolidColor,De.Transition,De.Castle],i=[He.BubbleBlue,He.BubbleRed,He.DarknutBlue,He.GelBlue,He.GoriyaBlue,He.KeeseBlue,He.KeeseRed,He.LeeverBlue,He.LynelBlue,He.MoblinBlue,He.MoldormBlue,He.OctorokBlue,He.RopeBlue,He.WizzrobeBlue,He.ZolGreen,He.ZolGray,He.TektiteBlue,He.LanmolaBlue];return De.forEach(({value:r,id:d})=>{t.indexOf(d)===-1&&e.push(Rn({name:r,type:Ir.Tiles}))}),Fa.forEach(({value:r})=>{e.push(Rn({name:r,type:Ir.Items}))}),He.forEach(({value:r,id:d})=>{i.indexOf(d)===-1&&e.push(Rn({name:r,type:Ir.Enemies}))}),Promise.all(e)}async function r1(e){return await(await fetch(e)).arrayBuffer()}async function Rn({name:e,type:t=Ir.Tiles,encode:i=!1}){if(mi(e))return"";const r=`${t}.${e}`;let d=localStorage.getItem(r);return d||(d=await ri.exports.read({url:`${t}/${e}.png`}),Xa[r]=d,d=await d.getBase64Async(ri.exports.MIME_PNG),localStorage.setItem(r,d)),i?d:(d=Xa[r],d||(d=Xa[r]=await ri.exports.read(await r1(localStorage.getItem(r)))),d.clone())}const n1=[De.Transition,De.Door];function Nr(e){return{Target:e}}const i1=[Te.WhitePure,Te.BluePure,Te.RedPure],a1=[Te.WhitePure,Te.Black,Te.BluePure,Te.RedPure],o1=[Te.FireOuter,Te.FireInner,Te.WhitePure],s1=[Te.WhitePure,Te.BluePure,Te.Black],l1=[Te.WhitePure,Te.RedPure,Te.Black],f1=[Te.WhitePure],u1=[Te.WhitePure,Te.BluePure],c1=[Te.WhitePure,Te.Black];function Iu(e){let t=[];switch(e){case De.StairsKeep:case De.WallKeep:case De.Transition:case De.None:break;case De.Block:case De.CastleSand:case De.DoorClosedY:case De.DoorClosedX:case De.DoorUnlockedX:case De.DoorUnlockedY:case De.DoorLockedX:case De.DoorLockedY:case De.Statue1:case De.Statue2:case De.WallLeftX:case De.WallLeftY:case De.WallLeftYFlip:case De.WallRightX:case De.WallRightY:case De.WallRightYFlip:case De.WallX:case De.WallY:t=i1.map(Nr);break;case De.WallHoleX:case De.WallHoleY:t=a1.map(Nr);break;case De.Fire:case De.FireAlt:t=o1.map(Nr);break;case De.CastleBottomLeft:case De.CastleBottomRight:case De.CastleTop:case De.CastleTopAlt:case De.CastleTopLeftAlt:case De.CastleTopRightAlt:case De.CastleTopLeft:case De.CastleTopRight:case De.Dock:case De.Grave:case De.StairsUp:case De.Statue:case De.TreeBottomRight:case De.TreeTopLeft:case De.Water:case De.WaterTopLeft:case De.WaterTopRight:case De.WaterBottomLeft:case De.WaterBottomRight:t=s1.map(Nr);break;case De.GroundTile:t=l1.map(Nr);break;case De.Door:t=[{Target:Te.White,Value:Te.Black}];break;case De.SandBottom:case De.SandCenter:t=f1.map(Nr);break;case De.PondBottom:case De.PondBottomLeft:case De.PondBottomRight:case De.PondTop:case De.PondTopLeft:case De.PondTopRight:case De.PondCenter:case De.PondCenterLeft:case De.PondCenterRight:t=u1.map(Nr);break;case De.Bush:default:t=c1.map(Nr);break}return t}class h1 extends Vr{getDefaultFields(){return[{name:"image",type:String},{name:"src",type:String},{name:"cell",type:oa},{name:"type",type:Number,defaultValue:De.None},{name:"colors",type:Bt.Collection,model:Eu},{name:"Transition",type:cs}]}reset(){this.set({Type:De.None,Transition:null})}get isDoor(){return this.Type===De.Door}get isTransition(){return n1.indexOf(this.Type)!==-1}get Type(){return this.type}set Type(t){this.set({type:t,Colors:Iu(t)}),this.updateSrc(),this.isTransition&&this.set({Transition:{X:0,Y:0,IsFloating:!1}})}set Colors(t){this.set({colors:t}),this.updateImage()}get Colors(){return this.colors}async updateSrc(){const t=this.getImageKey();let i=null;this.hasImage()&&(i=await Rn({name:t,encode:!0})),this.set({src:i})}getTypeKey(){return De.getKey(this.Type)}hasImage(){return this.Type!==De.None}async updateImage(){let t="";if(this.hasImage()){const i=this.getImageKey(),r=this.getColors();t=await Ou({image:i,targetColors:ia(r,"Target"),replaceColors:ia(r,"Value")})}this.set({image:t})}getImageKey(){return this.isTransition?"Transparent":this.getTypeKey()}getColors(t){const i=this.Colors.filter(r=>!!r.Value);return t?i.reduce((r,d)=>{const a=d.getConfig();return a&&(r=r.concat(a)),r},[]):i}getConfig(){var d;const t={X:this.cell.x,Y:this.cell.y},{Name:i}=this.cell;i&&(t.Name=i);const r=this.getColors(!0);if(mi(r)||(t.Colors=r),this.isTransition){const a=[],l=this.Transition.getData({exclude:["AccentColor","GroundColor","cells","totalRows","totalColumns"]});mi(l.Template)&&a.push("Template"),l.IsCastle||a.push("IsCastle"),l.IsFloating||a.push("IsFloating"),this.isDoor?(d=l.Name)!=null||(l.Name=`${l.Template}${l.X}${l.Y}`):a.push("Name"),a.forEach(s=>delete l[s]),t.Transition=l}return t}}class Mu extends Vr{getDefaultFields(){return[{name:"image",type:String},{name:"src",type:String},{name:"cell",type:oa},{name:"type",type:Number,defaultValue:null},{name:"colors",type:Bt.Collection,model:Eu}]}get enumCollection(){return De}get imageType(){return Ir.Tiles}setDefaultValues(){}get Type(){return this.type}set Type(t){this.set({type:t}),this.setDefaultValues(),this.updateSrc()}set Colors(t){this.set({colors:t}),this.updateImage()}get Colors(){return this.colors}async updateImage(){let t="";if(this.hasImage()){const i=this.getImageKey(),r=this.getColors();t=await Ou({image:i,type:this.imageType,targetColors:ia(r,"Target"),replaceColors:ia(r,"Value")})}this.set({image:t})}getColors(t){const i=this.Colors.filter(r=>!!r.Value);return t?i.reduce((r,d)=>{const a=d.getConfig();return a&&(r=r.concat(a)),r},[]):i}reset(){this.set({Type:null})}getTypeKey(){var t;return(t=this.enumCollection)==null?void 0:t.getKey(this.Type)}getImageKey(){return this.getTypeKey()}hasImage(){var t;return!(kt(this.Type)||this.Type===((t=this.enumCollection)==null?void 0:t.None))}async updateSrc(){const t=this.getImageKey();let i=null;this.hasImage()&&(i=await Rn({name:t,type:this.imageType,encode:!0})),this.set({src:i})}}class d1 extends Mu{constructor(){super(...arguments);St(this,"enumCollection",Fa);St(this,"imageType",Ir.Items)}getConfig(){return{X:this.cell.x,Y:this.cell.y,Config:{Type:this.getTypeKey()}}}setDefaultValues(){this.Colors=[]}}let rr=[Te.WhitePure,Te.Black];const Ei=[Te.WhitePure,Te.Black,Te.RedPure],gt=Ei.map(e=>{const t={Target:e};return e===Te.RedPure?t.Value=Te.Red:e===Te.Black&&(t.Value=Te.Orange),t}),Ct=Ei.map(e=>{const t={Target:e};return e===Te.RedPure?t.Value=Te.Blue:e===Te.Black&&(t.Value=Te.BlueLight),t}),p1=Ei.map(e=>{const t={Target:e};return e===Te.Black?t.Value=Te.Red:e===Te.WhitePure?t.Value=Te.Orange:e===Te.RedPure&&(t.Value=Te.Lime),t}),m1=Ei.map(e=>{const t={Target:e};return e===Te.RedPure?t.Value=Te.Black:e===Te.Black?t.Value=Te.Teal:e===Te.WhitePure&&(t.Value=Te.Red),t}),v1=rr.map(e=>{const t={Target:e};return e===Te.WhitePure?t.Value=Te.Red:e===Te.Black&&(t.Value=Te.Teal),t}),g1=rr.map(e=>{const t={Target:e};return e===Te.WhitePure?t.Value=Te.TealLight:e===Te.Black&&(t.Value=Te.TealDark),t}),b1=rr.map(e=>{const t={Target:e};return e===Te.WhitePure?t.Value=Te.BlueLight:e===Te.Black&&(t.Value=Te.Blue),t}),y1=rr.map(e=>{const t={Target:e};return e===Te.WhitePure?t.Value=Te.Orange:e===Te.Black&&(t.Value=Te.Red),t}),w1=rr.map(e=>{const t={Target:e};return e===Te.Black&&(t.Value=Te.Gray),t}),x1=rr.map(e=>{const t={Target:e};return e===Te.WhitePure?t.Value=Te.GreenLight:e===Te.Black&&(t.Value=Te.GreenDark),t});rr=rr.map(e=>({Target:e}));class A1 extends Mu{getDefaultFields(){return super.getDefaultFields().concat([{name:"Speed",type:Number,defaultValue:null},{name:"Health",type:Number,defaultValue:null},{name:"TouchDamage",type:Number,defaultValue:null},{name:"HealthModifier",type:Number,defaultValue:null},{name:"WeaponDamage",type:Number,defaultValue:null}])}get imageType(){return Ir.Enemies}get enumCollection(){return He}setDefaultValues(){var s,g,b,c,h;let t,i,r,d,a,l=Ei;switch(this.Type){case He.Armos:l=gt,t=6,r=1,i=3;break;case He.Bubble:l=gt,t=0,r=0,i=3;break;case He.BubbleRed:l=gt,t=0,r=0,i=3;break;case He.BubbleBlue:l=Ct,t=0,r=0,i=3;break;case He.Darknut:l=gt,t=8,r=2,i=3;break;case He.DarknutBlue:l=Ct,t=16,r=4,i=5;break;case He.Gel:l=rr,t=2,r=1,i=1;break;case He.GelBlue:l=g1,t=2,r=1,i=1;break;case He.Ghini:l=Ct,t=22,r=1,i=2;break;case He.Gibdo:l=Ct,t=12,r=4,i=3,d=.75;break;case He.Goriya:l=gt,t=6,r=1,i=3,a=2;break;case He.GoriyaBlue:l=Ct,t=10,r=2,i=3,a=2;break;case He.Keese:l=rr,t=2,r=1,i=4;break;case He.KeeseBlue:l=b1,t=2,r=1,i=4;break;case He.KeeseRed:l=y1,t=2,r=1,i=4;break;case He.Lanmola:l=gt,t=8,d=0,r=4,i=4;break;case He.LanmolaBlue:l=Ct,t=8,d=0,r=4,i=6;break;case He.Leever:l=gt,t=4,r=1,i=4;break;case He.LeeverBlue:l=Ct,t=8,r=2,i=4;break;case He.LikeLike:l=gt,t=20,r=2,i=3;break;case He.Lynel:l=gt,t=8,r=2,i=3,a=2;break;case He.LynelBlue:l=Ct,t=12,r=4,i=3,a=4;break;case He.Moblin:l=gt,t=4,r=1,i=3,a=1;break;case He.MoblinBlue:l=m1,t=6,r=1,i=3,a=1;break;case He.Moldorm:l=gt,t=10,d=0,r=1,i=1;break;case He.MoldormBlue:l=Ct;break;case He.Octorok:l=gt,t=2,r=1,a=1,i=3;break;case He.OctorokBlue:l=Ct,t=4,r=1,a=1,i=3;break;case He.Patra:l=Ct,t=20,r=4,i=3;break;case He.PatraHead:l=gt,t=20,r=4,i=3;break;case He.Peahat:l=gt,t=4,r=1,i=3;break;case He.PolsVoice:l=p1,t=20,r=4,i=3;break;case He.Rock:l=gt,t=0,r=1,i=3;break;case He.Rope:l=gt,t=2,r=1,i=3;break;case He.RopeBlue:l=Ct,t=8,r=1,i=3;break;case He.Stalfos:l=gt,t=4,r=.25,a=.25,i=3;break;case He.Tektite:l=gt,t=2,r=1,i=3;break;case He.TektiteBlue:l=Ct,t=2,r=1,i=3;break;case He.Trap:l=Ct,t=0,r=1,i=3;break;case He.Vire:l=Ct,t=2,r=2,i=3;break;case He.Wallmaster:l=Ct,t=6,r=1,i=1;break;case He.Wizzrobe:l=gt,t=6,r=2,a=8,i=0;break;case He.WizzrobeBlue:l=Ct,t=10,r=4,a=4,i=5;break;case He.Zol:l=rr,t=2,r=2,i=1;break;case He.ZolGray:l=w1,t=2,r=2,i=1;break;case He.ZolGreen:l=x1,t=2,r=2,i=1;break;case He.Zora:l=v1,t=4,r=1,a=1,i=0;break}t=(s=this.Health)!=null?s:t,d=(g=this.HealthModifier)!=null?g:d,i=(b=this.Speed)!=null?b:i,r=(c=this.TouchDamage)!=null?c:r,a=(h=this.WeaponDamage)!=null?h:a,this.set({Colors:l,Health:t,TouchDamage:r,Speed:i,HealthModifier:d,WeaponDamage:a})}getTypeKey(){let t;const i=this.enumCollection;switch(this.Type){case i.OctorokBlue:t=i.Octorok;break;case i.BubbleRed:case i.BubbleBlue:t=i.Bubble;break;case i.DarknutBlue:t=i.Darknut;break;case i.GelBlue:t=i.Gel;break;case He.GoriyaBlue:t=i.Goriya;break;case He.KeeseBlue:case He.KeeseRed:t=i.Keese;break;case He.LanmolaBlue:t=i.Lanmola;break;case He.LeeverBlue:t=i.Leever;break;case He.LynelBlue:t=i.Lynel;break;case He.MoblinBlue:t=i.Moblin;break;case He.MoldormBlue:t=i.Moldorm;break;case He.RopeBlue:t=i.Rope;break;case He.TektiteBlue:t=i.Tektite;break;case He.WizzrobeBlue:t=i.Wizzrobe;break;case i.ZolGray:case i.ZolGreen:t=i.Zol;break;default:return super.getTypeKey()}return i.getKey(t)}getConfig(){const t={Type:this.getTypeKey(),X:this.cell.x,Y:this.cell.y},i=this.getColors(!0);kt(i)||(t.Colors=i);const{Speed:r,Health:d,TouchDamage:a,HealthModifier:l,WeaponDamage:s}=this;return kt(r)||(t.Speed=r),kt(d)||(t.Health=d),kt(a)||(t.TouchDamage=a),kt(l)||(t.HealthModifier=l),kt(s)||(t.WeaponDamage=s),t}}class oa extends Vr{getDefaultFields(){return[{name:"Coordinates",type:Array},{name:"Name",type:String},{name:"grid",type:cs},{name:"tile",type:h1,defaultValue:{cell:this}},{name:"item",type:d1,defaultValue:{cell:this}},{name:"enemy",type:A1,defaultValue:{cell:this}}]}reset(){this.tile.reset()}getIndex(){return this.grid.cells.indexOf(this)}get id(){return`${this.x}_${this.y}`}get x(){return this.Coordinates[0]}get y(){return this.Coordinates[1]}getConfig({Tiles:t,Items:i,Enemies:r}){const{tile:d,item:a,enemy:l}=this;if(d.hasImage()){const s=d.getTypeKey(),g=d.getConfig(),b=t.find(({Type:c})=>c===s);b?b.Children.push(g):t.push({Type:s,Children:[g]})}a.hasImage()&&i.push(a.getConfig()),l.hasImage()&&r.push(l.getConfig())}}class cs extends Vr{constructor(t){super(t),this.initialize()}getDefaultFields(){return[{name:"Name",type:String},{name:"X",type:Number},{name:"Y",type:Number},{name:"AccentColor",type:String,defaultValue:Te.Brown},{name:"GroundColor",type:String,defaultValue:Te.Tan},{name:"IsCastle",type:Boolean},{name:"IsFloating",type:Boolean},{name:"Template",type:String},{name:"cells",type:Bt.Collection,model:oa},{name:"totalRows",type:Number},{name:"totalColumns",type:Number}]}set Name(t){this._name=t}get Name(){let{_name:t}=this;return t||(t=`${this.X}${this.Y}`),t}initialize(){const t=[];for(let i=0;i<this.totalRows;i++)for(let r=0;r<this.totalColumns;r++)t.push(new oa({Coordinates:[r,i],grid:this}));this.set({cells:t})}async loadFileData(t={}){const{Tiles:i=[],Items:r=[],Enemies:d=[]}=t;for(const a of this.cells){let l=!1;const{x:s,y:g}=a;for(const b of i){for(const c of b.Children)if(c.X===s&&c.Y===g){l=!0;const h=De.getValue(b.Type),u=Iu(h),{Colors:o}=c;if(o)for(let n=0;n<o.length;n+=2){const m=Te.getValue(o[n]),y=u.find(f=>f.Target===m);y&&(y.Value=Te.getValue(o[n+1]))}a.tile.set({Type:h,Transition:c.Transition,Colors:u}),b.Children.remove(c);break}if(l)break}l||a.tile.reset(),l=!1;for(const b of r)if(b.X===s&&b.Y===g){l=!0,r.remove(b),a.item.set({Type:Fa.getValue(b.Config.Type)});break}l||a.item.reset(),l=!1;for(const b of d)if(b.X===s&&b.Y===g){l=!0,d.remove(b),a.enemy.set({Health:b.Health,HealthModifier:b.HealthModifier,Speed:b.Speed,TouchDamage:b.TouchDamage,WeaponDamage:b.WeaponDamage,Type:He.getValue(b.Type)});break}l||a.enemy.reset(),l=!1}}getCell(t,i){return this.cells[i*this.totalColumns+t]}getAdjacentNodes(t){const{x:i,y:r}=t,d=[this.getCell(i-1,r),this.getCell(i+1,r),this.getCell(i,r-1),this.getCell(i,r+1)],a=t.tile.Type;return d.filter(l=>(l==null?void 0:l.tile.TileType)===a)}findAdjacentNodes(t=this.cells[0],i=[]){const r=[],d=this.getAdjacentNodes(t);i.indexOf(t)===-1&&(i.push(t),r.push(t));for(const a of d)if(!i.find(l=>l===a)){const l=this.findAdjacentNodes(a,i);if(kt(l))continue;r.push(...l)}return r}getConfig(){const t=[],i=[],r=[];for(const d of this.cells)d.getConfig({Tiles:t,Items:i,Enemies:r});return{X:this.X,Y:this.Y,Name:this.Name,GroundColor:Te.getKey(this.GroundColor),AccentColor:Te.getKey(this.AccentColor),Tiles:t,Items:i,Enemies:r}}}var Oa=(e,t)=>{const i=e.__vccOpts||e;for(const[r,d]of t)i[r]=d;return i};const P1={name:"BaseContextMenu",setup(){const e=We(null);function t(r){e.value.style.left=`${r.pageX}px`,e.value.style.top=`${r.pageY}px`,e.value.classList.remove("hidden"),r.preventDefault()}function i(){e.value.classList.add("hidden")}return{self:e,show:t,hide:i}}},k1={ref:"self",class:"hidden context-menu"};function N1(e,t,i,r,d,a){return Ue(),nt("div",k1,[st(e.$slots,"default")],512)}var E1=Oa(P1,[["render",N1]]),S1=Object.defineProperty,C1=Object.defineProperties,R1=Object.getOwnPropertyDescriptors,El=Object.getOwnPropertySymbols,F1=Object.prototype.hasOwnProperty,O1=Object.prototype.propertyIsEnumerable,Sl=(e,t,i)=>t in e?S1(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,sa=(e,t)=>{for(var i in t||(t={}))F1.call(t,i)&&Sl(e,i,t[i]);if(El)for(var i of El(t))O1.call(t,i)&&Sl(e,i,t[i]);return e},la=(e,t)=>C1(e,R1(t)),Wt=(e,t)=>{const i=e.__vccOpts||e;for(const[r,d]of t)i[r]=d;return i};const I1={name:"BaseOverlay",setup(){const e=We(null),t=$r("OverlayManager");return hn(()=>{t.add(e.value)}),wi(()=>{t.remove(e.value)}),{rootEl:e}}},M1={ref:"rootEl",class:"overlay-container"};function T1(e,t,i,r,d,a){return Ue(),nt("div",M1,[st(e.$slots,"default")],512)}var Tu=Wt(I1,[["render",T1]]);const ar=new Bn(["right-middle","right-top","right-bottom","middle","middle-top","middle-bottom","left-middle","left-top","left-bottom"],!1);ar.RIGHT_MIDDLE;const z1={name:"BaseLabel",props:{value:{type:String,required:!0},separator:{type:String,default:":"}}},H1={class:"base-label"};function B1(e,t,i,r,d,a){return Ue(),nt("label",H1,ur(i.value)+ur(i.separator),1)}var hs=Wt(z1,[["render",B1]]);const D1="list-item-selected",Z1={name:"BaseList",emits:["update:selections","click:item"],props:{options:{type:[Array,Object],default:()=>[]},selections:{type:Array,default:()=>[]}},setup(e,{emit:t}){const i=We(null);Hf(()=>{const{options:h}=e;i.value=h!=null&&h.isCollection?h:new Pi(h)});const r=Je(()=>i.value.idField),d=Je(()=>i.value.displayField),a=Je(()=>i.value.isGrouped);function l(h){t("update:selections",...h)}function s(h){t("click:item",...h)}function g(...h){l(h)}function b(...h){s(h)}function c(h,u,o){h.stopPropagation(),h.preventDefault(),!o&&(l([u,h.target.classList.contains(D1)]),s([u]))}return{records:i,isGrouped:a,idField:r,displayField:d,onMouseDownListItem:c,onUpdateSelections:g,onClickItem:b}}},G1={class:"base-list"},j1=["onMousedown"],V1={class:"group"},L1={key:0,class:"list-item-empty"};function Y1(e,t,i,r,d,a){const l=rt("BaseList",!0);return Ue(),nt("ul",G1,[(Ue(!0),nt(wt,null,br(r.records,s=>(Ue(),nt("li",{key:s.fullPath,class:Ut(r.records.getOptionCls(s,i.selections)),onMousedown:g=>r.onMouseDownListItem(g,s,r.isGrouped)},[r.isGrouped?(Ue(),nt(wt,{key:0},[_e("div",V1,[st(e.$slots,"groupDisplay",{group:s},()=>[ea(" Group: "+ur(r.records.getOptionDisplay(s)),1)])]),Le(l,{options:s,selections:i.selections,"onUpdate:selections":r.onUpdateSelections,"onClick:item":r.onClickItem},_o({_:2},[br(e.$slots,(g,b)=>({name:b,fn:ut(c=>[st(e.$slots,b,Mo(ka(c)))])}))]),1032,["options","selections","onUpdate:selections","onClick:item"])],64)):st(e.$slots,"listItemDisplay",{key:1,option:s},()=>[ea(ur(r.records.getOptionDisplay(s)),1)])],42,j1))),128)),st(e.$slots,"emptyList",{},()=>[r.records.length?Ot("",!0):(Ue(),nt("li",L1," No Records "))])])}var J1=Wt(Z1,[["render",Y1]]);/*!
 * Font Awesome Free 6.1.1 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2022 Fonticons, Inc.
 */function Cl(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(d){return Object.getOwnPropertyDescriptor(e,d).enumerable})),i.push.apply(i,r)}return i}function je(e){for(var t=1;t<arguments.length;t++){var i=arguments[t]!=null?arguments[t]:{};t%2?Cl(Object(i),!0).forEach(function(r){U1(e,r,i[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):Cl(Object(i)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(i,r))})}return e}function fa(e){return fa=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(t){return typeof t}:function(t){return t&&typeof Symbol=="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},fa(e)}function X1(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Rl(e,t){for(var i=0;i<t.length;i++){var r=t[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function q1(e,t,i){return t&&Rl(e.prototype,t),i&&Rl(e,i),Object.defineProperty(e,"prototype",{writable:!1}),e}function U1(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function ds(e,t){return K1(e)||_1(e,t)||zu(e,t)||em()}function Ia(e){return W1(e)||Q1(e)||zu(e)||$1()}function W1(e){if(Array.isArray(e))return wo(e)}function K1(e){if(Array.isArray(e))return e}function Q1(e){if(typeof Symbol!="undefined"&&e[Symbol.iterator]!=null||e["@@iterator"]!=null)return Array.from(e)}function _1(e,t){var i=e==null?null:typeof Symbol!="undefined"&&e[Symbol.iterator]||e["@@iterator"];if(i!=null){var r=[],d=!0,a=!1,l,s;try{for(i=i.call(e);!(d=(l=i.next()).done)&&(r.push(l.value),!(t&&r.length===t));d=!0);}catch(g){a=!0,s=g}finally{try{!d&&i.return!=null&&i.return()}finally{if(a)throw s}}return r}}function zu(e,t){if(!!e){if(typeof e=="string")return wo(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);if(i==="Object"&&e.constructor&&(i=e.constructor.name),i==="Map"||i==="Set")return Array.from(e);if(i==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i))return wo(e,t)}}function wo(e,t){(t==null||t>e.length)&&(t=e.length);for(var i=0,r=new Array(t);i<t;i++)r[i]=e[i];return r}function $1(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function em(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var Fl=function(){},ps={},Hu={},Bu=null,Du={mark:Fl,measure:Fl};try{typeof window!="undefined"&&(ps=window),typeof document!="undefined"&&(Hu=document),typeof MutationObserver!="undefined"&&(Bu=MutationObserver),typeof performance!="undefined"&&(Du=performance)}catch{}var tm=ps.navigator||{},Ol=tm.userAgent,Il=Ol===void 0?"":Ol,Br=ps,ft=Hu,Ml=Bu,Di=Du;Br.document;var Pr=!!ft.documentElement&&!!ft.head&&typeof ft.addEventListener=="function"&&typeof ft.createElement=="function",Zu=~Il.indexOf("MSIE")||~Il.indexOf("Trident/"),yr="___FONT_AWESOME___",xo=16,Gu="fa",ju="svg-inline--fa",on="data-fa-i2svg",Ao="data-fa-pseudo-element",rm="data-fa-pseudo-element-pending",ms="data-prefix",vs="data-icon",Tl="fontawesome-i2svg",nm="async",im=["HTML","HEAD","STYLE","SCRIPT"],Vu=function(){try{return!0}catch{return!1}}(),gs={fas:"solid","fa-solid":"solid",far:"regular","fa-regular":"regular",fal:"light","fa-light":"light",fat:"thin","fa-thin":"thin",fad:"duotone","fa-duotone":"duotone",fab:"brands","fa-brands":"brands",fak:"kit","fa-kit":"kit",fa:"solid"},ua={solid:"fas",regular:"far",light:"fal",thin:"fat",duotone:"fad",brands:"fab",kit:"fak"},Lu={fab:"fa-brands",fad:"fa-duotone",fak:"fa-kit",fal:"fa-light",far:"fa-regular",fas:"fa-solid",fat:"fa-thin"},am={"fa-brands":"fab","fa-duotone":"fad","fa-kit":"fak","fa-light":"fal","fa-regular":"far","fa-solid":"fas","fa-thin":"fat"},om=/fa[srltdbk\-\ ]/,Yu="fa-layers-text",sm=/Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Kit)?.*/i,lm={"900":"fas","400":"far",normal:"far","300":"fal","100":"fat"},Ju=[1,2,3,4,5,6,7,8,9,10],fm=Ju.concat([11,12,13,14,15,16,17,18,19,20]),um=["class","data-prefix","data-icon","data-fa-transform","data-fa-mask"],Qr={GROUP:"duotone-group",SWAP_OPACITY:"swap-opacity",PRIMARY:"primary",SECONDARY:"secondary"},cm=[].concat(Ia(Object.keys(ua)),["2xs","xs","sm","lg","xl","2xl","beat","border","fade","beat-fade","bounce","flip-both","flip-horizontal","flip-vertical","flip","fw","inverse","layers-counter","layers-text","layers","li","pull-left","pull-right","pulse","rotate-180","rotate-270","rotate-90","rotate-by","shake","spin-pulse","spin-reverse","spin","stack-1x","stack-2x","stack","ul",Qr.GROUP,Qr.SWAP_OPACITY,Qr.PRIMARY,Qr.SECONDARY]).concat(Ju.map(function(e){return"".concat(e,"x")})).concat(fm.map(function(e){return"w-".concat(e)})),Xu=Br.FontAwesomeConfig||{};function hm(e){var t=ft.querySelector("script["+e+"]");if(t)return t.getAttribute(e)}function dm(e){return e===""?!0:e==="false"?!1:e==="true"?!0:e}if(ft&&typeof ft.querySelector=="function"){var pm=[["data-family-prefix","familyPrefix"],["data-style-default","styleDefault"],["data-replacement-class","replacementClass"],["data-auto-replace-svg","autoReplaceSvg"],["data-auto-add-css","autoAddCss"],["data-auto-a11y","autoA11y"],["data-search-pseudo-elements","searchPseudoElements"],["data-observe-mutations","observeMutations"],["data-mutate-approach","mutateApproach"],["data-keep-original-source","keepOriginalSource"],["data-measure-performance","measurePerformance"],["data-show-missing-icons","showMissingIcons"]];pm.forEach(function(e){var t=ds(e,2),i=t[0],r=t[1],d=dm(hm(i));d!=null&&(Xu[r]=d)})}var mm={familyPrefix:Gu,styleDefault:"solid",replacementClass:ju,autoReplaceSvg:!0,autoAddCss:!0,autoA11y:!0,searchPseudoElements:!1,observeMutations:!0,mutateApproach:"async",keepOriginalSource:!0,measurePerformance:!1,showMissingIcons:!0},ni=je(je({},mm),Xu);ni.autoReplaceSvg||(ni.observeMutations=!1);var Xe={};Object.keys(ni).forEach(function(e){Object.defineProperty(Xe,e,{enumerable:!0,set:function(i){ni[e]=i,Li.forEach(function(r){return r(Xe)})},get:function(){return ni[e]}})});Br.FontAwesomeConfig=Xe;var Li=[];function vm(e){return Li.push(e),function(){Li.splice(Li.indexOf(e),1)}}var Er=xo,fr={size:16,x:0,y:0,rotate:0,flipX:!1,flipY:!1};function gm(e){if(!(!e||!Pr)){var t=ft.createElement("style");t.setAttribute("type","text/css"),t.innerHTML=e;for(var i=ft.head.childNodes,r=null,d=i.length-1;d>-1;d--){var a=i[d],l=(a.tagName||"").toUpperCase();["STYLE","LINK"].indexOf(l)>-1&&(r=a)}return ft.head.insertBefore(t,r),e}}var bm="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";function gi(){for(var e=12,t="";e-- >0;)t+=bm[Math.random()*62|0];return t}function Zn(e){for(var t=[],i=(e||[]).length>>>0;i--;)t[i]=e[i];return t}function bs(e){return e.classList?Zn(e.classList):(e.getAttribute("class")||"").split(" ").filter(function(t){return t})}function qu(e){return"".concat(e).replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function ym(e){return Object.keys(e||{}).reduce(function(t,i){return t+"".concat(i,'="').concat(qu(e[i]),'" ')},"").trim()}function Ma(e){return Object.keys(e||{}).reduce(function(t,i){return t+"".concat(i,": ").concat(e[i].trim(),";")},"")}function ys(e){return e.size!==fr.size||e.x!==fr.x||e.y!==fr.y||e.rotate!==fr.rotate||e.flipX||e.flipY}function wm(e){var t=e.transform,i=e.containerWidth,r=e.iconWidth,d={transform:"translate(".concat(i/2," 256)")},a="translate(".concat(t.x*32,", ").concat(t.y*32,") "),l="scale(".concat(t.size/16*(t.flipX?-1:1),", ").concat(t.size/16*(t.flipY?-1:1),") "),s="rotate(".concat(t.rotate," 0 0)"),g={transform:"".concat(a," ").concat(l," ").concat(s)},b={transform:"translate(".concat(r/2*-1," -256)")};return{outer:d,inner:g,path:b}}function xm(e){var t=e.transform,i=e.width,r=i===void 0?xo:i,d=e.height,a=d===void 0?xo:d,l=e.startCentered,s=l===void 0?!1:l,g="";return s&&Zu?g+="translate(".concat(t.x/Er-r/2,"em, ").concat(t.y/Er-a/2,"em) "):s?g+="translate(calc(-50% + ".concat(t.x/Er,"em), calc(-50% + ").concat(t.y/Er,"em)) "):g+="translate(".concat(t.x/Er,"em, ").concat(t.y/Er,"em) "),g+="scale(".concat(t.size/Er*(t.flipX?-1:1),", ").concat(t.size/Er*(t.flipY?-1:1),") "),g+="rotate(".concat(t.rotate,"deg) "),g}var Am=`:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Solid";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Regular";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Light";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Thin";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  -webkit-transform-origin: center center;
          transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  -webkit-transform-origin: center center;
          transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  -webkit-transform: scale(var(--fa-counter-scale, 0.25));
          transform: scale(var(--fa-counter-scale, 0.25));
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: bottom right;
          transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: bottom left;
          transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: top left;
          transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(var(--fa-li-width, 2em) * -1);
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  -webkit-animation-name: fa-beat;
          animation-name: fa-beat;
  -webkit-animation-delay: var(--fa-animation-delay, 0);
          animation-delay: var(--fa-animation-delay, 0);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);
          animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  -webkit-animation-name: fa-bounce;
          animation-name: fa-bounce;
  -webkit-animation-delay: var(--fa-animation-delay, 0);
          animation-delay: var(--fa-animation-delay, 0);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  -webkit-animation-name: fa-fade;
          animation-name: fa-fade;
  -webkit-animation-delay: var(--fa-animation-delay, 0);
          animation-delay: var(--fa-animation-delay, 0);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  -webkit-animation-name: fa-beat-fade;
          animation-name: fa-beat-fade;
  -webkit-animation-delay: var(--fa-animation-delay, 0);
          animation-delay: var(--fa-animation-delay, 0);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  -webkit-animation-name: fa-flip;
          animation-name: fa-flip;
  -webkit-animation-delay: var(--fa-animation-delay, 0);
          animation-delay: var(--fa-animation-delay, 0);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);
          animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  -webkit-animation-name: fa-shake;
          animation-name: fa-shake;
  -webkit-animation-delay: var(--fa-animation-delay, 0);
          animation-delay: var(--fa-animation-delay, 0);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, linear);
          animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  -webkit-animation-name: fa-spin;
          animation-name: fa-spin;
  -webkit-animation-delay: var(--fa-animation-delay, 0);
          animation-delay: var(--fa-animation-delay, 0);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 2s);
          animation-duration: var(--fa-animation-duration, 2s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, linear);
          animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  -webkit-animation-name: fa-spin;
          animation-name: fa-spin;
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, steps(8));
          animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    -webkit-animation-delay: -1ms;
            animation-delay: -1ms;
    -webkit-animation-duration: 1ms;
            animation-duration: 1ms;
    -webkit-animation-iteration-count: 1;
            animation-iteration-count: 1;
    transition-delay: 0s;
    transition-duration: 0s;
  }
}
@-webkit-keyframes fa-beat {
  0%, 90% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  45% {
    -webkit-transform: scale(var(--fa-beat-scale, 1.25));
            transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-beat {
  0%, 90% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  45% {
    -webkit-transform: scale(var(--fa-beat-scale, 1.25));
            transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@-webkit-keyframes fa-bounce {
  0% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  10% {
    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  100% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-bounce {
  0% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  10% {
    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  100% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
}
@-webkit-keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@-webkit-keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  50% {
    opacity: 1;
    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));
            transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  50% {
    opacity: 1;
    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));
            transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@-webkit-keyframes fa-flip {
  50% {
    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-flip {
  50% {
    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@-webkit-keyframes fa-shake {
  0% {
    -webkit-transform: rotate(-15deg);
            transform: rotate(-15deg);
  }
  4% {
    -webkit-transform: rotate(15deg);
            transform: rotate(15deg);
  }
  8%, 24% {
    -webkit-transform: rotate(-18deg);
            transform: rotate(-18deg);
  }
  12%, 28% {
    -webkit-transform: rotate(18deg);
            transform: rotate(18deg);
  }
  16% {
    -webkit-transform: rotate(-22deg);
            transform: rotate(-22deg);
  }
  20% {
    -webkit-transform: rotate(22deg);
            transform: rotate(22deg);
  }
  32% {
    -webkit-transform: rotate(-12deg);
            transform: rotate(-12deg);
  }
  36% {
    -webkit-transform: rotate(12deg);
            transform: rotate(12deg);
  }
  40%, 100% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
}
@keyframes fa-shake {
  0% {
    -webkit-transform: rotate(-15deg);
            transform: rotate(-15deg);
  }
  4% {
    -webkit-transform: rotate(15deg);
            transform: rotate(15deg);
  }
  8%, 24% {
    -webkit-transform: rotate(-18deg);
            transform: rotate(-18deg);
  }
  12%, 28% {
    -webkit-transform: rotate(18deg);
            transform: rotate(18deg);
  }
  16% {
    -webkit-transform: rotate(-22deg);
            transform: rotate(-22deg);
  }
  20% {
    -webkit-transform: rotate(22deg);
            transform: rotate(22deg);
  }
  32% {
    -webkit-transform: rotate(-12deg);
            transform: rotate(-12deg);
  }
  36% {
    -webkit-transform: rotate(12deg);
            transform: rotate(12deg);
  }
  40%, 100% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
}
@-webkit-keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
@keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
}

.fa-rotate-180 {
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.fa-rotate-270 {
  -webkit-transform: rotate(270deg);
          transform: rotate(270deg);
}

.fa-flip-horizontal {
  -webkit-transform: scale(-1, 1);
          transform: scale(-1, 1);
}

.fa-flip-vertical {
  -webkit-transform: scale(1, -1);
          transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  -webkit-transform: scale(-1, -1);
          transform: scale(-1, -1);
}

.fa-rotate-by {
  -webkit-transform: rotate(var(--fa-rotate-angle, none));
          transform: rotate(var(--fa-rotate-angle, none));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}

.fad.fa-inverse,
.fa-duotone.fa-inverse {
  color: var(--fa-inverse, #fff);
}`;function Uu(){var e=Gu,t=ju,i=Xe.familyPrefix,r=Xe.replacementClass,d=Am;if(i!==e||r!==t){var a=new RegExp("\\.".concat(e,"\\-"),"g"),l=new RegExp("\\--".concat(e,"\\-"),"g"),s=new RegExp("\\.".concat(t),"g");d=d.replace(a,".".concat(i,"-")).replace(l,"--".concat(i,"-")).replace(s,".".concat(r))}return d}var zl=!1;function Ua(){Xe.autoAddCss&&!zl&&(gm(Uu()),zl=!0)}var Pm={mixout:function(){return{dom:{css:Uu,insertCss:Ua}}},hooks:function(){return{beforeDOMElementCreation:function(){Ua()},beforeI2svg:function(){Ua()}}}},wr=Br||{};wr[yr]||(wr[yr]={});wr[yr].styles||(wr[yr].styles={});wr[yr].hooks||(wr[yr].hooks={});wr[yr].shims||(wr[yr].shims=[]);var $t=wr[yr],Wu=[],km=function e(){ft.removeEventListener("DOMContentLoaded",e),ca=1,Wu.map(function(t){return t()})},ca=!1;Pr&&(ca=(ft.documentElement.doScroll?/^loaded|^c/:/^loaded|^i|^c/).test(ft.readyState),ca||ft.addEventListener("DOMContentLoaded",km));function Nm(e){!Pr||(ca?setTimeout(e,0):Wu.push(e))}function Si(e){var t=e.tag,i=e.attributes,r=i===void 0?{}:i,d=e.children,a=d===void 0?[]:d;return typeof e=="string"?qu(e):"<".concat(t," ").concat(ym(r),">").concat(a.map(Si).join(""),"</").concat(t,">")}function Hl(e,t,i){if(e&&e[t]&&e[t][i])return{prefix:t,iconName:i,icon:e[t][i]}}var Em=function(t,i){return function(r,d,a,l){return t.call(i,r,d,a,l)}},Wa=function(t,i,r,d){var a=Object.keys(t),l=a.length,s=d!==void 0?Em(i,d):i,g,b,c;for(r===void 0?(g=1,c=t[a[0]]):(g=0,c=r);g<l;g++)b=a[g],c=s(c,t[b],b,t);return c};function Sm(e){for(var t=[],i=0,r=e.length;i<r;){var d=e.charCodeAt(i++);if(d>=55296&&d<=56319&&i<r){var a=e.charCodeAt(i++);(a&64512)==56320?t.push(((d&1023)<<10)+(a&1023)+65536):(t.push(d),i--)}else t.push(d)}return t}function Po(e){var t=Sm(e);return t.length===1?t[0].toString(16):null}function Cm(e,t){var i=e.length,r=e.charCodeAt(t),d;return r>=55296&&r<=56319&&i>t+1&&(d=e.charCodeAt(t+1),d>=56320&&d<=57343)?(r-55296)*1024+d-56320+65536:r}function Bl(e){return Object.keys(e).reduce(function(t,i){var r=e[i],d=!!r.icon;return d?t[r.iconName]=r.icon:t[i]=r,t},{})}function ko(e,t){var i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},r=i.skipHooks,d=r===void 0?!1:r,a=Bl(t);typeof $t.hooks.addPack=="function"&&!d?$t.hooks.addPack(e,Bl(t)):$t.styles[e]=je(je({},$t.styles[e]||{}),a),e==="fas"&&ko("fa",t)}var ii=$t.styles,Rm=$t.shims,Fm=Object.values(Lu),ws=null,Ku={},Qu={},_u={},$u={},ec={},Om=Object.keys(gs);function Im(e){return~cm.indexOf(e)}function Mm(e,t){var i=t.split("-"),r=i[0],d=i.slice(1).join("-");return r===e&&d!==""&&!Im(d)?d:null}var tc=function(){var t=function(a){return Wa(ii,function(l,s,g){return l[g]=Wa(s,a,{}),l},{})};Ku=t(function(d,a,l){if(a[3]&&(d[a[3]]=l),a[2]){var s=a[2].filter(function(g){return typeof g=="number"});s.forEach(function(g){d[g.toString(16)]=l})}return d}),Qu=t(function(d,a,l){if(d[l]=l,a[2]){var s=a[2].filter(function(g){return typeof g=="string"});s.forEach(function(g){d[g]=l})}return d}),ec=t(function(d,a,l){var s=a[2];return d[l]=l,s.forEach(function(g){d[g]=l}),d});var i="far"in ii||Xe.autoFetchSvg,r=Wa(Rm,function(d,a){var l=a[0],s=a[1],g=a[2];return s==="far"&&!i&&(s="fas"),typeof l=="string"&&(d.names[l]={prefix:s,iconName:g}),typeof l=="number"&&(d.unicodes[l.toString(16)]={prefix:s,iconName:g}),d},{names:{},unicodes:{}});_u=r.names,$u=r.unicodes,ws=Ta(Xe.styleDefault)};vm(function(e){ws=Ta(e.styleDefault)});tc();function xs(e,t){return(Ku[e]||{})[t]}function Tm(e,t){return(Qu[e]||{})[t]}function kn(e,t){return(ec[e]||{})[t]}function rc(e){return _u[e]||{prefix:null,iconName:null}}function zm(e){var t=$u[e],i=xs("fas",e);return t||(i?{prefix:"fas",iconName:i}:null)||{prefix:null,iconName:null}}function Dr(){return ws}var As=function(){return{prefix:null,iconName:null,rest:[]}};function Ta(e){var t=gs[e],i=ua[e]||ua[t],r=e in $t.styles?e:null;return i||r||null}function za(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},i=t.skipLookups,r=i===void 0?!1:i,d=null,a=e.reduce(function(l,s){var g=Mm(Xe.familyPrefix,s);if(ii[s]?(s=Fm.includes(s)?am[s]:s,d=s,l.prefix=s):Om.indexOf(s)>-1?(d=s,l.prefix=Ta(s)):g?l.iconName=g:s!==Xe.replacementClass&&l.rest.push(s),!r&&l.prefix&&l.iconName){var b=d==="fa"?rc(l.iconName):{},c=kn(l.prefix,l.iconName);b.prefix&&(d=null),l.iconName=b.iconName||c||l.iconName,l.prefix=b.prefix||l.prefix,l.prefix==="far"&&!ii.far&&ii.fas&&!Xe.autoFetchSvg&&(l.prefix="fas")}return l},As());return(a.prefix==="fa"||d==="fa")&&(a.prefix=Dr()||"fas"),a}var Hm=function(){function e(){X1(this,e),this.definitions={}}return q1(e,[{key:"add",value:function(){for(var i=this,r=arguments.length,d=new Array(r),a=0;a<r;a++)d[a]=arguments[a];var l=d.reduce(this._pullDefinitions,{});Object.keys(l).forEach(function(s){i.definitions[s]=je(je({},i.definitions[s]||{}),l[s]),ko(s,l[s]);var g=Lu[s];g&&ko(g,l[s]),tc()})}},{key:"reset",value:function(){this.definitions={}}},{key:"_pullDefinitions",value:function(i,r){var d=r.prefix&&r.iconName&&r.icon?{0:r}:r;return Object.keys(d).map(function(a){var l=d[a],s=l.prefix,g=l.iconName,b=l.icon,c=b[2];i[s]||(i[s]={}),c.length>0&&c.forEach(function(h){typeof h=="string"&&(i[s][h]=b)}),i[s][g]=b}),i}}]),e}(),Dl=[],Nn={},Fn={},Bm=Object.keys(Fn);function Dm(e,t){var i=t.mixoutsTo;return Dl=e,Nn={},Object.keys(Fn).forEach(function(r){Bm.indexOf(r)===-1&&delete Fn[r]}),Dl.forEach(function(r){var d=r.mixout?r.mixout():{};if(Object.keys(d).forEach(function(l){typeof d[l]=="function"&&(i[l]=d[l]),fa(d[l])==="object"&&Object.keys(d[l]).forEach(function(s){i[l]||(i[l]={}),i[l][s]=d[l][s]})}),r.hooks){var a=r.hooks();Object.keys(a).forEach(function(l){Nn[l]||(Nn[l]=[]),Nn[l].push(a[l])})}r.provides&&r.provides(Fn)}),i}function No(e,t){for(var i=arguments.length,r=new Array(i>2?i-2:0),d=2;d<i;d++)r[d-2]=arguments[d];var a=Nn[e]||[];return a.forEach(function(l){t=l.apply(null,[t].concat(r))}),t}function sn(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),r=1;r<t;r++)i[r-1]=arguments[r];var d=Nn[e]||[];d.forEach(function(a){a.apply(null,i)})}function xr(){var e=arguments[0],t=Array.prototype.slice.call(arguments,1);return Fn[e]?Fn[e].apply(null,t):void 0}function Eo(e){e.prefix==="fa"&&(e.prefix="fas");var t=e.iconName,i=e.prefix||Dr();if(!!t)return t=kn(i,t)||t,Hl(nc.definitions,i,t)||Hl($t.styles,i,t)}var nc=new Hm,Zm=function(){Xe.autoReplaceSvg=!1,Xe.observeMutations=!1,sn("noAuto")},Gm={i2svg:function(){var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};return Pr?(sn("beforeI2svg",t),xr("pseudoElements2svg",t),xr("i2svg",t)):Promise.reject("Operation requires a DOM of some kind.")},watch:function(){var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},i=t.autoReplaceSvgRoot;Xe.autoReplaceSvg===!1&&(Xe.autoReplaceSvg=!0),Xe.observeMutations=!0,Nm(function(){Vm({autoReplaceSvgRoot:i}),sn("watch",t)})}},jm={icon:function(t){if(t===null)return null;if(fa(t)==="object"&&t.prefix&&t.iconName)return{prefix:t.prefix,iconName:kn(t.prefix,t.iconName)||t.iconName};if(Array.isArray(t)&&t.length===2){var i=t[1].indexOf("fa-")===0?t[1].slice(3):t[1],r=Ta(t[0]);return{prefix:r,iconName:kn(r,i)||i}}if(typeof t=="string"&&(t.indexOf("".concat(Xe.familyPrefix,"-"))>-1||t.match(om))){var d=za(t.split(" "),{skipLookups:!0});return{prefix:d.prefix||Dr(),iconName:kn(d.prefix,d.iconName)||d.iconName}}if(typeof t=="string"){var a=Dr();return{prefix:a,iconName:kn(a,t)||t}}}},Xt={noAuto:Zm,config:Xe,dom:Gm,parse:jm,library:nc,findIconDefinition:Eo,toHtml:Si},Vm=function(){var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},i=t.autoReplaceSvgRoot,r=i===void 0?ft:i;(Object.keys($t.styles).length>0||Xe.autoFetchSvg)&&Pr&&Xe.autoReplaceSvg&&Xt.dom.i2svg({node:r})};function Ha(e,t){return Object.defineProperty(e,"abstract",{get:t}),Object.defineProperty(e,"html",{get:function(){return e.abstract.map(function(r){return Si(r)})}}),Object.defineProperty(e,"node",{get:function(){if(!!Pr){var r=ft.createElement("div");return r.innerHTML=e.html,r.children}}}),e}function Lm(e){var t=e.children,i=e.main,r=e.mask,d=e.attributes,a=e.styles,l=e.transform;if(ys(l)&&i.found&&!r.found){var s=i.width,g=i.height,b={x:s/g/2,y:.5};d.style=Ma(je(je({},a),{},{"transform-origin":"".concat(b.x+l.x/16,"em ").concat(b.y+l.y/16,"em")}))}return[{tag:"svg",attributes:d,children:t}]}function Ym(e){var t=e.prefix,i=e.iconName,r=e.children,d=e.attributes,a=e.symbol,l=a===!0?"".concat(t,"-").concat(Xe.familyPrefix,"-").concat(i):a;return[{tag:"svg",attributes:{style:"display: none;"},children:[{tag:"symbol",attributes:je(je({},d),{},{id:l}),children:r}]}]}function Ps(e){var t=e.icons,i=t.main,r=t.mask,d=e.prefix,a=e.iconName,l=e.transform,s=e.symbol,g=e.title,b=e.maskId,c=e.titleId,h=e.extra,u=e.watchable,o=u===void 0?!1:u,n=r.found?r:i,m=n.width,y=n.height,f=d==="fak",v=[Xe.replacementClass,a?"".concat(Xe.familyPrefix,"-").concat(a):""].filter(function(E){return h.classes.indexOf(E)===-1}).filter(function(E){return E!==""||!!E}).concat(h.classes).join(" "),p={children:[],attributes:je(je({},h.attributes),{},{"data-prefix":d,"data-icon":a,class:v,role:h.attributes.role||"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 ".concat(m," ").concat(y)})},w=f&&!~h.classes.indexOf("fa-fw")?{width:"".concat(m/y*16*.0625,"em")}:{};o&&(p.attributes[on]=""),g&&(p.children.push({tag:"title",attributes:{id:p.attributes["aria-labelledby"]||"title-".concat(c||gi())},children:[g]}),delete p.attributes.title);var A=je(je({},p),{},{prefix:d,iconName:a,main:i,mask:r,maskId:b,transform:l,symbol:s,styles:je(je({},w),h.styles)}),x=r.found&&i.found?xr("generateAbstractMask",A)||{children:[],attributes:{}}:xr("generateAbstractIcon",A)||{children:[],attributes:{}},k=x.children,N=x.attributes;return A.children=k,A.attributes=N,s?Ym(A):Lm(A)}function Zl(e){var t=e.content,i=e.width,r=e.height,d=e.transform,a=e.title,l=e.extra,s=e.watchable,g=s===void 0?!1:s,b=je(je(je({},l.attributes),a?{title:a}:{}),{},{class:l.classes.join(" ")});g&&(b[on]="");var c=je({},l.styles);ys(d)&&(c.transform=xm({transform:d,startCentered:!0,width:i,height:r}),c["-webkit-transform"]=c.transform);var h=Ma(c);h.length>0&&(b.style=h);var u=[];return u.push({tag:"span",attributes:b,children:[t]}),a&&u.push({tag:"span",attributes:{class:"sr-only"},children:[a]}),u}function Jm(e){var t=e.content,i=e.title,r=e.extra,d=je(je(je({},r.attributes),i?{title:i}:{}),{},{class:r.classes.join(" ")}),a=Ma(r.styles);a.length>0&&(d.style=a);var l=[];return l.push({tag:"span",attributes:d,children:[t]}),i&&l.push({tag:"span",attributes:{class:"sr-only"},children:[i]}),l}var Ka=$t.styles;function So(e){var t=e[0],i=e[1],r=e.slice(4),d=ds(r,1),a=d[0],l=null;return Array.isArray(a)?l={tag:"g",attributes:{class:"".concat(Xe.familyPrefix,"-").concat(Qr.GROUP)},children:[{tag:"path",attributes:{class:"".concat(Xe.familyPrefix,"-").concat(Qr.SECONDARY),fill:"currentColor",d:a[0]}},{tag:"path",attributes:{class:"".concat(Xe.familyPrefix,"-").concat(Qr.PRIMARY),fill:"currentColor",d:a[1]}}]}:l={tag:"path",attributes:{fill:"currentColor",d:a}},{found:!0,width:t,height:i,icon:l}}var Xm={found:!1,width:512,height:512};function qm(e,t){!Vu&&!Xe.showMissingIcons&&e&&console.error('Icon with name "'.concat(e,'" and prefix "').concat(t,'" is missing.'))}function Co(e,t){var i=t;return t==="fa"&&Xe.styleDefault!==null&&(t=Dr()),new Promise(function(r,d){if(xr("missingIconAbstract"),i==="fa"){var a=rc(e)||{};e=a.iconName||e,t=a.prefix||t}if(e&&t&&Ka[t]&&Ka[t][e]){var l=Ka[t][e];return r(So(l))}qm(e,t),r(je(je({},Xm),{},{icon:Xe.showMissingIcons&&e?xr("missingIconAbstract")||{}:{}}))})}var Gl=function(){},Ro=Xe.measurePerformance&&Di&&Di.mark&&Di.measure?Di:{mark:Gl,measure:Gl},Un='FA "6.1.1"',Um=function(t){return Ro.mark("".concat(Un," ").concat(t," begins")),function(){return ic(t)}},ic=function(t){Ro.mark("".concat(Un," ").concat(t," ends")),Ro.measure("".concat(Un," ").concat(t),"".concat(Un," ").concat(t," begins"),"".concat(Un," ").concat(t," ends"))},ks={begin:Um,end:ic},Yi=function(){};function jl(e){var t=e.getAttribute?e.getAttribute(on):null;return typeof t=="string"}function Wm(e){var t=e.getAttribute?e.getAttribute(ms):null,i=e.getAttribute?e.getAttribute(vs):null;return t&&i}function Km(e){return e&&e.classList&&e.classList.contains&&e.classList.contains(Xe.replacementClass)}function Qm(){if(Xe.autoReplaceSvg===!0)return Ji.replace;var e=Ji[Xe.autoReplaceSvg];return e||Ji.replace}function _m(e){return ft.createElementNS("http://www.w3.org/2000/svg",e)}function $m(e){return ft.createElement(e)}function ac(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},i=t.ceFn,r=i===void 0?e.tag==="svg"?_m:$m:i;if(typeof e=="string")return ft.createTextNode(e);var d=r(e.tag);Object.keys(e.attributes||[]).forEach(function(l){d.setAttribute(l,e.attributes[l])});var a=e.children||[];return a.forEach(function(l){d.appendChild(ac(l,{ceFn:r}))}),d}function ev(e){var t=" ".concat(e.outerHTML," ");return t="".concat(t,"Font Awesome fontawesome.com "),t}var Ji={replace:function(t){var i=t[0];if(i.parentNode)if(t[1].forEach(function(d){i.parentNode.insertBefore(ac(d),i)}),i.getAttribute(on)===null&&Xe.keepOriginalSource){var r=ft.createComment(ev(i));i.parentNode.replaceChild(r,i)}else i.remove()},nest:function(t){var i=t[0],r=t[1];if(~bs(i).indexOf(Xe.replacementClass))return Ji.replace(t);var d=new RegExp("".concat(Xe.familyPrefix,"-.*"));if(delete r[0].attributes.id,r[0].attributes.class){var a=r[0].attributes.class.split(" ").reduce(function(s,g){return g===Xe.replacementClass||g.match(d)?s.toSvg.push(g):s.toNode.push(g),s},{toNode:[],toSvg:[]});r[0].attributes.class=a.toSvg.join(" "),a.toNode.length===0?i.removeAttribute("class"):i.setAttribute("class",a.toNode.join(" "))}var l=r.map(function(s){return Si(s)}).join(`
`);i.setAttribute(on,""),i.innerHTML=l}};function Vl(e){e()}function oc(e,t){var i=typeof t=="function"?t:Yi;if(e.length===0)i();else{var r=Vl;Xe.mutateApproach===nm&&(r=Br.requestAnimationFrame||Vl),r(function(){var d=Qm(),a=ks.begin("mutate");e.map(d),a(),i()})}}var Ns=!1;function sc(){Ns=!0}function Fo(){Ns=!1}var ha=null;function Ll(e){if(!!Ml&&!!Xe.observeMutations){var t=e.treeCallback,i=t===void 0?Yi:t,r=e.nodeCallback,d=r===void 0?Yi:r,a=e.pseudoElementsCallback,l=a===void 0?Yi:a,s=e.observeMutationsRoot,g=s===void 0?ft:s;ha=new Ml(function(b){if(!Ns){var c=Dr();Zn(b).forEach(function(h){if(h.type==="childList"&&h.addedNodes.length>0&&!jl(h.addedNodes[0])&&(Xe.searchPseudoElements&&l(h.target),i(h.target)),h.type==="attributes"&&h.target.parentNode&&Xe.searchPseudoElements&&l(h.target.parentNode),h.type==="attributes"&&jl(h.target)&&~um.indexOf(h.attributeName))if(h.attributeName==="class"&&Wm(h.target)){var u=za(bs(h.target)),o=u.prefix,n=u.iconName;h.target.setAttribute(ms,o||c),n&&h.target.setAttribute(vs,n)}else Km(h.target)&&d(h.target)})}}),Pr&&ha.observe(g,{childList:!0,attributes:!0,characterData:!0,subtree:!0})}}function tv(){!ha||ha.disconnect()}function rv(e){var t=e.getAttribute("style"),i=[];return t&&(i=t.split(";").reduce(function(r,d){var a=d.split(":"),l=a[0],s=a.slice(1);return l&&s.length>0&&(r[l]=s.join(":").trim()),r},{})),i}function nv(e){var t=e.getAttribute("data-prefix"),i=e.getAttribute("data-icon"),r=e.innerText!==void 0?e.innerText.trim():"",d=za(bs(e));return d.prefix||(d.prefix=Dr()),t&&i&&(d.prefix=t,d.iconName=i),d.iconName&&d.prefix||d.prefix&&r.length>0&&(d.iconName=Tm(d.prefix,e.innerText)||xs(d.prefix,Po(e.innerText))),d}function iv(e){var t=Zn(e.attributes).reduce(function(d,a){return d.name!=="class"&&d.name!=="style"&&(d[a.name]=a.value),d},{}),i=e.getAttribute("title"),r=e.getAttribute("data-fa-title-id");return Xe.autoA11y&&(i?t["aria-labelledby"]="".concat(Xe.replacementClass,"-title-").concat(r||gi()):(t["aria-hidden"]="true",t.focusable="false")),t}function av(){return{iconName:null,title:null,titleId:null,prefix:null,transform:fr,symbol:!1,mask:{iconName:null,prefix:null,rest:[]},maskId:null,extra:{classes:[],styles:{},attributes:{}}}}function Yl(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{styleParser:!0},i=nv(e),r=i.iconName,d=i.prefix,a=i.rest,l=iv(e),s=No("parseNodeAttributes",{},e),g=t.styleParser?rv(e):[];return je({iconName:r,title:e.getAttribute("title"),titleId:e.getAttribute("data-fa-title-id"),prefix:d,transform:fr,mask:{iconName:null,prefix:null,rest:[]},maskId:null,symbol:!1,extra:{classes:a,styles:g,attributes:l}},s)}var ov=$t.styles;function lc(e){var t=Xe.autoReplaceSvg==="nest"?Yl(e,{styleParser:!1}):Yl(e);return~t.extra.classes.indexOf(Yu)?xr("generateLayersText",e,t):xr("generateSvgReplacementMutation",e,t)}function Jl(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;if(!Pr)return Promise.resolve();var i=ft.documentElement.classList,r=function(h){return i.add("".concat(Tl,"-").concat(h))},d=function(h){return i.remove("".concat(Tl,"-").concat(h))},a=Xe.autoFetchSvg?Object.keys(gs):Object.keys(ov),l=[".".concat(Yu,":not([").concat(on,"])")].concat(a.map(function(c){return".".concat(c,":not([").concat(on,"])")})).join(", ");if(l.length===0)return Promise.resolve();var s=[];try{s=Zn(e.querySelectorAll(l))}catch{}if(s.length>0)r("pending"),d("complete");else return Promise.resolve();var g=ks.begin("onTree"),b=s.reduce(function(c,h){try{var u=lc(h);u&&c.push(u)}catch(o){Vu||o.name==="MissingIcon"&&console.error(o)}return c},[]);return new Promise(function(c,h){Promise.all(b).then(function(u){oc(u,function(){r("active"),r("complete"),d("pending"),typeof t=="function"&&t(),g(),c()})}).catch(function(u){g(),h(u)})})}function sv(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;lc(e).then(function(i){i&&oc([i],t)})}function lv(e){return function(t){var i=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},r=(t||{}).icon?t:Eo(t||{}),d=i.mask;return d&&(d=(d||{}).icon?d:Eo(d||{})),e(r,je(je({},i),{},{mask:d}))}}var fv=function(t){var i=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},r=i.transform,d=r===void 0?fr:r,a=i.symbol,l=a===void 0?!1:a,s=i.mask,g=s===void 0?null:s,b=i.maskId,c=b===void 0?null:b,h=i.title,u=h===void 0?null:h,o=i.titleId,n=o===void 0?null:o,m=i.classes,y=m===void 0?[]:m,f=i.attributes,v=f===void 0?{}:f,p=i.styles,w=p===void 0?{}:p;if(!!t){var A=t.prefix,x=t.iconName,k=t.icon;return Ha(je({type:"icon"},t),function(){return sn("beforeDOMElementCreation",{iconDefinition:t,params:i}),Xe.autoA11y&&(u?v["aria-labelledby"]="".concat(Xe.replacementClass,"-title-").concat(n||gi()):(v["aria-hidden"]="true",v.focusable="false")),Ps({icons:{main:So(k),mask:g?So(g.icon):{found:!1,width:null,height:null,icon:{}}},prefix:A,iconName:x,transform:je(je({},fr),d),symbol:l,title:u,maskId:c,titleId:n,extra:{attributes:v,styles:w,classes:y}})})}},uv={mixout:function(){return{icon:lv(fv)}},hooks:function(){return{mutationObserverCallbacks:function(i){return i.treeCallback=Jl,i.nodeCallback=sv,i}}},provides:function(t){t.i2svg=function(i){var r=i.node,d=r===void 0?ft:r,a=i.callback,l=a===void 0?function(){}:a;return Jl(d,l)},t.generateSvgReplacementMutation=function(i,r){var d=r.iconName,a=r.title,l=r.titleId,s=r.prefix,g=r.transform,b=r.symbol,c=r.mask,h=r.maskId,u=r.extra;return new Promise(function(o,n){Promise.all([Co(d,s),c.iconName?Co(c.iconName,c.prefix):Promise.resolve({found:!1,width:512,height:512,icon:{}})]).then(function(m){var y=ds(m,2),f=y[0],v=y[1];o([i,Ps({icons:{main:f,mask:v},prefix:s,iconName:d,transform:g,symbol:b,maskId:h,title:a,titleId:l,extra:u,watchable:!0})])}).catch(n)})},t.generateAbstractIcon=function(i){var r=i.children,d=i.attributes,a=i.main,l=i.transform,s=i.styles,g=Ma(s);g.length>0&&(d.style=g);var b;return ys(l)&&(b=xr("generateAbstractTransformGrouping",{main:a,transform:l,containerWidth:a.width,iconWidth:a.width})),r.push(b||a.icon),{children:r,attributes:d}}}},cv={mixout:function(){return{layer:function(i){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},d=r.classes,a=d===void 0?[]:d;return Ha({type:"layer"},function(){sn("beforeDOMElementCreation",{assembler:i,params:r});var l=[];return i(function(s){Array.isArray(s)?s.map(function(g){l=l.concat(g.abstract)}):l=l.concat(s.abstract)}),[{tag:"span",attributes:{class:["".concat(Xe.familyPrefix,"-layers")].concat(Ia(a)).join(" ")},children:l}]})}}}},hv={mixout:function(){return{counter:function(i){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},d=r.title,a=d===void 0?null:d,l=r.classes,s=l===void 0?[]:l,g=r.attributes,b=g===void 0?{}:g,c=r.styles,h=c===void 0?{}:c;return Ha({type:"counter",content:i},function(){return sn("beforeDOMElementCreation",{content:i,params:r}),Jm({content:i.toString(),title:a,extra:{attributes:b,styles:h,classes:["".concat(Xe.familyPrefix,"-layers-counter")].concat(Ia(s))}})})}}}},dv={mixout:function(){return{text:function(i){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},d=r.transform,a=d===void 0?fr:d,l=r.title,s=l===void 0?null:l,g=r.classes,b=g===void 0?[]:g,c=r.attributes,h=c===void 0?{}:c,u=r.styles,o=u===void 0?{}:u;return Ha({type:"text",content:i},function(){return sn("beforeDOMElementCreation",{content:i,params:r}),Zl({content:i,transform:je(je({},fr),a),title:s,extra:{attributes:h,styles:o,classes:["".concat(Xe.familyPrefix,"-layers-text")].concat(Ia(b))}})})}}},provides:function(t){t.generateLayersText=function(i,r){var d=r.title,a=r.transform,l=r.extra,s=null,g=null;if(Zu){var b=parseInt(getComputedStyle(i).fontSize,10),c=i.getBoundingClientRect();s=c.width/b,g=c.height/b}return Xe.autoA11y&&!d&&(l.attributes["aria-hidden"]="true"),Promise.resolve([i,Zl({content:i.innerHTML,width:s,height:g,transform:a,title:d,extra:l,watchable:!0})])}}},pv=new RegExp('"',"ug"),Xl=[1105920,1112319];function mv(e){var t=e.replace(pv,""),i=Cm(t,0),r=i>=Xl[0]&&i<=Xl[1],d=t.length===2?t[0]===t[1]:!1;return{value:Po(d?t[0]:t),isSecondary:r||d}}function ql(e,t){var i="".concat(rm).concat(t.replace(":","-"));return new Promise(function(r,d){if(e.getAttribute(i)!==null)return r();var a=Zn(e.children),l=a.filter(function(x){return x.getAttribute(Ao)===t})[0],s=Br.getComputedStyle(e,t),g=s.getPropertyValue("font-family").match(sm),b=s.getPropertyValue("font-weight"),c=s.getPropertyValue("content");if(l&&!g)return e.removeChild(l),r();if(g&&c!=="none"&&c!==""){var h=s.getPropertyValue("content"),u=~["Solid","Regular","Light","Thin","Duotone","Brands","Kit"].indexOf(g[2])?ua[g[2].toLowerCase()]:lm[b],o=mv(h),n=o.value,m=o.isSecondary,y=g[0].startsWith("FontAwesome"),f=xs(u,n),v=f;if(y){var p=zm(n);p.iconName&&p.prefix&&(f=p.iconName,u=p.prefix)}if(f&&!m&&(!l||l.getAttribute(ms)!==u||l.getAttribute(vs)!==v)){e.setAttribute(i,v),l&&e.removeChild(l);var w=av(),A=w.extra;A.attributes[Ao]=t,Co(f,u).then(function(x){var k=Ps(je(je({},w),{},{icons:{main:x,mask:As()},prefix:u,iconName:v,extra:A,watchable:!0})),N=ft.createElement("svg");t==="::before"?e.insertBefore(N,e.firstChild):e.appendChild(N),N.outerHTML=k.map(function(E){return Si(E)}).join(`
`),e.removeAttribute(i),r()}).catch(d)}else r()}else r()})}function vv(e){return Promise.all([ql(e,"::before"),ql(e,"::after")])}function gv(e){return e.parentNode!==document.head&&!~im.indexOf(e.tagName.toUpperCase())&&!e.getAttribute(Ao)&&(!e.parentNode||e.parentNode.tagName!=="svg")}function Ul(e){if(!!Pr)return new Promise(function(t,i){var r=Zn(e.querySelectorAll("*")).filter(gv).map(vv),d=ks.begin("searchPseudoElements");sc(),Promise.all(r).then(function(){d(),Fo(),t()}).catch(function(){d(),Fo(),i()})})}var bv={hooks:function(){return{mutationObserverCallbacks:function(i){return i.pseudoElementsCallback=Ul,i}}},provides:function(t){t.pseudoElements2svg=function(i){var r=i.node,d=r===void 0?ft:r;Xe.searchPseudoElements&&Ul(d)}}},Wl=!1,yv={mixout:function(){return{dom:{unwatch:function(){sc(),Wl=!0}}}},hooks:function(){return{bootstrap:function(){Ll(No("mutationObserverCallbacks",{}))},noAuto:function(){tv()},watch:function(i){var r=i.observeMutationsRoot;Wl?Fo():Ll(No("mutationObserverCallbacks",{observeMutationsRoot:r}))}}}},Kl=function(t){var i={size:16,x:0,y:0,flipX:!1,flipY:!1,rotate:0};return t.toLowerCase().split(" ").reduce(function(r,d){var a=d.toLowerCase().split("-"),l=a[0],s=a.slice(1).join("-");if(l&&s==="h")return r.flipX=!0,r;if(l&&s==="v")return r.flipY=!0,r;if(s=parseFloat(s),isNaN(s))return r;switch(l){case"grow":r.size=r.size+s;break;case"shrink":r.size=r.size-s;break;case"left":r.x=r.x-s;break;case"right":r.x=r.x+s;break;case"up":r.y=r.y-s;break;case"down":r.y=r.y+s;break;case"rotate":r.rotate=r.rotate+s;break}return r},i)},wv={mixout:function(){return{parse:{transform:function(i){return Kl(i)}}}},hooks:function(){return{parseNodeAttributes:function(i,r){var d=r.getAttribute("data-fa-transform");return d&&(i.transform=Kl(d)),i}}},provides:function(t){t.generateAbstractTransformGrouping=function(i){var r=i.main,d=i.transform,a=i.containerWidth,l=i.iconWidth,s={transform:"translate(".concat(a/2," 256)")},g="translate(".concat(d.x*32,", ").concat(d.y*32,") "),b="scale(".concat(d.size/16*(d.flipX?-1:1),", ").concat(d.size/16*(d.flipY?-1:1),") "),c="rotate(".concat(d.rotate," 0 0)"),h={transform:"".concat(g," ").concat(b," ").concat(c)},u={transform:"translate(".concat(l/2*-1," -256)")},o={outer:s,inner:h,path:u};return{tag:"g",attributes:je({},o.outer),children:[{tag:"g",attributes:je({},o.inner),children:[{tag:r.icon.tag,children:r.icon.children,attributes:je(je({},r.icon.attributes),o.path)}]}]}}}},Qa={x:0,y:0,width:"100%",height:"100%"};function Ql(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return e.attributes&&(e.attributes.fill||t)&&(e.attributes.fill="black"),e}function xv(e){return e.tag==="g"?e.children:[e]}var Av={hooks:function(){return{parseNodeAttributes:function(i,r){var d=r.getAttribute("data-fa-mask"),a=d?za(d.split(" ").map(function(l){return l.trim()})):As();return a.prefix||(a.prefix=Dr()),i.mask=a,i.maskId=r.getAttribute("data-fa-mask-id"),i}}},provides:function(t){t.generateAbstractMask=function(i){var r=i.children,d=i.attributes,a=i.main,l=i.mask,s=i.maskId,g=i.transform,b=a.width,c=a.icon,h=l.width,u=l.icon,o=wm({transform:g,containerWidth:h,iconWidth:b}),n={tag:"rect",attributes:je(je({},Qa),{},{fill:"white"})},m=c.children?{children:c.children.map(Ql)}:{},y={tag:"g",attributes:je({},o.inner),children:[Ql(je({tag:c.tag,attributes:je(je({},c.attributes),o.path)},m))]},f={tag:"g",attributes:je({},o.outer),children:[y]},v="mask-".concat(s||gi()),p="clip-".concat(s||gi()),w={tag:"mask",attributes:je(je({},Qa),{},{id:v,maskUnits:"userSpaceOnUse",maskContentUnits:"userSpaceOnUse"}),children:[n,f]},A={tag:"defs",children:[{tag:"clipPath",attributes:{id:p},children:xv(u)},w]};return r.push(A,{tag:"rect",attributes:je({fill:"currentColor","clip-path":"url(#".concat(p,")"),mask:"url(#".concat(v,")")},Qa)}),{children:r,attributes:d}}}},Pv={provides:function(t){var i=!1;Br.matchMedia&&(i=Br.matchMedia("(prefers-reduced-motion: reduce)").matches),t.missingIconAbstract=function(){var r=[],d={fill:"currentColor"},a={attributeType:"XML",repeatCount:"indefinite",dur:"2s"};r.push({tag:"path",attributes:je(je({},d),{},{d:"M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"})});var l=je(je({},a),{},{attributeName:"opacity"}),s={tag:"circle",attributes:je(je({},d),{},{cx:"256",cy:"364",r:"28"}),children:[]};return i||s.children.push({tag:"animate",attributes:je(je({},a),{},{attributeName:"r",values:"28;14;28;28;14;28;"})},{tag:"animate",attributes:je(je({},l),{},{values:"1;0;1;1;0;1;"})}),r.push(s),r.push({tag:"path",attributes:je(je({},d),{},{opacity:"1",d:"M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"}),children:i?[]:[{tag:"animate",attributes:je(je({},l),{},{values:"1;0;0;0;0;1;"})}]}),i||r.push({tag:"path",attributes:je(je({},d),{},{opacity:"0",d:"M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"}),children:[{tag:"animate",attributes:je(je({},l),{},{values:"0;0;1;1;0;0;"})}]}),{tag:"g",attributes:{class:"missing"},children:r}}}},kv={hooks:function(){return{parseNodeAttributes:function(i,r){var d=r.getAttribute("data-fa-symbol"),a=d===null?!1:d===""?!0:d;return i.symbol=a,i}}}},Nv=[Pm,uv,cv,hv,dv,bv,yv,wv,Av,Pv,kv];Dm(Nv,{mixoutsTo:Xt});Xt.noAuto;var fc=Xt.config;Xt.library;Xt.dom;var uc=Xt.parse;Xt.findIconDefinition;Xt.toHtml;var Ev=Xt.icon;Xt.layer;var Sv=Xt.text;Xt.counter;var Cv=typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function Rv(e,t){return t={exports:{}},e(t,t.exports),t.exports}var Fv=Rv(function(e){(function(t){var i=function(f,v,p){if(!b(v)||h(v)||u(v)||o(v)||g(v))return v;var w,A=0,x=0;if(c(v))for(w=[],x=v.length;A<x;A++)w.push(i(f,v[A],p));else{w={};for(var k in v)Object.prototype.hasOwnProperty.call(v,k)&&(w[f(k,p)]=i(f,v[k],p))}return w},r=function(f,v){v=v||{};var p=v.separator||"_",w=v.split||/(?=[A-Z])/;return f.split(w).join(p)},d=function(f){return n(f)?f:(f=f.replace(/[\-_\s]+(.)?/g,function(v,p){return p?p.toUpperCase():""}),f.substr(0,1).toLowerCase()+f.substr(1))},a=function(f){var v=d(f);return v.substr(0,1).toUpperCase()+v.substr(1)},l=function(f,v){return r(f,v).toLowerCase()},s=Object.prototype.toString,g=function(f){return typeof f=="function"},b=function(f){return f===Object(f)},c=function(f){return s.call(f)=="[object Array]"},h=function(f){return s.call(f)=="[object Date]"},u=function(f){return s.call(f)=="[object RegExp]"},o=function(f){return s.call(f)=="[object Boolean]"},n=function(f){return f=f-0,f===f},m=function(f,v){var p=v&&"process"in v?v.process:v;return typeof p!="function"?f:function(w,A){return p(w,f,A)}},y={camelize:d,decamelize:l,pascalize:a,depascalize:l,camelizeKeys:function(f,v){return i(m(d,v),f)},decamelizeKeys:function(f,v){return i(m(l,v),f,v)},pascalizeKeys:function(f,v){return i(m(a,v),f)},depascalizeKeys:function(){return this.decamelizeKeys.apply(this,arguments)}};e.exports?e.exports=y:t.humps=y})(Cv)}),Ov=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Wn=function(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e},da=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r])}return e},Iv=function(e,t){var i={};for(var r in e)t.indexOf(r)>=0||!Object.prototype.hasOwnProperty.call(e,r)||(i[r]=e[r]);return i},Oo=function(e){if(Array.isArray(e)){for(var t=0,i=Array(e.length);t<e.length;t++)i[t]=e[t];return i}else return Array.from(e)};function Mv(e){return e.split(";").map(function(t){return t.trim()}).filter(function(t){return t}).reduce(function(t,i){var r=i.indexOf(":"),d=Fv.camelize(i.slice(0,r)),a=i.slice(r+1).trim();return t[d]=a,t},{})}function Tv(e){return e.split(/\s+/).reduce(function(t,i){return t[i]=!0,t},{})}function Es(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};if(typeof e=="string")return e;var r=(e.children||[]).map(function(g){return Es(g)}),d=Object.keys(e.attributes||{}).reduce(function(g,b){var c=e.attributes[b];switch(b){case"class":g.class=Tv(c);break;case"style":g.style=Mv(c);break;default:g.attrs[b]=c}return g},{attrs:{},class:{},style:{}});i.class;var a=i.style,l=a===void 0?{}:a,s=Iv(i,["class","style"]);return Mn(e.tag,da({},t,{class:d.class,style:da({},d.style,l)},d.attrs,s),r)}var cc=!1;try{cc=!0}catch{}function zv(){if(!cc&&console&&typeof console.error=="function"){var e;(e=console).error.apply(e,arguments)}}function ai(e,t){return Array.isArray(t)&&t.length>0||!Array.isArray(t)&&t?Wn({},e,t):{}}function Hv(e){var t,i=(t={"fa-spin":e.spin,"fa-pulse":e.pulse,"fa-fw":e.fixedWidth,"fa-border":e.border,"fa-li":e.listItem,"fa-inverse":e.inverse,"fa-flip-horizontal":e.flip==="horizontal"||e.flip==="both","fa-flip-vertical":e.flip==="vertical"||e.flip==="both"},Wn(t,"fa-"+e.size,e.size!==null),Wn(t,"fa-rotate-"+e.rotation,e.rotation!==null),Wn(t,"fa-pull-"+e.pull,e.pull!==null),Wn(t,"fa-swap-opacity",e.swapOpacity),t);return Object.keys(i).map(function(r){return i[r]?r:null}).filter(function(r){return r})}function _l(e){if(e===null)return null;if((typeof e=="undefined"?"undefined":Ov(e))==="object"&&e.prefix&&e.iconName)return e;if(Array.isArray(e)&&e.length===2)return{prefix:e[0],iconName:e[1]};if(typeof e=="string")return{prefix:"fas",iconName:e}}var Bv=cn({name:"FontAwesomeIcon",props:{border:{type:Boolean,default:!1},fixedWidth:{type:Boolean,default:!1},flip:{type:String,default:null,validator:function(t){return["horizontal","vertical","both"].indexOf(t)>-1}},icon:{type:[Object,Array,String],required:!0},mask:{type:[Object,Array,String],default:null},listItem:{type:Boolean,default:!1},pull:{type:String,default:null,validator:function(t){return["right","left"].indexOf(t)>-1}},pulse:{type:Boolean,default:!1},rotation:{type:[String,Number],default:null,validator:function(t){return[90,180,270].indexOf(Number.parseInt(t,10))>-1}},swapOpacity:{type:Boolean,default:!1},size:{type:String,default:null,validator:function(t){return["lg","xs","sm","1x","2x","3x","4x","5x","6x","7x","8x","9x","10x"].indexOf(t)>-1}},spin:{type:Boolean,default:!1},transform:{type:[String,Object],default:null},symbol:{type:[Boolean,String],default:!1},title:{type:String,default:null},inverse:{type:Boolean,default:!1}},setup:function(t,i){var r=i.attrs,d=Je(function(){return _l(t.icon)}),a=Je(function(){return ai("classes",Hv(t))}),l=Je(function(){return ai("transform",typeof t.transform=="string"?uc.transform(t.transform):t.transform)}),s=Je(function(){return ai("mask",_l(t.mask))}),g=Je(function(){return Ev(d.value,da({},a.value,l.value,s.value,{symbol:t.symbol,title:t.title}))});tt(g,function(c){if(!c)return zv("Could not find one or more icon(s)",d.value,s.value)},{immediate:!0});var b=Je(function(){return g.value?Es(g.value.abstract[0],{},r):null});return function(){return b.value}}});cn({name:"FontAwesomeLayers",props:{fixedWidth:{type:Boolean,default:!1}},setup:function(t,i){var r=i.slots,d=fc.familyPrefix,a=Je(function(){return[d+"-layers"].concat(Oo(t.fixedWidth?[d+"-fw"]:[]))});return function(){return Mn("div",{class:a.value},r.default?r.default():[])}}});cn({name:"FontAwesomeLayersText",props:{value:{type:[String,Number],default:""},transform:{type:[String,Object],default:null},counter:{type:Boolean,default:!1},position:{type:String,default:null,validator:function(t){return["bottom-left","bottom-right","top-left","top-right"].indexOf(t)>-1}}},setup:function(t,i){var r=i.attrs,d=fc.familyPrefix,a=Je(function(){return ai("classes",[].concat(Oo(t.counter?[d+"-layers-counter"]:[]),Oo(t.position?[d+"-layers-"+t.position]:[])))}),l=Je(function(){return ai("transform",typeof t.transform=="string"?uc.transform(t.transform):t.transform)}),s=Je(function(){var b=Sv(t.value.toString(),da({},l.value,a.value)),c=b.abstract;return t.counter&&(c[0].attributes.class=c[0].attributes.class.replace("fa-layers-text","")),c[0]}),g=Je(function(){return Es(s.value,{},r)});return function(){return g.value}}});const Dv={name:"BaseIcon",components:{FontAwesomeIcon:Bv},props:{icon:{type:Object,required:!0}}},Zv={class:"base-icon"};function Gv(e,t,i,r,d,a){const l=rt("FontAwesomeIcon");return Ue(),nt("div",Zv,[st(e.$slots,"default",{},()=>[Le(l,{"fixed-width":!0,icon:i.icon},null,8,["icon"])],!0),st(e.$slots,"tooltip",{},void 0,!0)])}var Gn=Wt(Dv,[["render",Gv],["__scopeId","data-v-50cc951a"]]);const jv={name:"BaseItems",components:{BaseIcon:Gn},emits:["remove:selection"],setup(e,{emit:t}){function i(r){t("remove:selection",r)}return{onClickRemoveOption:i}}},Vv={class:"field-tags-wrapper"},Lv={class:"item-text"};function Yv(e,t,i,r,d,a){const l=rt("BaseIcon");return Ue(),nt("div",Vv,[_e("span",Lv,[st(e.$slots,"default")]),Le(l,{icon:e.Icon.Close,class:"fields-tags-close-icon",onClick:r.onClickRemoveOption},null,8,["icon","onClick"])])}var Jv=Wt(jv,[["render",Yv]]);const Xv={name:"BaseButton",emits:["update:toggled"],components:{BaseIcon:Gn},props:{text:{type:String,default:""},icon:{type:String,default:""},toggleable:{type:Boolean,default:!1},toggled:{type:Boolean,default:!1}},setup(e,{emit:t}){const i=We(null),r=We(e.toggled);function d({target:g,pointerId:b}){g.setPointerCapture(b)}function a(){var g;r.value||(g=i.value)==null||g.blur()}function l({target:g,pointerId:b}){g.releasePointerCapture(b),e.toggleable&&(r.value=!r.value,t("update:toggled",r.value)),a()}tt(r,()=>a()),tt(()=>e.toggled,g=>r.value=g),tt(()=>e.toggleable,g=>{g||(r.value=!1)});const s=Je(()=>{const g=[];return r.value&&g.push("toggled"),g});return{element:i,elementCls:s,onMouseUpButton:l,onMouseDownButton:d}}},qv={class:"base-button-text"};function Uv(e,t,i,r,d,a){const l=rt("BaseIcon");return Ue(),nt("button",{ref:"element",class:Ut(["base-button",r.elementCls]),onMousedown:t[0]||(t[0]=(...s)=>r.onMouseDownButton&&r.onMouseDownButton(...s)),onMouseup:t[1]||(t[1]=(...s)=>r.onMouseUpButton&&r.onMouseUpButton(...s))},[st(e.$slots,"icon",{},()=>[i.icon?(Ue(),Rt(l,{key:0,icon:i.icon},null,8,["icon"])):Ot("",!0)],!0),st(e.$slots,"default",{},()=>[_e("span",qv,ur(i.text),1)],!0),st(e.$slots,"menu",{},void 0,!0)],34)}var Wv=Wt(Xv,[["render",Uv],["__scopeId","data-v-e765be52"]]);function hc(e){return{required:e.required,whitespace:!e.allowEmptyWhitespace}}function dc(e){return{required:e.required,type:e.inputType}}const Kv=new Bn(["left","right","top","down"],!1);let Qv=1;const _v={name:"BaseField",components:{BaseLabel:hs,BaseIcon:Gn},emits:["update:modelValue","change:validity","change:dirty","click:field","blur:field","focus:field","input:field"],props:{label:{type:String,default:""},labelWidth:{type:String,default:"w-24"},modelValue:{type:[String,Number,Boolean],default:""},inputType:{type:String,default:"text"},inputCls:{type:[Object,String],default:"w-full"},inputWidth:{type:String,default:"flex-1"},labelAlign:{type:String,default:Kv.Left},required:{type:Boolean,default:!1},allowEmptyWhitespace:{type:Boolean,default:!1},minLength:{type:Number,default:void 0},maxLength:{type:Number,default:void 0},minValue:{type:Number,default:void 0},maxValue:{type:Number,default:void 0},step:{type:Number,default:void 0},validateOnInit:{type:Boolean,default:!1},inputAttrsCfg:{type:Function,default:e=>la(sa({},dc(e)),{minlength:e.minLength,maxlength:e.maxLength})},rulesCfg:{type:Function,default:e=>la(sa({},hc(e)),{minLength:e.minLength?[e.minLength]:!1,maxLength:e.maxLength?[e.maxLength]:!1})},parseValue:{type:Function,default:uu},id:{type:String,default:()=>`input-${Qv++}`}},setup(e,{emit:t}){const i=We(null),r=We(null),d=Je(()=>e.rulesCfg(e)),a=bu(e.label||`field-${e.inputType}`,d,{initialValue:e.modelValue,validateOnMount:e.validateOnInit,type:e.inputType,checkedValue:!0,uncheckedValue:!1});a.setTouched(e.validateOnInit);function l(m){t("update:modelValue",m)}tt(Je(()=>e.modelValue),m=>{a.handleChange(m,!1)});const s=Je(()=>({"field-invalid":a.meta.touched&&a.meta.valid===!1}));tt(d,async m=>{m&&(await Wr(),await a.validate())}),tt(Je(()=>a.meta.valid),m=>{a.meta.touched&&t("change:validity",m)}),tt(Je(()=>a.meta.dirty),m=>{a.meta.touched&&t("change:dirty",m)});const g=Je(()=>a.errors.value),b=Je(()=>a.meta.touched&&g.value.length);function c(m){t("click:field",m)}function h(m){t("input:field",m.target.value)}function u(){i.value.select(),t("focus:field")}function o(){a.setTouched(!0);const m=e.parseValue(e.modelValue);m!==e.modelValue&&l(m),a.validate(),t("blur:field")}const n=Je({get(){return a.value.value},set(m){l(m)}});return{field:a,value:n,inputWrapper:r,inputWrapperCls:s,fieldErrors:g,showErrors:b,inputEl:i,onBlurField:o,onFocusField:u,onMouseDownField:c,onInputField:h,inputAttrs:e.inputAttrsCfg(e)}}},$v=["id"];function eg(e,t,i,r,d,a){const l=rt("BaseLabel"),s=rt("BaseIcon");return Ue(),nt("div",{class:Ut(["base-field",i.labelAlign])},[i.label?(Ue(),Rt(l,{key:0,value:i.label,class:Ut(i.labelWidth),for:i.id},null,8,["value","class","for"])):Ot("",!0),_e("div",{class:Ut(["relative",i.inputWidth])},[_e("div",{ref:"inputWrapper",class:Ut(["field-text",r.inputWrapperCls])},[st(e.$slots,"beforeItems",{},void 0,!0),Dt(_e("input",xi(r.inputAttrs,{id:i.id,ref:"inputEl","onUpdate:modelValue":t[0]||(t[0]=g=>r.value=g),class:["field-text-input",i.inputCls],onMousedown:t[1]||(t[1]=(...g)=>r.onMouseDownField&&r.onMouseDownField(...g)),onFocus:t[2]||(t[2]=(...g)=>r.onFocusField&&r.onFocusField(...g)),onBlur:t[3]||(t[3]=(...g)=>r.onBlurField&&r.onBlurField(...g)),onInput:t[4]||(t[4]=(...g)=>r.onInputField&&r.onInputField(...g))}),null,16,$v),[[Z0,r.value]]),st(e.$slots,"afterItems",{},void 0,!0)],2),Dt(Le(s,{icon:e.Icon.AlertTriangle,class:"text-red-800"},{default:ut(()=>[_e("ul",null,[(Ue(!0),nt(wt,null,br(r.fieldErrors,(g,b)=>(Ue(),nt("li",{key:b},ur(g),1))),128))])]),_:1},8,["icon"]),[[Yt,r.showErrors]])],2)],2)}var Ci=Wt(_v,[["render",eg],["__scopeId","data-v-d06880ce"]]);const tg={name:"FieldCheckBox",components:{BaseField:Ci},props:{parseValue:{type:Function,default:fu}}};function rg(e,t,i,r,d,a){const l=rt("BaseField");return Ue(),Rt(l,{"input-type":"checkbox","input-width":"w-auto",class:"checkbox","parse-value":i.parseValue},null,8,["parse-value"])}var ng=Wt(tg,[["render",rg],["__scopeId","data-v-92dd509a"]]);const ig={name:"FieldNumber",components:{BaseField:Ci},props:{step:{type:Number,default:.01},inputAttrsCfg:{type:Function,default:e=>la(sa({},dc(e)),{min:e.minValue,max:e.maxValue,step:e.step})},rulesCfg:{type:Function,default:e=>la(sa({},hc(e)),{minValue:e.minValue?[e.minValue]:!1,maxValue:e.maxValue?[e.maxValue]:!1})}},setup(){return{parseNumber:rs}}};function ag(e,t,i,r,d,a){const l=rt("BaseField");return Ue(),Rt(l,xi({ref:"fieldEl"},e.$props,{class:"field-number","input-type":"number","parse-value":r.parseNumber,onKeydown:[t[0]||(t[0]=ta(Va(()=>{},["prevent"]),["down"])),t[1]||(t[1]=ta(Va(()=>{},["prevent"]),["up"]))],onWheel:t[2]||(t[2]=Va(()=>{},["prevent"]))}),_o({_:2},[br(e.$slots,(s,g)=>({name:g,fn:ut(b=>[st(e.$slots,g,Mo(ka(b)))])}))]),1040,["parse-value"])}var pc=Wt(ig,[["render",ag]]);const og={name:"FieldInteger",components:{FieldNumber:pc},setup(){return{parseInteger:lu}}};function sg(e,t,i,r,d,a){const l=rt("FieldNumber");return Ue(),Rt(l,xi(e.$props,{step:1,"parse-value":r.parseInteger}),null,16,["parse-value"])}var lg=Wt(og,[["render",sg]]);new Bn({Above:"tags-above",Below:"tags-below",Inline:"tags-inline"});const $l="searchFilter",ef="selectionsFilter",mc=8,tf=144+mc,fg={name:"FieldComboBox",components:{BaseOverlay:Tu,BaseList:J1,BaseIcon:Gn,BaseItems:Jv,BaseField:Ci},emits:["update:expanded","update:modelValue","update:selected"],props:{modelValue:{type:[String,Number,Array],default:null},multiSelect:{type:Boolean,default:!1},options:{type:Array,default:()=>[]},expanded:{type:Boolean,default:!1},idField:{type:String,default:null},displayField:{type:String,default:null},maxSelectedTags:{type:Number,default:2},filterSelections:{type:Boolean,default:!1},filterFn:{type:Function,default:null},groups:{type:Array,default:null},groupSort:{type:Function,default:null}},setup(e,{emit:t}){const i=We(null),r=We(null),d=We(e.expanded),a=We(null),l=We(!1),s=We(null),g=Je(()=>s.value.length-e.maxSelectedTags),b=Je(()=>g.value>0&&!l.value),c=Je(()=>{const{groups:O}=e;let{options:V,filterFn:J,displayField:B,idField:z}=e;V.isCollection?V=V.clone():V=new Pi(V),z?V.idField=z:z=V.idField,B?V.displayField=B:B=V.displayField;const G=Ye(a);if(V.removeFilters([$l,ef],!0),G){if(!J){const U=new RegExp(G,"i");J=ie=>U.test(ie[B])}V.addFilters({id:$l,fn:J},{suppress:!0})}if(e.multiSelect&&e.filterSelections){const U=Ye(s);bt(U)||V.addFilters({id:ef,fn:ie=>{let oe=!0;for(const ae of U)if(ae[z]===ie[z]){oe=!1;break}return oe}},{suppress:!0})}return V.groups=O,V}),h=Je(()=>c.value.displayField);s.value=n();const u=Je({get(){var O;const V=Ye(a);return bt(V)?e.multiSelect?"":(O=s.value[0])==null?void 0:O[h.value]:V},set(O){a.value=O}}),o=Je(()=>e.multiSelect?"multi-select":"");function n(){const O=[],{idField:V}=c.value;let{modelValue:J}=e;return bt(J)||(J=dr(J),J.forEach(B=>{var z;const G=(z=e.options)==null?void 0:z.find(U=>U[V]===B);G&&O.push(G)})),O}tt(()=>e.modelValue,()=>{s.value=n(),t("update:selected",e.multiSelect?s.value:s.value[0])},{immediate:!0}),tt(()=>e.expanded,O=>{m(O)}),tt(()=>e.multiSelect,O=>{var V;O||E({option:(V=s.value)==null?void 0:V[0]})});function m(O=!d.value){if(d.value=O,O){const{inputWrapper:V}=i.value,{style:J}=r.value.$el,B=V.getBoundingClientRect(),{left:z,width:G,bottom:U}=B;let{top:ie}=B;innerHeight<U+tf?ie-=tf:ie=U+mc,J.top=`${ie+scrollY}px`,J.left=`${z-2}px`,J.width=`${G+4}px`}t("update:expanded",O)}function y(){var O;if(!e.multiSelect)return;let{modelValue:V}=e;if(bt(V)||!bt(a.value))return;V=V[V.length-1];const{idField:J}=c.value;E({option:(O=e.options)==null?void 0:O.find(B=>B[J]===V),remove:!0})}function f(O){m(),O.stopPropagation()}function v(O){e.multiSelect||bt(O)&&E({shouldBlur:!1})}function p(){w()}function w(){m(!1),a.value=null}function A(){m()}function x(O){E({option:O,remove:!0})}function k(O){const{target:V}=O;d.value&&!(vl(r.value.$el,V)||vl(i.value.$el,V))&&w()}function N({target:O}){d.value&&!r.value.$el.contains(O)&&m(!1)}function E({option:O,remove:V,shouldBlur:J=!e.multiSelect}={}){let B=null;const{multiSelect:z}=e;let{modelValue:G}=e;const U=c.value.getOptionId(O);z?(Or(G)||(G=[G]),V?B=G.filter(ie=>ie!==U):B=G.concat(U)):V||(B=U),J&&w(),t("update:modelValue",B)}function S(O,V){E({option:O,remove:V})}function R(){l.value=!1}function M(){l.value=!0}function j(O,V){return l.value||V<e.maxSelectedTags}return{selections:s,showExpandTags:b,showCollapseTags:l,collapsedTagCount:g,isExpanded:d,fieldEl:i,dropdownListEl:r,displayValue:u,componentCls:o,optionsAvailable:c,displayFieldFm:h,isTagVisible:j,getSelections:n,onClickPicker:A,onClickField:f,onInputField:v,onTabField:p,onUpdateSelections:S,onClickItemRemove:x,onKeyBackspace:y,onClickExpandTags:M,onClickCollapseTags:R,onMouseDownDocument:k,onScrollDocument:N}}},ug={key:0};function cg(e,t,i,r,d,a){const l=rt("BaseItems"),s=rt("BaseIcon"),g=rt("BaseList"),b=rt("BaseOverlay"),c=rt("BaseField"),h=Js("mousedown-document"),u=Js("scroll-document");return Dt((Ue(),Rt(c,{ref:"fieldEl",modelValue:r.displayValue,"onUpdate:modelValue":t[2]||(t[2]=o=>r.displayValue=o),class:Ut(["field-combo-box",r.componentCls]),onKeydown:[ta(r.onKeyBackspace,["delete"]),ta(r.onTabField,["tab"])],"onInput:field":r.onInputField,"onClick:field":r.onClickField},{beforeItems:ut(()=>[i.multiSelect?(Ue(),nt("div",ug,[st(e.$slots,"itemsDisplay",{},()=>[(Ue(!0),nt(wt,null,br(r.selections,(o,n)=>Dt((Ue(),Rt(l,{key:o[r.optionsAvailable.idField],"onRemove:selection":m=>r.onClickItemRemove(o)},{default:ut(()=>[ea(ur(o[r.displayFieldFm]),1)]),_:2},1032,["onRemove:selection"])),[[Yt,r.isTagVisible(o,n)]])),128))],!0),Dt(_e("div",{class:"field-tags-wrapper-collapse",onClick:t[0]||(t[0]=(...o)=>r.onClickExpandTags&&r.onClickExpandTags(...o))},[_e("span",null,"+ "+ur(r.collapsedTagCount),1)],512),[[Yt,r.showExpandTags]]),Dt(_e("div",{class:"field-tags-wrapper-expand",onClick:t[1]||(t[1]=(...o)=>r.onClickCollapseTags&&r.onClickCollapseTags(...o))},[_e("span",null,"- "+ur(r.collapsedTagCount),1)],512),[[Yt,r.showCollapseTags]])])):Ot("",!0)]),afterItems:ut(()=>[Le(s,{class:"field-combo-box-picker",icon:e.Icon.PickerDown,onClick:r.onClickPicker},null,8,["icon","onClick"]),Dt(Le(b,{ref:"dropdownListEl",class:"field-combo-box-list-wrapper"},{default:ut(()=>[st(e.$slots,"list",{expanded:r.isExpanded,options:r.optionsAvailable,selections:r.selections},()=>[st(e.$slots,"listBefore",{},void 0,!0),Le(g,{selections:r.selections,options:r.optionsAvailable,"onUpdate:selections":r.onUpdateSelections},_o({_:2},[br(e.$slots,(o,n)=>({name:n,fn:ut(m=>[st(e.$slots,n,Mo(ka(m)),void 0,!0)])}))]),1032,["selections","options","onUpdate:selections"]),st(e.$slots,"listAfter",{},void 0,!0)],!0)]),_:3},512),[[Yt,r.isExpanded]])]),_:3},8,["modelValue","class","onKeydown","onInput:field","onClick:field"])),[[h,r.onMouseDownDocument],[u,r.onScrollDocument]])}var hg=Wt(fg,[["render",cg],["__scopeId","data-v-7a5ae1ca"]]);const dg={name:"BaseDialog",emits:["update:open","click:close","click:minimize","click:maximize","click:restore"],components:{BaseIcon:Gn,BaseOverlay:Tu},props:{open:{type:Boolean,default:!0},minimizable:{type:Boolean,default:!0},maximizable:{type:Boolean,default:!0},title:{type:String,default:""}},setup(e,{emit:t}){const i=We(e.open),r=We(!0);tt(i,h=>t("update:open",h)),tt(()=>e.open,h=>{i.value=h});const d=Je(()=>e.maximizable&&r.value),a=Je(()=>e.maximizable&&!r.value);function l(){i.value=!1}function s(){t("click:close")}function g(){l(),r.value=!1,t("click:minimize")}function b(){r.value=!0,t("click:maximize")}function c(){r.value=!1,t("click:restore")}return{showMaximized:a,showRestoreDown:d,onClickClose:s,onClickMinimize:g,onClickMaximize:b,onClickRestoreDown:c}}},pg={class:"base-dialog"},mg={class:"base-dialog-header"},vg={class:"base-dialog-header-title"},gg={class:"base-dialog-header-toolbar"};function bg(e,t,i,r,d,a){const l=rt("BaseIcon"),s=rt("BaseOverlay");return Ue(),Rt(s,null,{default:ut(()=>[_e("div",pg,[_e("header",mg,[st(e.$slots,"title",{},()=>[_e("span",vg,ur(i.title),1)],!0),_e("div",gg,[st(e.$slots,"toolbar",{},void 0,!0),i.minimizable?(Ue(),Rt(l,{key:0,icon:e.Icon.Minus,class:"base-dialog-minimize-icon toolbar",onClick:r.onClickMinimize},null,8,["icon","onClick"])):Ot("",!0),Dt(Le(l,{icon:e.Icon.Maximize,class:"base-dialog-maximize-icon toolbar",onClick:r.onClickMaximize},null,8,["icon","onClick"]),[[Yt,r.showMaximized]]),Dt(Le(l,{icon:e.Icon.Restore,class:"base-dialog-maximize-icon toolbar",onClick:r.onClickRestoreDown},null,8,["icon","onClick"]),[[Yt,r.showRestoreDown]]),Le(l,{icon:e.Icon.Close,class:"base-dialog-close-icon toolbar",onClick:r.onClickClose},null,8,["icon","onClick"])])]),st(e.$slots,"body",{},void 0,!0),st(e.$slots,"footer",{},void 0,!0)])]),_:3})}var yg=Wt(dg,[["render",bg],["__scopeId","data-v-25732f10"]]);const wg={name:"BaseGrid",components:{BaseField:Ci,BaseContextMenu:E1,BaseDialog:yg},inheritAttrs:!1,props:{cells:{type:Array,default:()=>[]},totalRows:{type:Number,required:!0},totalColumns:{type:Number,required:!0},selectedCell:{type:Object,default:()=>null},getCellColor:{type:Function,default:()=>null},showGridLines:{type:Boolean,default:!0}},emits:["update:selectedCell","replaceCell"],setup(e,{emit:t}){const i=We(null),r=We(null),d=We(null),a=We("Hello"),l=$r("pressedKeys"),s=We("cursor-pointer"),g=We(null),b=We(null),c=We(null),h=We(null),u=We(!1);tt(()=>l.shift||l.ctrl,()=>{l.shift?s.value="cursor-cell":l.ctrl?s.value="cursor-copy":s.value="cursor-pointer"}),tt(()=>l.copy,w=>{w&&(g.value=e.selectedCell)}),tt(()=>l.paste,w=>{const A=e.selectedCell,x=g.value;if(w&&A&&x&&A!==x){const k=e.cells.indexOf(A);t("replaceCell",{indices:k,replacement:x})}});function o(w){let A=!1;if(e.selectedCell&&l.shift){const x=w.y,k=w.x;let N=e.selectedCell.x,E=e.selectedCell.y,S=b.value.x,R=b.value.y;N>S&&(N=S,S=e.selectedCell.x),E>R&&(E=R,R=e.selectedCell.y),k<=S&&x<=R&&k>=N&&x>=E&&(A=!0)}return{[`grid-cell row-start-${e.totalRows-w.y}`]:!0,"grid-cell-selected":w===e.selectedCell,"grid-cell-hover":A,[s.value]:!0}}function n(){const w=[],A=e.totalColumns,x=e.selectedCell;let k=x.x,N=x.y,E=b.value.x,S=b.value.y;k>E&&(k=E,E=x.x),N>S&&(N=S,S=x.y);for(let R=k;R<=E;R++)for(let M=N;M<=S;M++){const j=R+M*A;j!==x.getIndex()&&w.push(j)}return w}function m(w,A){const x=e.selectedCell;if(l.ctrl&&l.mouseDown&&x){t("replaceCell",{indices:A.getIndex(),replacement:x});return}if(l.shift){const k=n();t("replaceCell",{indices:k,replacement:x}),document.getSelection().removeAllRanges();return}A===x&&(A=null),t("update:selectedCell",A)}function y(w){r.value.show(w)}function f(){r.value.hide()}function v(w){b.value=w,c.value=w.y,h.value=w.x}hn(()=>{p(e.showGridLines)}),tt(()=>e.showGridLines,w=>{p(w)});function p(w){w?i.value.classList.add("grid-show-lines"):i.value.classList.remove("grid-show-lines")}return{contextMenu:r,self:i,showTestDialog:u,testDialog:d,testValue:a,activeCursor:s,getCellCls:o,pressedKeys:l,onMouseUpCell:m,onContextMenuCell:y,onMouseOverCell:v,onClickTilesMenu(){u.value=!0,f()}}}},xg=["onMouseup","onMouseover"],Ag=["src"],Pg={class:"flex absolute justify-center w-full h-full"},kg=["src"],Ng={class:"flex absolute justify-center w-full h-full"},Eg=["src"];function Sg(e,t,i,r,d,a){const l=rt("BaseContextMenu"),s=rt("BaseField"),g=rt("BaseDialog");return Ue(),nt(wt,null,[_e("div",xi({ref:"self",class:"base-grid"},e.$attrs),[(Ue(!0),nt(wt,null,br(i.cells,b=>(Ue(),nt("div",{key:b.id,class:Ut(["relative",r.getCellCls(b)]),style:bi(i.getCellColor()),onMouseup:c=>r.onMouseUpCell(c,b),onContextmenu:t[0]||(t[0]=(...c)=>r.onContextMenuCell&&r.onContextMenuCell(...c)),onMouseover:c=>r.onMouseOverCell(b)},[b.tile.image?(Ue(),nt("img",{key:0,src:b.tile.image,class:"absolute w-full h-full"},null,8,Ag)):Ot("",!0),_e("div",Pg,[b.item.image?(Ue(),nt("img",{key:0,src:b.item.image,class:"h-full"},null,8,kg)):Ot("",!0)]),_e("div",Ng,[b.enemy.image?(Ue(),nt("img",{key:0,src:b.enemy.image,class:"h-full"},null,8,Eg)):Ot("",!0)])],46,xg))),128))],16),Le(l,{ref:"contextMenu"},{default:ut(()=>[_e("ul",null,[_e("li",{class:"context-menu-item",onClick:t[1]||(t[1]=(...b)=>r.onClickTilesMenu&&r.onClickTilesMenu(...b))}," Tiles ")])]),_:1},512),Dt(Le(g,{ref:"testDialog",open:r.showTestDialog,"onUpdate:open":t[3]||(t[3]=b=>r.showTestDialog=b),title:"Hello World",class:"view-dialog header-blue"},{body:ut(()=>[Le(s,{modelValue:r.testValue,"onUpdate:modelValue":t[2]||(t[2]=b=>r.testValue=b),label:"Hello"},null,8,["modelValue"])]),_:1},8,["open"]),[[Yt,r.showTestDialog]])],64)}var Cg=Oa(wg,[["render",Sg]]);const Kt=Zr({shift:!1,ctrl:!1,copy:!1,paste:!1,mouseDown:!1});function Rg(){return document.addEventListener("mousedown",af),document.addEventListener("mouseup",of),document.addEventListener("keydown",rf),document.addEventListener("keyup",nf),Uo(()=>{document.removeEventListener("mousedown",af),document.removeEventListener("mouseup",of),document.removeEventListener("keydown",rf),document.removeEventListener("keyup",nf)}),Kt}function rf(e){Kt.shift=e.shiftKey,Kt.ctrl=e.ctrlKey,e.shiftKey&&(document.onselectstart=function(){return!1}),e.ctrlKey&&e.code==="KeyC"&&(Kt.copy=!1,setTimeout(()=>{Kt.copy=!0})),e.ctrlKey&&e.code==="KeyV"&&(Kt.paste=!1,setTimeout(()=>{Kt.paste=!0}))}function nf(e){Kt.shift=e.shiftKey,Kt.ctrl=e.ctrlKey,e.shiftKey&&(document.onselectstart=null)}function af(){Kt.mouseDown=!0}function of(){Kt.mouseDown=!1}const Fg=new pn({records:{Base:-1,Plain:0,Entrance:1,Blocks2X3Columns:2,Blocks2X3Column:3,Blocks4:4,Blocks4Alt:5,Blocks1:6,BlocksX:7,Blocks3Rows:8,WaterMaze:9,BlocksAquamentus:10,Exit:11,BlocksStairsCenter:12,WaterBrackets:13,PlainStatues:14,Sand:15,BlocksStairsEnd:16,BlocksDiagonal:17,BlocksHorizontal:18,BlocksC:19,Blocks2:20,BlocksMaze:21,WaterHorizontal:22,WaterT:23,Blocks4Statues:24,BlocksGleeok:25,WaterLadder:26,Blocks6Alt:27,WaterVertical:28,Blocks3Horizontal:29,WaterRectangle:30,PlainStatues2:31,BlocksRectangle:32,WaterHorizontal2:33,BlocksSpiral:34,Ganon:35,Ending:36,Blocks2Vertical:37,Blocks6Vertical:38,Blocks4Way:39,WaterH:40,Black:41,BlocksArrow:42,WaterHAlt:43,KeepItem:44,KeepPath:45,Shop:46}});const Og={name:"BaseCard",components:{BaseLabel:hs,BaseIcon:Gn},props:{title:{type:String,default:""},collapsible:{type:Boolean,default:!1},expanded:{type:Boolean,default:!0}},setup(e,{slots:t}){const i=We(null),r=We(null),d=We(e.expanded),a=Je(()=>!!e.title||!!t.title);function l(){d.value=!d.value}function s(g){g?i.value.classList.add("expanded"):i.value.classList.remove("expanded")}return hn(()=>s(d.value)),tt(d,g=>s(g)),{onClickCollapse:l,isExpanded:d,hasTitle:a,rootEl:i,titleRoot:r}}},Ig={ref:"rootEl",class:"base-card"},Mg={ref:"titleRoot",class:"base-card-title-wrapper"},Tg={class:"base-card-body"};function zg(e,t,i,r,d,a){const l=rt("BaseLabel"),s=rt("BaseIcon");return Ue(),nt("section",Ig,[_e("div",Mg,[r.hasTitle?st(e.$slots,"title",{key:0},()=>[Le(l,{value:i.title,separator:"",class:"base-card-title"},null,8,["value"])],!0):Ot("",!0),Le(s,{icon:e.Icon.PickerDown,class:"picker-icon",onClick:r.onClickCollapse},null,8,["icon","onClick"])],512),Dt(_e("div",Tg,[st(e.$slots,"default",{},void 0,!0)],512),[[Yt,r.isExpanded]])],512)}var Hg=Oa(Og,[["render",zg],["__scopeId","data-v-92ac702c"]]);const Bg={name:"App",components:{BaseCard:Hg,FieldInteger:lg,BaseButton:Wv,BaseGrid:Cg,FieldComboBox:hg,BaseField:Ci,FieldCheckBox:ng,BaseLabel:hs,FieldNumber:pc},setup(){const e=We(null),t=We(null),i=We(null),r=We(null),d=We(!0),a=Zr([]),l=We(o()),s=We(l.value.Name),g=Je(()=>{var x;return(x=i.value)==null?void 0:x.tile.isTransition}),b=Je(()=>{var x;return(x=i.value)==null?void 0:x.tile}),c=Je(()=>{var x;return(x=i.value)==null?void 0:x.item}),h=Je(()=>{var x;return(x=i.value)==null?void 0:x.enemy}),u=Je(()=>!g.value&&b.value.hasImage());xa("pressedKeys",Rg()),tt(s,()=>{i.value=null,l.value=a.find(({Name:x})=>x===s.value)});function o(x={}){const k=new cs(Fi({totalRows:11,totalColumns:16},x));return a.push(k),k}function n(){var x;return(x=Te.findRecord(l.value.GroundColor))==null?void 0:x.backgroundStyle}function m(){b.value.updateImage()}function y(){h.value.updateImage()}function f({indices:x,replacement:k}){cr(x)||(x=[x],i.value=k),x.forEach(N=>{const E=l.value.cells[N],S=k.clone({exclude:["grid","Coordinates"]});S.set({Coordinates:E.Coordinates,grid:E.grid}),S.tile.cell=S,S.item.cell=S,S.enemy.cell=S,l.value.cells[N]=S})}function v(){e.value.click()}function p(){const x=new FileReader;x.addEventListener("load",()=>{l.value.loadFileData(JSON.parse(x.result))});const[k]=e.value.files;k&&x.readAsText(k)}function w(){const x=new Blob([JSON.stringify(l.value.getConfig())],{type:"application/json"}),k=document.createElement("a");k.download=`${l.value.X}${l.value.Y}.json`,k.href=window.URL.createObjectURL(x),k.click()}function A(){o({Name:"TEMPORARY NAME"})}return{gridRecord:l,overworldRecords:a,showGridLines:d,selectedId:s,selectedScreen:r,fileInputEl:e,isTransition:g,contextMenu:t,selectedTile:b,selectedItem:c,selectedEnemy:h,selectedCell:i,showColors:u,getCellColor:n,WorldColors:Te,ScreenTemplates:Fg,Tiles:De,Items:Fa,Enemies:He,onClickNewButton:A,onReplaceCell:f,onClickSaveBtn:w,onClickLoadBtn:v,onChangeLoadFile:p,onUpdateTileColor:m,onUpdateEnemyColor:y}}},Dg={class:"flex"},Zg={class:"flex flex-col"},Gg={class:"p-4 space-y-2"},jg={class:"flex justify-between"},Vg={class:"flex justify-between"},Lg={class:"w-16 h-16 bg-blue-100"},Yg=["src"],Jg={class:"flex justify-between"},Xg={class:"flex justify-center w-16 h-16 bg-blue-100"},qg=["src"],Ug={class:"flex justify-between"},Wg={class:"flex flex-col justify-between"},Kg={class:"flex justify-center w-16 h-16 bg-blue-100"},Qg=["src"];function _g(e,t,i,r,d,a){var n;const l=rt("FieldComboBox"),s=rt("BaseButton"),g=rt("BaseGrid"),b=rt("FieldCheckBox"),c=rt("FieldInteger"),h=rt("BaseField"),u=rt("BaseCard"),o=rt("FieldNumber");return Ue(),nt("div",Dg,[_e("div",Zg,[Le(l,{modelValue:r.selectedId,"onUpdate:modelValue":t[0]||(t[0]=m=>r.selectedId=m),selected:r.selectedScreen,"onUpdate:selected":t[1]||(t[1]=m=>r.selectedScreen=m),options:r.overworldRecords,"label-align":"top",label:"Screens","id-field":"Name","display-field":"Name"},null,8,["modelValue","selected","options"]),Le(s,{text:"New",class:"self-start mt-1 rounded default",onClick:r.onClickNewButton},null,8,["onClick"])]),Le(g,{"selected-cell":r.selectedCell,"onUpdate:selected-cell":t[2]||(t[2]=m=>r.selectedCell=m),cells:(n=r.selectedScreen)==null?void 0:n.cells,"total-columns":r.gridRecord.totalColumns,"total-rows":r.gridRecord.totalRows,"show-grid-lines":r.showGridLines,"get-cell-color":r.getCellColor,onReplaceCell:r.onReplaceCell},null,8,["selected-cell","cells","total-columns","total-rows","show-grid-lines","get-cell-color","onReplaceCell"]),_e("div",Gg,[_e("div",jg,[Le(b,{modelValue:r.showGridLines,"onUpdate:modelValue":t[3]||(t[3]=m=>r.showGridLines=m),label:"Grid Lines"},null,8,["modelValue"]),_e("div",null,[Le(s,{text:"Save",class:"mr-2 rounded default",onClick:r.onClickSaveBtn},null,8,["onClick"]),Le(s,{text:"Load",class:"rounded default",onClick:r.onClickLoadBtn},null,8,["onClick"]),Dt(_e("input",{ref:"fileInputEl",type:"file",onChange:t[4]||(t[4]=(...m)=>r.onChangeLoadFile&&r.onChangeLoadFile(...m))},null,544),[[Yt,!1]])])]),Le(u,{title:"Screen Coordinates",class:"bp-2 horizontal"},{default:ut(()=>[Le(c,{modelValue:r.gridRecord.X,"onUpdate:modelValue":t[5]||(t[5]=m=>r.gridRecord.X=m),label:"X","label-width":"auto","input-width":"w-12",width:"w-28"},null,8,["modelValue"]),Le(c,{modelValue:r.gridRecord.Y,"onUpdate:modelValue":t[6]||(t[6]=m=>r.gridRecord.Y=m),label:"Y","label-width":"auto","input-width":"w-12",width:"w-28"},null,8,["modelValue"]),Le(h,{modelValue:r.gridRecord.Name,"onUpdate:modelValue":t[7]||(t[7]=m=>r.gridRecord.Name=m),label:"Name"},null,8,["modelValue"])]),_:1}),Le(u,{title:"Colors",class:"bp-2 horizontal"},{default:ut(()=>[Le(l,{modelValue:r.gridRecord.GroundColor,"onUpdate:modelValue":t[8]||(t[8]=m=>r.gridRecord.GroundColor=m),label:"Ground","label-width":"auto",class:"bp-2",options:r.WorldColors,width:"w-28"},null,8,["modelValue","options"]),Le(l,{modelValue:r.gridRecord.AccentColor,"onUpdate:modelValue":t[9]||(t[9]=m=>r.gridRecord.AccentColor=m),label:"Accent","label-width":"auto",options:r.WorldColors,width:"w-28"},null,8,["modelValue","options"])]),_:1}),r.selectedCell?(Ue(),Rt(u,{key:r.selectedCell.id,title:"Cell",class:"vertical"},{default:ut(()=>[Le(u,{class:"vertical bp-2",title:"Tile"},{default:ut(()=>[_e("div",Vg,[Le(l,{modelValue:r.selectedTile.Type,"onUpdate:modelValue":t[10]||(t[10]=m=>r.selectedTile.Type=m),options:r.Tiles,label:"Type","label-width":"auto"},null,8,["modelValue","options"]),Dt(_e("div",Lg,[r.selectedTile.src?(Ue(),nt("img",{key:0,src:r.selectedTile.src,class:"w-full h-full",alt:"Tile Image"},null,8,Yg)):Ot("",!0)],512),[[Yt,r.showColors]])]),Dt(Le(u,{title:"Replace Colors",class:"vertical bp-2"},{default:ut(()=>[(Ue(!0),nt(wt,null,br(r.selectedTile.Colors,m=>(Ue(),Rt(l,{key:m.id,modelValue:m.Value,"onUpdate:modelValue":[y=>m.Value=y,r.onUpdateTileColor],label:r.WorldColors.getKey(m.Target),options:r.WorldColors},null,8,["modelValue","onUpdate:modelValue","label","options"]))),128))]),_:1},512),[[Yt,r.showColors]]),r.isTransition?(Ue(),Rt(u,{key:0,title:"Transition Properties",class:"vertical bp-2"},{default:ut(()=>[Le(c,{modelValue:r.selectedTile.Transition.X,"onUpdate:modelValue":t[11]||(t[11]=m=>r.selectedTile.Transition.X=m),label:"X Offset",width:"w-24"},null,8,["modelValue"]),Le(c,{modelValue:r.selectedTile.Transition.Y,"onUpdate:modelValue":t[12]||(t[12]=m=>r.selectedTile.Transition.Y=m),label:"Y Offset",width:"w-24"},null,8,["modelValue"]),r.selectedTile.isDoor?(Ue(),Rt(h,{key:0,modelValue:r.selectedTile.Transition.Name,"onUpdate:modelValue":t[13]||(t[13]=m=>r.selectedTile.Transition.Name=m),label:"Name"},null,8,["modelValue"])):Ot("",!0),r.selectedTile.isDoor?(Ue(),Rt(l,{key:1,modelValue:r.selectedTile.Transition.Template,"onUpdate:modelValue":t[14]||(t[14]=m=>r.selectedTile.Transition.Template=m),label:"Template",required:"","id-field":"value",options:r.ScreenTemplates},null,8,["modelValue","options"])):Ot("",!0),Le(b,{modelValue:r.selectedTile.Transition.IsFloating,"onUpdate:modelValue":t[15]||(t[15]=m=>r.selectedTile.Transition.IsFloating=m),label:"Floating"},null,8,["modelValue"])]),_:1})):Ot("",!0)]),_:1}),Le(u,{title:"Item",expanded:!1,class:"vertical bp-2"},{default:ut(()=>[_e("div",Jg,[Le(l,{modelValue:r.selectedItem.Type,"onUpdate:modelValue":t[16]||(t[16]=m=>r.selectedItem.Type=m),options:r.Items,label:"Type","label-width":"auto"},null,8,["modelValue","options"]),_e("div",Xg,[r.selectedItem.src?(Ue(),nt("img",{key:0,src:r.selectedItem.src,class:"h-full",alt:"Item Image"},null,8,qg)):Ot("",!0)])])]),_:1}),Le(u,{title:"Enemy",expanded:!1,class:"vertical bp-2"},{default:ut(()=>[_e("div",Ug,[_e("div",Wg,[Le(l,{modelValue:r.selectedEnemy.Type,"onUpdate:modelValue":t[17]||(t[17]=m=>r.selectedEnemy.Type=m),options:r.Enemies,label:"Type","label-width":"w-12"},null,8,["modelValue","options"]),Le(o,{modelValue:r.selectedEnemy.Speed,"onUpdate:modelValue":t[18]||(t[18]=m=>r.selectedEnemy.Speed=m),label:"Speed","label-width":"w-12"},null,8,["modelValue"])]),_e("div",Kg,[r.selectedEnemy.src?(Ue(),nt("img",{key:0,src:r.selectedEnemy.src,class:"h-full",alt:"Item Image"},null,8,Qg)):Ot("",!0)])]),Dt(Le(u,{title:"Replace Colors",class:"vertical bp-2"},{default:ut(()=>[(Ue(!0),nt(wt,null,br(r.selectedEnemy.Colors,m=>(Ue(),Rt(l,{key:m.id,modelValue:m.Value,"onUpdate:modelValue":[y=>m.Value=y,r.onUpdateEnemyColor],label:r.WorldColors.getKey(m.Target),options:r.WorldColors},null,8,["modelValue","onUpdate:modelValue","label","options"]))),128))]),_:1},512),[[Yt,r.selectedEnemy.hasImage()]]),Le(u,{title:"Health",class:"horizontal bp-2"},{default:ut(()=>[Le(o,{modelValue:r.selectedEnemy.Health,"onUpdate:modelValue":t[19]||(t[19]=m=>r.selectedEnemy.Health=m),label:"Health"},null,8,["modelValue"]),Le(o,{modelValue:r.selectedEnemy.HealthModifier,"onUpdate:modelValue":t[20]||(t[20]=m=>r.selectedEnemy.HealthModifier=m),label:"Modifier"},null,8,["modelValue"])]),_:1}),Le(u,{title:"Damage",class:"horizontal bp-2"},{default:ut(()=>[Le(o,{modelValue:r.selectedEnemy.TouchDamage,"onUpdate:modelValue":t[21]||(t[21]=m=>r.selectedEnemy.TouchDamage=m),label:"Touch"},null,8,["modelValue"]),Le(o,{modelValue:r.selectedEnemy.WeaponDamage,"onUpdate:modelValue":t[22]||(t[22]=m=>r.selectedEnemy.WeaponDamage=m),label:"Weapon"},null,8,["modelValue"])]),_:1})]),_:1})]),_:1})):Ot("",!0)])])}var $g=Oa(Bg,[["render",_g]]);async function e2(){await t1();const e=X0($g);e.use(mp),e.mount("#app")}e2();
