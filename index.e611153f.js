var ku=Object.defineProperty,Su=Object.defineProperties;var Cu=Object.getOwnPropertyDescriptors;var Qo=Object.getOwnPropertySymbols;var Ru=Object.prototype.hasOwnProperty,Fu=Object.prototype.propertyIsEnumerable;var ia=(e,r,a)=>r in e?ku(e,r,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[r]=a,Wn=(e,r)=>{for(var a in r||(r={}))Ru.call(r,a)&&ia(e,a,r[a]);if(Qo)for(var a of Qo(r))Fu.call(r,a)&&ia(e,a,r[a]);return e},_o=(e,r)=>Su(e,Cu(r));var _e=(e,r,a)=>(ia(e,typeof r!="symbol"?r+"":r,a),a);const Ou=function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const d of document.querySelectorAll('link[rel="modulepreload"]'))t(d);new MutationObserver(d=>{for(const o of d)if(o.type==="childList")for(const v of o.addedNodes)v.tagName==="LINK"&&v.rel==="modulepreload"&&t(v)}).observe(document,{childList:!0,subtree:!0});function a(d){const o={};return d.integrity&&(o.integrity=d.integrity),d.referrerpolicy&&(o.referrerPolicy=d.referrerpolicy),d.crossorigin==="use-credentials"?o.credentials="include":d.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function t(d){if(d.ep)return;d.ep=!0;const o=a(d);fetch(d.href,o)}};Ou();function _a(e,r){const a=Object.create(null),t=e.split(",");for(let d=0;d<t.length;d++)a[t[d]]=!0;return r?d=>!!a[d.toLowerCase()]:d=>!!a[d]}const Iu="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Mu=_a(Iu);function Al(e){return!!e||e===""}function Gn(e){if(Le(e)){const r={};for(let a=0;a<e.length;a++){const t=e[a],d=dt(t)?Hu(t):Gn(t);if(d)for(const o in d)r[o]=d[o]}return r}else{if(dt(e))return e;if(pt(e))return e}}const zu=/;(?![^(]*\))/g,Tu=/:(.+)/;function Hu(e){const r={};return e.split(zu).forEach(a=>{if(a){const t=a.split(Tu);t.length>1&&(r[t[0].trim()]=t[1].trim())}}),r}function Bt(e){let r="";if(dt(e))r=e;else if(Le(e))for(let a=0;a<e.length;a++){const t=Bt(e[a]);t&&(r+=t+" ")}else if(pt(e))for(const a in e)e[a]&&(r+=a+" ");return r.trim()}function Bu(e){if(!e)return null;let{class:r,style:a}=e;return r&&!dt(r)&&(e.class=Bt(r)),a&&(e.style=Gn(a)),e}function Du(e,r){if(e.length!==r.length)return!1;let a=!0;for(let t=0;a&&t<e.length;t++)a=Zr(e[t],r[t]);return a}function Zr(e,r){if(e===r)return!0;let a=$o(e),t=$o(r);if(a||t)return a&&t?e.getTime()===r.getTime():!1;if(a=Le(e),t=Le(r),a||t)return a&&t?Du(e,r):!1;if(a=pt(e),t=pt(r),a||t){if(!a||!t)return!1;const d=Object.keys(e).length,o=Object.keys(r).length;if(d!==o)return!1;for(const v in e){const h=e.hasOwnProperty(v),g=r.hasOwnProperty(v);if(h&&!g||!h&&g||!Zr(e[v],r[v]))return!1}}return String(e)===String(r)}function $a(e,r){return e.findIndex(a=>Zr(a,r))}const ir=e=>dt(e)?e:e==null?"":Le(e)||pt(e)&&(e.toString===El||!Xe(e.toString))?JSON.stringify(e,Pl,2):String(e),Pl=(e,r)=>r&&r.__v_isRef?Pl(e,r.value):rn(r)?{[`Map(${r.size})`]:[...r.entries()].reduce((a,[t,d])=>(a[`${t} =>`]=d,a),{})}:un(r)?{[`Set(${r.size})`]:[...r.values()]}:pt(r)&&!Le(r)&&!kl(r)?String(r):r,rt={},tn=[],Jt=()=>{},Zu=()=>!1,ju=/^on[^a-z]/,Hi=e=>ju.test(e),eo=e=>e.startsWith("onUpdate:"),Ot=Object.assign,to=(e,r)=>{const a=e.indexOf(r);a>-1&&e.splice(a,1)},Gu=Object.prototype.hasOwnProperty,Qe=(e,r)=>Gu.call(e,r),Le=Array.isArray,rn=e=>Bi(e)==="[object Map]",un=e=>Bi(e)==="[object Set]",$o=e=>e instanceof Date,Xe=e=>typeof e=="function",dt=e=>typeof e=="string",ro=e=>typeof e=="symbol",pt=e=>e!==null&&typeof e=="object",Nl=e=>pt(e)&&Xe(e.then)&&Xe(e.catch),El=Object.prototype.toString,Bi=e=>El.call(e),Vu=e=>Bi(e).slice(8,-1),kl=e=>Bi(e)==="[object Object]",no=e=>dt(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,ai=_a(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Di=e=>{const r=Object.create(null);return a=>r[a]||(r[a]=e(a))},Lu=/-(\w)/g,$t=Di(e=>e.replace(Lu,(r,a)=>a?a.toUpperCase():"")),Yu=/\B([A-Z])/g,Lr=Di(e=>e.replace(Yu,"-$1").toLowerCase()),Zi=Di(e=>e.charAt(0).toUpperCase()+e.slice(1)),aa=Di(e=>e?`on${Zi(e)}`:""),In=(e,r)=>!Object.is(e,r),oi=(e,r)=>{for(let a=0;a<e.length;a++)e[a](r)},di=(e,r,a)=>{Object.defineProperty(e,r,{configurable:!0,enumerable:!1,value:a})},pi=e=>{const r=parseFloat(e);return isNaN(r)?e:r};let es;const Ju=()=>es||(es=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{});let Kt;class Xu{constructor(r=!1){this.active=!0,this.effects=[],this.cleanups=[],!r&&Kt&&(this.parent=Kt,this.index=(Kt.scopes||(Kt.scopes=[])).push(this)-1)}run(r){if(this.active){const a=Kt;try{return Kt=this,r()}finally{Kt=a}}}on(){Kt=this}off(){Kt=this.parent}stop(r){if(this.active){let a,t;for(a=0,t=this.effects.length;a<t;a++)this.effects[a].stop();for(a=0,t=this.cleanups.length;a<t;a++)this.cleanups[a]();if(this.scopes)for(a=0,t=this.scopes.length;a<t;a++)this.scopes[a].stop(!0);if(this.parent&&!r){const d=this.parent.scopes.pop();d&&d!==this&&(this.parent.scopes[this.index]=d,d.index=this.index)}this.active=!1}}}function qu(e,r=Kt){r&&r.active&&r.effects.push(e)}const io=e=>{const r=new Set(e);return r.w=0,r.n=0,r},Sl=e=>(e.w&br)>0,Cl=e=>(e.n&br)>0,Uu=({deps:e})=>{if(e.length)for(let r=0;r<e.length;r++)e[r].w|=br},Wu=e=>{const{deps:r}=e;if(r.length){let a=0;for(let t=0;t<r.length;t++){const d=r[t];Sl(d)&&!Cl(d)?d.delete(e):r[a++]=d,d.w&=~br,d.n&=~br}r.length=a}},ya=new WeakMap;let wn=0,br=1;const wa=30;let Vt;const Tr=Symbol(""),xa=Symbol("");class ao{constructor(r,a=null,t){this.fn=r,this.scheduler=a,this.active=!0,this.deps=[],this.parent=void 0,qu(this,t)}run(){if(!this.active)return this.fn();let r=Vt,a=gr;for(;r;){if(r===this)return;r=r.parent}try{return this.parent=Vt,Vt=this,gr=!0,br=1<<++wn,wn<=wa?Uu(this):ts(this),this.fn()}finally{wn<=wa&&Wu(this),br=1<<--wn,Vt=this.parent,gr=a,this.parent=void 0,this.deferStop&&this.stop()}}stop(){Vt===this?this.deferStop=!0:this.active&&(ts(this),this.onStop&&this.onStop(),this.active=!1)}}function ts(e){const{deps:r}=e;if(r.length){for(let a=0;a<r.length;a++)r[a].delete(e);r.length=0}}let gr=!0;const Rl=[];function Yr(){Rl.push(gr),gr=!1}function Jr(){const e=Rl.pop();gr=e===void 0?!0:e}function Dt(e,r,a){if(gr&&Vt){let t=ya.get(e);t||ya.set(e,t=new Map);let d=t.get(a);d||t.set(a,d=io()),Fl(d)}}function Fl(e,r){let a=!1;wn<=wa?Cl(e)||(e.n|=br,a=!Sl(e)):a=!e.has(Vt),a&&(e.add(Vt),Vt.deps.push(e))}function sr(e,r,a,t,d,o){const v=ya.get(e);if(!v)return;let h=[];if(r==="clear")h=[...v.values()];else if(a==="length"&&Le(e))v.forEach((g,b)=>{(b==="length"||b>=t)&&h.push(g)});else switch(a!==void 0&&h.push(v.get(a)),r){case"add":Le(e)?no(a)&&h.push(v.get("length")):(h.push(v.get(Tr)),rn(e)&&h.push(v.get(xa)));break;case"delete":Le(e)||(h.push(v.get(Tr)),rn(e)&&h.push(v.get(xa)));break;case"set":rn(e)&&h.push(v.get(Tr));break}if(h.length===1)h[0]&&Aa(h[0]);else{const g=[];for(const b of h)b&&g.push(...b);Aa(io(g))}}function Aa(e,r){for(const a of Le(e)?e:[...e])(a!==Vt||a.allowRecurse)&&(a.scheduler?a.scheduler():a.run())}const Ku=_a("__proto__,__v_isRef,__isVue"),Ol=new Set(Object.getOwnPropertyNames(Symbol).map(e=>Symbol[e]).filter(ro)),Qu=oo(),_u=oo(!1,!0),$u=oo(!0),rs=ec();function ec(){const e={};return["includes","indexOf","lastIndexOf"].forEach(r=>{e[r]=function(...a){const t=$e(this);for(let o=0,v=this.length;o<v;o++)Dt(t,"get",o+"");const d=t[r](...a);return d===-1||d===!1?t[r](...a.map($e)):d}}),["push","pop","shift","unshift","splice"].forEach(r=>{e[r]=function(...a){Yr();const t=$e(this)[r].apply(this,a);return Jr(),t}}),e}function oo(e=!1,r=!1){return function(t,d,o){if(d==="__v_isReactive")return!e;if(d==="__v_isReadonly")return e;if(d==="__v_isShallow")return r;if(d==="__v_raw"&&o===(e?r?mc:Hl:r?Tl:zl).get(t))return t;const v=Le(t);if(!e&&v&&Qe(rs,d))return Reflect.get(rs,d,o);const h=Reflect.get(t,d,o);return(ro(d)?Ol.has(d):Ku(d))||(e||Dt(t,"get",d),r)?h:lt(h)?!v||!no(d)?h.value:h:pt(h)?e?vi(h):Pr(h):h}}const tc=Il(),rc=Il(!0);function Il(e=!1){return function(a,t,d,o){let v=a[t];if(Mn(v)&&lt(v)&&!lt(d))return!1;if(!e&&!Mn(d)&&(Bl(d)||(d=$e(d),v=$e(v)),!Le(a)&&lt(v)&&!lt(d)))return v.value=d,!0;const h=Le(a)&&no(t)?Number(t)<a.length:Qe(a,t),g=Reflect.set(a,t,d,o);return a===$e(o)&&(h?In(d,v)&&sr(a,"set",t,d):sr(a,"add",t,d)),g}}function nc(e,r){const a=Qe(e,r);e[r];const t=Reflect.deleteProperty(e,r);return t&&a&&sr(e,"delete",r,void 0),t}function ic(e,r){const a=Reflect.has(e,r);return(!ro(r)||!Ol.has(r))&&Dt(e,"has",r),a}function ac(e){return Dt(e,"iterate",Le(e)?"length":Tr),Reflect.ownKeys(e)}const Ml={get:Qu,set:tc,deleteProperty:nc,has:ic,ownKeys:ac},oc={get:$u,set(e,r){return!0},deleteProperty(e,r){return!0}},sc=Ot({},Ml,{get:_u,set:rc}),so=e=>e,ji=e=>Reflect.getPrototypeOf(e);function Kn(e,r,a=!1,t=!1){e=e.__v_raw;const d=$e(e),o=$e(r);r!==o&&!a&&Dt(d,"get",r),!a&&Dt(d,"get",o);const{has:v}=ji(d),h=t?so:a?co:zn;if(v.call(d,r))return h(e.get(r));if(v.call(d,o))return h(e.get(o));e!==d&&e.get(r)}function Qn(e,r=!1){const a=this.__v_raw,t=$e(a),d=$e(e);return e!==d&&!r&&Dt(t,"has",e),!r&&Dt(t,"has",d),e===d?a.has(e):a.has(e)||a.has(d)}function _n(e,r=!1){return e=e.__v_raw,!r&&Dt($e(e),"iterate",Tr),Reflect.get(e,"size",e)}function ns(e){e=$e(e);const r=$e(this);return ji(r).has.call(r,e)||(r.add(e),sr(r,"add",e,e)),this}function is(e,r){r=$e(r);const a=$e(this),{has:t,get:d}=ji(a);let o=t.call(a,e);o||(e=$e(e),o=t.call(a,e));const v=d.call(a,e);return a.set(e,r),o?In(r,v)&&sr(a,"set",e,r):sr(a,"add",e,r),this}function as(e){const r=$e(this),{has:a,get:t}=ji(r);let d=a.call(r,e);d||(e=$e(e),d=a.call(r,e)),t&&t.call(r,e);const o=r.delete(e);return d&&sr(r,"delete",e,void 0),o}function os(){const e=$e(this),r=e.size!==0,a=e.clear();return r&&sr(e,"clear",void 0,void 0),a}function $n(e,r){return function(t,d){const o=this,v=o.__v_raw,h=$e(v),g=r?so:e?co:zn;return!e&&Dt(h,"iterate",Tr),v.forEach((b,u)=>t.call(d,g(b),g(u),o))}}function ei(e,r,a){return function(...t){const d=this.__v_raw,o=$e(d),v=rn(o),h=e==="entries"||e===Symbol.iterator&&v,g=e==="keys"&&v,b=d[e](...t),u=a?so:r?co:zn;return!r&&Dt(o,"iterate",g?xa:Tr),{next(){const{value:f,done:s}=b.next();return s?{value:f,done:s}:{value:h?[u(f[0]),u(f[1])]:u(f),done:s}},[Symbol.iterator](){return this}}}}function dr(e){return function(...r){return e==="delete"?!1:this}}function lc(){const e={get(o){return Kn(this,o)},get size(){return _n(this)},has:Qn,add:ns,set:is,delete:as,clear:os,forEach:$n(!1,!1)},r={get(o){return Kn(this,o,!1,!0)},get size(){return _n(this)},has:Qn,add:ns,set:is,delete:as,clear:os,forEach:$n(!1,!0)},a={get(o){return Kn(this,o,!0)},get size(){return _n(this,!0)},has(o){return Qn.call(this,o,!0)},add:dr("add"),set:dr("set"),delete:dr("delete"),clear:dr("clear"),forEach:$n(!0,!1)},t={get(o){return Kn(this,o,!0,!0)},get size(){return _n(this,!0)},has(o){return Qn.call(this,o,!0)},add:dr("add"),set:dr("set"),delete:dr("delete"),clear:dr("clear"),forEach:$n(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(o=>{e[o]=ei(o,!1,!1),a[o]=ei(o,!0,!1),r[o]=ei(o,!1,!0),t[o]=ei(o,!0,!0)}),[e,a,r,t]}const[fc,uc,cc,hc]=lc();function lo(e,r){const a=r?e?hc:cc:e?uc:fc;return(t,d,o)=>d==="__v_isReactive"?!e:d==="__v_isReadonly"?e:d==="__v_raw"?t:Reflect.get(Qe(a,d)&&d in t?a:t,d,o)}const dc={get:lo(!1,!1)},pc={get:lo(!1,!0)},vc={get:lo(!0,!1)},zl=new WeakMap,Tl=new WeakMap,Hl=new WeakMap,mc=new WeakMap;function gc(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function bc(e){return e.__v_skip||!Object.isExtensible(e)?0:gc(Vu(e))}function Pr(e){return Mn(e)?e:fo(e,!1,Ml,dc,zl)}function yc(e){return fo(e,!1,sc,pc,Tl)}function vi(e){return fo(e,!0,oc,vc,Hl)}function fo(e,r,a,t,d){if(!pt(e)||e.__v_raw&&!(r&&e.__v_isReactive))return e;const o=d.get(e);if(o)return o;const v=bc(e);if(v===0)return e;const h=new Proxy(e,v===2?t:a);return d.set(e,h),h}function nn(e){return Mn(e)?nn(e.__v_raw):!!(e&&e.__v_isReactive)}function Mn(e){return!!(e&&e.__v_isReadonly)}function Bl(e){return!!(e&&e.__v_isShallow)}function Dl(e){return nn(e)||Mn(e)}function $e(e){const r=e&&e.__v_raw;return r?$e(r):e}function uo(e){return di(e,"__v_skip",!0),e}const zn=e=>pt(e)?Pr(e):e,co=e=>pt(e)?vi(e):e;function Zl(e){gr&&Vt&&(e=$e(e),Fl(e.dep||(e.dep=io())))}function jl(e,r){e=$e(e),e.dep&&Aa(e.dep)}function lt(e){return!!(e&&e.__v_isRef===!0)}function Ue(e){return wc(e,!1)}function wc(e,r){return lt(e)?e:new xc(e,r)}class xc{constructor(r,a){this.__v_isShallow=a,this.dep=void 0,this.__v_isRef=!0,this._rawValue=a?r:$e(r),this._value=a?r:zn(r)}get value(){return Zl(this),this._value}set value(r){r=this.__v_isShallow?r:$e(r),In(r,this._rawValue)&&(this._rawValue=r,this._value=this.__v_isShallow?r:zn(r),jl(this))}}function Ge(e){return lt(e)?e.value:e}const Ac={get:(e,r,a)=>Ge(Reflect.get(e,r,a)),set:(e,r,a,t)=>{const d=e[r];return lt(d)&&!lt(a)?(d.value=a,!0):Reflect.set(e,r,a,t)}};function Gl(e){return nn(e)?e:new Proxy(e,Ac)}function Pc(e){const r=Le(e)?new Array(e.length):{};for(const a in e)r[a]=tr(e,a);return r}class Nc{constructor(r,a,t){this._object=r,this._key=a,this._defaultValue=t,this.__v_isRef=!0}get value(){const r=this._object[this._key];return r===void 0?this._defaultValue:r}set value(r){this._object[this._key]=r}}function tr(e,r,a){const t=e[r];return lt(t)?t:new Nc(e,r,a)}class Ec{constructor(r,a,t,d){this._setter=a,this.dep=void 0,this.__v_isRef=!0,this._dirty=!0,this.effect=new ao(r,()=>{this._dirty||(this._dirty=!0,jl(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!d,this.__v_isReadonly=t}get value(){const r=$e(this);return Zl(r),(r._dirty||!r._cacheable)&&(r._dirty=!1,r._value=r.effect.run()),r._value}set value(r){this._setter(r)}}function kc(e,r,a=!1){let t,d;const o=Xe(e);return o?(t=e,d=Jt):(t=e.get,d=e.set),new Ec(t,d,o||!d,a)}const Nn=[];function Vl(e,...r){Yr();const a=Nn.length?Nn[Nn.length-1].component:null,t=a&&a.appContext.config.warnHandler,d=Sc();if(t)ar(t,a,11,[e+r.join(""),a&&a.proxy,d.map(({vnode:o})=>`at <${xf(a,o.type)}>`).join(`
`),d]);else{const o=[`[Vue warn]: ${e}`,...r];d.length&&o.push(`
`,...Cc(d)),console.warn(...o)}Jr()}function Sc(){let e=Nn[Nn.length-1];if(!e)return[];const r=[];for(;e;){const a=r[0];a&&a.vnode===e?a.recurseCount++:r.push({vnode:e,recurseCount:0});const t=e.component&&e.component.parent;e=t&&t.vnode}return r}function Cc(e){const r=[];return e.forEach((a,t)=>{r.push(...t===0?[]:[`
`],...Rc(a))}),r}function Rc({vnode:e,recurseCount:r}){const a=r>0?`... (${r} recursive calls)`:"",t=e.component?e.component.parent==null:!1,d=` at <${xf(e.component,e.type,t)}`,o=">"+a;return e.props?[d,...Fc(e.props),o]:[d+o]}function Fc(e){const r=[],a=Object.keys(e);return a.slice(0,3).forEach(t=>{r.push(...Ll(t,e[t]))}),a.length>3&&r.push(" ..."),r}function Ll(e,r,a){return dt(r)?(r=JSON.stringify(r),a?r:[`${e}=${r}`]):typeof r=="number"||typeof r=="boolean"||r==null?a?r:[`${e}=${r}`]:lt(r)?(r=Ll(e,$e(r.value),!0),a?r:[`${e}=Ref<`,r,">"]):Xe(r)?[`${e}=fn${r.name?`<${r.name}>`:""}`]:(r=$e(r),a?r:[`${e}=`,r])}function ar(e,r,a,t){let d;try{d=t?e(...t):e()}catch(o){Gi(o,r,a)}return d}function Xt(e,r,a,t){if(Xe(e)){const o=ar(e,r,a,t);return o&&Nl(o)&&o.catch(v=>{Gi(v,r,a)}),o}const d=[];for(let o=0;o<e.length;o++)d.push(Xt(e[o],r,a,t));return d}function Gi(e,r,a,t=!0){const d=r?r.vnode:null;if(r){let o=r.parent;const v=r.proxy,h=a;for(;o;){const b=o.ec;if(b){for(let u=0;u<b.length;u++)if(b[u](e,v,h)===!1)return}o=o.parent}const g=r.appContext.config.errorHandler;if(g){ar(g,null,10,[e,v,h]);return}}Oc(e,a,d,t)}function Oc(e,r,a,t=!0){console.error(e)}let mi=!1,Pa=!1;const Tt=[];let rr=0;const En=[];let xn=null,Wr=0;const kn=[];let vr=null,Kr=0;const Yl=Promise.resolve();let ho=null,Na=null;function Ir(e){const r=ho||Yl;return e?r.then(this?e.bind(this):e):r}function Ic(e){let r=rr+1,a=Tt.length;for(;r<a;){const t=r+a>>>1;Tn(Tt[t])<e?r=t+1:a=t}return r}function Jl(e){(!Tt.length||!Tt.includes(e,mi&&e.allowRecurse?rr+1:rr))&&e!==Na&&(e.id==null?Tt.push(e):Tt.splice(Ic(e.id),0,e),Xl())}function Xl(){!mi&&!Pa&&(Pa=!0,ho=Yl.then(Wl))}function Mc(e){const r=Tt.indexOf(e);r>rr&&Tt.splice(r,1)}function ql(e,r,a,t){Le(e)?a.push(...e):(!r||!r.includes(e,e.allowRecurse?t+1:t))&&a.push(e),Xl()}function zc(e){ql(e,xn,En,Wr)}function Tc(e){ql(e,vr,kn,Kr)}function po(e,r=null){if(En.length){for(Na=r,xn=[...new Set(En)],En.length=0,Wr=0;Wr<xn.length;Wr++)xn[Wr]();xn=null,Wr=0,Na=null,po(e,r)}}function Ul(e){if(kn.length){const r=[...new Set(kn)];if(kn.length=0,vr){vr.push(...r);return}for(vr=r,vr.sort((a,t)=>Tn(a)-Tn(t)),Kr=0;Kr<vr.length;Kr++)vr[Kr]();vr=null,Kr=0}}const Tn=e=>e.id==null?1/0:e.id;function Wl(e){Pa=!1,mi=!0,po(e),Tt.sort((a,t)=>Tn(a)-Tn(t));const r=Jt;try{for(rr=0;rr<Tt.length;rr++){const a=Tt[rr];a&&a.active!==!1&&ar(a,null,14)}}finally{rr=0,Tt.length=0,Ul(),mi=!1,ho=null,(Tt.length||En.length||kn.length)&&Wl(e)}}function Hc(e,r,...a){if(e.isUnmounted)return;const t=e.vnode.props||rt;let d=a;const o=r.startsWith("update:"),v=o&&r.slice(7);if(v&&v in t){const u=`${v==="modelValue"?"model":v}Modifiers`,{number:f,trim:s}=t[u]||rt;s?d=a.map(i=>i.trim()):f&&(d=a.map(pi))}let h,g=t[h=aa(r)]||t[h=aa($t(r))];!g&&o&&(g=t[h=aa(Lr(r))]),g&&Xt(g,e,6,d);const b=t[h+"Once"];if(b){if(!e.emitted)e.emitted={};else if(e.emitted[h])return;e.emitted[h]=!0,Xt(b,e,6,d)}}function Kl(e,r,a=!1){const t=r.emitsCache,d=t.get(e);if(d!==void 0)return d;const o=e.emits;let v={},h=!1;if(!Xe(e)){const g=b=>{const u=Kl(b,r,!0);u&&(h=!0,Ot(v,u))};!a&&r.mixins.length&&r.mixins.forEach(g),e.extends&&g(e.extends),e.mixins&&e.mixins.forEach(g)}return!o&&!h?(t.set(e,null),null):(Le(o)?o.forEach(g=>v[g]=null):Ot(v,o),t.set(e,v),v)}function Vi(e,r){return!e||!Hi(r)?!1:(r=r.slice(2).replace(/Once$/,""),Qe(e,r[0].toLowerCase()+r.slice(1))||Qe(e,Lr(r))||Qe(e,r))}let Et=null,Ql=null;function gi(e){const r=Et;return Et=e,Ql=e&&e.type.__scopeId||null,r}function Ft(e,r=Et,a){if(!r||e._n)return e;const t=(...d)=>{t._d&&gs(-1);const o=gi(r),v=e(...d);return gi(o),t._d&&gs(1),v};return t._n=!0,t._c=!0,t._d=!0,t}function oa(e){const{type:r,vnode:a,proxy:t,withProxy:d,props:o,propsOptions:[v],slots:h,attrs:g,emit:b,render:u,renderCache:f,data:s,setupState:i,ctx:n,inheritAttrs:p}=e;let y,l;const m=gi(e);try{if(a.shapeFlag&4){const w=d||t;y=Qt(u.call(w,w,f,o,i,s,n)),l=g}else{const w=r;y=Qt(w.length>1?w(o,{attrs:g,slots:h,emit:b}):w(o,null)),l=r.props?g:Bc(g)}}catch(w){Sn.length=0,Gi(w,e,1),y=Je(yr)}let c=y;if(l&&p!==!1){const w=Object.keys(l),{shapeFlag:x}=c;w.length&&x&7&&(v&&w.some(eo)&&(l=Dc(l,v)),c=Hn(c,l))}return a.dirs&&(c.dirs=c.dirs?c.dirs.concat(a.dirs):a.dirs),a.transition&&(c.transition=a.transition),y=c,gi(m),y}const Bc=e=>{let r;for(const a in e)(a==="class"||a==="style"||Hi(a))&&((r||(r={}))[a]=e[a]);return r},Dc=(e,r)=>{const a={};for(const t in e)(!eo(t)||!(t.slice(9)in r))&&(a[t]=e[t]);return a};function Zc(e,r,a){const{props:t,children:d,component:o}=e,{props:v,children:h,patchFlag:g}=r,b=o.emitsOptions;if(r.dirs||r.transition)return!0;if(a&&g>=0){if(g&1024)return!0;if(g&16)return t?ss(t,v,b):!!v;if(g&8){const u=r.dynamicProps;for(let f=0;f<u.length;f++){const s=u[f];if(v[s]!==t[s]&&!Vi(b,s))return!0}}}else return(d||h)&&(!h||!h.$stable)?!0:t===v?!1:t?v?ss(t,v,b):!0:!!v;return!1}function ss(e,r,a){const t=Object.keys(r);if(t.length!==Object.keys(e).length)return!0;for(let d=0;d<t.length;d++){const o=t[d];if(r[o]!==e[o]&&!Vi(a,o))return!0}return!1}function jc({vnode:e,parent:r},a){for(;r&&r.subTree===e;)(e=r.vnode).el=a,r=r.parent}const Gc=e=>e.__isSuspense;function Vc(e,r){r&&r.pendingBranch?Le(e)?r.effects.push(...e):r.effects.push(e):Tc(e)}function Li(e,r){if(wt){let a=wt.provides;const t=wt.parent&&wt.parent.provides;t===a&&(a=wt.provides=Object.create(t)),a[e]=r}}function Hr(e,r,a=!1){const t=wt||Et;if(t){const d=t.parent==null?t.vnode.appContext&&t.vnode.appContext.provides:t.parent.provides;if(d&&e in d)return d[e];if(arguments.length>1)return a&&Xe(r)?r.call(t.proxy):r}}function Lc(e,r){return vo(e,null,r)}const ls={};function et(e,r,a){return vo(e,r,a)}function vo(e,r,{immediate:a,deep:t,flush:d,onTrack:o,onTrigger:v}=rt){const h=wt;let g,b=!1,u=!1;if(lt(e)?(g=()=>e.value,b=Bl(e)):nn(e)?(g=()=>e,t=!0):Le(e)?(u=!0,b=e.some(nn),g=()=>e.map(l=>{if(lt(l))return l.value;if(nn(l))return Mr(l);if(Xe(l))return ar(l,h,2)})):Xe(e)?r?g=()=>ar(e,h,2):g=()=>{if(!(h&&h.isUnmounted))return f&&f(),Xt(e,h,3,[s])}:g=Jt,r&&t){const l=g;g=()=>Mr(l())}let f,s=l=>{f=y.onStop=()=>{ar(l,h,4)}};if(Bn)return s=Jt,r?a&&Xt(r,h,3,[g(),u?[]:void 0,s]):g(),Jt;let i=u?[]:ls;const n=()=>{if(!!y.active)if(r){const l=y.run();(t||b||(u?l.some((m,c)=>In(m,i[c])):In(l,i)))&&(f&&f(),Xt(r,h,3,[l,i===ls?void 0:i,s]),i=l)}else y.run()};n.allowRecurse=!!r;let p;d==="sync"?p=n:d==="post"?p=()=>Mt(n,h&&h.suspense):p=()=>{!h||h.isMounted?zc(n):n()};const y=new ao(g,p);return r?a?n():i=y.run():d==="post"?Mt(y.run.bind(y),h&&h.suspense):y.run(),()=>{y.stop(),h&&h.scope&&to(h.scope.effects,y)}}function Yc(e,r,a){const t=this.proxy,d=dt(e)?e.includes(".")?_l(t,e):()=>t[e]:e.bind(t,t);let o;Xe(r)?o=r:(o=r.handler,a=r);const v=wt;on(this);const h=vo(d,o.bind(t),a);return v?on(v):Dr(),h}function _l(e,r){const a=r.split(".");return()=>{let t=e;for(let d=0;d<a.length&&t;d++)t=t[a[d]];return t}}function Mr(e,r){if(!pt(e)||e.__v_skip||(r=r||new Set,r.has(e)))return e;if(r.add(e),lt(e))Mr(e.value,r);else if(Le(e))for(let a=0;a<e.length;a++)Mr(e[a],r);else if(un(e)||rn(e))e.forEach(a=>{Mr(a,r)});else if(kl(e))for(const a in e)Mr(e[a],r);return e}function Xr(e){return Xe(e)?{setup:e,name:e.name}:e}const bi=e=>!!e.type.__asyncLoader,$l=e=>e.type.__isKeepAlive;function Jc(e,r){ef(e,"a",r)}function Xc(e,r){ef(e,"da",r)}function ef(e,r,a=wt){const t=e.__wdc||(e.__wdc=()=>{let d=a;for(;d;){if(d.isDeactivated)return;d=d.parent}return e()});if(Yi(r,t,a),a){let d=a.parent;for(;d&&d.parent;)$l(d.parent.vnode)&&qc(t,r,a,d),d=d.parent}}function qc(e,r,a,t){const d=Yi(r,e,t,!0);mo(()=>{to(t[r],d)},a)}function Yi(e,r,a=wt,t=!1){if(a){const d=a[e]||(a[e]=[]),o=r.__weh||(r.__weh=(...v)=>{if(a.isUnmounted)return;Yr(),on(a);const h=Xt(r,a,e,v);return Dr(),Jr(),h});return t?d.unshift(o):d.push(o),o}}const cr=e=>(r,a=wt)=>(!Bn||e==="sp")&&Yi(e,r,a),Uc=cr("bm"),cn=cr("m"),Wc=cr("bu"),tf=cr("u"),Vn=cr("bum"),mo=cr("um"),Kc=cr("sp"),Qc=cr("rtg"),_c=cr("rtc");function $c(e,r=wt){Yi("ec",e,r)}let Ea=!0;function eh(e){const r=nf(e),a=e.proxy,t=e.ctx;Ea=!1,r.beforeCreate&&fs(r.beforeCreate,e,"bc");const{data:d,computed:o,methods:v,watch:h,provide:g,inject:b,created:u,beforeMount:f,mounted:s,beforeUpdate:i,updated:n,activated:p,deactivated:y,beforeDestroy:l,beforeUnmount:m,destroyed:c,unmounted:w,render:x,renderTracked:A,renderTriggered:N,errorCaptured:E,serverPrefetch:k,expose:S,inheritAttrs:R,components:M,directives:B,filters:I}=r;if(b&&th(b,t,null,e.appContext.config.unwrapInjectedRef),v)for(const D in v){const T=v[D];Xe(T)&&(t[D]=T.bind(a))}if(d){const D=d.call(a,a);pt(D)&&(e.data=Pr(D))}if(Ea=!0,o)for(const D in o){const T=o[D],G=Xe(T)?T.bind(a,a):Xe(T.get)?T.get.bind(a,a):Jt,U=!Xe(T)&&Xe(T.set)?T.set.bind(a):Jt,ie=Ye({get:G,set:U});Object.defineProperty(t,D,{enumerable:!0,configurable:!0,get:()=>ie.value,set:se=>ie.value=se})}if(h)for(const D in h)rf(h[D],t,a,D);if(g){const D=Xe(g)?g.call(a):g;Reflect.ownKeys(D).forEach(T=>{Li(T,D[T])})}u&&fs(u,e,"c");function J(D,T){Le(T)?T.forEach(G=>D(G.bind(a))):T&&D(T.bind(a))}if(J(Uc,f),J(cn,s),J(Wc,i),J(tf,n),J(Jc,p),J(Xc,y),J($c,E),J(_c,A),J(Qc,N),J(Vn,m),J(mo,w),J(Kc,k),Le(S))if(S.length){const D=e.exposed||(e.exposed={});S.forEach(T=>{Object.defineProperty(D,T,{get:()=>a[T],set:G=>a[T]=G})})}else e.exposed||(e.exposed={});x&&e.render===Jt&&(e.render=x),R!=null&&(e.inheritAttrs=R),M&&(e.components=M),B&&(e.directives=B)}function th(e,r,a=Jt,t=!1){Le(e)&&(e=ka(e));for(const d in e){const o=e[d];let v;pt(o)?"default"in o?v=Hr(o.from||d,o.default,!0):v=Hr(o.from||d):v=Hr(o),lt(v)&&t?Object.defineProperty(r,d,{enumerable:!0,configurable:!0,get:()=>v.value,set:h=>v.value=h}):r[d]=v}}function fs(e,r,a){Xt(Le(e)?e.map(t=>t.bind(r.proxy)):e.bind(r.proxy),r,a)}function rf(e,r,a,t){const d=t.includes(".")?_l(a,t):()=>a[t];if(dt(e)){const o=r[e];Xe(o)&&et(d,o)}else if(Xe(e))et(d,e.bind(a));else if(pt(e))if(Le(e))e.forEach(o=>rf(o,r,a,t));else{const o=Xe(e.handler)?e.handler.bind(a):r[e.handler];Xe(o)&&et(d,o,e)}}function nf(e){const r=e.type,{mixins:a,extends:t}=r,{mixins:d,optionsCache:o,config:{optionMergeStrategies:v}}=e.appContext,h=o.get(r);let g;return h?g=h:!d.length&&!a&&!t?g=r:(g={},d.length&&d.forEach(b=>yi(g,b,v,!0)),yi(g,r,v)),o.set(r,g),g}function yi(e,r,a,t=!1){const{mixins:d,extends:o}=r;o&&yi(e,o,a,!0),d&&d.forEach(v=>yi(e,v,a,!0));for(const v in r)if(!(t&&v==="expose")){const h=rh[v]||a&&a[v];e[v]=h?h(e[v],r[v]):r[v]}return e}const rh={data:us,props:Fr,emits:Fr,methods:Fr,computed:Fr,beforeCreate:St,created:St,beforeMount:St,mounted:St,beforeUpdate:St,updated:St,beforeDestroy:St,beforeUnmount:St,destroyed:St,unmounted:St,activated:St,deactivated:St,errorCaptured:St,serverPrefetch:St,components:Fr,directives:Fr,watch:ih,provide:us,inject:nh};function us(e,r){return r?e?function(){return Ot(Xe(e)?e.call(this,this):e,Xe(r)?r.call(this,this):r)}:r:e}function nh(e,r){return Fr(ka(e),ka(r))}function ka(e){if(Le(e)){const r={};for(let a=0;a<e.length;a++)r[e[a]]=e[a];return r}return e}function St(e,r){return e?[...new Set([].concat(e,r))]:r}function Fr(e,r){return e?Ot(Ot(Object.create(null),e),r):r}function ih(e,r){if(!e)return r;if(!r)return e;const a=Ot(Object.create(null),e);for(const t in r)a[t]=St(e[t],r[t]);return a}function ah(e,r,a,t=!1){const d={},o={};di(o,Ji,1),e.propsDefaults=Object.create(null),af(e,r,d,o);for(const v in e.propsOptions[0])v in d||(d[v]=void 0);a?e.props=t?d:yc(d):e.type.props?e.props=d:e.props=o,e.attrs=o}function oh(e,r,a,t){const{props:d,attrs:o,vnode:{patchFlag:v}}=e,h=$e(d),[g]=e.propsOptions;let b=!1;if((t||v>0)&&!(v&16)){if(v&8){const u=e.vnode.dynamicProps;for(let f=0;f<u.length;f++){let s=u[f];if(Vi(e.emitsOptions,s))continue;const i=r[s];if(g)if(Qe(o,s))i!==o[s]&&(o[s]=i,b=!0);else{const n=$t(s);d[n]=Sa(g,h,n,i,e,!1)}else i!==o[s]&&(o[s]=i,b=!0)}}}else{af(e,r,d,o)&&(b=!0);let u;for(const f in h)(!r||!Qe(r,f)&&((u=Lr(f))===f||!Qe(r,u)))&&(g?a&&(a[f]!==void 0||a[u]!==void 0)&&(d[f]=Sa(g,h,f,void 0,e,!0)):delete d[f]);if(o!==h)for(const f in o)(!r||!Qe(r,f)&&!0)&&(delete o[f],b=!0)}b&&sr(e,"set","$attrs")}function af(e,r,a,t){const[d,o]=e.propsOptions;let v=!1,h;if(r)for(let g in r){if(ai(g))continue;const b=r[g];let u;d&&Qe(d,u=$t(g))?!o||!o.includes(u)?a[u]=b:(h||(h={}))[u]=b:Vi(e.emitsOptions,g)||(!(g in t)||b!==t[g])&&(t[g]=b,v=!0)}if(o){const g=$e(a),b=h||rt;for(let u=0;u<o.length;u++){const f=o[u];a[f]=Sa(d,g,f,b[f],e,!Qe(b,f))}}return v}function Sa(e,r,a,t,d,o){const v=e[a];if(v!=null){const h=Qe(v,"default");if(h&&t===void 0){const g=v.default;if(v.type!==Function&&Xe(g)){const{propsDefaults:b}=d;a in b?t=b[a]:(on(d),t=b[a]=g.call(null,r),Dr())}else t=g}v[0]&&(o&&!h?t=!1:v[1]&&(t===""||t===Lr(a))&&(t=!0))}return t}function of(e,r,a=!1){const t=r.propsCache,d=t.get(e);if(d)return d;const o=e.props,v={},h=[];let g=!1;if(!Xe(e)){const u=f=>{g=!0;const[s,i]=of(f,r,!0);Ot(v,s),i&&h.push(...i)};!a&&r.mixins.length&&r.mixins.forEach(u),e.extends&&u(e.extends),e.mixins&&e.mixins.forEach(u)}if(!o&&!g)return t.set(e,tn),tn;if(Le(o))for(let u=0;u<o.length;u++){const f=$t(o[u]);cs(f)&&(v[f]=rt)}else if(o)for(const u in o){const f=$t(u);if(cs(f)){const s=o[u],i=v[f]=Le(s)||Xe(s)?{type:s}:s;if(i){const n=ps(Boolean,i.type),p=ps(String,i.type);i[0]=n>-1,i[1]=p<0||n<p,(n>-1||Qe(i,"default"))&&h.push(f)}}}const b=[v,h];return t.set(e,b),b}function cs(e){return e[0]!=="$"}function hs(e){const r=e&&e.toString().match(/^\s*function (\w+)/);return r?r[1]:e===null?"null":""}function ds(e,r){return hs(e)===hs(r)}function ps(e,r){return Le(r)?r.findIndex(a=>ds(a,e)):Xe(r)&&ds(r,e)?0:-1}const sf=e=>e[0]==="_"||e==="$stable",go=e=>Le(e)?e.map(Qt):[Qt(e)],sh=(e,r,a)=>{const t=Ft((...d)=>go(r(...d)),a);return t._c=!1,t},lf=(e,r,a)=>{const t=e._ctx;for(const d in e){if(sf(d))continue;const o=e[d];if(Xe(o))r[d]=sh(d,o,t);else if(o!=null){const v=go(o);r[d]=()=>v}}},ff=(e,r)=>{const a=go(r);e.slots.default=()=>a},lh=(e,r)=>{if(e.vnode.shapeFlag&32){const a=r._;a?(e.slots=$e(r),di(r,"_",a)):lf(r,e.slots={})}else e.slots={},r&&ff(e,r);di(e.slots,Ji,1)},fh=(e,r,a)=>{const{vnode:t,slots:d}=e;let o=!0,v=rt;if(t.shapeFlag&32){const h=r._;h?a&&h===1?o=!1:(Ot(d,r),!a&&h===1&&delete d._):(o=!r.$stable,lf(r,d)),v=r}else r&&(ff(e,r),v={default:1});if(o)for(const h in d)!sf(h)&&!(h in v)&&delete d[h]};function Ht(e,r){const a=Et;if(a===null)return e;const t=Xi(a)||a.proxy,d=e.dirs||(e.dirs=[]);for(let o=0;o<r.length;o++){let[v,h,g,b=rt]=r[o];Xe(v)&&(v={mounted:v,updated:v}),v.deep&&Mr(h),d.push({dir:v,instance:t,value:h,oldValue:void 0,arg:g,modifiers:b})}return e}function Cr(e,r,a,t){const d=e.dirs,o=r&&r.dirs;for(let v=0;v<d.length;v++){const h=d[v];o&&(h.oldValue=o[v].value);let g=h.dir[t];g&&(Yr(),Xt(g,a,8,[e.el,h,e,r]),Jr())}}function uf(){return{app:null,config:{isNativeTag:Zu,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let uh=0;function ch(e,r){return function(t,d=null){Xe(t)||(t=Object.assign({},t)),d!=null&&!pt(d)&&(d=null);const o=uf(),v=new Set;let h=!1;const g=o.app={_uid:uh++,_component:t,_props:d,_container:null,_context:o,_instance:null,version:Ih,get config(){return o.config},set config(b){},use(b,...u){return v.has(b)||(b&&Xe(b.install)?(v.add(b),b.install(g,...u)):Xe(b)&&(v.add(b),b(g,...u))),g},mixin(b){return o.mixins.includes(b)||o.mixins.push(b),g},component(b,u){return u?(o.components[b]=u,g):o.components[b]},directive(b,u){return u?(o.directives[b]=u,g):o.directives[b]},mount(b,u,f){if(!h){const s=Je(t,d);return s.appContext=o,u&&r?r(s,b):e(s,b,f),h=!0,g._container=b,b.__vue_app__=g,Xi(s.component)||s.component.proxy}},unmount(){h&&(e(null,g._container),delete g._container.__vue_app__)},provide(b,u){return o.provides[b]=u,g}};return g}}function Ca(e,r,a,t,d=!1){if(Le(e)){e.forEach((s,i)=>Ca(s,r&&(Le(r)?r[i]:r),a,t,d));return}if(bi(t)&&!d)return;const o=t.shapeFlag&4?Xi(t.component)||t.component.proxy:t.el,v=d?null:o,{i:h,r:g}=e,b=r&&r.r,u=h.refs===rt?h.refs={}:h.refs,f=h.setupState;if(b!=null&&b!==g&&(dt(b)?(u[b]=null,Qe(f,b)&&(f[b]=null)):lt(b)&&(b.value=null)),Xe(g))ar(g,h,12,[v,u]);else{const s=dt(g),i=lt(g);if(s||i){const n=()=>{if(e.f){const p=s?u[g]:g.value;d?Le(p)&&to(p,o):Le(p)?p.includes(o)||p.push(o):s?(u[g]=[o],Qe(f,g)&&(f[g]=u[g])):(g.value=[o],e.k&&(u[e.k]=g.value))}else s?(u[g]=v,Qe(f,g)&&(f[g]=v)):lt(g)&&(g.value=v,e.k&&(u[e.k]=v))};v?(n.id=-1,Mt(n,a)):n()}}}const Mt=Vc;function hh(e){return dh(e)}function dh(e,r){const a=Ju();a.__VUE__=!0;const{insert:t,remove:d,patchProp:o,createElement:v,createText:h,createComment:g,setText:b,setElementText:u,parentNode:f,nextSibling:s,setScopeId:i=Jt,cloneNode:n,insertStaticContent:p}=e,y=(X,K,L,$=null,te=null,V=null,z=!1,F=null,q=!!K.dynamicChildren)=>{if(X===K)return;X&&!bn(X,K)&&($=fe(X),ae(X,te,V,!0),X=null),K.patchFlag===-2&&(q=!1,K.dynamicChildren=null);const{type:H,ref:O,shapeFlag:C}=K;switch(H){case xo:l(X,K,L,$);break;case yr:m(X,K,L,$);break;case sa:X==null&&c(K,L,$,z);break;case Pt:B(X,K,L,$,te,V,z,F,q);break;default:C&1?A(X,K,L,$,te,V,z,F,q):C&6?I(X,K,L,$,te,V,z,F,q):(C&64||C&128)&&H.process(X,K,L,$,te,V,z,F,q,he)}O!=null&&te&&Ca(O,X&&X.ref,V,K||X,!K)},l=(X,K,L,$)=>{if(X==null)t(K.el=h(K.children),L,$);else{const te=K.el=X.el;K.children!==X.children&&b(te,K.children)}},m=(X,K,L,$)=>{X==null?t(K.el=g(K.children||""),L,$):K.el=X.el},c=(X,K,L,$)=>{[X.el,X.anchor]=p(X.children,K,L,$,X.el,X.anchor)},w=({el:X,anchor:K},L,$)=>{let te;for(;X&&X!==K;)te=s(X),t(X,L,$),X=te;t(K,L,$)},x=({el:X,anchor:K})=>{let L;for(;X&&X!==K;)L=s(X),d(X),X=L;d(K)},A=(X,K,L,$,te,V,z,F,q)=>{z=z||K.type==="svg",X==null?N(K,L,$,te,V,z,F,q):S(X,K,te,V,z,F,q)},N=(X,K,L,$,te,V,z,F)=>{let q,H;const{type:O,props:C,shapeFlag:Q,transition:le,patchFlag:ge,dirs:ye}=X;if(X.el&&n!==void 0&&ge===-1)q=X.el=n(X.el);else{if(q=X.el=v(X.type,V,C&&C.is,C),Q&8?u(q,X.children):Q&16&&k(X.children,q,null,$,te,V&&O!=="foreignObject",z,F),ye&&Cr(X,null,$,"created"),C){for(const Se in C)Se!=="value"&&!ai(Se)&&o(q,Se,null,C[Se],V,X.children,$,te,re);"value"in C&&o(q,"value",null,C.value),(H=C.onVnodeBeforeMount)&&Ut(H,$,X)}E(q,X,X.scopeId,z,$)}ye&&Cr(X,null,$,"beforeMount");const Ee=(!te||te&&!te.pendingBranch)&&le&&!le.persisted;Ee&&le.beforeEnter(q),t(q,K,L),((H=C&&C.onVnodeMounted)||Ee||ye)&&Mt(()=>{H&&Ut(H,$,X),Ee&&le.enter(q),ye&&Cr(X,null,$,"mounted")},te)},E=(X,K,L,$,te)=>{if(L&&i(X,L),$)for(let V=0;V<$.length;V++)i(X,$[V]);if(te){let V=te.subTree;if(K===V){const z=te.vnode;E(X,z,z.scopeId,z.slotScopeIds,te.parent)}}},k=(X,K,L,$,te,V,z,F,q=0)=>{for(let H=q;H<X.length;H++){const O=X[H]=F?mr(X[H]):Qt(X[H]);y(null,O,K,L,$,te,V,z,F)}},S=(X,K,L,$,te,V,z)=>{const F=K.el=X.el;let{patchFlag:q,dynamicChildren:H,dirs:O}=K;q|=X.patchFlag&16;const C=X.props||rt,Q=K.props||rt;let le;L&&Rr(L,!1),(le=Q.onVnodeBeforeUpdate)&&Ut(le,L,K,X),O&&Cr(K,X,L,"beforeUpdate"),L&&Rr(L,!0);const ge=te&&K.type!=="foreignObject";if(H?R(X.dynamicChildren,H,F,L,$,ge,V):z||G(X,K,F,null,L,$,ge,V,!1),q>0){if(q&16)M(F,K,C,Q,L,$,te);else if(q&2&&C.class!==Q.class&&o(F,"class",null,Q.class,te),q&4&&o(F,"style",C.style,Q.style,te),q&8){const ye=K.dynamicProps;for(let Ee=0;Ee<ye.length;Ee++){const Se=ye[Ee],Ie=C[Se],Oe=Q[Se];(Oe!==Ie||Se==="value")&&o(F,Se,Ie,Oe,te,X.children,L,$,re)}}q&1&&X.children!==K.children&&u(F,K.children)}else!z&&H==null&&M(F,K,C,Q,L,$,te);((le=Q.onVnodeUpdated)||O)&&Mt(()=>{le&&Ut(le,L,K,X),O&&Cr(K,X,L,"updated")},$)},R=(X,K,L,$,te,V,z)=>{for(let F=0;F<K.length;F++){const q=X[F],H=K[F],O=q.el&&(q.type===Pt||!bn(q,H)||q.shapeFlag&70)?f(q.el):L;y(q,H,O,null,$,te,V,z,!0)}},M=(X,K,L,$,te,V,z)=>{if(L!==$){for(const F in $){if(ai(F))continue;const q=$[F],H=L[F];q!==H&&F!=="value"&&o(X,F,H,q,z,K.children,te,V,re)}if(L!==rt)for(const F in L)!ai(F)&&!(F in $)&&o(X,F,L[F],null,z,K.children,te,V,re);"value"in $&&o(X,"value",L.value,$.value)}},B=(X,K,L,$,te,V,z,F,q)=>{const H=K.el=X?X.el:h(""),O=K.anchor=X?X.anchor:h("");let{patchFlag:C,dynamicChildren:Q,slotScopeIds:le}=K;le&&(F=F?F.concat(le):le),X==null?(t(H,L,$),t(O,L,$),k(K.children,L,O,te,V,z,F,q)):C>0&&C&64&&Q&&X.dynamicChildren?(R(X.dynamicChildren,Q,L,te,V,z,F),(K.key!=null||te&&K===te.subTree)&&cf(X,K,!0)):G(X,K,L,O,te,V,z,F,q)},I=(X,K,L,$,te,V,z,F,q)=>{K.slotScopeIds=F,X==null?K.shapeFlag&512?te.ctx.activate(K,L,$,z,q):Y(K,L,$,te,V,z,q):J(X,K,q)},Y=(X,K,L,$,te,V,z)=>{const F=X.component=Ph(X,$,te);if($l(X)&&(F.ctx.renderer=he),Eh(F),F.asyncDep){if(te&&te.registerDep(F,D),!X.el){const q=F.subTree=Je(yr);m(null,q,K,L)}return}D(F,X,K,L,te,V,z)},J=(X,K,L)=>{const $=K.component=X.component;if(Zc(X,K,L))if($.asyncDep&&!$.asyncResolved){T($,K,L);return}else $.next=K,Mc($.update),$.update();else K.component=X.component,K.el=X.el,$.vnode=K},D=(X,K,L,$,te,V,z)=>{const F=()=>{if(X.isMounted){let{next:O,bu:C,u:Q,parent:le,vnode:ge}=X,ye=O,Ee;Rr(X,!1),O?(O.el=ge.el,T(X,O,z)):O=ge,C&&oi(C),(Ee=O.props&&O.props.onVnodeBeforeUpdate)&&Ut(Ee,le,O,ge),Rr(X,!0);const Se=oa(X),Ie=X.subTree;X.subTree=Se,y(Ie,Se,f(Ie.el),fe(Ie),X,te,V),O.el=Se.el,ye===null&&jc(X,Se.el),Q&&Mt(Q,te),(Ee=O.props&&O.props.onVnodeUpdated)&&Mt(()=>Ut(Ee,le,O,ge),te)}else{let O;const{el:C,props:Q}=K,{bm:le,m:ge,parent:ye}=X,Ee=bi(K);if(Rr(X,!1),le&&oi(le),!Ee&&(O=Q&&Q.onVnodeBeforeMount)&&Ut(O,ye,K),Rr(X,!0),C&&ce){const Se=()=>{X.subTree=oa(X),ce(C,X.subTree,X,te,null)};Ee?K.type.__asyncLoader().then(()=>!X.isUnmounted&&Se()):Se()}else{const Se=X.subTree=oa(X);y(null,Se,L,$,X,te,V),K.el=Se.el}if(ge&&Mt(ge,te),!Ee&&(O=Q&&Q.onVnodeMounted)){const Se=K;Mt(()=>Ut(O,ye,Se),te)}K.shapeFlag&256&&X.a&&Mt(X.a,te),X.isMounted=!0,K=L=$=null}},q=X.effect=new ao(F,()=>Jl(X.update),X.scope),H=X.update=q.run.bind(q);H.id=X.uid,Rr(X,!0),H()},T=(X,K,L)=>{K.component=X;const $=X.vnode.props;X.vnode=K,X.next=null,oh(X,K.props,$,L),fh(X,K.children,L),Yr(),po(void 0,X.update),Jr()},G=(X,K,L,$,te,V,z,F,q=!1)=>{const H=X&&X.children,O=X?X.shapeFlag:0,C=K.children,{patchFlag:Q,shapeFlag:le}=K;if(Q>0){if(Q&128){ie(H,C,L,$,te,V,z,F,q);return}else if(Q&256){U(H,C,L,$,te,V,z,F,q);return}}le&8?(O&16&&re(H,te,V),C!==H&&u(L,C)):O&16?le&16?ie(H,C,L,$,te,V,z,F,q):re(H,te,V,!0):(O&8&&u(L,""),le&16&&k(C,L,$,te,V,z,F,q))},U=(X,K,L,$,te,V,z,F,q)=>{X=X||tn,K=K||tn;const H=X.length,O=K.length,C=Math.min(H,O);let Q;for(Q=0;Q<C;Q++){const le=K[Q]=q?mr(K[Q]):Qt(K[Q]);y(X[Q],le,L,null,te,V,z,F,q)}H>O?re(X,te,V,!0,!1,C):k(K,L,$,te,V,z,F,q,C)},ie=(X,K,L,$,te,V,z,F,q)=>{let H=0;const O=K.length;let C=X.length-1,Q=O-1;for(;H<=C&&H<=Q;){const le=X[H],ge=K[H]=q?mr(K[H]):Qt(K[H]);if(bn(le,ge))y(le,ge,L,null,te,V,z,F,q);else break;H++}for(;H<=C&&H<=Q;){const le=X[C],ge=K[Q]=q?mr(K[Q]):Qt(K[Q]);if(bn(le,ge))y(le,ge,L,null,te,V,z,F,q);else break;C--,Q--}if(H>C){if(H<=Q){const le=Q+1,ge=le<O?K[le].el:$;for(;H<=Q;)y(null,K[H]=q?mr(K[H]):Qt(K[H]),L,ge,te,V,z,F,q),H++}}else if(H>Q)for(;H<=C;)ae(X[H],te,V,!0),H++;else{const le=H,ge=H,ye=new Map;for(H=ge;H<=Q;H++){const Me=K[H]=q?mr(K[H]):Qt(K[H]);Me.key!=null&&ye.set(Me.key,H)}let Ee,Se=0;const Ie=Q-ge+1;let Oe=!1,Fe=0;const ke=new Array(Ie);for(H=0;H<Ie;H++)ke[H]=0;for(H=le;H<=C;H++){const Me=X[H];if(Se>=Ie){ae(Me,te,V,!0);continue}let j;if(Me.key!=null)j=ye.get(Me.key);else for(Ee=ge;Ee<=Q;Ee++)if(ke[Ee-ge]===0&&bn(Me,K[Ee])){j=Ee;break}j===void 0?ae(Me,te,V,!0):(ke[j-ge]=H+1,j>=Fe?Fe=j:Oe=!0,y(Me,K[j],L,null,te,V,z,F,q),Se++)}const He=Oe?ph(ke):tn;for(Ee=He.length-1,H=Ie-1;H>=0;H--){const Me=ge+H,j=K[Me],me=Me+1<O?K[Me+1].el:$;ke[H]===0?y(null,j,L,me,te,V,z,F,q):Oe&&(Ee<0||H!==He[Ee]?se(j,L,me,2):Ee--)}}},se=(X,K,L,$,te=null)=>{const{el:V,type:z,transition:F,children:q,shapeFlag:H}=X;if(H&6){se(X.component.subTree,K,L,$);return}if(H&128){X.suspense.move(K,L,$);return}if(H&64){z.move(X,K,L,he);return}if(z===Pt){t(V,K,L);for(let C=0;C<q.length;C++)se(q[C],K,L,$);t(X.anchor,K,L);return}if(z===sa){w(X,K,L);return}if($!==2&&H&1&&F)if($===0)F.beforeEnter(V),t(V,K,L),Mt(()=>F.enter(V),te);else{const{leave:C,delayLeave:Q,afterLeave:le}=F,ge=()=>t(V,K,L),ye=()=>{C(V,()=>{ge(),le&&le()})};Q?Q(V,ge,ye):ye()}else t(V,K,L)},ae=(X,K,L,$=!1,te=!1)=>{const{type:V,props:z,ref:F,children:q,dynamicChildren:H,shapeFlag:O,patchFlag:C,dirs:Q}=X;if(F!=null&&Ca(F,null,L,X,!0),O&256){K.ctx.deactivate(X);return}const le=O&1&&Q,ge=!bi(X);let ye;if(ge&&(ye=z&&z.onVnodeBeforeUnmount)&&Ut(ye,K,X),O&6)_(X.component,L,$);else{if(O&128){X.suspense.unmount(L,$);return}le&&Cr(X,null,K,"beforeUnmount"),O&64?X.type.remove(X,K,L,te,he,$):H&&(V!==Pt||C>0&&C&64)?re(H,K,L,!1,!0):(V===Pt&&C&384||!te&&O&16)&&re(q,K,L),$&&W(X)}(ge&&(ye=z&&z.onVnodeUnmounted)||le)&&Mt(()=>{ye&&Ut(ye,K,X),le&&Cr(X,null,K,"unmounted")},L)},W=X=>{const{type:K,el:L,anchor:$,transition:te}=X;if(K===Pt){ee(L,$);return}if(K===sa){x(X);return}const V=()=>{d(L),te&&!te.persisted&&te.afterLeave&&te.afterLeave()};if(X.shapeFlag&1&&te&&!te.persisted){const{leave:z,delayLeave:F}=te,q=()=>z(L,V);F?F(X.el,V,q):q()}else V()},ee=(X,K)=>{let L;for(;X!==K;)L=s(X),d(X),X=L;d(K)},_=(X,K,L)=>{const{bum:$,scope:te,update:V,subTree:z,um:F}=X;$&&oi($),te.stop(),V&&(V.active=!1,ae(z,X,K,L)),F&&Mt(F,K),Mt(()=>{X.isUnmounted=!0},K),K&&K.pendingBranch&&!K.isUnmounted&&X.asyncDep&&!X.asyncResolved&&X.suspenseId===K.pendingId&&(K.deps--,K.deps===0&&K.resolve())},re=(X,K,L,$=!1,te=!1,V=0)=>{for(let z=V;z<X.length;z++)ae(X[z],K,L,$,te)},fe=X=>X.shapeFlag&6?fe(X.component.subTree):X.shapeFlag&128?X.suspense.next():s(X.anchor||X.el),pe=(X,K,L)=>{X==null?K._vnode&&ae(K._vnode,null,null,!0):y(K._vnode||null,X,K,null,null,null,L),Ul(),K._vnode=X},he={p:y,um:ae,m:se,r:W,mt:Y,mc:k,pc:G,pbc:R,n:fe,o:e};let oe,ce;return r&&([oe,ce]=r(he)),{render:pe,hydrate:oe,createApp:ch(pe,oe)}}function Rr({effect:e,update:r},a){e.allowRecurse=r.allowRecurse=a}function cf(e,r,a=!1){const t=e.children,d=r.children;if(Le(t)&&Le(d))for(let o=0;o<t.length;o++){const v=t[o];let h=d[o];h.shapeFlag&1&&!h.dynamicChildren&&((h.patchFlag<=0||h.patchFlag===32)&&(h=d[o]=mr(d[o]),h.el=v.el),a||cf(v,h))}}function ph(e){const r=e.slice(),a=[0];let t,d,o,v,h;const g=e.length;for(t=0;t<g;t++){const b=e[t];if(b!==0){if(d=a[a.length-1],e[d]<b){r[t]=d,a.push(t);continue}for(o=0,v=a.length-1;o<v;)h=o+v>>1,e[a[h]]<b?o=h+1:v=h;b<e[a[o]]&&(o>0&&(r[t]=a[o-1]),a[o]=t)}}for(o=a.length,v=a[o-1];o-- >0;)a[o]=v,v=r[v];return a}const vh=e=>e.__isTeleport,bo="components",mh="directives";function it(e,r){return wo(bo,e,!0,r)||e}const hf=Symbol();function yo(e){return dt(e)?wo(bo,e,!1)||e:e||hf}function vs(e){return wo(mh,e)}function wo(e,r,a=!0,t=!1){const d=Et||wt;if(d){const o=d.type;if(e===bo){const h=wf(o);if(h&&(h===r||h===$t(r)||h===Zi($t(r))))return o}const v=ms(d[e]||o[e],r)||ms(d.appContext[e],r);return!v&&t?o:v}}function ms(e,r){return e&&(e[r]||e[$t(r)]||e[Zi($t(r))])}const Pt=Symbol(void 0),xo=Symbol(void 0),yr=Symbol(void 0),sa=Symbol(void 0),Sn=[];let Br=null;function We(e=!1){Sn.push(Br=e?null:[])}function gh(){Sn.pop(),Br=Sn[Sn.length-1]||null}let wi=1;function gs(e){wi+=e}function df(e){return e.dynamicChildren=wi>0?Br||tn:null,gh(),wi>0&&Br&&Br.push(e),e}function ct(e,r,a,t,d,o){return df(ot(e,r,a,t,d,o,!0))}function zt(e,r,a,t,d){return df(Je(e,r,a,t,d,!0))}function xi(e){return e?e.__v_isVNode===!0:!1}function bn(e,r){return e.type===r.type&&e.key===r.key}const Ji="__vInternal",pf=({key:e})=>e!=null?e:null,si=({ref:e,ref_key:r,ref_for:a})=>e!=null?dt(e)||lt(e)||Xe(e)?{i:Et,r:e,k:r,f:!!a}:e:null;function ot(e,r=null,a=null,t=0,d=null,o=e===Pt?0:1,v=!1,h=!1){const g={__v_isVNode:!0,__v_skip:!0,type:e,props:r,key:r&&pf(r),ref:r&&si(r),scopeId:Ql,slotScopeIds:null,children:a,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:o,patchFlag:t,dynamicProps:d,dynamicChildren:null,appContext:null};return h?(Ao(g,a),o&128&&e.normalize(g)):a&&(g.shapeFlag|=dt(a)?8:16),wi>0&&!v&&Br&&(g.patchFlag>0||o&6)&&g.patchFlag!==32&&Br.push(g),g}const Je=bh;function bh(e,r=null,a=null,t=0,d=null,o=!1){if((!e||e===hf)&&(e=yr),xi(e)){const h=Hn(e,r,!0);return a&&Ao(h,a),h}if(Oh(e)&&(e=e.__vccOpts),r){r=vf(r);let{class:h,style:g}=r;h&&!dt(h)&&(r.class=Bt(h)),pt(g)&&(Dl(g)&&!Le(g)&&(g=Ot({},g)),r.style=Gn(g))}const v=dt(e)?1:Gc(e)?128:vh(e)?64:pt(e)?4:Xe(e)?2:0;return ot(e,r,a,t,d,v,o,!0)}function vf(e){return e?Dl(e)||Ji in e?Ot({},e):e:null}function Hn(e,r,a=!1){const{props:t,ref:d,patchFlag:o,children:v}=e,h=r?Ln(t||{},r):t;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:h,key:h&&pf(h),ref:r&&r.ref?a&&d?Le(d)?d.concat(si(r)):[d,si(r)]:si(r):d,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:v,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:r&&e.type!==Pt?o===-1?16:o|16:o,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&Hn(e.ssContent),ssFallback:e.ssFallback&&Hn(e.ssFallback),el:e.el,anchor:e.anchor}}function mf(e=" ",r=0){return Je(xo,null,e,r)}function or(e="",r=!1){return r?(We(),zt(yr,null,e)):Je(yr,null,e)}function Qt(e){return e==null||typeof e=="boolean"?Je(yr):Le(e)?Je(Pt,null,e.slice()):typeof e=="object"?mr(e):Je(xo,null,String(e))}function mr(e){return e.el===null||e.memo?e:Hn(e)}function Ao(e,r){let a=0;const{shapeFlag:t}=e;if(r==null)r=null;else if(Le(r))a=16;else if(typeof r=="object")if(t&65){const d=r.default;d&&(d._c&&(d._d=!1),Ao(e,d()),d._c&&(d._d=!0));return}else{a=32;const d=r._;!d&&!(Ji in r)?r._ctx=Et:d===3&&Et&&(Et.slots._===1?r._=1:(r._=2,e.patchFlag|=1024))}else Xe(r)?(r={default:r,_ctx:Et},a=32):(r=String(r),t&64?(a=16,r=[mf(r)]):a=8);e.children=r,e.shapeFlag|=a}function Ln(...e){const r={};for(let a=0;a<e.length;a++){const t=e[a];for(const d in t)if(d==="class")r.class!==t.class&&(r.class=Bt([r.class,t.class]));else if(d==="style")r.style=Gn([r.style,t.style]);else if(Hi(d)){const o=r[d],v=t[d];v&&o!==v&&!(Le(o)&&o.includes(v))&&(r[d]=o?[].concat(o,v):v)}else d!==""&&(r[d]=t[d])}return r}function Ut(e,r,a,t=null){Xt(e,r,7,[a,t])}function hn(e,r,a,t){let d;const o=a&&a[t];if(Le(e)||dt(e)){d=new Array(e.length);for(let v=0,h=e.length;v<h;v++)d[v]=r(e[v],v,void 0,o&&o[v])}else if(typeof e=="number"){d=new Array(e);for(let v=0;v<e;v++)d[v]=r(v+1,v,void 0,o&&o[v])}else if(pt(e))if(e[Symbol.iterator])d=Array.from(e,(v,h)=>r(v,h,void 0,o&&o[h]));else{const v=Object.keys(e);d=new Array(v.length);for(let h=0,g=v.length;h<g;h++){const b=v[h];d[h]=r(e[b],b,h,o&&o[h])}}else d=[];return a&&(a[t]=d),d}function yh(e,r){for(let a=0;a<r.length;a++){const t=r[a];if(Le(t))for(let d=0;d<t.length;d++)e[t[d].name]=t[d].fn;else t&&(e[t.name]=t.fn)}return e}function mt(e,r,a={},t,d){if(Et.isCE||Et.parent&&bi(Et.parent)&&Et.parent.isCE)return Je("slot",r==="default"?null:{name:r},t&&t());let o=e[r];o&&o._c&&(o._d=!1),We();const v=o&&gf(o(a)),h=zt(Pt,{key:a.key||`_${r}`},v||(t?t():[]),v&&e._===1?64:-2);return!d&&h.scopeId&&(h.slotScopeIds=[h.scopeId+"-s"]),o&&o._c&&(o._d=!0),h}function gf(e){return e.some(r=>xi(r)?!(r.type===yr||r.type===Pt&&!gf(r.children)):!0)?e:null}const Ra=e=>e?bf(e)?Xi(e)||e.proxy:Ra(e.parent):null,Ai=Ot(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>Ra(e.parent),$root:e=>Ra(e.root),$emit:e=>e.emit,$options:e=>nf(e),$forceUpdate:e=>()=>Jl(e.update),$nextTick:e=>Ir.bind(e.proxy),$watch:e=>Yc.bind(e)}),wh={get({_:e},r){const{ctx:a,setupState:t,data:d,props:o,accessCache:v,type:h,appContext:g}=e;let b;if(r[0]!=="$"){const i=v[r];if(i!==void 0)switch(i){case 1:return t[r];case 2:return d[r];case 4:return a[r];case 3:return o[r]}else{if(t!==rt&&Qe(t,r))return v[r]=1,t[r];if(d!==rt&&Qe(d,r))return v[r]=2,d[r];if((b=e.propsOptions[0])&&Qe(b,r))return v[r]=3,o[r];if(a!==rt&&Qe(a,r))return v[r]=4,a[r];Ea&&(v[r]=0)}}const u=Ai[r];let f,s;if(u)return r==="$attrs"&&Dt(e,"get",r),u(e);if((f=h.__cssModules)&&(f=f[r]))return f;if(a!==rt&&Qe(a,r))return v[r]=4,a[r];if(s=g.config.globalProperties,Qe(s,r))return s[r]},set({_:e},r,a){const{data:t,setupState:d,ctx:o}=e;return d!==rt&&Qe(d,r)?(d[r]=a,!0):t!==rt&&Qe(t,r)?(t[r]=a,!0):Qe(e.props,r)||r[0]==="$"&&r.slice(1)in e?!1:(o[r]=a,!0)},has({_:{data:e,setupState:r,accessCache:a,ctx:t,appContext:d,propsOptions:o}},v){let h;return!!a[v]||e!==rt&&Qe(e,v)||r!==rt&&Qe(r,v)||(h=o[0])&&Qe(h,v)||Qe(t,v)||Qe(Ai,v)||Qe(d.config.globalProperties,v)},defineProperty(e,r,a){return a.get!=null?e._.accessCache[r]=0:Qe(a,"value")&&this.set(e,r,a.value,null),Reflect.defineProperty(e,r,a)}},xh=uf();let Ah=0;function Ph(e,r,a){const t=e.type,d=(r?r.appContext:e.appContext)||xh,o={uid:Ah++,vnode:e,type:t,parent:r,appContext:d,root:null,next:null,subTree:null,effect:null,update:null,scope:new Xu(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:r?r.provides:Object.create(d.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:of(t,d),emitsOptions:Kl(t,d),emit:null,emitted:null,propsDefaults:rt,inheritAttrs:t.inheritAttrs,ctx:rt,data:rt,props:rt,attrs:rt,slots:rt,refs:rt,setupState:rt,setupContext:null,suspense:a,suspenseId:a?a.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return o.ctx={_:o},o.root=r?r.root:o,o.emit=Hc.bind(null,o),e.ce&&e.ce(o),o}let wt=null;const Nh=()=>wt||Et,on=e=>{wt=e,e.scope.on()},Dr=()=>{wt&&wt.scope.off(),wt=null};function bf(e){return e.vnode.shapeFlag&4}let Bn=!1;function Eh(e,r=!1){Bn=r;const{props:a,children:t}=e.vnode,d=bf(e);ah(e,a,d,r),lh(e,t);const o=d?kh(e,r):void 0;return Bn=!1,o}function kh(e,r){const a=e.type;e.accessCache=Object.create(null),e.proxy=uo(new Proxy(e.ctx,wh));const{setup:t}=a;if(t){const d=e.setupContext=t.length>1?Ch(e):null;on(e),Yr();const o=ar(t,e,0,[e.props,d]);if(Jr(),Dr(),Nl(o)){if(o.then(Dr,Dr),r)return o.then(v=>{bs(e,v,r)}).catch(v=>{Gi(v,e,0)});e.asyncDep=o}else bs(e,o,r)}else yf(e,r)}function bs(e,r,a){Xe(r)?e.type.__ssrInlineRender?e.ssrRender=r:e.render=r:pt(r)&&(e.setupState=Gl(r)),yf(e,a)}let ys;function yf(e,r,a){const t=e.type;if(!e.render){if(!r&&ys&&!t.render){const d=t.template;if(d){const{isCustomElement:o,compilerOptions:v}=e.appContext.config,{delimiters:h,compilerOptions:g}=t,b=Ot(Ot({isCustomElement:o,delimiters:h},v),g);t.render=ys(d,b)}}e.render=t.render||Jt}on(e),Yr(),eh(e),Jr(),Dr()}function Sh(e){return new Proxy(e.attrs,{get(r,a){return Dt(e,"get","$attrs"),r[a]}})}function Ch(e){const r=t=>{e.exposed=t||{}};let a;return{get attrs(){return a||(a=Sh(e))},slots:e.slots,emit:e.emit,expose:r}}function Xi(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(Gl(uo(e.exposed)),{get(r,a){if(a in r)return r[a];if(a in Ai)return Ai[a](e)}}))}const Rh=/(?:^|[-_])(\w)/g,Fh=e=>e.replace(Rh,r=>r.toUpperCase()).replace(/[-_]/g,"");function wf(e){return Xe(e)&&e.displayName||e.name}function xf(e,r,a=!1){let t=wf(r);if(!t&&r.__file){const d=r.__file.match(/([^/\\]+)\.\w+$/);d&&(t=d[1])}if(!t&&e&&e.parent){const d=o=>{for(const v in o)if(o[v]===r)return v};t=d(e.components||e.parent.type.components)||d(e.appContext.components)}return t?Fh(t):a?"App":"Anonymous"}function Oh(e){return Xe(e)&&"__vccOpts"in e}const Ye=(e,r)=>kc(e,r,Bn);function sn(e,r,a){const t=arguments.length;return t===2?pt(r)&&!Le(r)?xi(r)?Je(e,null,[r]):Je(e,r):Je(e,null,r):(t>3?a=Array.prototype.slice.call(arguments,2):t===3&&xi(a)&&(a=[a]),Je(e,r,a))}const Ih="3.2.33",Mh="http://www.w3.org/2000/svg",Or=typeof document!="undefined"?document:null,ws=Or&&Or.createElement("template"),zh={insert:(e,r,a)=>{r.insertBefore(e,a||null)},remove:e=>{const r=e.parentNode;r&&r.removeChild(e)},createElement:(e,r,a,t)=>{const d=r?Or.createElementNS(Mh,e):Or.createElement(e,a?{is:a}:void 0);return e==="select"&&t&&t.multiple!=null&&d.setAttribute("multiple",t.multiple),d},createText:e=>Or.createTextNode(e),createComment:e=>Or.createComment(e),setText:(e,r)=>{e.nodeValue=r},setElementText:(e,r)=>{e.textContent=r},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>Or.querySelector(e),setScopeId(e,r){e.setAttribute(r,"")},cloneNode(e){const r=e.cloneNode(!0);return"_value"in e&&(r._value=e._value),r},insertStaticContent(e,r,a,t,d,o){const v=a?a.previousSibling:r.lastChild;if(d&&(d===o||d.nextSibling))for(;r.insertBefore(d.cloneNode(!0),a),!(d===o||!(d=d.nextSibling)););else{ws.innerHTML=t?`<svg>${e}</svg>`:e;const h=ws.content;if(t){const g=h.firstChild;for(;g.firstChild;)h.appendChild(g.firstChild);h.removeChild(g)}r.insertBefore(h,a)}return[v?v.nextSibling:r.firstChild,a?a.previousSibling:r.lastChild]}};function Th(e,r,a){const t=e._vtc;t&&(r=(r?[r,...t]:[...t]).join(" ")),r==null?e.removeAttribute("class"):a?e.setAttribute("class",r):e.className=r}function Hh(e,r,a){const t=e.style,d=dt(a);if(a&&!d){for(const o in a)Fa(t,o,a[o]);if(r&&!dt(r))for(const o in r)a[o]==null&&Fa(t,o,"")}else{const o=t.display;d?r!==a&&(t.cssText=a):r&&e.removeAttribute("style"),"_vod"in e&&(t.display=o)}}const xs=/\s*!important$/;function Fa(e,r,a){if(Le(a))a.forEach(t=>Fa(e,r,t));else if(a==null&&(a=""),r.startsWith("--"))e.setProperty(r,a);else{const t=Bh(e,r);xs.test(a)?e.setProperty(Lr(t),a.replace(xs,""),"important"):e[t]=a}}const As=["Webkit","Moz","ms"],la={};function Bh(e,r){const a=la[r];if(a)return a;let t=$t(r);if(t!=="filter"&&t in e)return la[r]=t;t=Zi(t);for(let d=0;d<As.length;d++){const o=As[d]+t;if(o in e)return la[r]=o}return r}const Ps="http://www.w3.org/1999/xlink";function Dh(e,r,a,t,d){if(t&&r.startsWith("xlink:"))a==null?e.removeAttributeNS(Ps,r.slice(6,r.length)):e.setAttributeNS(Ps,r,a);else{const o=Mu(r);a==null||o&&!Al(a)?e.removeAttribute(r):e.setAttribute(r,o?"":a)}}function Zh(e,r,a,t,d,o,v){if(r==="innerHTML"||r==="textContent"){t&&v(t,d,o),e[r]=a==null?"":a;return}if(r==="value"&&e.tagName!=="PROGRESS"&&!e.tagName.includes("-")){e._value=a;const g=a==null?"":a;(e.value!==g||e.tagName==="OPTION")&&(e.value=g),a==null&&e.removeAttribute(r);return}let h=!1;if(a===""||a==null){const g=typeof e[r];g==="boolean"?a=Al(a):a==null&&g==="string"?(a="",h=!0):g==="number"&&(a=0,h=!0)}try{e[r]=a}catch{}h&&e.removeAttribute(r)}const[Af,jh]=(()=>{let e=Date.now,r=!1;if(typeof window!="undefined"){Date.now()>document.createEvent("Event").timeStamp&&(e=()=>performance.now());const a=navigator.userAgent.match(/firefox\/(\d+)/i);r=!!(a&&Number(a[1])<=53)}return[e,r]})();let Oa=0;const Gh=Promise.resolve(),Vh=()=>{Oa=0},Lh=()=>Oa||(Gh.then(Vh),Oa=Af());function nr(e,r,a,t){e.addEventListener(r,a,t)}function Yh(e,r,a,t){e.removeEventListener(r,a,t)}function Jh(e,r,a,t,d=null){const o=e._vei||(e._vei={}),v=o[r];if(t&&v)v.value=t;else{const[h,g]=Xh(r);if(t){const b=o[r]=qh(t,d);nr(e,h,b,g)}else v&&(Yh(e,h,v,g),o[r]=void 0)}}const Ns=/(?:Once|Passive|Capture)$/;function Xh(e){let r;if(Ns.test(e)){r={};let a;for(;a=e.match(Ns);)e=e.slice(0,e.length-a[0].length),r[a[0].toLowerCase()]=!0}return[Lr(e.slice(2)),r]}function qh(e,r){const a=t=>{const d=t.timeStamp||Af();(jh||d>=a.attached-1)&&Xt(Uh(t,a.value),r,5,[t])};return a.value=e,a.attached=Lh(),a}function Uh(e,r){if(Le(r)){const a=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{a.call(e),e._stopped=!0},r.map(t=>d=>!d._stopped&&t&&t(d))}else return r}const Es=/^on[a-z]/,Wh=(e,r,a,t,d=!1,o,v,h,g)=>{r==="class"?Th(e,t,d):r==="style"?Hh(e,a,t):Hi(r)?eo(r)||Jh(e,r,a,t,v):(r[0]==="."?(r=r.slice(1),!0):r[0]==="^"?(r=r.slice(1),!1):Kh(e,r,t,d))?Zh(e,r,t,o,v,h,g):(r==="true-value"?e._trueValue=t:r==="false-value"&&(e._falseValue=t),Dh(e,r,t,d))};function Kh(e,r,a,t){return t?!!(r==="innerHTML"||r==="textContent"||r in e&&Es.test(r)&&Xe(a)):r==="spellcheck"||r==="draggable"||r==="translate"||r==="form"||r==="list"&&e.tagName==="INPUT"||r==="type"&&e.tagName==="TEXTAREA"||Es.test(r)&&dt(a)?!1:r in e}const wr=e=>{const r=e.props["onUpdate:modelValue"];return Le(r)?a=>oi(r,a):r};function Qh(e){e.target.composing=!0}function ks(e){const r=e.target;r.composing&&(r.composing=!1,_h(r,"input"))}function _h(e,r){const a=document.createEvent("HTMLEvents");a.initEvent(r,!0,!0),e.dispatchEvent(a)}const Ss={created(e,{modifiers:{lazy:r,trim:a,number:t}},d){e._assign=wr(d);const o=t||d.props&&d.props.type==="number";nr(e,r?"change":"input",v=>{if(v.target.composing)return;let h=e.value;a?h=h.trim():o&&(h=pi(h)),e._assign(h)}),a&&nr(e,"change",()=>{e.value=e.value.trim()}),r||(nr(e,"compositionstart",Qh),nr(e,"compositionend",ks),nr(e,"change",ks))},mounted(e,{value:r}){e.value=r==null?"":r},beforeUpdate(e,{value:r,modifiers:{lazy:a,trim:t,number:d}},o){if(e._assign=wr(o),e.composing||document.activeElement===e&&(a||t&&e.value.trim()===r||(d||e.type==="number")&&pi(e.value)===r))return;const v=r==null?"":r;e.value!==v&&(e.value=v)}},$h={deep:!0,created(e,r,a){e._assign=wr(a),nr(e,"change",()=>{const t=e._modelValue,d=ln(e),o=e.checked,v=e._assign;if(Le(t)){const h=$a(t,d),g=h!==-1;if(o&&!g)v(t.concat(d));else if(!o&&g){const b=[...t];b.splice(h,1),v(b)}}else if(un(t)){const h=new Set(t);o?h.add(d):h.delete(d),v(h)}else v(Pf(e,o))})},mounted:Cs,beforeUpdate(e,r,a){e._assign=wr(a),Cs(e,r,a)}};function Cs(e,{value:r,oldValue:a},t){e._modelValue=r,Le(r)?e.checked=$a(r,t.props.value)>-1:un(r)?e.checked=r.has(t.props.value):r!==a&&(e.checked=Zr(r,Pf(e,!0)))}const e0={created(e,{value:r},a){e.checked=Zr(r,a.props.value),e._assign=wr(a),nr(e,"change",()=>{e._assign(ln(e))})},beforeUpdate(e,{value:r,oldValue:a},t){e._assign=wr(t),r!==a&&(e.checked=Zr(r,t.props.value))}},t0={deep:!0,created(e,{value:r,modifiers:{number:a}},t){const d=un(r);nr(e,"change",()=>{const o=Array.prototype.filter.call(e.options,v=>v.selected).map(v=>a?pi(ln(v)):ln(v));e._assign(e.multiple?d?new Set(o):o:o[0])}),e._assign=wr(t)},mounted(e,{value:r}){Rs(e,r)},beforeUpdate(e,r,a){e._assign=wr(a)},updated(e,{value:r}){Rs(e,r)}};function Rs(e,r){const a=e.multiple;if(!(a&&!Le(r)&&!un(r))){for(let t=0,d=e.options.length;t<d;t++){const o=e.options[t],v=ln(o);if(a)Le(r)?o.selected=$a(r,v)>-1:o.selected=r.has(v);else if(Zr(ln(o),r)){e.selectedIndex!==t&&(e.selectedIndex=t);return}}!a&&e.selectedIndex!==-1&&(e.selectedIndex=-1)}}function ln(e){return"_value"in e?e._value:e.value}function Pf(e,r){const a=r?"_trueValue":"_falseValue";return a in e?e[a]:r}const r0={created(e,r,a){ti(e,r,a,null,"created")},mounted(e,r,a){ti(e,r,a,null,"mounted")},beforeUpdate(e,r,a,t){ti(e,r,a,t,"beforeUpdate")},updated(e,r,a,t){ti(e,r,a,t,"updated")}};function ti(e,r,a,t,d){let o;switch(e.tagName){case"SELECT":o=t0;break;case"TEXTAREA":o=Ss;break;default:switch(a.props&&a.props.type){case"checkbox":o=$h;break;case"radio":o=e0;break;default:o=Ss}}const v=o[d];v&&v(e,r,a,t)}const n0=["ctrl","shift","alt","meta"],i0={stop:e=>e.stopPropagation(),prevent:e=>e.preventDefault(),self:e=>e.target!==e.currentTarget,ctrl:e=>!e.ctrlKey,shift:e=>!e.shiftKey,alt:e=>!e.altKey,meta:e=>!e.metaKey,left:e=>"button"in e&&e.button!==0,middle:e=>"button"in e&&e.button!==1,right:e=>"button"in e&&e.button!==2,exact:(e,r)=>n0.some(a=>e[`${a}Key`]&&!r.includes(a))},fa=(e,r)=>(a,...t)=>{for(let d=0;d<r.length;d++){const o=i0[r[d]];if(o&&o(a,r))return}return e(a,...t)},a0={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},Pi=(e,r)=>a=>{if(!("key"in a))return;const t=Lr(a.key);if(r.some(d=>d===t||a0[d]===t))return e(a)},Lt={beforeMount(e,{value:r},{transition:a}){e._vod=e.style.display==="none"?"":e.style.display,a&&r?a.beforeEnter(e):yn(e,r)},mounted(e,{value:r},{transition:a}){a&&r&&a.enter(e)},updated(e,{value:r,oldValue:a},{transition:t}){!r!=!a&&(t?r?(t.beforeEnter(e),yn(e,!0),t.enter(e)):t.leave(e,()=>{yn(e,!1)}):yn(e,r))},beforeUnmount(e,{value:r}){yn(e,r)}};function yn(e,r){e.style.display=r?e._vod:"none"}const o0=Ot({patchProp:Wh},zh);let Fs;function s0(){return Fs||(Fs=hh(o0))}const l0=(...e)=>{const r=s0().createApp(...e),{mount:a}=r;return r.mount=t=>{const d=f0(t);if(!d)return;const o=r._component;!Xe(o)&&!o.render&&!o.template&&(o.template=d.innerHTML),d.innerHTML="";const v=a(d,!1,d instanceof SVGElement);return d instanceof Element&&(d.removeAttribute("v-cloak"),d.setAttribute("data-v-app","")),v},r};function f0(e){return dt(e)?document.querySelector(e):e}const Nf=String.prototype;Nf.capitalize=function(){return`${this[0].toUpperCase()}${this.substring(1).toLowerCase()}`};Nf.equals=function(e){return this.toLowerCase()===(e==null?void 0:e.toLowerCase())};class dn{constructor(r,a=!0){Array.isArray(r)?r.forEach((t,d)=>{const o=this.valueToKey(t);a?this[o]=d:this[o]=t}):Object.assign(this,r)}valueToKey(r){return String(r).split(/(?=[A-Z])|-/).map(a=>a.capitalize()).join("")}get count(){return this.keys.length}get keys(){return Object.keys(this)}get values(){return Object.keys(this).map(r=>this[r])}get options(){return Object.keys(this).map(r=>({id:this[r],value:r}))}toString(){const r=[];return Object.keys(this).forEach(t=>{const d=typeof this[t];r.push(`* @property {${d.capitalize()}} ${t}`)}),`/**
`+r.join(`
`)+`
 */`}}const Ct=new dn(["January","February","March","April","May","June","July","August","September","October","November","December"]),Ia=new dn(["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]),Nr=Date.prototype,Os=Ct.count,u0=Ia.count;Nr.getWeekStart=function(e={}){const{year:r=this.getFullYear(),yearOffset:a=0,month:t=this.getMonth(),dateOffset:d=0,isEnd:o=!1,startingDay:v=Ia.Monday,isWeek:h=!0}=e;let{monthOffset:g=0,date:b=this.getDate()}=e;!h&&o&&(g=1,b=0);const u=new Date(r+a,t+g,b+d);if(h){const f=u.getDay();v<f?u.setDate(u.getDate()-(f-v)):v>f&&u.setDate(u.getDate()-(f+(u0-v))),o&&u.setDate(u.getDate()+Ia.Saturday)}return u};Nr.getMonthStart=function(e={}){return e.isWeek=e.isWeek||!1,e.date=1,this.getWeekStart(e)};Nr.getMonthEnd=function(e={}){return e.isEnd=!0,this.getMonthStart(e)};Nr.getYearStart=function(e={}){return e.month=Ct.January,this.getMonthStart(e)};Nr.getYearEnd=function(e={}){return e.isEnd=!0,e.month=Ct.December,this.getMonthStart(e)};Nr.getQuarterStart=function(e={}){const{isEnd:r=!1}=e;let{month:a=this.getMonth()}=e;if(a=a+(e.monthOffset||0),a<0||a>Ct.December){const t=a<0?-1:1,d=Math.abs(a)/Os,o=t===-1?Math.ceil(d):Math.floor(d);a-=o*Os*t,e.yearOffset=(e.yearOffset||0)+o*t}return a<Ct.April?a=r?Ct.March:Ct.January:a<Ct.July?a=r?Ct.June:Ct.April:a<Ct.October?a=r?Ct.September:Ct.July:a=r?Ct.December:Ct.October,e.month=a,e.monthOffset=0,this.getMonthStart(e)};Nr.getQuarterEnd=function(e={}){return e.isEnd=!0,this.getQuarterStart(e)};Nr.toMMDDYYYY=function(){return Intl.DateTimeFormat("en-US",{month:"2-digit",day:"2-digit",year:"numeric"}).format(this)};function c0(e){return e===void 0}function h0(e){return e===null}function Ef(e){return e!=null}function er(e){return c0(e)||h0(e)||kf(e)&&isNaN(e)||e===""||Ma(e)&&e.length===0||v0(e)&&Object.values(e).length===0}function d0(e){return typeof e=="string"}function kf(e){return typeof e=="number"}function p0(e){return typeof e=="boolean"}function Ma(e){return Array.isArray(e)}function v0(e){return(e==null?void 0:e.constructor)===Object}function m0(e){return typeof e=="function"}function Is(e,r){return e===r||e.contains(r)}function Sf(e,r=2){if(Ef(e))return e=kf(e)?e:parseFloat(e),+e.toFixed(r)}function g0(e){return Sf(e,0)}function b0(e){return p0(e)?e:e==="false"||e==="0"?!1:!!e}function y0(e){if(Ef(e))return d0(e)?e:String(e)}const Po=Array.prototype;Po.remove=function(e){let r=e;m0(r)||(r=t=>t===e);const a=this.findIndex(r);a!==-1&&this.splice(a,1)};Po.add=function(e,r=this.length){return this.splice(r,0,e),e};Po.addUnique=function(e,r){const a=this.find(t=>t===e);return a||(this.add(e,r),e)};/**
  * vee-validate v4.5.11
  * (c) 2022 Abdelrahman Awad
  * @license MIT
  */function jr(e){return typeof e=="function"}function Ni(e){return e==null}const fn=e=>e!==null&&!!e&&typeof e=="object"&&!Array.isArray(e);function Cf(e){return Number(e)>=0}function w0(e){const r=parseFloat(e);return isNaN(r)?e:r}const Rf={};function pn(e,r){A0(e,r),Rf[e]=r}function x0(e){return Rf[e]}function A0(e,r){if(!jr(r))throw new Error(`Extension Error: The validator '${e}' must be a function.`)}const qr=Symbol("vee-validate-form"),P0=Symbol("vee-validate-field-instance"),li=Symbol("Default empty value");function za(e){return jr(e)&&!!e.__locatorRef}function N0(e){return["input","textarea","select"].includes(e)}function E0(e,r){return N0(e)&&r.type==="file"}function Cn(e){return!!e&&jr(e.validate)}function Dn(e){return e==="checkbox"||e==="radio"}function k0(e){return fn(e)||Array.isArray(e)}function S0(e){return Array.isArray(e)?e.length===0:fn(e)&&Object.keys(e).length===0}function qi(e){return/^\[.+\]$/i.test(e)}function C0(e){return Ff(e)&&e.multiple}function Ff(e){return e.tagName==="SELECT"}function R0(e,r){const a=![!1,null,void 0,0].includes(r.multiple)&&!Number.isNaN(r.multiple);return e==="select"&&"multiple"in r&&a}function F0(e,r){return R0(e,r)||E0(e,r)}function O0(e){return No(e)&&e.target&&"submit"in e.target}function No(e){return e?!!(typeof Event!="undefined"&&jr(Event)&&e instanceof Event||e&&e.srcElement):!1}function Ta(e,r){return r in e&&e[r]!==li}function Eo(e){return qi(e)?e.replace(/\[|\]/gi,""):e}function yt(e,r,a){return e?qi(r)?e[Eo(r)]:(r||"").split(/\.|\[(\d+)\]/).filter(Boolean).reduce((d,o)=>k0(d)&&o in d?d[o]:a,e):a}function Qr(e,r,a){if(qi(r)){e[Eo(r)]=a;return}const t=r.split(/\.|\[(\d+)\]/).filter(Boolean);let d=e;for(let o=0;o<t.length;o++){if(o===t.length-1){d[t[o]]=a;return}(!(t[o]in d)||Ni(d[t[o]]))&&(d[t[o]]=Cf(t[o+1])?[]:{}),d=d[t[o]]}}function ua(e,r){if(Array.isArray(e)&&Cf(r)){e.splice(Number(r),1);return}fn(e)&&delete e[r]}function ca(e,r){if(qi(r)){delete e[Eo(r)];return}const a=r.split(/\.|\[(\d+)\]/).filter(Boolean);let t=e;for(let o=0;o<a.length;o++){if(o===a.length-1){ua(t,a[o]);break}if(!(a[o]in t)||Ni(t[a[o]]))break;t=t[a[o]]}const d=a.map((o,v)=>yt(e,a.slice(0,v).join(".")));for(let o=d.length-1;o>=0;o--)if(!!S0(d[o])){if(o===0){ua(e,a[0]);continue}ua(d[o-1],a[o-1])}}function Nt(e){return Object.keys(e)}function Yn(e,r=void 0){const a=Nh();return(a==null?void 0:a.provides[e])||Hr(e,r)}function Ms(e){Vl(`[vee-validate]: ${e}`)}function Ha(e,r,a){if(Array.isArray(e)){const t=[...e],d=t.indexOf(r);return d>=0?t.splice(d,1):t.push(r),t}return e===r?a:r}function I0(e,r=0){let a=null,t=[];return function(...d){return a&&window.clearTimeout(a),a=window.setTimeout(()=>{const o=e(...d);t.forEach(v=>v(o)),t=[]},r),new Promise(o=>t.push(o))}}const Ui=(e,r,a)=>r.slots.default?typeof e=="string"||!e?r.slots.default(a()):{default:()=>{var t,d;return(d=(t=r.slots).default)===null||d===void 0?void 0:d.call(t,a())}}:r.slots.default;function ha(e){if(Of(e))return e._value}function Of(e){return"_value"in e}function ko(e){if(!No(e))return e;const r=e.target;if(Dn(r.type)&&Of(r))return ha(r);if(r.type==="file"&&r.files)return Array.from(r.files);if(C0(r))return Array.from(r.options).filter(a=>a.selected&&!a.disabled).map(ha);if(Ff(r)){const a=Array.from(r.options).find(t=>t.selected);return a?ha(a):r.value}return r.value}function If(e){const r={};return Object.defineProperty(r,"_$$isNormalized",{value:!0,writable:!1,enumerable:!1,configurable:!1}),e?fn(e)&&e._$$isNormalized?e:fn(e)?Object.keys(e).reduce((a,t)=>{const d=M0(e[t]);return e[t]!==!1&&(a[t]=zs(d)),a},r):typeof e!="string"?r:e.split("|").reduce((a,t)=>{const d=z0(t);return d.name&&(a[d.name]=zs(d.params)),a},r):r}function M0(e){return e===!0?[]:Array.isArray(e)||fn(e)?e:[e]}function zs(e){const r=a=>typeof a=="string"&&a[0]==="@"?T0(a.slice(1)):a;return Array.isArray(e)?e.map(r):e instanceof RegExp?[e]:Object.keys(e).reduce((a,t)=>(a[t]=r(e[t]),a),{})}const z0=e=>{let r=[];const a=e.split(":")[0];return e.includes(":")&&(r=e.split(":").slice(1).join(":").split(",")),{name:a,params:r}};function T0(e){const r=a=>yt(a,e)||a[e];return r.__locatorRef=e,r}function H0(e){return Array.isArray(e)?e.filter(za):Nt(e).filter(r=>za(e[r])).map(r=>e[r])}const B0={generateMessage:({field:e})=>`${e} is not valid.`,bails:!0,validateOnBlur:!0,validateOnChange:!0,validateOnInput:!1,validateOnModelUpdate:!0};let Ba=Object.assign({},B0);const So=()=>Ba,D0=e=>{Ba=Object.assign(Object.assign({},Ba),e)},Z0=D0;async function Mf(e,r,a={}){const t=a==null?void 0:a.bails,d={name:(a==null?void 0:a.name)||"{field}",rules:r,bails:t!=null?t:!0,formData:(a==null?void 0:a.values)||{}},v=(await j0(d,e)).errors;return{errors:v,valid:!v.length}}async function j0(e,r){if(Cn(e.rules))return G0(r,e.rules,{bails:e.bails});if(jr(e.rules)||Array.isArray(e.rules)){const v={field:e.name,form:e.formData,value:r},h=Array.isArray(e.rules)?e.rules:[e.rules],g=h.length,b=[];for(let u=0;u<g;u++){const s=await h[u](r,v);if(typeof s!="string"&&s)continue;const n=typeof s=="string"?s:zf(v);if(b.push(n),e.bails)return{errors:b}}return{errors:b}}const a=Object.assign(Object.assign({},e),{rules:If(e.rules)}),t=[],d=Object.keys(a.rules),o=d.length;for(let v=0;v<o;v++){const h=d[v],g=await V0(a,r,{name:h,params:a.rules[h]});if(g.error&&(t.push(g.error),e.bails))return{errors:t}}return{errors:t}}async function G0(e,r,a){var t;return{errors:await r.validate(e,{abortEarly:(t=a.bails)!==null&&t!==void 0?t:!0}).then(()=>[]).catch(o=>{if(o.name==="ValidationError")return o.errors;throw o})}}async function V0(e,r,a){const t=x0(a.name);if(!t)throw new Error(`No such validator '${a.name}' exists.`);const d=L0(a.params,e.formData),o={field:e.name,value:r,form:e.formData,rule:Object.assign(Object.assign({},a),{params:d})},v=await t(r,d,o);return typeof v=="string"?{error:v}:{error:v?void 0:zf(o)}}function zf(e){const r=So().generateMessage;return r?r(e):"Field is invalid"}function L0(e,r){const a=t=>za(t)?t(r):t;return Array.isArray(e)?e.map(a):Object.keys(e).reduce((t,d)=>(t[d]=a(e[d]),t),{})}async function Y0(e,r){const a=await e.validate(r,{abortEarly:!1}).then(()=>[]).catch(o=>{if(o.name!=="ValidationError")throw o;return o.inner||[]}),t={},d={};for(const o of a){const v=o.errors;t[o.path]={valid:!v.length,errors:v},v.length&&(d[o.path]=v[0])}return{valid:!a.length,results:t,errors:d}}async function J0(e,r,a){const d=Nt(e).map(async b=>{var u,f,s;const i=await Mf(yt(r,b),e[b],{name:((u=a==null?void 0:a.names)===null||u===void 0?void 0:u[b])||b,values:r,bails:(s=(f=a==null?void 0:a.bailsMap)===null||f===void 0?void 0:f[b])!==null&&s!==void 0?s:!0});return Object.assign(Object.assign({},i),{path:b})});let o=!0;const v=await Promise.all(d),h={},g={};for(const b of v)h[b.path]={valid:b.valid,errors:b.errors},b.valid||(o=!1,g[b.path]=b.errors[0]);return{valid:o,results:h,errors:g}}function Ts(e,r,a){typeof a.value=="object"&&(a.value=vt(a.value)),!a.enumerable||a.get||a.set||!a.configurable||!a.writable||r==="__proto__"?Object.defineProperty(e,r,a):e[r]=a.value}function vt(e){if(typeof e!="object")return e;var r=0,a,t,d,o=Object.prototype.toString.call(e);if(o==="[object Object]"?d=Object.create(e.__proto__||null):o==="[object Array]"?d=Array(e.length):o==="[object Set]"?(d=new Set,e.forEach(function(v){d.add(vt(v))})):o==="[object Map]"?(d=new Map,e.forEach(function(v,h){d.set(vt(h),vt(v))})):o==="[object Date]"?d=new Date(+e):o==="[object RegExp]"?d=new RegExp(e.source,e.flags):o==="[object DataView]"?d=new e.constructor(vt(e.buffer)):o==="[object ArrayBuffer]"?d=e.slice(0):o.slice(-6)==="Array]"&&(d=new e.constructor(e)),d){for(t=Object.getOwnPropertySymbols(e);r<t.length;r++)Ts(d,t[r],Object.getOwnPropertyDescriptor(e,t[r]));for(r=0,t=Object.getOwnPropertyNames(e);r<t.length;r++)Object.hasOwnProperty.call(d,a=t[r])&&d[a]===e[a]||Ts(d,a,Object.getOwnPropertyDescriptor(e,a))}return d||e}var Ei=function e(r,a){if(r===a)return!0;if(r&&a&&typeof r=="object"&&typeof a=="object"){if(r.constructor!==a.constructor)return!1;var t,d,o;if(Array.isArray(r)){if(t=r.length,t!=a.length)return!1;for(d=t;d--!==0;)if(!e(r[d],a[d]))return!1;return!0}if(r instanceof Map&&a instanceof Map){if(r.size!==a.size)return!1;for(d of r.entries())if(!a.has(d[0]))return!1;for(d of r.entries())if(!e(d[1],a.get(d[0])))return!1;return!0}if(r instanceof Set&&a instanceof Set){if(r.size!==a.size)return!1;for(d of r.entries())if(!a.has(d[0]))return!1;return!0}if(ArrayBuffer.isView(r)&&ArrayBuffer.isView(a)){if(t=r.length,t!=a.length)return!1;for(d=t;d--!==0;)if(r[d]!==a[d])return!1;return!0}if(r.constructor===RegExp)return r.source===a.source&&r.flags===a.flags;if(r.valueOf!==Object.prototype.valueOf)return r.valueOf()===a.valueOf();if(r.toString!==Object.prototype.toString)return r.toString()===a.toString();if(o=Object.keys(r),t=o.length,t!==Object.keys(a).length)return!1;for(d=t;d--!==0;)if(!Object.prototype.hasOwnProperty.call(a,o[d]))return!1;for(d=t;d--!==0;){var v=o[d];if(!e(r[v],a[v]))return!1}return!0}return r!==r&&a!==a};let Hs=0;function X0(e,r){const{value:a,initialValue:t,setInitialValue:d}=q0(e,r.modelValue,!r.standalone),{errorMessage:o,errors:v,setErrors:h}=W0(e,!r.standalone),g=U0(a,t,v),b=Hs>=Number.MAX_SAFE_INTEGER?0:++Hs;function u(f){var s;"value"in f&&(a.value=f.value),"errors"in f&&h(f.errors),"touched"in f&&(g.touched=(s=f.touched)!==null&&s!==void 0?s:g.touched),"initialValue"in f&&d(f.initialValue)}return{id:b,path:e,value:a,initialValue:t,meta:g,errors:v,errorMessage:o,setState:u}}function q0(e,r,a){const t=a?Yn(qr,void 0):void 0,d=Ue(Ge(r));function o(){return t?yt(t.meta.value.initialValues,Ge(e),Ge(d)):Ge(d)}function v(u){if(!t){d.value=u;return}t.setFieldInitialValue(Ge(e),u)}const h=Ye(o);if(!t)return{value:Ue(o()),initialValue:h,setInitialValue:v};const g=r?Ge(r):yt(t.values,Ge(e),Ge(h));return t.stageInitialValue(Ge(e),g),{value:Ye({get(){return yt(t.values,Ge(e))},set(u){t.setFieldValue(Ge(e),u)}}),initialValue:h,setInitialValue:v}}function U0(e,r,a){const t=Pr({touched:!1,pending:!1,valid:!0,validated:!!Ge(a).length,initialValue:Ye(()=>Ge(r)),dirty:Ye(()=>!Ei(Ge(e),Ge(r)))});return et(a,d=>{t.valid=!d.length},{immediate:!0,flush:"sync"}),t}function W0(e,r){const a=r?Yn(qr,void 0):void 0;function t(o){return o?Array.isArray(o)?o:[o]:[]}if(!a){const o=Ue([]);return{errors:o,errorMessage:Ye(()=>o.value[0]),setErrors:v=>{o.value=t(v)}}}const d=Ye(()=>a.errorBag.value[Ge(e)]||[]);return{errors:d,errorMessage:Ye(()=>d.value[0]),setErrors:o=>{a.setFieldErrorBag(Ge(e),t(o))}}}function Tf(e,r,a){return Dn(a==null?void 0:a.type)?_0(e,r,a):Hf(e,r,a)}function Hf(e,r,a){const{initialValue:t,validateOnMount:d,bails:o,type:v,checkedValue:h,label:g,validateOnValueUpdate:b,uncheckedValue:u,standalone:f}=K0(Ge(e),a),s=f?void 0:Yn(qr);let i=!1;const{id:n,value:p,initialValue:y,meta:l,setState:m,errors:c,errorMessage:w}=X0(e,{modelValue:t,standalone:f}),x=()=>{l.touched=!0},A=Ye(()=>{let U=Ge(r);const ie=Ge(s==null?void 0:s.schema);return ie&&!Cn(ie)&&(U=Q0(ie,Ge(e))||U),Cn(U)||jr(U)||Array.isArray(U)?U:If(U)});async function N(U){var ie,se;return s!=null&&s.validateSchema?(ie=(await s.validateSchema(U)).results[Ge(e)])!==null&&ie!==void 0?ie:{valid:!0,errors:[]}:Mf(p.value,A.value,{name:Ge(g)||Ge(e),values:(se=s==null?void 0:s.values)!==null&&se!==void 0?se:{},bails:o})}async function E(){l.pending=!0,l.validated=!0;const U=await N("validated-only");return i&&(U.valid=!0,U.errors=[]),m({errors:U.errors}),l.pending=!1,U}async function k(){const U=await N("silent");return i&&(U.valid=!0),l.valid=U.valid,U}function S(U){return!(U!=null&&U.mode)||(U==null?void 0:U.mode)==="force"||(U==null?void 0:U.mode)==="validated-only"?E():k()}const R=(U,ie=!0)=>{const se=ko(U);p.value=se,!b&&ie&&E()};cn(()=>{if(d)return E();(!s||!s.validateSchema)&&k()});function M(U){l.touched=U}let B;function I(){B=et(p,b?E:k,{deep:!0})}I();function Y(U){var ie;B==null||B();const se=U&&"value"in U?U.value:y.value;m({value:vt(se),initialValue:vt(se),touched:(ie=U==null?void 0:U.touched)!==null&&ie!==void 0?ie:!1,errors:(U==null?void 0:U.errors)||[]}),l.pending=!1,l.validated=!1,k(),Ir(()=>{I()})}function J(U){p.value=U}function D(U){m({errors:Array.isArray(U)?U:[U]})}const T={id:n,name:e,label:g,value:p,meta:l,errors:c,errorMessage:w,type:v,checkedValue:h,uncheckedValue:u,bails:o,resetField:Y,handleReset:()=>Y(),validate:S,handleChange:R,handleBlur:x,setState:m,setTouched:M,setErrors:D,setValue:J};if(Li(P0,T),lt(r)&&typeof Ge(r)!="function"&&et(r,(U,ie)=>{Ei(U,ie)||(l.validated?E():k())},{deep:!0}),!s)return T;s.register(T),Vn(()=>{i=!0,s.unregister(T)});const G=Ye(()=>{const U=A.value;return!U||jr(U)||Cn(U)||Array.isArray(U)?{}:Object.keys(U).reduce((ie,se)=>{const ae=H0(U[se]).map(W=>W.__locatorRef).reduce((W,ee)=>{const _=yt(s.values,ee)||s.values[ee];return _!==void 0&&(W[ee]=_),W},{});return Object.assign(ie,ae),ie},{})});return et(G,(U,ie)=>{if(!Object.keys(U).length)return;!Ei(U,ie)&&(l.validated?E():k())}),T}function K0(e,r){const a=()=>({initialValue:void 0,validateOnMount:!1,bails:!0,rules:"",label:e,validateOnValueUpdate:!0,standalone:!1});if(!r)return a();const t="valueProp"in r?r.valueProp:r.checkedValue;return Object.assign(Object.assign(Object.assign({},a()),r||{}),{checkedValue:t})}function Q0(e,r){if(!!e)return e[r]}function _0(e,r,a){const t=a!=null&&a.standalone?void 0:Yn(qr),d=a==null?void 0:a.checkedValue,o=a==null?void 0:a.uncheckedValue;function v(h){const g=h.handleChange,b=Ye(()=>{const f=Ge(h.value),s=Ge(d);return Array.isArray(f)?f.includes(s):s===f});function u(f,s=!0){var i,n;if(b.value===((n=(i=f)===null||i===void 0?void 0:i.target)===null||n===void 0?void 0:n.checked))return;let p=ko(f);t||(p=Ha(Ge(h.value),Ge(d),Ge(o))),g(p,s)}return Vn(()=>{b.value&&u(Ge(d),!1)}),Object.assign(Object.assign({},h),{checked:b,checkedValue:d,uncheckedValue:o,handleChange:u})}return v(Hf(e,r,a))}Xr({name:"Field",inheritAttrs:!1,props:{as:{type:[String,Object],default:void 0},name:{type:String,required:!0},rules:{type:[Object,String,Function],default:void 0},validateOnMount:{type:Boolean,default:!1},validateOnBlur:{type:Boolean,default:void 0},validateOnChange:{type:Boolean,default:void 0},validateOnInput:{type:Boolean,default:void 0},validateOnModelUpdate:{type:Boolean,default:void 0},bails:{type:Boolean,default:()=>So().bails},label:{type:String,default:void 0},uncheckedValue:{type:null,default:void 0},modelValue:{type:null,default:li},modelModifiers:{type:null,default:()=>({})},"onUpdate:modelValue":{type:null,default:void 0},standalone:{type:Boolean,default:!1}},setup(e,r){const a=tr(e,"rules"),t=tr(e,"name"),d=tr(e,"label"),o=tr(e,"uncheckedValue"),v=Ta(e,"onUpdate:modelValue"),{errors:h,value:g,errorMessage:b,validate:u,handleChange:f,handleBlur:s,setTouched:i,resetField:n,handleReset:p,meta:y,checked:l,setErrors:m}=Tf(t,a,{validateOnMount:e.validateOnMount,bails:e.bails,standalone:e.standalone,type:r.attrs.type,initialValue:td(e,r),checkedValue:r.attrs.value,uncheckedValue:o,label:d,validateOnValueUpdate:!1}),c=v?function(S,R=!0){f(S,R),r.emit("update:modelValue",g.value)}:f,w=k=>{Dn(r.attrs.type)||(g.value=ko(k))},x=v?function(S){w(S),r.emit("update:modelValue",g.value)}:w,A=Ye(()=>{const{validateOnInput:k,validateOnChange:S,validateOnBlur:R,validateOnModelUpdate:M}=$0(e),B=[s,r.attrs.onBlur,R?u:void 0].filter(Boolean),I=[T=>c(T,k),r.attrs.onInput].filter(Boolean),Y=[T=>c(T,S),r.attrs.onChange].filter(Boolean),J={name:e.name,onBlur:B,onInput:I,onChange:Y};J["onUpdate:modelValue"]=T=>c(T,M),Dn(r.attrs.type)&&l?J.checked=l.value:J.value=g.value;const D=Bs(e,r);return F0(D,r.attrs)&&delete J.value,J}),N=tr(e,"modelValue");et(N,k=>{k===li&&g.value===void 0||k!==ed(g.value,e.modelModifiers)&&(g.value=k===li?void 0:k,u())});function E(){return{field:A.value,value:g.value,meta:y,errors:h.value,errorMessage:b.value,validate:u,resetField:n,handleChange:c,handleInput:x,handleReset:p,handleBlur:s,setTouched:i,setErrors:m}}return r.expose({setErrors:m,setTouched:i,reset:n,validate:u,handleChange:f}),()=>{const k=yo(Bs(e,r)),S=Ui(k,r,E);return k?sn(k,Object.assign(Object.assign({},r.attrs),A.value),S):S}}});function Bs(e,r){let a=e.as||"";return!e.as&&!r.slots.default&&(a="input"),a}function $0(e){var r,a,t,d;const{validateOnInput:o,validateOnChange:v,validateOnBlur:h,validateOnModelUpdate:g}=So();return{validateOnInput:(r=e.validateOnInput)!==null&&r!==void 0?r:o,validateOnChange:(a=e.validateOnChange)!==null&&a!==void 0?a:v,validateOnBlur:(t=e.validateOnBlur)!==null&&t!==void 0?t:h,validateOnModelUpdate:(d=e.validateOnModelUpdate)!==null&&d!==void 0?d:g}}function ed(e,r){return r.number?w0(e):e}function td(e,r){return Dn(r.attrs.type)?Ta(e,"modelValue")?e.modelValue:void 0:Ta(e,"modelValue")?e.modelValue:r.attrs.value}let rd=0;function nd(e){const r=rd++;let a=!1;const t=Ue({}),d=Ue(!1),o=Ue(0),v={},h=Pr(vt(Ge(e==null?void 0:e.initialValues)||{})),{errorBag:g,setErrorBag:b,setFieldErrorBag:u}=od(e==null?void 0:e.initialErrors),f=Ye(()=>Nt(g.value).reduce((oe,ce)=>{const X=g.value[ce];return X&&X.length&&(oe[ce]=X[0]),oe},{}));function s(oe){const ce=t.value[oe];return Array.isArray(ce)?ce[0]:ce}function i(oe){return!!t.value[oe]}const n=Ye(()=>Nt(t.value).reduce((oe,ce)=>{const X=s(ce);return X&&(oe[ce]=Ge(X.label||X.name)||""),oe},{})),p=Ye(()=>Nt(t.value).reduce((oe,ce)=>{var X;const K=s(ce);return K&&(oe[ce]=(X=K.bails)!==null&&X!==void 0?X:!0),oe},{})),y=Object.assign({},(e==null?void 0:e.initialErrors)||{}),{initialValues:l,originalInitialValues:m,setInitialValues:c}=ad(t,h,e==null?void 0:e.initialValues),w=id(t,h,l,f),x=e==null?void 0:e.validationSchema,A={formId:r,fieldsByPath:t,values:h,errorBag:g,errors:f,schema:x,submitCount:o,meta:w,isSubmitting:d,fieldArraysLookup:v,validateSchema:Ge(x)?pe:void 0,validate:ie,register:G,unregister:U,setFieldErrorBag:u,validateField:se,setFieldValue:M,setValues:B,setErrors:R,setFieldError:S,setFieldTouched:I,setTouched:Y,resetForm:J,handleSubmit:ae,stageInitialValue:_,unsetInitialValue:ee,setFieldInitialValue:W};function N(oe){return Array.isArray(oe)}function E(oe,ce){return Array.isArray(oe)?oe.forEach(ce):ce(oe)}function k(oe){Object.values(t.value).forEach(ce=>{!ce||E(ce,oe)})}function S(oe,ce){u(oe,ce)}function R(oe){b(oe)}function M(oe,ce,{force:X}={force:!1}){var K;const L=t.value[oe],$=vt(ce);if(!L){Qr(h,oe,$);return}if(N(L)&&((K=L[0])===null||K===void 0?void 0:K.type)==="checkbox"&&!Array.isArray(ce)){const V=vt(Ha(yt(h,oe)||[],ce,void 0));Qr(h,oe,V);return}let te=ce;!N(L)&&L.type==="checkbox"&&!X&&!a&&(te=vt(Ha(yt(h,oe),ce,Ge(L.uncheckedValue)))),Qr(h,oe,te)}function B(oe){Nt(h).forEach(ce=>{delete h[ce]}),Nt(oe).forEach(ce=>{M(ce,oe[ce])}),Object.values(v).forEach(ce=>ce&&ce.reset())}function I(oe,ce){const X=t.value[oe];X&&E(X,K=>K.setTouched(ce))}function Y(oe){Nt(oe).forEach(ce=>{I(ce,!!oe[ce])})}function J(oe){a=!0,oe!=null&&oe.values?(c(oe.values),B(oe==null?void 0:oe.values)):(c(m.value),B(m.value)),k(ce=>ce.resetField()),oe!=null&&oe.touched&&Y(oe.touched),R((oe==null?void 0:oe.errors)||{}),o.value=(oe==null?void 0:oe.submitCount)||0,Ir(()=>{a=!1})}function D(oe,ce){const X=uo(oe),K=ce;if(!t.value[K]){t.value[K]=X;return}const L=t.value[K];L&&!Array.isArray(L)&&(t.value[K]=[L]),t.value[K]=[...t.value[K],X]}function T(oe,ce){const X=ce,K=t.value[X];if(!!K){if(!N(K)&&oe.id===K.id){delete t.value[X];return}if(N(K)){const L=K.findIndex($=>$.id===oe.id);if(L===-1)return;if(K.splice(L,1),K.length===1){t.value[X]=K[0];return}K.length||delete t.value[X]}}}function G(oe){const ce=Ge(oe.name);D(oe,ce),lt(oe.name)&&et(oe.name,async(K,L)=>{await Ir(),T(oe,L),D(oe,K),(f.value[L]||f.value[K])&&(S(L,void 0),se(K)),await Ir(),i(L)||ca(h,L)});const X=Ge(oe.errorMessage);X&&(y==null?void 0:y[ce])!==X&&se(ce),delete y[ce]}function U(oe){const ce=Ge(oe.name);T(oe,ce),Ir(()=>{i(ce)||(S(ce,void 0),ca(h,ce))})}async function ie(oe){if(k(L=>L.meta.validated=!0),A.validateSchema)return A.validateSchema((oe==null?void 0:oe.mode)||"force");const ce=await Promise.all(Object.values(t.value).map(L=>{const $=Array.isArray(L)?L[0]:L;return $?$.validate(oe).then(te=>({key:Ge($.name),valid:te.valid,errors:te.errors})):Promise.resolve({key:"",valid:!0,errors:[]})})),X={},K={};for(const L of ce)X[L.key]={valid:L.valid,errors:L.errors},L.errors.length&&(K[L.key]=L.errors[0]);return{valid:ce.every(L=>L.valid),results:X,errors:K}}async function se(oe){const ce=t.value[oe];return ce?Array.isArray(ce)?ce.map(X=>X.validate())[0]:ce.validate():(Vl(`field with name ${oe} was not found`),Promise.resolve({errors:[],valid:!0}))}function ae(oe,ce){return function(K){return K instanceof Event&&(K.preventDefault(),K.stopPropagation()),Y(Nt(t.value).reduce((L,$)=>(L[$]=!0,L),{})),d.value=!0,o.value++,ie().then(L=>{if(L.valid&&typeof oe=="function")return oe(vt(h),{evt:K,setErrors:R,setFieldError:S,setTouched:Y,setFieldTouched:I,setValues:B,setFieldValue:M,resetForm:J});!L.valid&&typeof ce=="function"&&ce({values:vt(h),evt:K,errors:L.errors,results:L.results})}).then(L=>(d.value=!1,L),L=>{throw d.value=!1,L})}}function W(oe,ce){Qr(l.value,oe,vt(ce))}function ee(oe){ca(l.value,oe)}function _(oe,ce){Qr(h,oe,ce),W(oe,ce)}async function re(){const oe=Ge(x);return oe?Cn(oe)?await Y0(oe,h):await J0(oe,h,{names:n.value,bailsMap:p.value}):{valid:!0,results:{},errors:{}}}const fe=I0(re,5);async function pe(oe){const ce=await fe(),X=A.fieldsByPath.value||{},K=Nt(A.errorBag.value);return[...new Set([...Nt(ce.results),...Nt(X),...K])].reduce(($,te)=>{const V=X[te],z=(ce.results[te]||{errors:[]}).errors,F={errors:z,valid:!z.length};if($.results[te]=F,F.valid||($.errors[te]=F.errors[0]),!V)return S(te,z),$;if(E(V,H=>H.meta.valid=F.valid),oe==="silent")return $;const q=Array.isArray(V)?V.some(H=>H.meta.validated):V.meta.validated;return oe==="validated-only"&&!q||E(V,H=>H.setState({errors:F.errors})),$},{valid:ce.valid,results:{},errors:{}})}const he=ae((oe,{evt:ce})=>{O0(ce)&&ce.target.submit()});return cn(()=>{if(e!=null&&e.initialErrors&&R(e.initialErrors),e!=null&&e.initialTouched&&Y(e.initialTouched),e!=null&&e.validateOnMount){ie();return}A.validateSchema&&A.validateSchema("silent")}),lt(x)&&et(x,()=>{var oe;(oe=A.validateSchema)===null||oe===void 0||oe.call(A,"validated-only")}),Li(qr,A),{errors:f,meta:w,values:h,isSubmitting:d,submitCount:o,validate:ie,validateField:se,handleReset:()=>J(),resetForm:J,handleSubmit:ae,submitForm:he,setFieldError:S,setErrors:R,setFieldValue:M,setValues:B,setFieldTouched:I,setTouched:Y}}function id(e,r,a,t){const d={touched:"some",pending:"some",valid:"every"},o=Ye(()=>!Ei(r,Ge(a)));function v(){const g=Object.values(e.value).flat(1).filter(Boolean);return Nt(d).reduce((b,u)=>{const f=d[u];return b[u]=g[f](s=>s.meta[u]),b},{})}const h=Pr(v());return Lc(()=>{const g=v();h.touched=g.touched,h.valid=g.valid,h.pending=g.pending}),Ye(()=>Object.assign(Object.assign({initialValues:Ge(a)},h),{valid:h.valid&&!Nt(t.value).length,dirty:o.value}))}function ad(e,r,a){const t=Ue(vt(Ge(a))||{}),d=Ue(vt(Ge(a))||{});function o(v,h=!1){t.value=vt(v),d.value=vt(v),h&&Nt(e.value).forEach(g=>{const b=e.value[g],u=Array.isArray(b)?b.some(s=>s.meta.touched):b==null?void 0:b.meta.touched;if(!b||u)return;const f=yt(t.value,g);Qr(r,g,vt(f))})}return lt(a)&&et(a,v=>{o(v,!0)},{deep:!0}),{initialValues:t,originalInitialValues:d,setInitialValues:o}}function od(e){const r=Ue({});function a(o){return Array.isArray(o)?o:o?[o]:[]}function t(o,v){if(!v){delete r.value[o];return}r.value[o]=a(v)}function d(o){r.value=Nt(o).reduce((v,h)=>{const g=o[h];return g&&(v[h]=a(g)),v},{})}return e&&d(e),{errorBag:r,setErrorBag:d,setFieldErrorBag:t}}Xr({name:"Form",inheritAttrs:!1,props:{as:{type:String,default:"form"},validationSchema:{type:Object,default:void 0},initialValues:{type:Object,default:void 0},initialErrors:{type:Object,default:void 0},initialTouched:{type:Object,default:void 0},validateOnMount:{type:Boolean,default:!1},onSubmit:{type:Function,default:void 0},onInvalidSubmit:{type:Function,default:void 0}},setup(e,r){const a=tr(e,"initialValues"),t=tr(e,"validationSchema"),{errors:d,values:o,meta:v,isSubmitting:h,submitCount:g,validate:b,validateField:u,handleReset:f,resetForm:s,handleSubmit:i,submitForm:n,setErrors:p,setFieldError:y,setFieldValue:l,setValues:m,setFieldTouched:c,setTouched:w}=nd({validationSchema:t.value?t:void 0,initialValues:a,initialErrors:e.initialErrors,initialTouched:e.initialTouched,validateOnMount:e.validateOnMount}),x=e.onSubmit?i(e.onSubmit,e.onInvalidSubmit):n;function A(k){No(k)&&k.preventDefault(),f(),typeof r.attrs.onReset=="function"&&r.attrs.onReset()}function N(k,S){return i(typeof k=="function"&&!S?k:S,e.onInvalidSubmit)(k)}function E(){return{meta:v.value,errors:d.value,values:o,isSubmitting:h.value,submitCount:g.value,validate:b,validateField:u,handleSubmit:N,handleReset:f,submitForm:n,setErrors:p,setFieldError:y,setFieldValue:l,setValues:m,setFieldTouched:c,setTouched:w,resetForm:s}}return r.expose({setFieldError:y,setErrors:p,setFieldValue:l,setValues:m,setFieldTouched:c,setTouched:w,resetForm:s,validate:b,validateField:u}),function(){const S=e.as==="form"?e.as:yo(e.as),R=Ui(S,r,E);if(!e.as)return R;const M=e.as==="form"?{novalidate:!0}:{};return sn(S,Object.assign(Object.assign(Object.assign({},M),r.attrs),{onSubmit:x,onReset:A}),R)}}});let sd=0;function ld(e){const r=sd++,a=Yn(qr,void 0),t=Ue([]),d=()=>{},o={fields:vi(t),remove:d,push:d,swap:d,insert:d,update:d,replace:d,prepend:d};if(!a)return Ms("FieldArray requires being a child of `<Form/>` or `useForm` being called before it. Array fields may not work correctly"),o;if(!Ge(e))return Ms("FieldArray requires a field path to be provided, did you forget to pass the `name` prop?"),o;let v=0;function h(){const l=yt(a==null?void 0:a.values,Ge(e),[]);t.value=l.map(b),g()}h();function g(){const l=t.value.length;for(let m=0;m<l;m++){const c=t.value[m];c.isFirst=m===0,c.isLast=m===l-1}}function b(l){const m=v++;return{key:m,value:Ye(()=>{const w=yt(a==null?void 0:a.values,Ge(e),[]),x=t.value.findIndex(A=>A.key===m);return x===-1?l:w[x]}),isFirst:!1,isLast:!1}}function u(l){const m=Ge(e),c=yt(a==null?void 0:a.values,m);if(!c||!Array.isArray(c))return;const w=[...c];w.splice(l,1),a==null||a.unsetInitialValue(m+`[${l}]`),a==null||a.setFieldValue(m,w),t.value.splice(l,1),g()}function f(l){const m=Ge(e),c=yt(a==null?void 0:a.values,m),w=Ni(c)?[]:c;if(!Array.isArray(w))return;const x=[...w];x.push(l),a==null||a.stageInitialValue(m+`[${x.length-1}]`,l),a==null||a.setFieldValue(m,x),t.value.push(b(l)),g()}function s(l,m){const c=Ge(e),w=yt(a==null?void 0:a.values,c);if(!Array.isArray(w)||!(l in w)||!(m in w))return;const x=[...w],A=[...t.value],N=x[l];x[l]=x[m],x[m]=N;const E=A[l];A[l]=A[m],A[m]=E,a==null||a.setFieldValue(c,x),t.value=A,g()}function i(l,m){const c=Ge(e),w=yt(a==null?void 0:a.values,c);if(!Array.isArray(w)||w.length<l)return;const x=[...w],A=[...t.value];x.splice(l,0,m),A.splice(l,0,b(m)),a==null||a.setFieldValue(c,x),t.value=A,g()}function n(l){const m=Ge(e);a==null||a.setFieldValue(m,l),h()}function p(l,m){const c=Ge(e),w=yt(a==null?void 0:a.values,c);!Array.isArray(w)||w.length-1<l||a==null||a.setFieldValue(`${c}[${l}]`,m)}function y(l){const m=Ge(e),c=yt(a==null?void 0:a.values,m),w=Ni(c)?[]:c;if(!Array.isArray(w))return;const x=[l,...w];a==null||a.stageInitialValue(m+`[${x.length-1}]`,l),a==null||a.setFieldValue(m,x),t.value.unshift(b(l)),g()}return a.fieldArraysLookup[r]={reset:h},Vn(()=>{delete a.fieldArraysLookup[r]}),{fields:vi(t),remove:u,push:f,swap:s,insert:i,update:p,replace:n,prepend:y}}Xr({name:"FieldArray",inheritAttrs:!1,props:{name:{type:String,required:!0}},setup(e,r){const{push:a,remove:t,swap:d,insert:o,replace:v,update:h,prepend:g,fields:b}=ld(tr(e,"name"));function u(){return{fields:b.value,push:a,remove:t,swap:d,insert:o,update:h,replace:v,prepend:g}}return r.expose({push:a,remove:t,swap:d,insert:o,update:h,replace:v,prepend:g}),()=>Ui(void 0,r,u)}});Xr({name:"ErrorMessage",props:{as:{type:String,default:void 0},name:{type:String,required:!0}},setup(e,r){const a=Hr(qr,void 0),t=Ye(()=>a==null?void 0:a.errors.value[e.name]);function d(){return{message:t.value}}return()=>{if(!t.value)return;const o=e.as?yo(e.as):e.as,v=Ui(o,r,d),h=Object.assign({role:"alert"},r.attrs);return!o&&(Array.isArray(v)||!v)&&(v==null?void 0:v.length)?v:(Array.isArray(v)||!v)&&!(v!=null&&v.length)?sn(o||"span",h,t.value):sn(o,h,v)}}});new dn(["String","Integer","Decimal","Boolean","Date","Model","Collection","Array","Object"]);/*!
 * Font Awesome Free 6.1.1 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2022 Fonticons, Inc.
 */var fd={prefix:"fas",iconName:"chevron-down",icon:[448,512,[],"f078","M224 416c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L224 338.8l169.4-169.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-192 192C240.4 412.9 232.2 416 224 416z"]},ud={prefix:"fas",iconName:"minus",icon:[448,512,[8722,10134,8211,"subtract"],"f068","M400 288h-352c-17.69 0-32-14.32-32-32.01s14.31-31.99 32-31.99h352c17.69 0 32 14.3 32 31.99S417.7 288 400 288z"]},cd={prefix:"fas",iconName:"plus",icon:[448,512,[10133,61543,"add"],"2b","M432 256c0 17.69-14.33 32.01-32 32.01H256v144c0 17.69-14.33 31.99-32 31.99s-32-14.3-32-31.99v-144H48c-17.67 0-32-14.32-32-32.01s14.33-31.99 32-31.99H192v-144c0-17.69 14.33-32.01 32-32.01s32 14.32 32 32.01v144h144C417.7 224 432 238.3 432 256z"]},hd={prefix:"fas",iconName:"square",icon:[448,512,[9723,9724,61590,9632],"f0c8","M0 96C0 60.65 28.65 32 64 32H384C419.3 32 448 60.65 448 96V416C448 451.3 419.3 480 384 480H64C28.65 480 0 451.3 0 416V96z"]},dd={prefix:"fas",iconName:"triangle-exclamation",icon:[512,512,[9888,"exclamation-triangle","warning"],"f071","M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z"]},pd=dd,vd={prefix:"fas",iconName:"window-restore",icon:[512,512,[],"f2d2","M432 64H208C199.2 64 192 71.16 192 80V96H128V80C128 35.82 163.8 0 208 0H432C476.2 0 512 35.82 512 80V304C512 348.2 476.2 384 432 384H416V320H432C440.8 320 448 312.8 448 304V80C448 71.16 440.8 64 432 64zM0 192C0 156.7 28.65 128 64 128H320C355.3 128 384 156.7 384 192V448C384 483.3 355.3 512 320 512H64C28.65 512 0 483.3 0 448V192zM96 256H288C305.7 256 320 241.7 320 224C320 206.3 305.7 192 288 192H96C78.33 192 64 206.3 64 224C64 241.7 78.33 256 96 256z"]},md={prefix:"fas",iconName:"xmark",icon:[320,512,[128473,10005,10006,10060,215,"close","multiply","remove","times"],"f00d","M310.6 361.4c12.5 12.5 12.5 32.75 0 45.25C304.4 412.9 296.2 416 288 416s-16.38-3.125-22.62-9.375L160 301.3L54.63 406.6C48.38 412.9 40.19 416 32 416S15.63 412.9 9.375 406.6c-12.5-12.5-12.5-32.75 0-45.25l105.4-105.4L9.375 150.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L160 210.8l105.4-105.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-105.4 105.4L310.6 361.4z"]},gd={AlertTriangle:pd,PickerDown:fd,Close:md,Plus:cd,Maximize:hd,Minus:ud,Restore:vd};(function(){try{var e=document.createElement("style");e.innerText='*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}:before,:after{--tw-content: ""}html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:Open Sans}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input:-ms-input-placeholder,textarea:-ms-input-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}*,:before,:after{--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.field-number input{-moz-appearance:textfield}.field-number input::-webkit-outer-spin-button,.field-number input::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}.field-tags-wrapper-collapse,.field-tags-wrapper-expand,.field-tags-wrapper{margin-top:.25rem;margin-right:.25rem;display:inline-block;border-radius:.25rem;border-width:1px;--tw-bg-opacity: 1;background-color:rgb(229 231 235 / var(--tw-bg-opacity));padding:.25rem;font-size:.75rem;line-height:1rem;--tw-text-opacity: 1;color:rgb(75 85 99 / var(--tw-text-opacity))}.field-tags-wrapper-collapse,.field-tags-wrapper-expand{cursor:pointer;font-weight:700}.fields-tags-close-icon{margin-left:.25rem;display:inline-block;cursor:pointer}.fields-tags-close-icon:hover{--tw-text-opacity: 1;color:rgb(153 27 27 / var(--tw-text-opacity))}.base-dialog-body{flex:1 1 0%;padding:.5rem}.overlay-container{pointer-events:auto;position:absolute}.view-dialog{top:0px;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;width:100%;--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity));--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow);height:calc(100% - 2.25rem)}.pointer-events-auto{pointer-events:auto}.invisible{visibility:hidden}.absolute{position:absolute}.relative{position:relative}.top-24{top:6rem}.top-0{top:0px}.right-0{right:0px}.z-10{z-index:10}.mx-2{margin-left:.5rem;margin-right:.5rem}.box-border{box-sizing:border-box}.inline-block{display:inline-block}.flex{display:flex}.h-64{height:16rem}.h-full{height:100%}.h-6{height:1.5rem}.h-36{height:9rem}.w-48{width:12rem}.w-24{width:6rem}.w-full{width:100%}.w-32{width:8rem}.w-auto{width:auto}.w-6{width:1.5rem}.w-14{width:3.5rem}.flex-1{flex:1 1 0%}.cursor-help{cursor:help}.cursor-pointer{cursor:pointer}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.flex-row-reverse{flex-direction:row-reverse}.flex-col{flex-direction:column}.flex-col-reverse{flex-direction:column-reverse}.flex-wrap{flex-wrap:wrap}.items-center{align-items:center}.items-stretch{align-items:stretch}.space-x-0>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(0px * var(--tw-space-x-reverse));margin-left:calc(0px * calc(1 - var(--tw-space-x-reverse)))}.space-x-1>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.25rem * var(--tw-space-x-reverse));margin-left:calc(.25rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-3>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.75rem * var(--tw-space-x-reverse));margin-left:calc(.75rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1rem * var(--tw-space-x-reverse));margin-left:calc(1rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-5>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1.25rem * var(--tw-space-x-reverse));margin-left:calc(1.25rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-6>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1.5rem * var(--tw-space-x-reverse));margin-left:calc(1.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-7>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1.75rem * var(--tw-space-x-reverse));margin-left:calc(1.75rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-8>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(2rem * var(--tw-space-x-reverse));margin-left:calc(2rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-9>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(2.25rem * var(--tw-space-x-reverse));margin-left:calc(2.25rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-10>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(2.5rem * var(--tw-space-x-reverse));margin-left:calc(2.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-11>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(2.75rem * var(--tw-space-x-reverse));margin-left:calc(2.75rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-12>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(3rem * var(--tw-space-x-reverse));margin-left:calc(3rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-14>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(3.5rem * var(--tw-space-x-reverse));margin-left:calc(3.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-16>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(4rem * var(--tw-space-x-reverse));margin-left:calc(4rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-20>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(5rem * var(--tw-space-x-reverse));margin-left:calc(5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-24>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(6rem * var(--tw-space-x-reverse));margin-left:calc(6rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-28>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(7rem * var(--tw-space-x-reverse));margin-left:calc(7rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-32>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(8rem * var(--tw-space-x-reverse));margin-left:calc(8rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-36>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(9rem * var(--tw-space-x-reverse));margin-left:calc(9rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-40>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(10rem * var(--tw-space-x-reverse));margin-left:calc(10rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-44>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(11rem * var(--tw-space-x-reverse));margin-left:calc(11rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-48>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(12rem * var(--tw-space-x-reverse));margin-left:calc(12rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-52>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(13rem * var(--tw-space-x-reverse));margin-left:calc(13rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-56>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(14rem * var(--tw-space-x-reverse));margin-left:calc(14rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-60>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(15rem * var(--tw-space-x-reverse));margin-left:calc(15rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-64>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(16rem * var(--tw-space-x-reverse));margin-left:calc(16rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-72>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(18rem * var(--tw-space-x-reverse));margin-left:calc(18rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-80>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(20rem * var(--tw-space-x-reverse));margin-left:calc(20rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-96>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(24rem * var(--tw-space-x-reverse));margin-left:calc(24rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-px>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1px * var(--tw-space-x-reverse));margin-left:calc(1px * calc(1 - var(--tw-space-x-reverse)))}.space-x-0\\.5>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.125rem * var(--tw-space-x-reverse));margin-left:calc(.125rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-1\\.5>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.375rem * var(--tw-space-x-reverse));margin-left:calc(.375rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-2\\.5>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.625rem * var(--tw-space-x-reverse));margin-left:calc(.625rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-3\\.5>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.875rem * var(--tw-space-x-reverse));margin-left:calc(.875rem * calc(1 - var(--tw-space-x-reverse)))}.space-y-0>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(0px * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(0px * var(--tw-space-y-reverse))}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.25rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.25rem * var(--tw-space-y-reverse))}.space-y-2>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.5rem * var(--tw-space-y-reverse))}.space-y-3>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.75rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.75rem * var(--tw-space-y-reverse))}.space-y-4>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}.space-y-5>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1.25rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1.25rem * var(--tw-space-y-reverse))}.space-y-6>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1.5rem * var(--tw-space-y-reverse))}.space-y-7>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1.75rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1.75rem * var(--tw-space-y-reverse))}.space-y-8>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(2rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(2rem * var(--tw-space-y-reverse))}.space-y-9>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(2.25rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(2.25rem * var(--tw-space-y-reverse))}.space-y-10>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(2.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(2.5rem * var(--tw-space-y-reverse))}.space-y-11>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(2.75rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(2.75rem * var(--tw-space-y-reverse))}.space-y-12>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(3rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(3rem * var(--tw-space-y-reverse))}.space-y-14>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(3.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(3.5rem * var(--tw-space-y-reverse))}.space-y-16>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(4rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(4rem * var(--tw-space-y-reverse))}.space-y-20>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(5rem * var(--tw-space-y-reverse))}.space-y-24>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(6rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(6rem * var(--tw-space-y-reverse))}.space-y-28>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(7rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(7rem * var(--tw-space-y-reverse))}.space-y-32>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(8rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(8rem * var(--tw-space-y-reverse))}.space-y-36>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(9rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(9rem * var(--tw-space-y-reverse))}.space-y-40>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(10rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(10rem * var(--tw-space-y-reverse))}.space-y-44>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(11rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(11rem * var(--tw-space-y-reverse))}.space-y-48>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(12rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(12rem * var(--tw-space-y-reverse))}.space-y-52>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(13rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(13rem * var(--tw-space-y-reverse))}.space-y-56>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(14rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(14rem * var(--tw-space-y-reverse))}.space-y-60>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(15rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(15rem * var(--tw-space-y-reverse))}.space-y-64>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(16rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(16rem * var(--tw-space-y-reverse))}.space-y-72>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(18rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(18rem * var(--tw-space-y-reverse))}.space-y-80>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(20rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(20rem * var(--tw-space-y-reverse))}.space-y-96>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(24rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(24rem * var(--tw-space-y-reverse))}.space-y-px>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1px * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1px * var(--tw-space-y-reverse))}.space-y-0\\.5>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.125rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.125rem * var(--tw-space-y-reverse))}.space-y-1\\.5>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.375rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.375rem * var(--tw-space-y-reverse))}.space-y-2\\.5>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.625rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.625rem * var(--tw-space-y-reverse))}.space-y-3\\.5>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.875rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.875rem * var(--tw-space-y-reverse))}.space-y-reverse>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 1}.space-x-reverse>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 1}.overflow-auto{overflow:auto}.text-ellipsis{text-overflow:ellipsis}.text-clip{text-overflow:clip}.rounded{border-radius:.25rem}.rounded-sm{border-radius:.125rem}.border{border-width:1px}.border-b-2{border-bottom-width:2px}.border-gray-300{--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity))}.bg-slate-800{--tw-bg-opacity: 1;background-color:rgb(30 41 59 / var(--tw-bg-opacity))}.bg-slate-700{--tw-bg-opacity: 1;background-color:rgb(51 65 85 / var(--tw-bg-opacity))}.bg-blue-200{--tw-bg-opacity: 1;background-color:rgb(191 219 254 / var(--tw-bg-opacity))}.bg-slate-100{--tw-bg-opacity: 1;background-color:rgb(241 245 249 / var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-white{--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.bg-slate-500{--tw-bg-opacity: 1;background-color:rgb(100 116 139 / var(--tw-bg-opacity))}.p-2{padding:.5rem}.px-2{padding-left:.5rem;padding-right:.5rem}.py-0\\.5{padding-top:.125rem;padding-bottom:.125rem}.py-0{padding-top:0;padding-bottom:0}.py-1{padding-top:.25rem;padding-bottom:.25rem}.pr-2{padding-right:.5rem}.pb-1{padding-bottom:.25rem}.pl-1{padding-left:.25rem}.pl-0\\.5{padding-left:.125rem}.pl-0{padding-left:0}.pr-1{padding-right:.25rem}.pr-0{padding-right:0}.text-left{text-align:left}.text-center{text-align:center}.text-right{text-align:right}.text-justify{text-align:justify}.indent-px{text-indent:1px}.text-xs{font-size:.75rem;line-height:1rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-base{font-size:1rem;line-height:1.5rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-2xl{font-size:1.5rem;line-height:2rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-4xl{font-size:2.25rem;line-height:2.5rem}.text-5xl{font-size:3rem;line-height:1}.text-6xl{font-size:3.75rem;line-height:1}.text-7xl{font-size:4.5rem;line-height:1}.text-8xl{font-size:6rem;line-height:1}.text-9xl{font-size:8rem;line-height:1}.font-semibold{font-weight:600}.font-normal{font-weight:400}.leading-7{line-height:1.75rem}.leading-6{line-height:1.5rem}.text-inherit{color:inherit}.text-current{color:currentColor}.text-transparent{color:transparent}.text-black{--tw-text-opacity: 1;color:rgb(0 0 0 / var(--tw-text-opacity))}.text-white{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity))}.text-slate-50{--tw-text-opacity: 1;color:rgb(248 250 252 / var(--tw-text-opacity))}.text-slate-100{--tw-text-opacity: 1;color:rgb(241 245 249 / var(--tw-text-opacity))}.text-slate-200{--tw-text-opacity: 1;color:rgb(226 232 240 / var(--tw-text-opacity))}.text-slate-300{--tw-text-opacity: 1;color:rgb(203 213 225 / var(--tw-text-opacity))}.text-slate-400{--tw-text-opacity: 1;color:rgb(148 163 184 / var(--tw-text-opacity))}.text-slate-500{--tw-text-opacity: 1;color:rgb(100 116 139 / var(--tw-text-opacity))}.text-slate-600{--tw-text-opacity: 1;color:rgb(71 85 105 / var(--tw-text-opacity))}.text-slate-700{--tw-text-opacity: 1;color:rgb(51 65 85 / var(--tw-text-opacity))}.text-slate-800{--tw-text-opacity: 1;color:rgb(30 41 59 / var(--tw-text-opacity))}.text-slate-900{--tw-text-opacity: 1;color:rgb(15 23 42 / var(--tw-text-opacity))}.text-gray-50{--tw-text-opacity: 1;color:rgb(249 250 251 / var(--tw-text-opacity))}.text-gray-100{--tw-text-opacity: 1;color:rgb(243 244 246 / var(--tw-text-opacity))}.text-gray-200{--tw-text-opacity: 1;color:rgb(229 231 235 / var(--tw-text-opacity))}.text-gray-300{--tw-text-opacity: 1;color:rgb(209 213 219 / var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity: 1;color:rgb(107 114 128 / var(--tw-text-opacity))}.text-gray-600{--tw-text-opacity: 1;color:rgb(75 85 99 / var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity: 1;color:rgb(55 65 81 / var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity: 1;color:rgb(31 41 55 / var(--tw-text-opacity))}.text-gray-900{--tw-text-opacity: 1;color:rgb(17 24 39 / var(--tw-text-opacity))}.text-zinc-50{--tw-text-opacity: 1;color:rgb(250 250 250 / var(--tw-text-opacity))}.text-zinc-100{--tw-text-opacity: 1;color:rgb(244 244 245 / var(--tw-text-opacity))}.text-zinc-200{--tw-text-opacity: 1;color:rgb(228 228 231 / var(--tw-text-opacity))}.text-zinc-300{--tw-text-opacity: 1;color:rgb(212 212 216 / var(--tw-text-opacity))}.text-zinc-400{--tw-text-opacity: 1;color:rgb(161 161 170 / var(--tw-text-opacity))}.text-zinc-500{--tw-text-opacity: 1;color:rgb(113 113 122 / var(--tw-text-opacity))}.text-zinc-600{--tw-text-opacity: 1;color:rgb(82 82 91 / var(--tw-text-opacity))}.text-zinc-700{--tw-text-opacity: 1;color:rgb(63 63 70 / var(--tw-text-opacity))}.text-zinc-800{--tw-text-opacity: 1;color:rgb(39 39 42 / var(--tw-text-opacity))}.text-zinc-900{--tw-text-opacity: 1;color:rgb(24 24 27 / var(--tw-text-opacity))}.text-neutral-50{--tw-text-opacity: 1;color:rgb(250 250 250 / var(--tw-text-opacity))}.text-neutral-100{--tw-text-opacity: 1;color:rgb(245 245 245 / var(--tw-text-opacity))}.text-neutral-200{--tw-text-opacity: 1;color:rgb(229 229 229 / var(--tw-text-opacity))}.text-neutral-300{--tw-text-opacity: 1;color:rgb(212 212 212 / var(--tw-text-opacity))}.text-neutral-400{--tw-text-opacity: 1;color:rgb(163 163 163 / var(--tw-text-opacity))}.text-neutral-500{--tw-text-opacity: 1;color:rgb(115 115 115 / var(--tw-text-opacity))}.text-neutral-600{--tw-text-opacity: 1;color:rgb(82 82 82 / var(--tw-text-opacity))}.text-neutral-700{--tw-text-opacity: 1;color:rgb(64 64 64 / var(--tw-text-opacity))}.text-neutral-800{--tw-text-opacity: 1;color:rgb(38 38 38 / var(--tw-text-opacity))}.text-neutral-900{--tw-text-opacity: 1;color:rgb(23 23 23 / var(--tw-text-opacity))}.text-stone-50{--tw-text-opacity: 1;color:rgb(250 250 249 / var(--tw-text-opacity))}.text-stone-100{--tw-text-opacity: 1;color:rgb(245 245 244 / var(--tw-text-opacity))}.text-stone-200{--tw-text-opacity: 1;color:rgb(231 229 228 / var(--tw-text-opacity))}.text-stone-300{--tw-text-opacity: 1;color:rgb(214 211 209 / var(--tw-text-opacity))}.text-stone-400{--tw-text-opacity: 1;color:rgb(168 162 158 / var(--tw-text-opacity))}.text-stone-500{--tw-text-opacity: 1;color:rgb(120 113 108 / var(--tw-text-opacity))}.text-stone-600{--tw-text-opacity: 1;color:rgb(87 83 78 / var(--tw-text-opacity))}.text-stone-700{--tw-text-opacity: 1;color:rgb(68 64 60 / var(--tw-text-opacity))}.text-stone-800{--tw-text-opacity: 1;color:rgb(41 37 36 / var(--tw-text-opacity))}.text-stone-900{--tw-text-opacity: 1;color:rgb(28 25 23 / var(--tw-text-opacity))}.text-red-50{--tw-text-opacity: 1;color:rgb(254 242 242 / var(--tw-text-opacity))}.text-red-100{--tw-text-opacity: 1;color:rgb(254 226 226 / var(--tw-text-opacity))}.text-red-200{--tw-text-opacity: 1;color:rgb(254 202 202 / var(--tw-text-opacity))}.text-red-300{--tw-text-opacity: 1;color:rgb(252 165 165 / var(--tw-text-opacity))}.text-red-400{--tw-text-opacity: 1;color:rgb(248 113 113 / var(--tw-text-opacity))}.text-red-500{--tw-text-opacity: 1;color:rgb(239 68 68 / var(--tw-text-opacity))}.text-red-600{--tw-text-opacity: 1;color:rgb(220 38 38 / var(--tw-text-opacity))}.text-red-700{--tw-text-opacity: 1;color:rgb(185 28 28 / var(--tw-text-opacity))}.text-red-800{--tw-text-opacity: 1;color:rgb(153 27 27 / var(--tw-text-opacity))}.text-red-900{--tw-text-opacity: 1;color:rgb(127 29 29 / var(--tw-text-opacity))}.text-orange-50{--tw-text-opacity: 1;color:rgb(255 247 237 / var(--tw-text-opacity))}.text-orange-100{--tw-text-opacity: 1;color:rgb(255 237 213 / var(--tw-text-opacity))}.text-orange-200{--tw-text-opacity: 1;color:rgb(254 215 170 / var(--tw-text-opacity))}.text-orange-300{--tw-text-opacity: 1;color:rgb(253 186 116 / var(--tw-text-opacity))}.text-orange-400{--tw-text-opacity: 1;color:rgb(251 146 60 / var(--tw-text-opacity))}.text-orange-500{--tw-text-opacity: 1;color:rgb(249 115 22 / var(--tw-text-opacity))}.text-orange-600{--tw-text-opacity: 1;color:rgb(234 88 12 / var(--tw-text-opacity))}.text-orange-700{--tw-text-opacity: 1;color:rgb(194 65 12 / var(--tw-text-opacity))}.text-orange-800{--tw-text-opacity: 1;color:rgb(154 52 18 / var(--tw-text-opacity))}.text-orange-900{--tw-text-opacity: 1;color:rgb(124 45 18 / var(--tw-text-opacity))}.text-amber-50{--tw-text-opacity: 1;color:rgb(255 251 235 / var(--tw-text-opacity))}.text-amber-100{--tw-text-opacity: 1;color:rgb(254 243 199 / var(--tw-text-opacity))}.text-amber-200{--tw-text-opacity: 1;color:rgb(253 230 138 / var(--tw-text-opacity))}.text-amber-300{--tw-text-opacity: 1;color:rgb(252 211 77 / var(--tw-text-opacity))}.text-amber-400{--tw-text-opacity: 1;color:rgb(251 191 36 / var(--tw-text-opacity))}.text-amber-500{--tw-text-opacity: 1;color:rgb(245 158 11 / var(--tw-text-opacity))}.text-amber-600{--tw-text-opacity: 1;color:rgb(217 119 6 / var(--tw-text-opacity))}.text-amber-700{--tw-text-opacity: 1;color:rgb(180 83 9 / var(--tw-text-opacity))}.text-amber-800{--tw-text-opacity: 1;color:rgb(146 64 14 / var(--tw-text-opacity))}.text-amber-900{--tw-text-opacity: 1;color:rgb(120 53 15 / var(--tw-text-opacity))}.text-yellow-50{--tw-text-opacity: 1;color:rgb(254 252 232 / var(--tw-text-opacity))}.text-yellow-100{--tw-text-opacity: 1;color:rgb(254 249 195 / var(--tw-text-opacity))}.text-yellow-200{--tw-text-opacity: 1;color:rgb(254 240 138 / var(--tw-text-opacity))}.text-yellow-300{--tw-text-opacity: 1;color:rgb(253 224 71 / var(--tw-text-opacity))}.text-yellow-400{--tw-text-opacity: 1;color:rgb(250 204 21 / var(--tw-text-opacity))}.text-yellow-500{--tw-text-opacity: 1;color:rgb(234 179 8 / var(--tw-text-opacity))}.text-yellow-600{--tw-text-opacity: 1;color:rgb(202 138 4 / var(--tw-text-opacity))}.text-yellow-700{--tw-text-opacity: 1;color:rgb(161 98 7 / var(--tw-text-opacity))}.text-yellow-800{--tw-text-opacity: 1;color:rgb(133 77 14 / var(--tw-text-opacity))}.text-yellow-900{--tw-text-opacity: 1;color:rgb(113 63 18 / var(--tw-text-opacity))}.text-lime-50{--tw-text-opacity: 1;color:rgb(247 254 231 / var(--tw-text-opacity))}.text-lime-100{--tw-text-opacity: 1;color:rgb(236 252 203 / var(--tw-text-opacity))}.text-lime-200{--tw-text-opacity: 1;color:rgb(217 249 157 / var(--tw-text-opacity))}.text-lime-300{--tw-text-opacity: 1;color:rgb(190 242 100 / var(--tw-text-opacity))}.text-lime-400{--tw-text-opacity: 1;color:rgb(163 230 53 / var(--tw-text-opacity))}.text-lime-500{--tw-text-opacity: 1;color:rgb(132 204 22 / var(--tw-text-opacity))}.text-lime-600{--tw-text-opacity: 1;color:rgb(101 163 13 / var(--tw-text-opacity))}.text-lime-700{--tw-text-opacity: 1;color:rgb(77 124 15 / var(--tw-text-opacity))}.text-lime-800{--tw-text-opacity: 1;color:rgb(63 98 18 / var(--tw-text-opacity))}.text-lime-900{--tw-text-opacity: 1;color:rgb(54 83 20 / var(--tw-text-opacity))}.text-green-50{--tw-text-opacity: 1;color:rgb(240 253 244 / var(--tw-text-opacity))}.text-green-100{--tw-text-opacity: 1;color:rgb(220 252 231 / var(--tw-text-opacity))}.text-green-200{--tw-text-opacity: 1;color:rgb(187 247 208 / var(--tw-text-opacity))}.text-green-300{--tw-text-opacity: 1;color:rgb(134 239 172 / var(--tw-text-opacity))}.text-green-400{--tw-text-opacity: 1;color:rgb(74 222 128 / var(--tw-text-opacity))}.text-green-500{--tw-text-opacity: 1;color:rgb(34 197 94 / var(--tw-text-opacity))}.text-green-600{--tw-text-opacity: 1;color:rgb(22 163 74 / var(--tw-text-opacity))}.text-green-700{--tw-text-opacity: 1;color:rgb(21 128 61 / var(--tw-text-opacity))}.text-green-800{--tw-text-opacity: 1;color:rgb(22 101 52 / var(--tw-text-opacity))}.text-green-900{--tw-text-opacity: 1;color:rgb(20 83 45 / var(--tw-text-opacity))}.text-emerald-50{--tw-text-opacity: 1;color:rgb(236 253 245 / var(--tw-text-opacity))}.text-emerald-100{--tw-text-opacity: 1;color:rgb(209 250 229 / var(--tw-text-opacity))}.text-emerald-200{--tw-text-opacity: 1;color:rgb(167 243 208 / var(--tw-text-opacity))}.text-emerald-300{--tw-text-opacity: 1;color:rgb(110 231 183 / var(--tw-text-opacity))}.text-emerald-400{--tw-text-opacity: 1;color:rgb(52 211 153 / var(--tw-text-opacity))}.text-emerald-500{--tw-text-opacity: 1;color:rgb(16 185 129 / var(--tw-text-opacity))}.text-emerald-600{--tw-text-opacity: 1;color:rgb(5 150 105 / var(--tw-text-opacity))}.text-emerald-700{--tw-text-opacity: 1;color:rgb(4 120 87 / var(--tw-text-opacity))}.text-emerald-800{--tw-text-opacity: 1;color:rgb(6 95 70 / var(--tw-text-opacity))}.text-emerald-900{--tw-text-opacity: 1;color:rgb(6 78 59 / var(--tw-text-opacity))}.text-teal-50{--tw-text-opacity: 1;color:rgb(240 253 250 / var(--tw-text-opacity))}.text-teal-100{--tw-text-opacity: 1;color:rgb(204 251 241 / var(--tw-text-opacity))}.text-teal-200{--tw-text-opacity: 1;color:rgb(153 246 228 / var(--tw-text-opacity))}.text-teal-300{--tw-text-opacity: 1;color:rgb(94 234 212 / var(--tw-text-opacity))}.text-teal-400{--tw-text-opacity: 1;color:rgb(45 212 191 / var(--tw-text-opacity))}.text-teal-500{--tw-text-opacity: 1;color:rgb(20 184 166 / var(--tw-text-opacity))}.text-teal-600{--tw-text-opacity: 1;color:rgb(13 148 136 / var(--tw-text-opacity))}.text-teal-700{--tw-text-opacity: 1;color:rgb(15 118 110 / var(--tw-text-opacity))}.text-teal-800{--tw-text-opacity: 1;color:rgb(17 94 89 / var(--tw-text-opacity))}.text-teal-900{--tw-text-opacity: 1;color:rgb(19 78 74 / var(--tw-text-opacity))}.text-cyan-50{--tw-text-opacity: 1;color:rgb(236 254 255 / var(--tw-text-opacity))}.text-cyan-100{--tw-text-opacity: 1;color:rgb(207 250 254 / var(--tw-text-opacity))}.text-cyan-200{--tw-text-opacity: 1;color:rgb(165 243 252 / var(--tw-text-opacity))}.text-cyan-300{--tw-text-opacity: 1;color:rgb(103 232 249 / var(--tw-text-opacity))}.text-cyan-400{--tw-text-opacity: 1;color:rgb(34 211 238 / var(--tw-text-opacity))}.text-cyan-500{--tw-text-opacity: 1;color:rgb(6 182 212 / var(--tw-text-opacity))}.text-cyan-600{--tw-text-opacity: 1;color:rgb(8 145 178 / var(--tw-text-opacity))}.text-cyan-700{--tw-text-opacity: 1;color:rgb(14 116 144 / var(--tw-text-opacity))}.text-cyan-800{--tw-text-opacity: 1;color:rgb(21 94 117 / var(--tw-text-opacity))}.text-cyan-900{--tw-text-opacity: 1;color:rgb(22 78 99 / var(--tw-text-opacity))}.text-sky-50{--tw-text-opacity: 1;color:rgb(240 249 255 / var(--tw-text-opacity))}.text-sky-100{--tw-text-opacity: 1;color:rgb(224 242 254 / var(--tw-text-opacity))}.text-sky-200{--tw-text-opacity: 1;color:rgb(186 230 253 / var(--tw-text-opacity))}.text-sky-300{--tw-text-opacity: 1;color:rgb(125 211 252 / var(--tw-text-opacity))}.text-sky-400{--tw-text-opacity: 1;color:rgb(56 189 248 / var(--tw-text-opacity))}.text-sky-500{--tw-text-opacity: 1;color:rgb(14 165 233 / var(--tw-text-opacity))}.text-sky-600{--tw-text-opacity: 1;color:rgb(2 132 199 / var(--tw-text-opacity))}.text-sky-700{--tw-text-opacity: 1;color:rgb(3 105 161 / var(--tw-text-opacity))}.text-sky-800{--tw-text-opacity: 1;color:rgb(7 89 133 / var(--tw-text-opacity))}.text-sky-900{--tw-text-opacity: 1;color:rgb(12 74 110 / var(--tw-text-opacity))}.text-blue-50{--tw-text-opacity: 1;color:rgb(239 246 255 / var(--tw-text-opacity))}.text-blue-100{--tw-text-opacity: 1;color:rgb(219 234 254 / var(--tw-text-opacity))}.text-blue-200{--tw-text-opacity: 1;color:rgb(191 219 254 / var(--tw-text-opacity))}.text-blue-300{--tw-text-opacity: 1;color:rgb(147 197 253 / var(--tw-text-opacity))}.text-blue-400{--tw-text-opacity: 1;color:rgb(96 165 250 / var(--tw-text-opacity))}.text-blue-500{--tw-text-opacity: 1;color:rgb(59 130 246 / var(--tw-text-opacity))}.text-blue-600{--tw-text-opacity: 1;color:rgb(37 99 235 / var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity: 1;color:rgb(29 78 216 / var(--tw-text-opacity))}.text-blue-800{--tw-text-opacity: 1;color:rgb(30 64 175 / var(--tw-text-opacity))}.text-blue-900{--tw-text-opacity: 1;color:rgb(30 58 138 / var(--tw-text-opacity))}.text-indigo-50{--tw-text-opacity: 1;color:rgb(238 242 255 / var(--tw-text-opacity))}.text-indigo-100{--tw-text-opacity: 1;color:rgb(224 231 255 / var(--tw-text-opacity))}.text-indigo-200{--tw-text-opacity: 1;color:rgb(199 210 254 / var(--tw-text-opacity))}.text-indigo-300{--tw-text-opacity: 1;color:rgb(165 180 252 / var(--tw-text-opacity))}.text-indigo-400{--tw-text-opacity: 1;color:rgb(129 140 248 / var(--tw-text-opacity))}.text-indigo-500{--tw-text-opacity: 1;color:rgb(99 102 241 / var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity: 1;color:rgb(79 70 229 / var(--tw-text-opacity))}.text-indigo-700{--tw-text-opacity: 1;color:rgb(67 56 202 / var(--tw-text-opacity))}.text-indigo-800{--tw-text-opacity: 1;color:rgb(55 48 163 / var(--tw-text-opacity))}.text-indigo-900{--tw-text-opacity: 1;color:rgb(49 46 129 / var(--tw-text-opacity))}.text-violet-50{--tw-text-opacity: 1;color:rgb(245 243 255 / var(--tw-text-opacity))}.text-violet-100{--tw-text-opacity: 1;color:rgb(237 233 254 / var(--tw-text-opacity))}.text-violet-200{--tw-text-opacity: 1;color:rgb(221 214 254 / var(--tw-text-opacity))}.text-violet-300{--tw-text-opacity: 1;color:rgb(196 181 253 / var(--tw-text-opacity))}.text-violet-400{--tw-text-opacity: 1;color:rgb(167 139 250 / var(--tw-text-opacity))}.text-violet-500{--tw-text-opacity: 1;color:rgb(139 92 246 / var(--tw-text-opacity))}.text-violet-600{--tw-text-opacity: 1;color:rgb(124 58 237 / var(--tw-text-opacity))}.text-violet-700{--tw-text-opacity: 1;color:rgb(109 40 217 / var(--tw-text-opacity))}.text-violet-800{--tw-text-opacity: 1;color:rgb(91 33 182 / var(--tw-text-opacity))}.text-violet-900{--tw-text-opacity: 1;color:rgb(76 29 149 / var(--tw-text-opacity))}.text-purple-50{--tw-text-opacity: 1;color:rgb(250 245 255 / var(--tw-text-opacity))}.text-purple-100{--tw-text-opacity: 1;color:rgb(243 232 255 / var(--tw-text-opacity))}.text-purple-200{--tw-text-opacity: 1;color:rgb(233 213 255 / var(--tw-text-opacity))}.text-purple-300{--tw-text-opacity: 1;color:rgb(216 180 254 / var(--tw-text-opacity))}.text-purple-400{--tw-text-opacity: 1;color:rgb(192 132 252 / var(--tw-text-opacity))}.text-purple-500{--tw-text-opacity: 1;color:rgb(168 85 247 / var(--tw-text-opacity))}.text-purple-600{--tw-text-opacity: 1;color:rgb(147 51 234 / var(--tw-text-opacity))}.text-purple-700{--tw-text-opacity: 1;color:rgb(126 34 206 / var(--tw-text-opacity))}.text-purple-800{--tw-text-opacity: 1;color:rgb(107 33 168 / var(--tw-text-opacity))}.text-purple-900{--tw-text-opacity: 1;color:rgb(88 28 135 / var(--tw-text-opacity))}.text-fuchsia-50{--tw-text-opacity: 1;color:rgb(253 244 255 / var(--tw-text-opacity))}.text-fuchsia-100{--tw-text-opacity: 1;color:rgb(250 232 255 / var(--tw-text-opacity))}.text-fuchsia-200{--tw-text-opacity: 1;color:rgb(245 208 254 / var(--tw-text-opacity))}.text-fuchsia-300{--tw-text-opacity: 1;color:rgb(240 171 252 / var(--tw-text-opacity))}.text-fuchsia-400{--tw-text-opacity: 1;color:rgb(232 121 249 / var(--tw-text-opacity))}.text-fuchsia-500{--tw-text-opacity: 1;color:rgb(217 70 239 / var(--tw-text-opacity))}.text-fuchsia-600{--tw-text-opacity: 1;color:rgb(192 38 211 / var(--tw-text-opacity))}.text-fuchsia-700{--tw-text-opacity: 1;color:rgb(162 28 175 / var(--tw-text-opacity))}.text-fuchsia-800{--tw-text-opacity: 1;color:rgb(134 25 143 / var(--tw-text-opacity))}.text-fuchsia-900{--tw-text-opacity: 1;color:rgb(112 26 117 / var(--tw-text-opacity))}.text-pink-50{--tw-text-opacity: 1;color:rgb(253 242 248 / var(--tw-text-opacity))}.text-pink-100{--tw-text-opacity: 1;color:rgb(252 231 243 / var(--tw-text-opacity))}.text-pink-200{--tw-text-opacity: 1;color:rgb(251 207 232 / var(--tw-text-opacity))}.text-pink-300{--tw-text-opacity: 1;color:rgb(249 168 212 / var(--tw-text-opacity))}.text-pink-400{--tw-text-opacity: 1;color:rgb(244 114 182 / var(--tw-text-opacity))}.text-pink-500{--tw-text-opacity: 1;color:rgb(236 72 153 / var(--tw-text-opacity))}.text-pink-600{--tw-text-opacity: 1;color:rgb(219 39 119 / var(--tw-text-opacity))}.text-pink-700{--tw-text-opacity: 1;color:rgb(190 24 93 / var(--tw-text-opacity))}.text-pink-800{--tw-text-opacity: 1;color:rgb(157 23 77 / var(--tw-text-opacity))}.text-pink-900{--tw-text-opacity: 1;color:rgb(131 24 67 / var(--tw-text-opacity))}.text-rose-50{--tw-text-opacity: 1;color:rgb(255 241 242 / var(--tw-text-opacity))}.text-rose-100{--tw-text-opacity: 1;color:rgb(255 228 230 / var(--tw-text-opacity))}.text-rose-200{--tw-text-opacity: 1;color:rgb(254 205 211 / var(--tw-text-opacity))}.text-rose-300{--tw-text-opacity: 1;color:rgb(253 164 175 / var(--tw-text-opacity))}.text-rose-400{--tw-text-opacity: 1;color:rgb(251 113 133 / var(--tw-text-opacity))}.text-rose-500{--tw-text-opacity: 1;color:rgb(244 63 94 / var(--tw-text-opacity))}.text-rose-600{--tw-text-opacity: 1;color:rgb(225 29 72 / var(--tw-text-opacity))}.text-rose-700{--tw-text-opacity: 1;color:rgb(190 18 60 / var(--tw-text-opacity))}.text-rose-800{--tw-text-opacity: 1;color:rgb(159 18 57 / var(--tw-text-opacity))}.text-rose-900{--tw-text-opacity: 1;color:rgb(136 19 55 / var(--tw-text-opacity))}.text-opacity-0{--tw-text-opacity: 0}.text-opacity-5{--tw-text-opacity: .05}.text-opacity-10{--tw-text-opacity: .1}.text-opacity-20{--tw-text-opacity: .2}.text-opacity-25{--tw-text-opacity: .25}.text-opacity-30{--tw-text-opacity: .3}.text-opacity-40{--tw-text-opacity: .4}.text-opacity-50{--tw-text-opacity: .5}.text-opacity-60{--tw-text-opacity: .6}.text-opacity-70{--tw-text-opacity: .7}.text-opacity-75{--tw-text-opacity: .75}.text-opacity-80{--tw-text-opacity: .8}.text-opacity-90{--tw-text-opacity: .9}.text-opacity-95{--tw-text-opacity: .95}.text-opacity-100{--tw-text-opacity: 1}.shadow{--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-top{--tw-shadow: 0 -1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 -1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.blur{--tw-blur: blur(8px);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.drop-shadow{--tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / .1)) drop-shadow(0 1px 1px rgb(0 0 0 / .06));filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}body,html,#app{height:100%;width:100%}#app{position:relative;display:flex;height:100%;width:100%;flex-direction:column;align-items:stretch;font-size:1rem;line-height:1.5rem;font-family:Open Sans,Helvetica,Arial,sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.focus-within\\:outline:focus-within{outline-style:solid}.focus-within\\:outline-2:focus-within{outline-width:2px}.hover\\:bg-slate-600:hover{--tw-bg-opacity: 1;background-color:rgb(71 85 105 / var(--tw-bg-opacity))}.hover\\:bg-blue-300:hover{--tw-bg-opacity: 1;background-color:rgb(147 197 253 / var(--tw-bg-opacity))}.hover\\:bg-slate-300:hover{--tw-bg-opacity: 1;background-color:rgb(203 213 225 / var(--tw-bg-opacity))}.hover\\:text-blue-400:hover{--tw-text-opacity: 1;color:rgb(96 165 250 / var(--tw-text-opacity))}.group:hover .group-hover\\:visible{visibility:visible}@font-face{font-family:Open Sans;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,) format("woff");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:Open Sans;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,) format("woff");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:Open Sans;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,d09GMgABAAAAAA6AABIAAAAAGuQAAA4dAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGjIbgS4cPAZgP1NUQVReADwIgXwJnxQREAqCLIIoCwoAATYCJAMQBCAFhHgHIAyFHxueGSMRwsYBCH5/eQR/dcAbii/dQgwwl3bdoc9Y/KFiquobhCHvVkU31hBuSnCtGH1wMW6EJLP+83jZn/vykgErz4KzVSql8irbZsWCM104K3m630KI/3btk5Im1igokPBQDsi/UWt7M2jmN7sNk34RMQ2NCg2/t2bWPYQ9C6SF0qtl2TkPUbcpYIojeQKSYWAZzsmrvV2+cuocl/Zd/pI0HTdgP58/jEKVPVaFQvgtJDiJUQfP/2+umtZ+cBljJQ6haZbf7YYQzUF+nPpJn+zkoluLj2V4AI6yElpC8p6sxE+KfxT9Kd9e9m27Yw50BHTNgRYqKyzAbJkbYsSo4oBNZy/JNSvw8NvYOvArhoiwH2Htu04HgcEJYCONRxgIglwMhFu3npPVQv42VmRjLLGsom48PLMW+zrgmeeb0w5Py5yZPng6ZvR1wQMOAIYBBoDAKrgTzs72Po5Qi4WGxB5IGEl6L4IZBBl2ELIRjGLqdeKaeDskuNVaB8aOxn7T+DqeLoHYOF5FPMBWS8m13jQ3HhmPjEd2Rl4FvDvnu2gnREBM488BOKxnbL9QZrshL0bxiStXYyU9mFCf8P5q238XAfP/bAtAJ7wfqRJvB1iy1G7i24Zqn2QU2MLZfS1EwMLX0kcA/cUzTrFMhWAM1CbAKBqzYYgocNpp2XtHgm2PAzhGGSKJJX0xx3CQKATVk9qdZvs+vO3DIfQmpFDYxNsRro54lQQYX4v5Vt/1f3j9fQ5D9W8AXHTZ/m3xeav5ivyevU7Y4ZLznkSnzQ5rt90RS5y1LblY67DTNvse6yxKFdZZ4rDjLrslSHWdnQ45kQqXBPLFeVcDIp2vDko67yb45PioS5xxxQ1rbHUwueil22DHuPQ5y623xT7TO1/3PRZZYaM9qcJiuvyr7XXYhfawsES0ItQY2HHhglJz6OCB/RvWr1u7ZvUqfeWK5cuWLin+r7/8/NOPP3z/3bfffP3Vl198/tnN9dXldDIeBf/k8aOHF0NnHwzu93ud9r27d263mo16rfj4vWxluZJG3zvjs+lKqZJEq/9yqyVzNSwJ+3XQbQi+Y3Wra/NzpbVTrOHByNX9YSLzDplLcZL2ML5eqdXjVmdoKZcZgc7N+kaNG25jtGEGJEdAkxlXHcbN/d4ttbjNan1JJsBYwiSCDn+PVxEL3lrLv0bRbRxjzrBmO83UolPSQt+fgVnpS6VUA0kqy5PRfmz8gEsUtaGF+EtXT+0BDYCn9Upo8S+mz+QhYyIY8KhtJQc8szIv7lp2F+U2WZNzZfYnpJ+IdbUSSamLhfTZJPr0PxvasjyB59mAfU7qzJk/dbHIdAtIrEQaVlUY5VcmrbTXjZydTpX+TqxHhnXmPeMSTrDFZrhLElps4I4YDUVCsBYfU0iCt8wtvT1cmCP3KXeBEQLjFPh+bKC3U6yiYlYsip05WEw/lfHN+qJ3E2Ah3DLIQTbo8didd5LenzkScychkKmZ0GkqdL2Yw3BVj5m2pB1wE7Ull94Tm2+xw0H9otKQNKfgSaqVPNLQ8Pbd3WdAMAF3e6e4GBST7obvWcour7RbnTt/gnayb0CWp4pdrH5FdvJYnp21pL4ztPBqfHqcXaA3su3RFjfD2e6sQaEx5sJHdzEYKzes2nhAHnPeXO2irJBYIeNA+kEQjaR/ENH4ID1MDiNqC2vwxPQUiThFLDtKjiIL7FZglP1fOeec3riReR4Rwbftlbp0ATKG5wAWpyqyUqe1eyOtViiPMDTn1UqrE/09076wDuAKknBOh+cYxmFwxrlWrMXlwsL5uSNmubqfY549KXOn/DKbb9nIgSbwHTAIMOMrPxxSv0l/aCW984R7NvpjmaVxUDR2SkbHzO88r1bSFZKbzJ+kdM9oh37A+PLr9FKSkedRySND/PgWrwRf0leTnptxlR7jIWnjfEKSmoXWULJrNU0c+tFlwNhOXW9j3ENQiLJdyveMbcSK8xHk56rXuTaFutKDcUv1PCnClTTWFDaccX25gJsRiWS8yznlRdSgxvqicTMOIMDsgmiI5vlkR0o7MHVMdrxuRdxP+HBsGd8vwwScWw1Cs+q4aZN35L0LE6fVKXRBl2Ero+OvabcLvxcPLYUg/U942BxKu2Dn9oabctpom3X8qg30EcFoAmYWkJLA8pNuwChuNQiaMGzkcTZ2DIcpxKfNRCgExgfCEgU9pHLWLuoJnFIH7i5Jmcv9UvNSCIRJb6CxJZUiOzLyAg5ZAs7xwBvWlFFB69wFBakzTEM4tyfpCtICFUbBKxGbJk4uwpKKiW2z0hwzzybA1KLH1VoJurJrQLHtEHXCKTgdWvAa81BuruHz4L1WQfYQaC5znpuGj1xZgFvGOBDpXr1jm45uDYxTiMC5LSPd+9rN2Gb1QivTZI+hgsp3G4KFYuaEiHTuCwvGFJOeF6kh0NsNH1gtqTL7fVngPQvvXDWsi0hEFcPKgBpO01t3XUKIPowS22jK1cptLK2tOzK6abeg14BmcUuZ/TKoBnpMiG0KTw9OffjBIqwMJuR84UQeiMZzC407Nx21C6s160VlCjo9EPqNzLdx8JTdQfMkgeAKlBacFNC9BkQTQNTT3M6EgM2BtJM2+Dkp6PD2CNyTI6mLUKNHpVK2viY3Xif85IxdbVtAV+1HqFMgEtHLE0eGAXM7n5pzw72GOF63lho59npI4E/GLKPGiY7QRAkwYJSGcutL5AcgLEUFZxNoI8yIKbdjKeZgdk1taYLzg5kE3NxJ0qHtJRzjiji5caCGlFt+9SXE2IHdqbaKo8MXBjCugnUWNfJ926A8WX8jrAY4y9i/t3G8FjYYq9A0DmWW/X1N0p2BhZY4tZsOQlZjJbtmCpX9xxQiPaCwQEDw6if/fhxwSV6D05C90hl/wIG10UXUd+rbudS8Q0zKoLDL6y6uwsZOaoLz7Q8jDbRdwuplgHpHXoDik6vMR8RGSp4NXJpqRcJSCHGLS1a73tcbe7iuU6neLw7HEom8jeHAm2hLOOMWNP78/9RzD4wOivQ9QFm3vwF3+oN4atuEaBOW2ivXLBf37Z/EWPgfdAosNLXK6j9USdWuPrltrnj5T97jzi8eGxLdBLBMhZ/xpiCBUjjV0S5ICKYJRen9TPZG863uTfKr9IaWM0r3k/27opwfN0qWwLBmc8cBz2X2L6ctyjxqaqUvQtlWpC7yEvCCR9PabNl2jAmGaAT4npCAp1Y01jTp9cB8MMtWGq+0/p3WfX4zbobCNIGihDf/ojmplHDkX7VdYQg9tHEHeFcGbzsJtJnCQ9X4wGrKCRCqhdLulqZPg8zNuQSCvyE/6aXM3oV1+s4PPsowJtNuv+gXbXsed5qC40pT9nQBokJo6TpUZULGWHOIsx9dL2WG8BYwp5HJ7Xl7EASYYYUDJsOAC2AOR242cGEXM4Rb2EUBs8yXYcEuW/BS/c1XX7Vufv31t2nVO5/Ytnz01qLvW6/Jm7/xDq1527r51TeXqre80eTjKi3zx3dr9kb9x38O+n/xVqv+krp7+L1LaujFx/9qP3f53/bzT4yNXPpwz5hR93zy1vC7Do6uevCzu1tdb++5dPnNPfNcd8d8O/5z+Z1dbXa3e9jeD6LaM844y+4IyymcU90ybaW729YyvyUjszjZezQ18qfbJ4YPrFTEOAwDUT5AJgj/7zIOCwCQ8a30p/jcHXFOwRcuWnzwyl45JfU2gclOhjvrX0yANz1dscfabIgKCpK4TkCyHP1sJSenBaXt3Vt/IAiAgJLDXjk7zZX/m9lmBgC89ezDfwDw3kKO+efof69ER80zAUhgAAACXl+NLOcpSH8EEMA7c/4cHpJysLzPB/Hz1IP85By7hGMaEQxuJOMwsPtdayDIwonrhhG3jOVXYS0hGFeZse371wrIxLNrOQYSWysimgavleChwjVOpNPUMwiw026xlmCl4zfhaUYUXdoXOba0b+W43Cd/EKW69VjMp9U8Lfp4ICNFDR6Md8Sc0Kjn5C4J48wQ9gMenQ3d2nw7ax6KzT+5xbM+nBkeFAf3wJCL5K2YpxWJ/KGZkjBrmE4rntzdD3WYYy5Idunjl6xT5/7BrY2oDY/FK+eZr+NUnzQkIUVZmYdKjVwJNLk/uIVEca1tvCYkT+jUNttay5t40l2/FJoJPdjiN4tv29NSmxQ4dEhS4asno1GFOk3S2yTcBOxs7mwDOnSakeRqB0/ULbOMZZNqMS4AXJJxFGR8CaWW7C9WF2sLshsT5mcb9GVfSfBnPocvE8nezERPlkF3RqIrbWpCZ5rrSPdke7pskxOtOxTzaCle5KrwMbcoZ06J3KR8ojRfNjIzz8kZufNZcdOyrHyclR5lmai0uIuEkROTkkvm0RxrqSnewyDG7n5UZD9048Kc7IaJTqDTDvjeKe/67o63y9uua7k40XQVqh1Zt13NUllYLreeSJSZezgzE6c8Ry3uGEYeGaVD40OBLm5fk8SefMmV83bkSdb0a6ddeg1KqUVMGJx/guGnx035MSmeOzFkfb8pJ7rEvoF1W9B88DCRINez0iMF7bLw9nlBVTfma/a5n+8iusycokbi//p9SN1TUoNS3Wqw5tYcsl0VZa7aNa65+Er+AxdchlO1yVbVJEsqTYM6NasmaS9IP0gM2oeVbvgB3A2yyGZVkJlq1pjmYivZD0xwQ1AUke6knYHx3to7TcbYVsAyelKANgaGjAvQxoAyZmJA2hiAeic19xNt19Zt24a4ktrAznHNNwUgrkTrZ6x0THM/F7ZrJX544fV6/X54px5eoK2pdlNSDIqV2sMMvaUADcio+9c+1oOrz/XCRAIAAA==) format("woff2"),url(data:font/woff;base64,) format("woff");unicode-range:U+1F00-1FFF}@font-face{font-family:Open Sans;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,) format("woff");unicode-range:U+0370-03FF}@font-face{font-family:Open Sans;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,) format("woff");unicode-range:U+0590-05FF,U+200C-2010,U+20AA,U+25CC,U+FB1D-FB4F}@font-face{font-family:Open Sans;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,) format("woff");unicode-range:U+0102-0103,U+0110-0111,U+0128-0129,U+0168-0169,U+01A0-01A1,U+01AF-01B0,U+1EA0-1EF9,U+20AB}@font-face{font-family:Open Sans;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,) format("woff");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:Open Sans;font-style:normal;font-display:swap;font-weight:400;src:url(data:font/woff2;base64,) format("woff2"),url(data:font/woff;base64,) format("woff");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}.tooltip-base[data-v-d35d8fc6]{visibility:hidden;position:absolute;z-index:10;width:8rem;cursor:help;border-width:1px;--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity));padding:.5rem;font-family:Open Sans;font-size:.875rem;line-height:1.25rem;font-weight:400;--tw-text-opacity: 1;color:rgb(0 0 0 / var(--tw-text-opacity));--tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / .1)) drop-shadow(0 1px 1px rgb(0 0 0 / .06));filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.group:hover .tooltip-base[data-v-d35d8fc6]{visibility:visible}.base-label{font-size:.875rem;line-height:1.25rem;font-weight:600;text-transform:uppercase;--tw-text-opacity: 1;color:rgb(71 85 105 / var(--tw-text-opacity))}.base-list-item{cursor:pointer;padding:.25rem .5rem}.base-list-item:hover{--tw-bg-opacity: 1;background-color:rgb(203 213 225 / var(--tw-bg-opacity))}.base-list-item.base-list-item-selected,.base-list-item:hover{box-shadow:inset 2px 0 #3b82f6}.base-list-item.base-list-item-selected{--tw-bg-opacity: 1;background-color:rgb(219 234 254 / var(--tw-bg-opacity));--tw-text-opacity: 1;color:rgb(29 78 216 / var(--tw-text-opacity))}.base-icon[data-v-50cc951a]{display:inline-block}.toolbar[data-v-50cc951a]{cursor:pointer}.blue[data-v-50cc951a]{--tw-text-opacity: 1;color:rgb(30 64 175 / var(--tw-text-opacity))}.blue[data-v-50cc951a]:hover{--tw-text-opacity: 1;color:rgb(96 165 250 / var(--tw-text-opacity))}.base-button .base-button-text[data-v-b2d0edd0]{display:flex}.base-button.default[data-v-b2d0edd0]{position:relative;--tw-bg-opacity: 1;background-color:rgb(191 219 254 / var(--tw-bg-opacity));padding-left:.5rem;padding-right:.5rem;--tw-shadow: 0 1px 2px 0 rgb(0 0 0 / .05);--tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.base-button.default[data-v-b2d0edd0]:hover{--tw-bg-opacity: 1;background-color:rgb(147 197 253 / var(--tw-bg-opacity))}.base-button.default.toggled[data-v-b2d0edd0],.base-button.default[data-v-b2d0edd0]:focus-within{--tw-bg-opacity: 1;background-color:rgb(96 165 250 / var(--tw-bg-opacity))}.base-button.default .base-button-text[data-v-b2d0edd0]{font-size:.875rem;line-height:1.25rem;text-transform:uppercase}.base-button.lg[data-v-b2d0edd0]{height:2rem}.base-button.lg .base-button-text[data-v-b2d0edd0]{font-size:1rem;line-height:1.5rem}.base-button.xl[data-v-b2d0edd0]{height:3rem}.base-button.rounded[data-v-b2d0edd0]{border-radius:.125rem}.base-button.circular[data-v-b2d0edd0]{border-radius:9999px}.base-field[data-v-684bea85]{display:flex}.base-field.left[data-v-684bea85]{flex-direction:row}.base-field.left[data-v-684bea85]>:not([hidden])~:not([hidden]),.base-field.right[data-v-684bea85]>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}.base-field.right[data-v-684bea85]{flex-direction:row-reverse}.base-field.right[data-v-684bea85]>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 1 }.base-field.top[data-v-684bea85]{flex-direction:column}.base-field.top[data-v-684bea85]>:not([hidden])~:not([hidden]),.base-field.down[data-v-684bea85]>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.25rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.25rem * var(--tw-space-y-reverse))}.base-field.down[data-v-684bea85]{flex-direction:column-reverse}.base-field.down[data-v-684bea85]>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 1 }[data-v-684bea85] .base-label{line-height:1.5rem}.field-text[data-v-684bea85]{position:relative;display:flex;border-radius:.125rem;border-width:1px;--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:rgb(241 245 249 / var(--tw-bg-opacity))}.field-text[data-v-684bea85]:focus-within{outline-style:solid;outline-width:2px;outline-color:#3b82f6}.field-text input[data-v-684bea85]:not([type=checkbox]){background-color:transparent;padding-left:.25rem;padding-right:.25rem}.field-text input[data-v-684bea85]:not([type=checkbox]):focus{outline:2px solid transparent;outline-offset:2px}.field-invalid[data-v-684bea85]:focus-within{outline-style:solid;outline-width:2px;outline-color:#ef4444}.field-invalid[data-v-684bea85]:not(:focus-within){--tw-border-opacity: 1;border-color:rgb(239 68 68 / var(--tw-border-opacity))}.checkbox[data-v-92dd509a] .field-text{display:flex;height:1.5rem;width:1.5rem;cursor:pointer;align-items:center}.checkbox[data-v-92dd509a] .field-text input{height:100%;width:100%;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;border-radius:.125rem;border-width:1px}.checkbox[data-v-92dd509a] .field-text input:checked:after{display:inline-block;height:100%;width:100%;text-align:center;font-size:1.25rem;line-height:1.25rem;content:"\\2714"}[data-v-26d0b8f0] .field-text .field-text-input{padding-left:.25rem;padding-right:.125rem}[data-v-55140278] .field-text .field-text-input{padding-left:.125rem;padding-right:.25rem}.field-combo-box-list-wrapper[data-v-91b5fca2]{pointer-events:auto;position:absolute;top:6rem;z-index:10;height:9rem;width:100%;overflow:auto;border-radius:.25rem;border-width:1px;--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity));text-indent:1px;--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.field-combo-box-picker[data-v-91b5fca2]{position:absolute;top:0px;right:0px;box-sizing:border-box;cursor:pointer;padding-right:.5rem;font-size:.75rem;line-height:1.5rem}.field-combo-box-picker[data-v-91b5fca2]:hover{--tw-text-opacity: 1;color:rgb(37 99 235 / var(--tw-text-opacity))}.multi-select[data-v-91b5fca2] .field-text-input{margin-top:.25rem}.multi-select[data-v-91b5fca2] .field-text{flex-direction:column;padding-bottom:.25rem;padding-left:.25rem}.multi-select.tags-below[data-v-91b5fca2] .field-text{flex-direction:column-reverse}.multi-select.tags-inline[data-v-91b5fca2] .field-text{flex-direction:row}[data-v-91b5fca2] .field-text{box-sizing:border-box;flex-wrap:wrap;padding-right:1.25rem}[data-v-91b5fca2] .field-text-input{width:100%;flex:1 1 0%}.base-dialog[data-v-25732f10]{display:flex;height:100%;width:100%;flex-direction:column}.header-blue .base-dialog-header[data-v-25732f10]{--tw-bg-opacity: 1;background-color:rgb(51 65 85 / var(--tw-bg-opacity));--tw-text-opacity: 1;color:rgb(245 245 244 / var(--tw-text-opacity))}.header-blue .toolbar[data-v-25732f10]:hover{--tw-text-opacity: 1;color:rgb(214 211 209 / var(--tw-text-opacity))}.base-dialog-header[data-v-25732f10]{display:flex;padding:.25rem .5rem}.base-dialog-header-title[data-v-25732f10]{flex:1 1 0%}.base-dialog-header-toolbar[data-v-25732f10]>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}',document.head.appendChild(e)}catch(r){console.error("vite-plugin-css-injected-by-js",r)}})();/**
* vee-validate v4.5.11
* (c) 2022 Abdelrahman Awad
* @license MIT
*/function Ds(e){return typeof e=="function"}const bd=e=>e!==null&&!!e&&typeof e=="object"&&!Array.isArray(e);function Zs(e,r){return e.replace(/(\d:)?{([^}]+)}/g,function(a,t,d){if(!t||!r.params)return d in r?r[d]:r.params&&d in r.params?r.params[d]:`{${d}}`;if(!Array.isArray(r.params))return d in r.params?r.params[d]:`{${d}}`;const o=Number(t.replace(":",""));return o in r.params?r.params[o]:`${t}{${d}}`})}function Bf(e,r){return Object.keys(r).forEach(a=>{if(bd(r[a])){e[a]||(e[a]={}),Bf(e[a],r[a]);return}e[a]=r[a]}),e}class yd{constructor(r,a){this.container={},this.locale=r,this.merge(a)}resolve(r){return this.format(this.locale,r)}getLocaleDefault(r,a){var t,d,o,v,h;return((o=(d=(t=this.container[r])===null||t===void 0?void 0:t.fields)===null||d===void 0?void 0:d[a])===null||o===void 0?void 0:o._default)||((h=(v=this.container[r])===null||v===void 0?void 0:v.messages)===null||h===void 0?void 0:h._default)}format(r,a){var t,d,o,v,h,g,b,u;let f;const{field:s,rule:i,form:n}=a,p=(o=(d=(t=this.container[r])===null||t===void 0?void 0:t.names)===null||d===void 0?void 0:d[s])!==null&&o!==void 0?o:s;return i?(f=((g=(h=(v=this.container[r])===null||v===void 0?void 0:v.fields)===null||h===void 0?void 0:h[s])===null||g===void 0?void 0:g[i.name])||((u=(b=this.container[r])===null||b===void 0?void 0:b.messages)===null||u===void 0?void 0:u[i.name]),f||(f=this.getLocaleDefault(r,s)||`${p} is not valid`),Ds(f)?f(a):Zs(f,Object.assign(Object.assign({},n),{field:p,params:i.params}))):(f=this.getLocaleDefault(r,s)||`${p} is not valid`,Ds(f)?f(a):Zs(f,Object.assign(Object.assign({},n),{field:p})))}merge(r){Bf(this.container,r)}}let Ur;function wd(e,r){Ur||(Ur=new yd("en",{}));const a=t=>Ur.resolve(t);return typeof e=="string"?(Ur.locale=e,r&&Ur.merge({[e]:r}),a):(Ur.merge(e),a)}const xd=/^\s+$/;Z0({generateMessage:wd("en",{messages:{required:"Value is required",minLength:"Value is too short",maxLength:"Value is too long",minValue:"Value is too small",maxValue:"Value is too large",whitespace:"Value is only whitespaces"}})});pn("required",e=>er(e)===!1);pn("minLength",(e,[r])=>e.length>=r);pn("maxLength",(e,[r])=>e.length<=r);pn("minValue",(e,[r])=>er(e)||e>=r);pn("maxValue",(e,[r])=>er(e)||e<=r);pn("whitespace",e=>!xd.test(e));class Df extends HTMLElement{constructor(){super(),document.body.appendChild(this)}add(r){this.appendChild(r)}remove(r){this.removeChild(r)}}customElements.define("overlay-manager",Df);const Ad={mounted(e,r){document.addEventListener("mousedown",r.value)},unmounted(e,r){document.removeEventListener("mousedown",r.value)}},Pd={mounted(e,r){document.addEventListener("scroll",r.value,!0)},unmounted(e,r){document.removeEventListener("scroll",r.value,!0)}};var Nd={install(e){const r=new Df;e.provide("OverlayManager",r),e.config.globalProperties.Icon=gd,e.directive("mousedown-document",Ad),e.directive("scroll-document",Pd)}};function Co(e){return Array.isArray(e)}function fi(e,r=!0){return r?e&&e.constructor===Object:typeof e=="object"}function ki(e){return e==null||e===""||Co(e)&&e.length===0}function js(e,r){const a=[];return Co(r)?e.forEach(t=>{const d={};r.forEach(o=>d[o]=t[o]),a.push(d)}):e.forEach(t=>a.push(t[r])),a}function Ed(e){return JSON.parse(JSON.stringify(e))}class Jn{set(r,a){fi(r)||(r={[r]:a});for(const t in r)Reflect.set(this,t,r[t])}get excluded(){return[]}getData({excluded:r,options:a}){const t={};for(const d in this)(r==null?void 0:r.indexOf(d))===-1&&(t[d]=a[d]||this[d]);return Ed(t)}clone(r={}){return new this.constructor(this.getData({options:r,excluded:this.excluded}))}}class kd extends Array{constructor(a,t=Jn,d=[]){super(a);_e(this,"idKey","id");_e(this,"valueKey","value");_e(this,"sorters");_e(this,"model");this.model=t,this.sorters=d,this.initialize(a)}initialize(a){if(Co(a)){if(!fi(a[0],!1)){const t=[];for(let d=0;d<a.length;d++)t.push(new this.model({[this.idKey]:d,[this.valueKey]:a[d]}));Object.assign(this,t)}}else if(fi(a,!1)){const t=[];for(const d in a)t.push(new this.model({[this.idKey]:a[d],[this.valueKey]:d}));Object.assign(this,t)}this.sort()}sort(a){a=a||this.sorters,a==null||a.forEach(t=>{if(fi(t)){const{property:d,direction:o=1}=t;super.sort((v,h)=>{const g=v[d],b=h[d];return g===b?0:g<b?o*-1:o*1})}else super.sort(t)})}findRecord(a){let t;for(let d=0;d<this.length;d++){const o=this[d];if(o[this.valueKey]===a||o[this.idKey]===a){t=o;break}}return t}get first(){return this[0]}get last(){return[this.length-1]}}class Sd extends Jn{constructor(a){super(a);_e(this,"id","");_e(this,"value","");this.set(a)}}class Ro extends kd{constructor(r,a=Sd,t=[{property:"value"}]){super(r,a,t)}initialize(r){super.initialize(r);const a={};this.forEach(t=>{a[t[this.valueKey]]=t[this.idKey]}),Object.assign(this,a)}getKey(r){const a=this.values.indexOf(r);return this.keys[a]}createKey(r,a=!1){return a?r.split(/([A-Z][a-z]+)/g).filter(Boolean).join("_").toUpperCase():r}get keys(){return Object.keys(this)}get values(){return Object.values(this)}toClassDescription(){return`/**
`+this.map(r=>` * @property ${r[this.valueKey]}`).join(`
`)+`
 */`}}class Cd extends Jn{constructor(r){super(r),this.set(r)}get backgroundStyle(){return this.id===Ke.None?"":`background-color: #${this.id};`}}const Ke=new Ro({None:"Transparent",Tan:"FFEFA6",Green:"00a800",Brown:"c84c0c",Blue:"2038ec",Gray:"747474",White:"fcfcfc",Red:"7c0800",Black:"000000",Q1C1Accent:"008088",Q1C1Door:"183c5c",Q1C1Body:"00e8d8",PureBlue:"0000FF",PureRed:"FF0000",PureGreen:"00FF00",FireOuter:"F83800",FireInner:"FFA044",PureWhite:"FFFFFF"},Cd),Be=new Ro(["Block","Bush","Castle","CastleBottomLeft","CastleBottomRight","CastleSand","CastleTop","CastleTopAlt","CastleTopLeft","CastleTopLeftAlt","CastleTopRight","CastleTopRightAlt","Dock","Door","DoorClosedX","DoorClosedY","DoorLockedX","DoorLockedY","DoorUnlockedX","DoorUnlockedY","Fire","FireAlt","Grave","GroundTile","None","PondBottom","PondBottomLeft","PondBottomRight","PondCenter","PondCenterLeft","PondCenterRight","PondTop","PondTopLeft","PondTopRight","Rock","SandBottom","SandBottomLeft","SandBottomRight","SandCenter","SandCenterLeft","SandCenterRight","SandTop","SandTopLeft","SandTopRight","SolidColor","StairsDown","StairsKeep","StairsUp","Statue","Statue1","Statue2","Transition","TreeBottomLeft","TreeBottomRight","TreeTop","TreeTopLeft","TreeTopRight","WallBottom","WallBottomLeft","WallBottomRight","WallHoleX","WallHoleY","WallKeep","WallLeftX","WallLeftY","WallLeftYFlip","WallRightX","WallRightY","WallRightYFlip","WallTop","WallTopLeft","WallTopRight","WallX","WallY","Water","WaterBottomLeft","WaterBottomRight","WaterTopLeft","WaterTopRight"]);var ri,Rd=new Uint8Array(16);function Fd(){if(!ri&&(ri=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto!="undefined"&&typeof msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto),!ri))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return ri(Rd)}var Od=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function Id(e){return typeof e=="string"&&Od.test(e)}var At=[];for(var da=0;da<256;++da)At.push((da+256).toString(16).substr(1));function Md(e){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,a=(At[e[r+0]]+At[e[r+1]]+At[e[r+2]]+At[e[r+3]]+"-"+At[e[r+4]]+At[e[r+5]]+"-"+At[e[r+6]]+At[e[r+7]]+"-"+At[e[r+8]]+At[e[r+9]]+"-"+At[e[r+10]]+At[e[r+11]]+At[e[r+12]]+At[e[r+13]]+At[e[r+14]]+At[e[r+15]]).toLowerCase();if(!Id(a))throw TypeError("Stringified UUID is invalid");return a}function Gs(e,r,a){e=e||{};var t=e.random||(e.rng||Fd)();if(t[6]=t[6]&15|64,t[8]=t[8]&63|128,r){a=a||0;for(var d=0;d<16;++d)r[a+d]=t[d];return r}return Md(t)}var nt=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function ni(e){throw new Error('Could not dynamically require "'+e+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var Si={exports:{}};(function(e,r){if((typeof a=="undefined"||!a)&&typeof self!="undefined")var a=self;(function(t){e.exports=t()})(function(){return function(){function t(d,o,v){function h(u,f){if(!o[u]){if(!d[u]){var s=typeof ni=="function"&&ni;if(!f&&s)return s(u,!0);if(g)return g(u,!0);var i=new Error("Cannot find module '"+u+"'");throw i.code="MODULE_NOT_FOUND",i}var n=o[u]={exports:{}};d[u][0].call(n.exports,function(p){var y=d[u][1][p];return h(y||p)},n,n.exports,t,d,o,v)}return o[u].exports}for(var g=typeof ni=="function"&&ni,b=0;b<v.length;b++)h(v[b]);return h}return t}()({1:[function(t,d,o){function v(h){if(Array.isArray(h))return h}d.exports=v},{}],2:[function(t,d,o){function v(h){if(Array.isArray(h)){for(var g=0,b=new Array(h.length);g<h.length;g++)b[g]=h[g];return b}}d.exports=v},{}],3:[function(t,d,o){function v(h){if(h===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return h}d.exports=v},{}],4:[function(t,d,o){function v(h,g){if(!(h instanceof g))throw new TypeError("Cannot call a class as a function")}d.exports=v},{}],5:[function(t,d,o){var v=t("./setPrototypeOf");function h(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch{return!1}}function g(b,u,f){return h()?d.exports=g=Reflect.construct:d.exports=g=function(i,n,p){var y=[null];y.push.apply(y,n);var l=Function.bind.apply(i,y),m=new l;return p&&v(m,p.prototype),m},g.apply(null,arguments)}d.exports=g},{"./setPrototypeOf":18}],6:[function(t,d,o){function v(g,b){for(var u=0;u<b.length;u++){var f=b[u];f.enumerable=f.enumerable||!1,f.configurable=!0,"value"in f&&(f.writable=!0),Object.defineProperty(g,f.key,f)}}function h(g,b,u){return b&&v(g.prototype,b),u&&v(g,u),g}d.exports=h},{}],7:[function(t,d,o){function v(h,g,b){return g in h?Object.defineProperty(h,g,{value:b,enumerable:!0,configurable:!0,writable:!0}):h[g]=b,h}d.exports=v},{}],8:[function(t,d,o){function v(){return d.exports=v=Object.assign||function(h){for(var g=1;g<arguments.length;g++){var b=arguments[g];for(var u in b)Object.prototype.hasOwnProperty.call(b,u)&&(h[u]=b[u])}return h},v.apply(this,arguments)}d.exports=v},{}],9:[function(t,d,o){function v(h){return d.exports=v=Object.setPrototypeOf?Object.getPrototypeOf:function(b){return b.__proto__||Object.getPrototypeOf(b)},v(h)}d.exports=v},{}],10:[function(t,d,o){var v=t("./setPrototypeOf");function h(g,b){if(typeof b!="function"&&b!==null)throw new TypeError("Super expression must either be null or a function");g.prototype=Object.create(b&&b.prototype,{constructor:{value:g,writable:!0,configurable:!0}}),b&&v(g,b)}d.exports=h},{"./setPrototypeOf":18}],11:[function(t,d,o){function v(h){return h&&h.__esModule?h:{default:h}}d.exports=v},{}],12:[function(t,d,o){var v=t("../helpers/typeof");function h(){if(typeof WeakMap!="function")return null;var b=new WeakMap;return h=function(){return b},b}function g(b){if(b&&b.__esModule)return b;if(b===null||v(b)!=="object"&&typeof b!="function")return{default:b};var u=h();if(u&&u.has(b))return u.get(b);var f={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in b)if(Object.prototype.hasOwnProperty.call(b,i)){var n=s?Object.getOwnPropertyDescriptor(b,i):null;n&&(n.get||n.set)?Object.defineProperty(f,i,n):f[i]=b[i]}return f.default=b,u&&u.set(b,f),f}d.exports=g},{"../helpers/typeof":21}],13:[function(t,d,o){function v(h){if(Symbol.iterator in Object(h)||Object.prototype.toString.call(h)==="[object Arguments]")return Array.from(h)}d.exports=v},{}],14:[function(t,d,o){function v(h,g){if(Symbol.iterator in Object(h)||Object.prototype.toString.call(h)==="[object Arguments]"){var b=[],u=!0,f=!1,s=void 0;try{for(var i=h[Symbol.iterator](),n;!(u=(n=i.next()).done)&&(b.push(n.value),!(g&&b.length===g));u=!0);}catch(p){f=!0,s=p}finally{try{!u&&i.return!=null&&i.return()}finally{if(f)throw s}}return b}}d.exports=v},{}],15:[function(t,d,o){function v(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}d.exports=v},{}],16:[function(t,d,o){function v(){throw new TypeError("Invalid attempt to spread non-iterable instance")}d.exports=v},{}],17:[function(t,d,o){var v=t("../helpers/typeof"),h=t("./assertThisInitialized");function g(b,u){return u&&(v(u)==="object"||typeof u=="function")?u:h(b)}d.exports=g},{"../helpers/typeof":21,"./assertThisInitialized":3}],18:[function(t,d,o){function v(h,g){return d.exports=v=Object.setPrototypeOf||function(u,f){return u.__proto__=f,u},v(h,g)}d.exports=v},{}],19:[function(t,d,o){var v=t("./arrayWithHoles"),h=t("./iterableToArrayLimit"),g=t("./nonIterableRest");function b(u,f){return v(u)||h(u,f)||g()}d.exports=b},{"./arrayWithHoles":1,"./iterableToArrayLimit":14,"./nonIterableRest":15}],20:[function(t,d,o){var v=t("./arrayWithoutHoles"),h=t("./iterableToArray"),g=t("./nonIterableSpread");function b(u){return v(u)||h(u)||g()}d.exports=b},{"./arrayWithoutHoles":2,"./iterableToArray":13,"./nonIterableSpread":16}],21:[function(t,d,o){function v(g){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?v=function(u){return typeof u}:v=function(u){return u&&typeof Symbol=="function"&&u.constructor===Symbol&&u!==Symbol.prototype?"symbol":typeof u},v(g)}function h(g){return typeof Symbol=="function"&&v(Symbol.iterator)==="symbol"?d.exports=h=function(u){return v(u)}:d.exports=h=function(u){return u&&typeof Symbol=="function"&&u.constructor===Symbol&&u!==Symbol.prototype?"symbol":v(u)},h(g)}d.exports=h},{}],22:[function(t,d,o){d.exports=t("regenerator-runtime")},{"regenerator-runtime":153}],23:[function(t,d,o){var v=t("./src/converter");function h(g,b){var u=new v(g,b);return function(f){return u.convert(f)}}h.BIN="01",h.OCT="01234567",h.DEC="0123456789",h.HEX="0123456789abcdef",d.exports=h},{"./src/converter":24}],24:[function(t,d,o){function v(h,g){if(!h||!g||!h.length||!g.length)throw new Error("Bad alphabet");this.srcAlphabet=h,this.dstAlphabet=g}v.prototype.convert=function(h){var g,b,u,f={},s=this.srcAlphabet.length,i=this.dstAlphabet.length,n=h.length,p=typeof h=="string"?"":[];if(!this.isValid(h))throw new Error('Number "'+h+'" contains of non-alphabetic digits ('+this.srcAlphabet+")");if(this.srcAlphabet===this.dstAlphabet)return h;for(g=0;g<n;g++)f[g]=this.srcAlphabet.indexOf(h[g]);do{for(b=0,u=0,g=0;g<n;g++)b=b*s+f[g],b>=i?(f[u++]=parseInt(b/i,10),b=b%i):u>0&&(f[u++]=0);n=u,p=this.dstAlphabet.slice(b,b+1).concat(p)}while(u!==0);return p},v.prototype.isValid=function(h){for(var g=0;g<h.length;++g)if(this.srcAlphabet.indexOf(h[g])===-1)return!1;return!0},d.exports=v},{}],25:[function(t,d,o){(function(v){var h=t("object-assign");/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */function g(D,T){if(D===T)return 0;for(var G=D.length,U=T.length,ie=0,se=Math.min(G,U);ie<se;++ie)if(D[ie]!==T[ie]){G=D[ie],U=T[ie];break}return G<U?-1:U<G?1:0}function b(D){return v.Buffer&&typeof v.Buffer.isBuffer=="function"?v.Buffer.isBuffer(D):!!(D!=null&&D._isBuffer)}var u=t("util/"),f=Object.prototype.hasOwnProperty,s=Array.prototype.slice,i=function(){return function(){}.name==="foo"}();function n(D){return Object.prototype.toString.call(D)}function p(D){return b(D)||typeof v.ArrayBuffer!="function"?!1:typeof ArrayBuffer.isView=="function"?ArrayBuffer.isView(D):D?!!(D instanceof DataView||D.buffer&&D.buffer instanceof ArrayBuffer):!1}var y=d.exports=N,l=/\s*function\s+([^\(\s]*)\s*/;function m(D){if(!!u.isFunction(D)){if(i)return D.name;var T=D.toString(),G=T.match(l);return G&&G[1]}}y.AssertionError=function(T){this.name="AssertionError",this.actual=T.actual,this.expected=T.expected,this.operator=T.operator,T.message?(this.message=T.message,this.generatedMessage=!1):(this.message=x(this),this.generatedMessage=!0);var G=T.stackStartFunction||A;if(Error.captureStackTrace)Error.captureStackTrace(this,G);else{var U=new Error;if(U.stack){var ie=U.stack,se=m(G),ae=ie.indexOf(`
`+se);if(ae>=0){var W=ie.indexOf(`
`,ae+1);ie=ie.substring(W+1)}this.stack=ie}}},u.inherits(y.AssertionError,Error);function c(D,T){return typeof D=="string"?D.length<T?D:D.slice(0,T):D}function w(D){if(i||!u.isFunction(D))return u.inspect(D);var T=m(D),G=T?": "+T:"";return"[Function"+G+"]"}function x(D){return c(w(D.actual),128)+" "+D.operator+" "+c(w(D.expected),128)}function A(D,T,G,U,ie){throw new y.AssertionError({message:G,actual:D,expected:T,operator:U,stackStartFunction:ie})}y.fail=A;function N(D,T){D||A(D,!0,T,"==",y.ok)}y.ok=N,y.equal=function(T,G,U){T!=G&&A(T,G,U,"==",y.equal)},y.notEqual=function(T,G,U){T==G&&A(T,G,U,"!=",y.notEqual)},y.deepEqual=function(T,G,U){E(T,G,!1)||A(T,G,U,"deepEqual",y.deepEqual)},y.deepStrictEqual=function(T,G,U){E(T,G,!0)||A(T,G,U,"deepStrictEqual",y.deepStrictEqual)};function E(D,T,G,U){if(D===T)return!0;if(b(D)&&b(T))return g(D,T)===0;if(u.isDate(D)&&u.isDate(T))return D.getTime()===T.getTime();if(u.isRegExp(D)&&u.isRegExp(T))return D.source===T.source&&D.global===T.global&&D.multiline===T.multiline&&D.lastIndex===T.lastIndex&&D.ignoreCase===T.ignoreCase;if((D===null||typeof D!="object")&&(T===null||typeof T!="object"))return G?D===T:D==T;if(p(D)&&p(T)&&n(D)===n(T)&&!(D instanceof Float32Array||D instanceof Float64Array))return g(new Uint8Array(D.buffer),new Uint8Array(T.buffer))===0;if(b(D)!==b(T))return!1;U=U||{actual:[],expected:[]};var ie=U.actual.indexOf(D);return ie!==-1&&ie===U.expected.indexOf(T)?!0:(U.actual.push(D),U.expected.push(T),S(D,T,G,U))}function k(D){return Object.prototype.toString.call(D)=="[object Arguments]"}function S(D,T,G,U){if(D==null||T===null||T===void 0)return!1;if(u.isPrimitive(D)||u.isPrimitive(T))return D===T;if(G&&Object.getPrototypeOf(D)!==Object.getPrototypeOf(T))return!1;var ie=k(D),se=k(T);if(ie&&!se||!ie&&se)return!1;if(ie)return D=s.call(D),T=s.call(T),E(D,T,G);var ae=J(D),W=J(T),ee,_;if(ae.length!==W.length)return!1;for(ae.sort(),W.sort(),_=ae.length-1;_>=0;_--)if(ae[_]!==W[_])return!1;for(_=ae.length-1;_>=0;_--)if(ee=ae[_],!E(D[ee],T[ee],G,U))return!1;return!0}y.notDeepEqual=function(T,G,U){E(T,G,!1)&&A(T,G,U,"notDeepEqual",y.notDeepEqual)},y.notDeepStrictEqual=R;function R(D,T,G){E(D,T,!0)&&A(D,T,G,"notDeepStrictEqual",R)}y.strictEqual=function(T,G,U){T!==G&&A(T,G,U,"===",y.strictEqual)},y.notStrictEqual=function(T,G,U){T===G&&A(T,G,U,"!==",y.notStrictEqual)};function M(D,T){if(!D||!T)return!1;if(Object.prototype.toString.call(T)=="[object RegExp]")return T.test(D);try{if(D instanceof T)return!0}catch{}return Error.isPrototypeOf(T)?!1:T.call({},D)===!0}function B(D){var T;try{D()}catch(G){T=G}return T}function I(D,T,G,U){var ie;if(typeof T!="function")throw new TypeError('"block" argument must be a function');typeof G=="string"&&(U=G,G=null),ie=B(T),U=(G&&G.name?" ("+G.name+").":".")+(U?" "+U:"."),D&&!ie&&A(ie,G,"Missing expected exception"+U);var se=typeof U=="string",ae=!D&&u.isError(ie),W=!D&&ie&&!G;if((ae&&se&&M(ie,G)||W)&&A(ie,G,"Got unwanted exception"+U),D&&ie&&G&&!M(ie,G)||!D&&ie)throw ie}y.throws=function(D,T,G){I(!0,D,T,G)},y.doesNotThrow=function(D,T,G){I(!1,D,T,G)},y.ifError=function(D){if(D)throw D};function Y(D,T){D||A(D,!0,T,"==",Y)}y.strict=h(Y,y,{equal:y.strictEqual,deepEqual:y.deepStrictEqual,notEqual:y.notStrictEqual,notDeepEqual:y.notDeepStrictEqual}),y.strict.strict=y.strict;var J=Object.keys||function(D){var T=[];for(var G in D)f.call(D,G)&&T.push(G);return T}}).call(this,typeof nt!="undefined"?nt:typeof self!="undefined"?self:typeof a!="undefined"?a:{})},{"object-assign":84,"util/":28}],26:[function(t,d,o){typeof Object.create=="function"?d.exports=function(h,g){h.super_=g,h.prototype=Object.create(g.prototype,{constructor:{value:h,enumerable:!1,writable:!0,configurable:!0}})}:d.exports=function(h,g){h.super_=g;var b=function(){};b.prototype=g.prototype,h.prototype=new b,h.prototype.constructor=h}},{}],27:[function(t,d,o){d.exports=function(h){return h&&typeof h=="object"&&typeof h.copy=="function"&&typeof h.fill=="function"&&typeof h.readUInt8=="function"}},{}],28:[function(t,d,o){(function(v,h){var g=/%[sdj%]/g;o.format=function(W){if(!S(W)){for(var ee=[],_=0;_<arguments.length;_++)ee.push(f(arguments[_]));return ee.join(" ")}for(var _=1,re=arguments,fe=re.length,pe=String(W).replace(g,function(oe){if(oe==="%%")return"%";if(_>=fe)return oe;switch(oe){case"%s":return String(re[_++]);case"%d":return Number(re[_++]);case"%j":try{return JSON.stringify(re[_++])}catch{return"[Circular]"}default:return oe}}),he=re[_];_<fe;he=re[++_])N(he)||!I(he)?pe+=" "+he:pe+=" "+f(he);return pe},o.deprecate=function(W,ee){if(M(h.process))return function(){return o.deprecate(W,ee).apply(this,arguments)};if(v.noDeprecation===!0)return W;var _=!1;function re(){if(!_){if(v.throwDeprecation)throw new Error(ee);v.traceDeprecation?console.trace(ee):console.error(ee),_=!0}return W.apply(this,arguments)}return re};var b={},u;o.debuglog=function(W){if(M(u)&&(u={}.NODE_DEBUG||""),W=W.toUpperCase(),!b[W])if(new RegExp("\\b"+W+"\\b","i").test(u)){var ee=v.pid;b[W]=function(){var _=o.format.apply(o,arguments);console.error("%s %d: %s",W,ee,_)}}else b[W]=function(){};return b[W]};function f(W,ee){var _={seen:[],stylize:i};return arguments.length>=3&&(_.depth=arguments[2]),arguments.length>=4&&(_.colors=arguments[3]),A(ee)?_.showHidden=ee:ee&&o._extend(_,ee),M(_.showHidden)&&(_.showHidden=!1),M(_.depth)&&(_.depth=2),M(_.colors)&&(_.colors=!1),M(_.customInspect)&&(_.customInspect=!0),_.colors&&(_.stylize=s),p(_,W,_.depth)}o.inspect=f,f.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},f.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"};function s(W,ee){var _=f.styles[ee];return _?"\x1B["+f.colors[_][0]+"m"+W+"\x1B["+f.colors[_][1]+"m":W}function i(W,ee){return W}function n(W){var ee={};return W.forEach(function(_,re){ee[_]=!0}),ee}function p(W,ee,_){if(W.customInspect&&ee&&D(ee.inspect)&&ee.inspect!==o.inspect&&!(ee.constructor&&ee.constructor.prototype===ee)){var re=ee.inspect(_,W);return S(re)||(re=p(W,re,_)),re}var fe=y(W,ee);if(fe)return fe;var pe=Object.keys(ee),he=n(pe);if(W.showHidden&&(pe=Object.getOwnPropertyNames(ee)),J(ee)&&(pe.indexOf("message")>=0||pe.indexOf("description")>=0))return l(ee);if(pe.length===0){if(D(ee)){var oe=ee.name?": "+ee.name:"";return W.stylize("[Function"+oe+"]","special")}if(B(ee))return W.stylize(RegExp.prototype.toString.call(ee),"regexp");if(Y(ee))return W.stylize(Date.prototype.toString.call(ee),"date");if(J(ee))return l(ee)}var ce="",X=!1,K=["{","}"];if(x(ee)&&(X=!0,K=["[","]"]),D(ee)){var L=ee.name?": "+ee.name:"";ce=" [Function"+L+"]"}if(B(ee)&&(ce=" "+RegExp.prototype.toString.call(ee)),Y(ee)&&(ce=" "+Date.prototype.toUTCString.call(ee)),J(ee)&&(ce=" "+l(ee)),pe.length===0&&(!X||ee.length==0))return K[0]+ce+K[1];if(_<0)return B(ee)?W.stylize(RegExp.prototype.toString.call(ee),"regexp"):W.stylize("[Object]","special");W.seen.push(ee);var $;return X?$=m(W,ee,_,he,pe):$=pe.map(function(te){return c(W,ee,_,he,te,X)}),W.seen.pop(),w($,ce,K)}function y(W,ee){if(M(ee))return W.stylize("undefined","undefined");if(S(ee)){var _="'"+JSON.stringify(ee).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return W.stylize(_,"string")}if(k(ee))return W.stylize(""+ee,"number");if(A(ee))return W.stylize(""+ee,"boolean");if(N(ee))return W.stylize("null","null")}function l(W){return"["+Error.prototype.toString.call(W)+"]"}function m(W,ee,_,re,fe){for(var pe=[],he=0,oe=ee.length;he<oe;++he)ae(ee,String(he))?pe.push(c(W,ee,_,re,String(he),!0)):pe.push("");return fe.forEach(function(ce){ce.match(/^\d+$/)||pe.push(c(W,ee,_,re,ce,!0))}),pe}function c(W,ee,_,re,fe,pe){var he,oe,ce;if(ce=Object.getOwnPropertyDescriptor(ee,fe)||{value:ee[fe]},ce.get?ce.set?oe=W.stylize("[Getter/Setter]","special"):oe=W.stylize("[Getter]","special"):ce.set&&(oe=W.stylize("[Setter]","special")),ae(re,fe)||(he="["+fe+"]"),oe||(W.seen.indexOf(ce.value)<0?(N(_)?oe=p(W,ce.value,null):oe=p(W,ce.value,_-1),oe.indexOf(`
`)>-1&&(pe?oe=oe.split(`
`).map(function(X){return"  "+X}).join(`
`).substr(2):oe=`
`+oe.split(`
`).map(function(X){return"   "+X}).join(`
`))):oe=W.stylize("[Circular]","special")),M(he)){if(pe&&fe.match(/^\d+$/))return oe;he=JSON.stringify(""+fe),he.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(he=he.substr(1,he.length-2),he=W.stylize(he,"name")):(he=he.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),he=W.stylize(he,"string"))}return he+": "+oe}function w(W,ee,_){var re=W.reduce(function(fe,pe){return pe.indexOf(`
`)>=0,fe+pe.replace(/\u001b\[\d\d?m/g,"").length+1},0);return re>60?_[0]+(ee===""?"":ee+`
 `)+" "+W.join(`,
  `)+" "+_[1]:_[0]+ee+" "+W.join(", ")+" "+_[1]}function x(W){return Array.isArray(W)}o.isArray=x;function A(W){return typeof W=="boolean"}o.isBoolean=A;function N(W){return W===null}o.isNull=N;function E(W){return W==null}o.isNullOrUndefined=E;function k(W){return typeof W=="number"}o.isNumber=k;function S(W){return typeof W=="string"}o.isString=S;function R(W){return typeof W=="symbol"}o.isSymbol=R;function M(W){return W===void 0}o.isUndefined=M;function B(W){return I(W)&&G(W)==="[object RegExp]"}o.isRegExp=B;function I(W){return typeof W=="object"&&W!==null}o.isObject=I;function Y(W){return I(W)&&G(W)==="[object Date]"}o.isDate=Y;function J(W){return I(W)&&(G(W)==="[object Error]"||W instanceof Error)}o.isError=J;function D(W){return typeof W=="function"}o.isFunction=D;function T(W){return W===null||typeof W=="boolean"||typeof W=="number"||typeof W=="string"||typeof W=="symbol"||typeof W=="undefined"}o.isPrimitive=T,o.isBuffer=t("./support/isBuffer");function G(W){return Object.prototype.toString.call(W)}function U(W){return W<10?"0"+W.toString(10):W.toString(10)}var ie=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function se(){var W=new Date,ee=[U(W.getHours()),U(W.getMinutes()),U(W.getSeconds())].join(":");return[W.getDate(),ie[W.getMonth()],ee].join(" ")}o.log=function(){console.log("%s - %s",se(),o.format.apply(o,arguments))},o.inherits=t("inherits"),o._extend=function(W,ee){if(!ee||!I(ee))return W;for(var _=Object.keys(ee),re=_.length;re--;)W[_[re]]=ee[_[re]];return W};function ae(W,ee){return Object.prototype.hasOwnProperty.call(W,ee)}}).call(this,t("_process"),typeof nt!="undefined"?nt:typeof self!="undefined"?self:typeof a!="undefined"?a:{})},{"./support/isBuffer":27,_process:133,inherits:26}],29:[function(t,d,o){o.byteLength=i,o.toByteArray=p,o.fromByteArray=m;for(var v=[],h=[],g=typeof Uint8Array!="undefined"?Uint8Array:Array,b="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",u=0,f=b.length;u<f;++u)v[u]=b[u],h[b.charCodeAt(u)]=u;h["-".charCodeAt(0)]=62,h["_".charCodeAt(0)]=63;function s(c){var w=c.length;if(w%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var x=c.indexOf("=");x===-1&&(x=w);var A=x===w?0:4-x%4;return[x,A]}function i(c){var w=s(c),x=w[0],A=w[1];return(x+A)*3/4-A}function n(c,w,x){return(w+x)*3/4-x}function p(c){var w,x=s(c),A=x[0],N=x[1],E=new g(n(c,A,N)),k=0,S=N>0?A-4:A,R;for(R=0;R<S;R+=4)w=h[c.charCodeAt(R)]<<18|h[c.charCodeAt(R+1)]<<12|h[c.charCodeAt(R+2)]<<6|h[c.charCodeAt(R+3)],E[k++]=w>>16&255,E[k++]=w>>8&255,E[k++]=w&255;return N===2&&(w=h[c.charCodeAt(R)]<<2|h[c.charCodeAt(R+1)]>>4,E[k++]=w&255),N===1&&(w=h[c.charCodeAt(R)]<<10|h[c.charCodeAt(R+1)]<<4|h[c.charCodeAt(R+2)]>>2,E[k++]=w>>8&255,E[k++]=w&255),E}function y(c){return v[c>>18&63]+v[c>>12&63]+v[c>>6&63]+v[c&63]}function l(c,w,x){for(var A,N=[],E=w;E<x;E+=3)A=(c[E]<<16&16711680)+(c[E+1]<<8&65280)+(c[E+2]&255),N.push(y(A));return N.join("")}function m(c){for(var w,x=c.length,A=x%3,N=[],E=16383,k=0,S=x-A;k<S;k+=E)N.push(l(c,k,k+E>S?S:k+E));return A===1?(w=c[x-1],N.push(v[w>>2]+v[w<<4&63]+"==")):A===2&&(w=(c[x-2]<<8)+c[x-1],N.push(v[w>>10]+v[w>>4&63]+v[w<<2&63]+"=")),N.join("")}},{}],30:[function(t,d,o){var v=t("./lib/encoder"),h=t("./lib/decoder");d.exports={encode:v,decode:h}},{"./lib/decoder":31,"./lib/encoder":32}],31:[function(t,d,o){(function(v){function h(g,b){if(this.pos=0,this.buffer=g,this.is_with_alpha=!!b,this.bottom_up=!0,this.flag=this.buffer.toString("utf-8",0,this.pos+=2),this.flag!="BM")throw new Error("Invalid BMP File");this.parseHeader(),this.parseRGBA()}h.prototype.parseHeader=function(){if(this.fileSize=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.reserved=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.offset=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.headerSize=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.width=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.height=this.buffer.readInt32LE(this.pos),this.pos+=4,this.planes=this.buffer.readUInt16LE(this.pos),this.pos+=2,this.bitPP=this.buffer.readUInt16LE(this.pos),this.pos+=2,this.compress=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.rawSize=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.hr=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.vr=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.colors=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.importantColors=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.bitPP===16&&this.is_with_alpha&&(this.bitPP=15),this.bitPP<15){var g=this.colors===0?1<<this.bitPP:this.colors;this.palette=new Array(g);for(var b=0;b<g;b++){var u=this.buffer.readUInt8(this.pos++),f=this.buffer.readUInt8(this.pos++),s=this.buffer.readUInt8(this.pos++),i=this.buffer.readUInt8(this.pos++);this.palette[b]={red:s,green:f,blue:u,quad:i}}}this.height<0&&(this.height*=-1,this.bottom_up=!1)},h.prototype.parseRGBA=function(){var g="bit"+this.bitPP,b=this.width*this.height*4;this.data=new v(b),this[g]()},h.prototype.bit1=function(){for(var g=Math.ceil(this.width/8),b=g%4,u=this.height>=0?this.height-1:-this.height,u=this.height-1;u>=0;u--){for(var f=this.bottom_up?u:this.height-1-u,s=0;s<g;s++)for(var i=this.buffer.readUInt8(this.pos++),n=f*this.width*4+s*8*4,p=0;p<8&&s*8+p<this.width;p++){var y=this.palette[i>>7-p&1];this.data[n+p*4]=0,this.data[n+p*4+1]=y.blue,this.data[n+p*4+2]=y.green,this.data[n+p*4+3]=y.red}b!=0&&(this.pos+=4-b)}},h.prototype.bit4=function(){if(this.compress==2){let E=function(k){var S=this.palette[k];this.data[g]=0,this.data[g+1]=S.blue,this.data[g+2]=S.green,this.data[g+3]=S.red,g+=4};var N=E;this.data.fill(255);for(var g=0,b=this.bottom_up?this.height-1:0,u=!1;g<this.data.length;){var f=this.buffer.readUInt8(this.pos++),s=this.buffer.readUInt8(this.pos++);if(f==0)if(s==0){this.bottom_up?b--:b++,g=b*this.width*4,u=!1;continue}else{if(s==1)break;if(s==2){var i=this.buffer.readUInt8(this.pos++),n=this.buffer.readUInt8(this.pos++);this.bottom_up?b-=n:b+=n,g+=n*this.width*4+i*4}else{for(var p=this.buffer.readUInt8(this.pos++),y=0;y<s;y++)u?E.call(this,p&15):E.call(this,(p&240)>>4),y&1&&y+1<s&&(p=this.buffer.readUInt8(this.pos++)),u=!u;(s+1>>1&1)==1&&this.pos++}}else for(var y=0;y<f;y++)u?E.call(this,s&15):E.call(this,(s&240)>>4),u=!u}}else for(var l=Math.ceil(this.width/2),m=l%4,n=this.height-1;n>=0;n--){for(var c=this.bottom_up?n:this.height-1-n,i=0;i<l;i++){var s=this.buffer.readUInt8(this.pos++),g=c*this.width*4+i*2*4,w=s>>4,x=s&15,A=this.palette[w];if(this.data[g]=0,this.data[g+1]=A.blue,this.data[g+2]=A.green,this.data[g+3]=A.red,i*2+1>=this.width)break;A=this.palette[x],this.data[g+4]=0,this.data[g+4+1]=A.blue,this.data[g+4+2]=A.green,this.data[g+4+3]=A.red}m!=0&&(this.pos+=4-m)}},h.prototype.bit8=function(){if(this.compress==1){let w=function(x){var A=this.palette[x];this.data[g]=0,this.data[g+1]=A.blue,this.data[g+2]=A.green,this.data[g+3]=A.red,g+=4};var c=w;this.data.fill(255);for(var g=0,b=this.bottom_up?this.height-1:0;g<this.data.length;){var u=this.buffer.readUInt8(this.pos++),f=this.buffer.readUInt8(this.pos++);if(u==0)if(f==0){this.bottom_up?b--:b++,g=b*this.width*4;continue}else{if(f==1)break;if(f==2){var s=this.buffer.readUInt8(this.pos++),i=this.buffer.readUInt8(this.pos++);this.bottom_up?b-=i:b+=i,g+=i*this.width*4+s*4}else{for(var n=0;n<f;n++){var p=this.buffer.readUInt8(this.pos++);w.call(this,p)}f&!0&&this.pos++}}else for(var n=0;n<u;n++)w.call(this,f)}}else for(var y=this.width%4,i=this.height-1;i>=0;i--){for(var l=this.bottom_up?i:this.height-1-i,s=0;s<this.width;s++){var f=this.buffer.readUInt8(this.pos++),g=l*this.width*4+s*4;if(f<this.palette.length){var m=this.palette[f];this.data[g]=0,this.data[g+1]=m.blue,this.data[g+2]=m.green,this.data[g+3]=m.red}else this.data[g]=0,this.data[g+1]=255,this.data[g+2]=255,this.data[g+3]=255}y!=0&&(this.pos+=4-y)}},h.prototype.bit15=function(){for(var g=this.width%3,b=parseInt("11111",2),u=b,f=this.height-1;f>=0;f--){for(var s=this.bottom_up?f:this.height-1-f,i=0;i<this.width;i++){var n=this.buffer.readUInt16LE(this.pos);this.pos+=2;var p=(n&u)/u*255|0,y=(n>>5&u)/u*255|0,l=(n>>10&u)/u*255|0,m=n>>15?255:0,c=s*this.width*4+i*4;this.data[c]=m,this.data[c+1]=p,this.data[c+2]=y,this.data[c+3]=l}this.pos+=g}},h.prototype.bit16=function(){var g=this.width%2*2;this.maskRed=31744,this.maskGreen=992,this.maskBlue=31,this.mask0=0,this.compress==3&&(this.maskRed=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.maskGreen=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.maskBlue=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.mask0=this.buffer.readUInt32LE(this.pos),this.pos+=4);for(var b=[0,0,0],u=0;u<16;u++)this.maskRed>>u&1&&b[0]++,this.maskGreen>>u&1&&b[1]++,this.maskBlue>>u&1&&b[2]++;b[1]+=b[0],b[2]+=b[1],b[0]=8-b[0],b[1]-=8,b[2]-=8;for(var f=this.height-1;f>=0;f--){for(var s=this.bottom_up?f:this.height-1-f,i=0;i<this.width;i++){var n=this.buffer.readUInt16LE(this.pos);this.pos+=2;var p=(n&this.maskBlue)<<b[0],y=(n&this.maskGreen)>>b[1],l=(n&this.maskRed)>>b[2],m=s*this.width*4+i*4;this.data[m]=0,this.data[m+1]=p,this.data[m+2]=y,this.data[m+3]=l}this.pos+=g}},h.prototype.bit24=function(){for(var g=this.height-1;g>=0;g--){for(var b=this.bottom_up?g:this.height-1-g,u=0;u<this.width;u++){var f=this.buffer.readUInt8(this.pos++),s=this.buffer.readUInt8(this.pos++),i=this.buffer.readUInt8(this.pos++),n=b*this.width*4+u*4;this.data[n]=0,this.data[n+1]=f,this.data[n+2]=s,this.data[n+3]=i}this.pos+=this.width%4}},h.prototype.bit32=function(){if(this.compress==3){this.maskRed=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.maskGreen=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.maskBlue=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.mask0=this.buffer.readUInt32LE(this.pos),this.pos+=4;for(var g=this.height-1;g>=0;g--)for(var b=this.bottom_up?g:this.height-1-g,u=0;u<this.width;u++){var f=this.buffer.readUInt8(this.pos++),s=this.buffer.readUInt8(this.pos++),i=this.buffer.readUInt8(this.pos++),n=this.buffer.readUInt8(this.pos++),p=b*this.width*4+u*4;this.data[p]=f,this.data[p+1]=s,this.data[p+2]=i,this.data[p+3]=n}}else for(var g=this.height-1;g>=0;g--)for(var b=this.bottom_up?g:this.height-1-g,u=0;u<this.width;u++){var s=this.buffer.readUInt8(this.pos++),i=this.buffer.readUInt8(this.pos++),n=this.buffer.readUInt8(this.pos++),f=this.buffer.readUInt8(this.pos++),p=b*this.width*4+u*4;this.data[p]=f,this.data[p+1]=s,this.data[p+2]=i,this.data[p+3]=n}},h.prototype.getData=function(){return this.data},d.exports=function(g){var b=new h(g);return b}}).call(this,t("buffer").Buffer)},{buffer:48}],32:[function(t,d,o){(function(v){function h(g){this.buffer=g.data,this.width=g.width,this.height=g.height,this.extraBytes=this.width%4,this.rgbSize=this.height*(3*this.width+this.extraBytes),this.headerInfoSize=40,this.data=[],this.flag="BM",this.reserved=0,this.offset=54,this.fileSize=this.rgbSize+this.offset,this.planes=1,this.bitPP=24,this.compress=0,this.hr=0,this.vr=0,this.colors=0,this.importantColors=0}h.prototype.encode=function(){var g=new v(this.offset+this.rgbSize);this.pos=0,g.write(this.flag,this.pos,2),this.pos+=2,g.writeUInt32LE(this.fileSize,this.pos),this.pos+=4,g.writeUInt32LE(this.reserved,this.pos),this.pos+=4,g.writeUInt32LE(this.offset,this.pos),this.pos+=4,g.writeUInt32LE(this.headerInfoSize,this.pos),this.pos+=4,g.writeUInt32LE(this.width,this.pos),this.pos+=4,g.writeInt32LE(-this.height,this.pos),this.pos+=4,g.writeUInt16LE(this.planes,this.pos),this.pos+=2,g.writeUInt16LE(this.bitPP,this.pos),this.pos+=2,g.writeUInt32LE(this.compress,this.pos),this.pos+=4,g.writeUInt32LE(this.rgbSize,this.pos),this.pos+=4,g.writeUInt32LE(this.hr,this.pos),this.pos+=4,g.writeUInt32LE(this.vr,this.pos),this.pos+=4,g.writeUInt32LE(this.colors,this.pos),this.pos+=4,g.writeUInt32LE(this.importantColors,this.pos),this.pos+=4;for(var b=0,u=3*this.width+this.extraBytes,f=0;f<this.height;f++){for(var s=0;s<this.width;s++){var i=this.pos+f*u+s*3;b++,g[i]=this.buffer[b++],g[i+1]=this.buffer[b++],g[i+2]=this.buffer[b++]}if(this.extraBytes>0){var n=this.pos+f*u+this.width*3;g.fill(0,n,n+this.extraBytes)}}return g},d.exports=function(g,b){var u=new h(g),f=u.encode();return{data:f,width:g.width,height:g.height}}}).call(this,t("buffer").Buffer)},{buffer:48}],33:[function(t,d,o){},{}],34:[function(t,d,o){(function(v,h){var g=t("assert"),b=t("pako/lib/zlib/zstream"),u=t("pako/lib/zlib/deflate.js"),f=t("pako/lib/zlib/inflate.js"),s=t("pako/lib/zlib/constants");for(var i in s)o[i]=s[i];o.NONE=0,o.DEFLATE=1,o.INFLATE=2,o.GZIP=3,o.GUNZIP=4,o.DEFLATERAW=5,o.INFLATERAW=6,o.UNZIP=7;var n=31,p=139;function y(l){if(typeof l!="number"||l<o.DEFLATE||l>o.UNZIP)throw new TypeError("Bad argument");this.dictionary=null,this.err=0,this.flush=0,this.init_done=!1,this.level=0,this.memLevel=0,this.mode=l,this.strategy=0,this.windowBits=0,this.write_in_progress=!1,this.pending_close=!1,this.gzip_id_bytes_read=0}y.prototype.close=function(){if(this.write_in_progress){this.pending_close=!0;return}this.pending_close=!1,g(this.init_done,"close before init"),g(this.mode<=o.UNZIP),this.mode===o.DEFLATE||this.mode===o.GZIP||this.mode===o.DEFLATERAW?u.deflateEnd(this.strm):(this.mode===o.INFLATE||this.mode===o.GUNZIP||this.mode===o.INFLATERAW||this.mode===o.UNZIP)&&f.inflateEnd(this.strm),this.mode=o.NONE,this.dictionary=null},y.prototype.write=function(l,m,c,w,x,A,N){return this._write(!0,l,m,c,w,x,A,N)},y.prototype.writeSync=function(l,m,c,w,x,A,N){return this._write(!1,l,m,c,w,x,A,N)},y.prototype._write=function(l,m,c,w,x,A,N,E){if(g.equal(arguments.length,8),g(this.init_done,"write before init"),g(this.mode!==o.NONE,"already finalized"),g.equal(!1,this.write_in_progress,"write already in progress"),g.equal(!1,this.pending_close,"close is pending"),this.write_in_progress=!0,g.equal(!1,m===void 0,"must provide flush value"),this.write_in_progress=!0,m!==o.Z_NO_FLUSH&&m!==o.Z_PARTIAL_FLUSH&&m!==o.Z_SYNC_FLUSH&&m!==o.Z_FULL_FLUSH&&m!==o.Z_FINISH&&m!==o.Z_BLOCK)throw new Error("Invalid flush value");if(c==null&&(c=h.alloc(0),x=0,w=0),this.strm.avail_in=x,this.strm.input=c,this.strm.next_in=w,this.strm.avail_out=E,this.strm.output=A,this.strm.next_out=N,this.flush=m,!l)return this._process(),this._checkError()?this._afterSync():void 0;var k=this;return v.nextTick(function(){k._process(),k._after()}),this},y.prototype._afterSync=function(){var l=this.strm.avail_out,m=this.strm.avail_in;return this.write_in_progress=!1,[m,l]},y.prototype._process=function(){var l=null;switch(this.mode){case o.DEFLATE:case o.GZIP:case o.DEFLATERAW:this.err=u.deflate(this.strm,this.flush);break;case o.UNZIP:switch(this.strm.avail_in>0&&(l=this.strm.next_in),this.gzip_id_bytes_read){case 0:if(l===null)break;if(this.strm.input[l]===n){if(this.gzip_id_bytes_read=1,l++,this.strm.avail_in===1)break}else{this.mode=o.INFLATE;break}case 1:if(l===null)break;this.strm.input[l]===p?(this.gzip_id_bytes_read=2,this.mode=o.GUNZIP):this.mode=o.INFLATE;break;default:throw new Error("invalid number of gzip magic number bytes read")}case o.INFLATE:case o.GUNZIP:case o.INFLATERAW:for(this.err=f.inflate(this.strm,this.flush),this.err===o.Z_NEED_DICT&&this.dictionary&&(this.err=f.inflateSetDictionary(this.strm,this.dictionary),this.err===o.Z_OK?this.err=f.inflate(this.strm,this.flush):this.err===o.Z_DATA_ERROR&&(this.err=o.Z_NEED_DICT));this.strm.avail_in>0&&this.mode===o.GUNZIP&&this.err===o.Z_STREAM_END&&this.strm.next_in[0]!==0;)this.reset(),this.err=f.inflate(this.strm,this.flush);break;default:throw new Error("Unknown mode "+this.mode)}},y.prototype._checkError=function(){switch(this.err){case o.Z_OK:case o.Z_BUF_ERROR:if(this.strm.avail_out!==0&&this.flush===o.Z_FINISH)return this._error("unexpected end of file"),!1;break;case o.Z_STREAM_END:break;case o.Z_NEED_DICT:return this.dictionary==null?this._error("Missing dictionary"):this._error("Bad dictionary"),!1;default:return this._error("Zlib error"),!1}return!0},y.prototype._after=function(){if(!!this._checkError()){var l=this.strm.avail_out,m=this.strm.avail_in;this.write_in_progress=!1,this.callback(m,l),this.pending_close&&this.close()}},y.prototype._error=function(l){this.strm.msg&&(l=this.strm.msg),this.onerror(l,this.err),this.write_in_progress=!1,this.pending_close&&this.close()},y.prototype.init=function(l,m,c,w,x){g(arguments.length===4||arguments.length===5,"init(windowBits, level, memLevel, strategy, [dictionary])"),g(l>=8&&l<=15,"invalid windowBits"),g(m>=-1&&m<=9,"invalid compression level"),g(c>=1&&c<=9,"invalid memlevel"),g(w===o.Z_FILTERED||w===o.Z_HUFFMAN_ONLY||w===o.Z_RLE||w===o.Z_FIXED||w===o.Z_DEFAULT_STRATEGY,"invalid strategy"),this._init(m,l,c,w,x),this._setDictionary()},y.prototype.params=function(){throw new Error("deflateParams Not supported")},y.prototype.reset=function(){this._reset(),this._setDictionary()},y.prototype._init=function(l,m,c,w,x){switch(this.level=l,this.windowBits=m,this.memLevel=c,this.strategy=w,this.flush=o.Z_NO_FLUSH,this.err=o.Z_OK,(this.mode===o.GZIP||this.mode===o.GUNZIP)&&(this.windowBits+=16),this.mode===o.UNZIP&&(this.windowBits+=32),(this.mode===o.DEFLATERAW||this.mode===o.INFLATERAW)&&(this.windowBits=-1*this.windowBits),this.strm=new b,this.mode){case o.DEFLATE:case o.GZIP:case o.DEFLATERAW:this.err=u.deflateInit2(this.strm,this.level,o.Z_DEFLATED,this.windowBits,this.memLevel,this.strategy);break;case o.INFLATE:case o.GUNZIP:case o.INFLATERAW:case o.UNZIP:this.err=f.inflateInit2(this.strm,this.windowBits);break;default:throw new Error("Unknown mode "+this.mode)}this.err!==o.Z_OK&&this._error("Init error"),this.dictionary=x,this.write_in_progress=!1,this.init_done=!0},y.prototype._setDictionary=function(){if(this.dictionary!=null){switch(this.err=o.Z_OK,this.mode){case o.DEFLATE:case o.DEFLATERAW:this.err=u.deflateSetDictionary(this.strm,this.dictionary);break}this.err!==o.Z_OK&&this._error("Failed to set dictionary")}},y.prototype._reset=function(){switch(this.err=o.Z_OK,this.mode){case o.DEFLATE:case o.DEFLATERAW:case o.GZIP:this.err=u.deflateReset(this.strm);break;case o.INFLATE:case o.INFLATERAW:case o.GUNZIP:this.err=f.inflateReset(this.strm);break}this.err!==o.Z_OK&&this._error("Failed to reset stream")},o.Zlib=y}).call(this,t("_process"),t("buffer").Buffer)},{_process:133,assert:25,buffer:48,"pako/lib/zlib/constants":38,"pako/lib/zlib/deflate.js":40,"pako/lib/zlib/inflate.js":42,"pako/lib/zlib/zstream":46}],35:[function(t,d,o){(function(v){var h=t("buffer").Buffer,g=t("stream").Transform,b=t("./binding"),u=t("util"),f=t("assert").ok,s=t("buffer").kMaxLength,i="Cannot create final Buffer. It would be larger than 0x"+s.toString(16)+" bytes";b.Z_MIN_WINDOWBITS=8,b.Z_MAX_WINDOWBITS=15,b.Z_DEFAULT_WINDOWBITS=15,b.Z_MIN_CHUNK=64,b.Z_MAX_CHUNK=1/0,b.Z_DEFAULT_CHUNK=16*1024,b.Z_MIN_MEMLEVEL=1,b.Z_MAX_MEMLEVEL=9,b.Z_DEFAULT_MEMLEVEL=8,b.Z_MIN_LEVEL=-1,b.Z_MAX_LEVEL=9,b.Z_DEFAULT_LEVEL=b.Z_DEFAULT_COMPRESSION;for(var n=Object.keys(b),p=0;p<n.length;p++){var y=n[p];y.match(/^Z/)&&Object.defineProperty(o,y,{enumerable:!0,value:b[y],writable:!1})}for(var l={Z_OK:b.Z_OK,Z_STREAM_END:b.Z_STREAM_END,Z_NEED_DICT:b.Z_NEED_DICT,Z_ERRNO:b.Z_ERRNO,Z_STREAM_ERROR:b.Z_STREAM_ERROR,Z_DATA_ERROR:b.Z_DATA_ERROR,Z_MEM_ERROR:b.Z_MEM_ERROR,Z_BUF_ERROR:b.Z_BUF_ERROR,Z_VERSION_ERROR:b.Z_VERSION_ERROR},m=Object.keys(l),c=0;c<m.length;c++){var w=m[c];l[l[w]]=w}Object.defineProperty(o,"codes",{enumerable:!0,value:Object.freeze(l),writable:!1}),o.Deflate=N,o.Inflate=E,o.Gzip=k,o.Gunzip=S,o.DeflateRaw=R,o.InflateRaw=M,o.Unzip=B,o.createDeflate=function(T){return new N(T)},o.createInflate=function(T){return new E(T)},o.createDeflateRaw=function(T){return new R(T)},o.createInflateRaw=function(T){return new M(T)},o.createGzip=function(T){return new k(T)},o.createGunzip=function(T){return new S(T)},o.createUnzip=function(T){return new B(T)},o.deflate=function(T,G,U){return typeof G=="function"&&(U=G,G={}),x(new N(G),T,U)},o.deflateSync=function(T,G){return A(new N(G),T)},o.gzip=function(T,G,U){return typeof G=="function"&&(U=G,G={}),x(new k(G),T,U)},o.gzipSync=function(T,G){return A(new k(G),T)},o.deflateRaw=function(T,G,U){return typeof G=="function"&&(U=G,G={}),x(new R(G),T,U)},o.deflateRawSync=function(T,G){return A(new R(G),T)},o.unzip=function(T,G,U){return typeof G=="function"&&(U=G,G={}),x(new B(G),T,U)},o.unzipSync=function(T,G){return A(new B(G),T)},o.inflate=function(T,G,U){return typeof G=="function"&&(U=G,G={}),x(new E(G),T,U)},o.inflateSync=function(T,G){return A(new E(G),T)},o.gunzip=function(T,G,U){return typeof G=="function"&&(U=G,G={}),x(new S(G),T,U)},o.gunzipSync=function(T,G){return A(new S(G),T)},o.inflateRaw=function(T,G,U){return typeof G=="function"&&(U=G,G={}),x(new M(G),T,U)},o.inflateRawSync=function(T,G){return A(new M(G),T)};function x(T,G,U){var ie=[],se=0;T.on("error",W),T.on("end",ee),T.end(G),ae();function ae(){for(var _;(_=T.read())!==null;)ie.push(_),se+=_.length;T.once("readable",ae)}function W(_){T.removeListener("end",ee),T.removeListener("readable",ae),U(_)}function ee(){var _,re=null;se>=s?re=new RangeError(i):_=h.concat(ie,se),ie=[],T.close(),U(re,_)}}function A(T,G){if(typeof G=="string"&&(G=h.from(G)),!h.isBuffer(G))throw new TypeError("Not a string or buffer");var U=T._finishFlushFlag;return T._processChunk(G,U)}function N(T){if(!(this instanceof N))return new N(T);Y.call(this,T,b.DEFLATE)}function E(T){if(!(this instanceof E))return new E(T);Y.call(this,T,b.INFLATE)}function k(T){if(!(this instanceof k))return new k(T);Y.call(this,T,b.GZIP)}function S(T){if(!(this instanceof S))return new S(T);Y.call(this,T,b.GUNZIP)}function R(T){if(!(this instanceof R))return new R(T);Y.call(this,T,b.DEFLATERAW)}function M(T){if(!(this instanceof M))return new M(T);Y.call(this,T,b.INFLATERAW)}function B(T){if(!(this instanceof B))return new B(T);Y.call(this,T,b.UNZIP)}function I(T){return T===b.Z_NO_FLUSH||T===b.Z_PARTIAL_FLUSH||T===b.Z_SYNC_FLUSH||T===b.Z_FULL_FLUSH||T===b.Z_FINISH||T===b.Z_BLOCK}function Y(T,G){var U=this;if(this._opts=T=T||{},this._chunkSize=T.chunkSize||o.Z_DEFAULT_CHUNK,g.call(this,T),T.flush&&!I(T.flush))throw new Error("Invalid flush flag: "+T.flush);if(T.finishFlush&&!I(T.finishFlush))throw new Error("Invalid flush flag: "+T.finishFlush);if(this._flushFlag=T.flush||b.Z_NO_FLUSH,this._finishFlushFlag=typeof T.finishFlush!="undefined"?T.finishFlush:b.Z_FINISH,T.chunkSize&&(T.chunkSize<o.Z_MIN_CHUNK||T.chunkSize>o.Z_MAX_CHUNK))throw new Error("Invalid chunk size: "+T.chunkSize);if(T.windowBits&&(T.windowBits<o.Z_MIN_WINDOWBITS||T.windowBits>o.Z_MAX_WINDOWBITS))throw new Error("Invalid windowBits: "+T.windowBits);if(T.level&&(T.level<o.Z_MIN_LEVEL||T.level>o.Z_MAX_LEVEL))throw new Error("Invalid compression level: "+T.level);if(T.memLevel&&(T.memLevel<o.Z_MIN_MEMLEVEL||T.memLevel>o.Z_MAX_MEMLEVEL))throw new Error("Invalid memLevel: "+T.memLevel);if(T.strategy&&T.strategy!=o.Z_FILTERED&&T.strategy!=o.Z_HUFFMAN_ONLY&&T.strategy!=o.Z_RLE&&T.strategy!=o.Z_FIXED&&T.strategy!=o.Z_DEFAULT_STRATEGY)throw new Error("Invalid strategy: "+T.strategy);if(T.dictionary&&!h.isBuffer(T.dictionary))throw new Error("Invalid dictionary: it should be a Buffer instance");this._handle=new b.Zlib(G);var ie=this;this._hadError=!1,this._handle.onerror=function(W,ee){J(ie),ie._hadError=!0;var _=new Error(W);_.errno=ee,_.code=o.codes[ee],ie.emit("error",_)};var se=o.Z_DEFAULT_COMPRESSION;typeof T.level=="number"&&(se=T.level);var ae=o.Z_DEFAULT_STRATEGY;typeof T.strategy=="number"&&(ae=T.strategy),this._handle.init(T.windowBits||o.Z_DEFAULT_WINDOWBITS,se,T.memLevel||o.Z_DEFAULT_MEMLEVEL,ae,T.dictionary),this._buffer=h.allocUnsafe(this._chunkSize),this._offset=0,this._level=se,this._strategy=ae,this.once("end",this.close),Object.defineProperty(this,"_closed",{get:function(){return!U._handle},configurable:!0,enumerable:!0})}u.inherits(Y,g),Y.prototype.params=function(T,G,U){if(T<o.Z_MIN_LEVEL||T>o.Z_MAX_LEVEL)throw new RangeError("Invalid compression level: "+T);if(G!=o.Z_FILTERED&&G!=o.Z_HUFFMAN_ONLY&&G!=o.Z_RLE&&G!=o.Z_FIXED&&G!=o.Z_DEFAULT_STRATEGY)throw new TypeError("Invalid strategy: "+G);if(this._level!==T||this._strategy!==G){var ie=this;this.flush(b.Z_SYNC_FLUSH,function(){f(ie._handle,"zlib binding closed"),ie._handle.params(T,G),ie._hadError||(ie._level=T,ie._strategy=G,U&&U())})}else v.nextTick(U)},Y.prototype.reset=function(){return f(this._handle,"zlib binding closed"),this._handle.reset()},Y.prototype._flush=function(T){this._transform(h.alloc(0),"",T)},Y.prototype.flush=function(T,G){var U=this,ie=this._writableState;(typeof T=="function"||T===void 0&&!G)&&(G=T,T=b.Z_FULL_FLUSH),ie.ended?G&&v.nextTick(G):ie.ending?G&&this.once("end",G):ie.needDrain?G&&this.once("drain",function(){return U.flush(T,G)}):(this._flushFlag=T,this.write(h.alloc(0),"",G))},Y.prototype.close=function(T){J(this,T),v.nextTick(D,this)};function J(T,G){G&&v.nextTick(G),T._handle&&(T._handle.close(),T._handle=null)}function D(T){T.emit("close")}Y.prototype._transform=function(T,G,U){var ie,se=this._writableState,ae=se.ending||se.ended,W=ae&&(!T||se.length===T.length);if(T!==null&&!h.isBuffer(T))return U(new Error("invalid input"));if(!this._handle)return U(new Error("zlib binding closed"));W?ie=this._finishFlushFlag:(ie=this._flushFlag,T.length>=se.length&&(this._flushFlag=this._opts.flush||b.Z_NO_FLUSH)),this._processChunk(T,ie,U)},Y.prototype._processChunk=function(T,G,U){var ie=T&&T.length,se=this._chunkSize-this._offset,ae=0,W=this,ee=typeof U=="function";if(!ee){var _=[],re=0,fe;this.on("error",function(X){fe=X}),f(this._handle,"zlib binding closed");do var pe=this._handle.writeSync(G,T,ae,ie,this._buffer,this._offset,se);while(!this._hadError&&ce(pe[0],pe[1]));if(this._hadError)throw fe;if(re>=s)throw J(this),new RangeError(i);var he=h.concat(_,re);return J(this),he}f(this._handle,"zlib binding closed");var oe=this._handle.write(G,T,ae,ie,this._buffer,this._offset,se);oe.buffer=T,oe.callback=ce;function ce(X,K){if(this&&(this.buffer=null,this.callback=null),!W._hadError){var L=se-K;if(f(L>=0,"have should not go down"),L>0){var $=W._buffer.slice(W._offset,W._offset+L);W._offset+=L,ee?W.push($):(_.push($),re+=$.length)}if((K===0||W._offset>=W._chunkSize)&&(se=W._chunkSize,W._offset=0,W._buffer=h.allocUnsafe(W._chunkSize)),K===0){if(ae+=ie-X,ie=X,!ee)return!0;var te=W._handle.write(G,T,ae,ie,W._buffer,W._offset,W._chunkSize);te.callback=ce,te.buffer=T;return}if(!ee)return!1;U()}}},u.inherits(N,Y),u.inherits(E,Y),u.inherits(k,Y),u.inherits(S,Y),u.inherits(R,Y),u.inherits(M,Y),u.inherits(B,Y)}).call(this,t("_process"))},{"./binding":34,_process:133,assert:25,buffer:48,stream:155,util:186}],36:[function(t,d,o){var v=typeof Uint8Array!="undefined"&&typeof Uint16Array!="undefined"&&typeof Int32Array!="undefined";function h(u,f){return Object.prototype.hasOwnProperty.call(u,f)}o.assign=function(u){for(var f=Array.prototype.slice.call(arguments,1);f.length;){var s=f.shift();if(!!s){if(typeof s!="object")throw new TypeError(s+"must be non-object");for(var i in s)h(s,i)&&(u[i]=s[i])}}return u},o.shrinkBuf=function(u,f){return u.length===f?u:u.subarray?u.subarray(0,f):(u.length=f,u)};var g={arraySet:function(u,f,s,i,n){if(f.subarray&&u.subarray){u.set(f.subarray(s,s+i),n);return}for(var p=0;p<i;p++)u[n+p]=f[s+p]},flattenChunks:function(u){var f,s,i,n,p,y;for(i=0,f=0,s=u.length;f<s;f++)i+=u[f].length;for(y=new Uint8Array(i),n=0,f=0,s=u.length;f<s;f++)p=u[f],y.set(p,n),n+=p.length;return y}},b={arraySet:function(u,f,s,i,n){for(var p=0;p<i;p++)u[n+p]=f[s+p]},flattenChunks:function(u){return[].concat.apply([],u)}};o.setTyped=function(u){u?(o.Buf8=Uint8Array,o.Buf16=Uint16Array,o.Buf32=Int32Array,o.assign(o,g)):(o.Buf8=Array,o.Buf16=Array,o.Buf32=Array,o.assign(o,b))},o.setTyped(v)},{}],37:[function(t,d,o){function v(h,g,b,u){for(var f=h&65535|0,s=h>>>16&65535|0,i=0;b!==0;){i=b>2e3?2e3:b,b-=i;do f=f+g[u++]|0,s=s+f|0;while(--i);f%=65521,s%=65521}return f|s<<16|0}d.exports=v},{}],38:[function(t,d,o){d.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],39:[function(t,d,o){function v(){for(var b,u=[],f=0;f<256;f++){b=f;for(var s=0;s<8;s++)b=b&1?3988292384^b>>>1:b>>>1;u[f]=b}return u}var h=v();function g(b,u,f,s){var i=h,n=s+f;b^=-1;for(var p=s;p<n;p++)b=b>>>8^i[(b^u[p])&255];return b^-1}d.exports=g},{}],40:[function(t,d,o){var v=t("../utils/common"),h=t("./trees"),g=t("./adler32"),b=t("./crc32"),u=t("./messages"),f=0,s=1,i=3,n=4,p=5,y=0,l=1,m=-2,c=-3,w=-5,x=-1,A=1,N=2,E=3,k=4,S=0,R=2,M=8,B=9,I=15,Y=8,J=29,D=256,T=D+1+J,G=30,U=19,ie=2*T+1,se=15,ae=3,W=258,ee=W+ae+1,_=32,re=42,fe=69,pe=73,he=91,oe=103,ce=113,X=666,K=1,L=2,$=3,te=4,V=3;function z(P,de){return P.msg=u[de],de}function F(P){return(P<<1)-(P>4?9:0)}function q(P){for(var de=P.length;--de>=0;)P[de]=0}function H(P){var de=P.state,we=de.pending;we>P.avail_out&&(we=P.avail_out),we!==0&&(v.arraySet(P.output,de.pending_buf,de.pending_out,we,P.next_out),P.next_out+=we,de.pending_out+=we,P.total_out+=we,P.avail_out-=we,de.pending-=we,de.pending===0&&(de.pending_out=0))}function O(P,de){h._tr_flush_block(P,P.block_start>=0?P.block_start:-1,P.strstart-P.block_start,de),P.block_start=P.strstart,H(P.strm)}function C(P,de){P.pending_buf[P.pending++]=de}function Q(P,de){P.pending_buf[P.pending++]=de>>>8&255,P.pending_buf[P.pending++]=de&255}function le(P,de,we,Z){var ue=P.avail_in;return ue>Z&&(ue=Z),ue===0?0:(P.avail_in-=ue,v.arraySet(de,P.input,P.next_in,ue,we),P.state.wrap===1?P.adler=g(P.adler,de,ue,we):P.state.wrap===2&&(P.adler=b(P.adler,de,ue,we)),P.next_in+=ue,P.total_in+=ue,ue)}function ge(P,de){var we=P.max_chain_length,Z=P.strstart,ue,Ae,Re=P.prev_length,Ce=P.nice_match,ze=P.strstart>P.w_size-ee?P.strstart-(P.w_size-ee):0,De=P.window,gt=P.w_mask,tt=P.prev,qe=P.strstart+W,at=De[Z+Re-1],ft=De[Z+Re];P.prev_length>=P.good_match&&(we>>=2),Ce>P.lookahead&&(Ce=P.lookahead);do if(ue=de,!(De[ue+Re]!==ft||De[ue+Re-1]!==at||De[ue]!==De[Z]||De[++ue]!==De[Z+1])){Z+=2,ue++;do;while(De[++Z]===De[++ue]&&De[++Z]===De[++ue]&&De[++Z]===De[++ue]&&De[++Z]===De[++ue]&&De[++Z]===De[++ue]&&De[++Z]===De[++ue]&&De[++Z]===De[++ue]&&De[++Z]===De[++ue]&&Z<qe);if(Ae=W-(qe-Z),Z=qe-W,Ae>Re){if(P.match_start=de,Re=Ae,Ae>=Ce)break;at=De[Z+Re-1],ft=De[Z+Re]}}while((de=tt[de&gt])>ze&&--we!==0);return Re<=P.lookahead?Re:P.lookahead}function ye(P){var de=P.w_size,we,Z,ue,Ae,Re;do{if(Ae=P.window_size-P.lookahead-P.strstart,P.strstart>=de+(de-ee)){v.arraySet(P.window,P.window,de,de,0),P.match_start-=de,P.strstart-=de,P.block_start-=de,Z=P.hash_size,we=Z;do ue=P.head[--we],P.head[we]=ue>=de?ue-de:0;while(--Z);Z=de,we=Z;do ue=P.prev[--we],P.prev[we]=ue>=de?ue-de:0;while(--Z);Ae+=de}if(P.strm.avail_in===0)break;if(Z=le(P.strm,P.window,P.strstart+P.lookahead,Ae),P.lookahead+=Z,P.lookahead+P.insert>=ae)for(Re=P.strstart-P.insert,P.ins_h=P.window[Re],P.ins_h=(P.ins_h<<P.hash_shift^P.window[Re+1])&P.hash_mask;P.insert&&(P.ins_h=(P.ins_h<<P.hash_shift^P.window[Re+ae-1])&P.hash_mask,P.prev[Re&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=Re,Re++,P.insert--,!(P.lookahead+P.insert<ae)););}while(P.lookahead<ee&&P.strm.avail_in!==0)}function Ee(P,de){var we=65535;for(we>P.pending_buf_size-5&&(we=P.pending_buf_size-5);;){if(P.lookahead<=1){if(ye(P),P.lookahead===0&&de===f)return K;if(P.lookahead===0)break}P.strstart+=P.lookahead,P.lookahead=0;var Z=P.block_start+we;if((P.strstart===0||P.strstart>=Z)&&(P.lookahead=P.strstart-Z,P.strstart=Z,O(P,!1),P.strm.avail_out===0)||P.strstart-P.block_start>=P.w_size-ee&&(O(P,!1),P.strm.avail_out===0))return K}return P.insert=0,de===n?(O(P,!0),P.strm.avail_out===0?$:te):(P.strstart>P.block_start&&(O(P,!1),P.strm.avail_out===0),K)}function Se(P,de){for(var we,Z;;){if(P.lookahead<ee){if(ye(P),P.lookahead<ee&&de===f)return K;if(P.lookahead===0)break}if(we=0,P.lookahead>=ae&&(P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+ae-1])&P.hash_mask,we=P.prev[P.strstart&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=P.strstart),we!==0&&P.strstart-we<=P.w_size-ee&&(P.match_length=ge(P,we)),P.match_length>=ae)if(Z=h._tr_tally(P,P.strstart-P.match_start,P.match_length-ae),P.lookahead-=P.match_length,P.match_length<=P.max_lazy_match&&P.lookahead>=ae){P.match_length--;do P.strstart++,P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+ae-1])&P.hash_mask,we=P.prev[P.strstart&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=P.strstart;while(--P.match_length!==0);P.strstart++}else P.strstart+=P.match_length,P.match_length=0,P.ins_h=P.window[P.strstart],P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+1])&P.hash_mask;else Z=h._tr_tally(P,0,P.window[P.strstart]),P.lookahead--,P.strstart++;if(Z&&(O(P,!1),P.strm.avail_out===0))return K}return P.insert=P.strstart<ae-1?P.strstart:ae-1,de===n?(O(P,!0),P.strm.avail_out===0?$:te):P.last_lit&&(O(P,!1),P.strm.avail_out===0)?K:L}function Ie(P,de){for(var we,Z,ue;;){if(P.lookahead<ee){if(ye(P),P.lookahead<ee&&de===f)return K;if(P.lookahead===0)break}if(we=0,P.lookahead>=ae&&(P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+ae-1])&P.hash_mask,we=P.prev[P.strstart&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=P.strstart),P.prev_length=P.match_length,P.prev_match=P.match_start,P.match_length=ae-1,we!==0&&P.prev_length<P.max_lazy_match&&P.strstart-we<=P.w_size-ee&&(P.match_length=ge(P,we),P.match_length<=5&&(P.strategy===A||P.match_length===ae&&P.strstart-P.match_start>4096)&&(P.match_length=ae-1)),P.prev_length>=ae&&P.match_length<=P.prev_length){ue=P.strstart+P.lookahead-ae,Z=h._tr_tally(P,P.strstart-1-P.prev_match,P.prev_length-ae),P.lookahead-=P.prev_length-1,P.prev_length-=2;do++P.strstart<=ue&&(P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+ae-1])&P.hash_mask,we=P.prev[P.strstart&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=P.strstart);while(--P.prev_length!==0);if(P.match_available=0,P.match_length=ae-1,P.strstart++,Z&&(O(P,!1),P.strm.avail_out===0))return K}else if(P.match_available){if(Z=h._tr_tally(P,0,P.window[P.strstart-1]),Z&&O(P,!1),P.strstart++,P.lookahead--,P.strm.avail_out===0)return K}else P.match_available=1,P.strstart++,P.lookahead--}return P.match_available&&(Z=h._tr_tally(P,0,P.window[P.strstart-1]),P.match_available=0),P.insert=P.strstart<ae-1?P.strstart:ae-1,de===n?(O(P,!0),P.strm.avail_out===0?$:te):P.last_lit&&(O(P,!1),P.strm.avail_out===0)?K:L}function Oe(P,de){for(var we,Z,ue,Ae,Re=P.window;;){if(P.lookahead<=W){if(ye(P),P.lookahead<=W&&de===f)return K;if(P.lookahead===0)break}if(P.match_length=0,P.lookahead>=ae&&P.strstart>0&&(ue=P.strstart-1,Z=Re[ue],Z===Re[++ue]&&Z===Re[++ue]&&Z===Re[++ue])){Ae=P.strstart+W;do;while(Z===Re[++ue]&&Z===Re[++ue]&&Z===Re[++ue]&&Z===Re[++ue]&&Z===Re[++ue]&&Z===Re[++ue]&&Z===Re[++ue]&&Z===Re[++ue]&&ue<Ae);P.match_length=W-(Ae-ue),P.match_length>P.lookahead&&(P.match_length=P.lookahead)}if(P.match_length>=ae?(we=h._tr_tally(P,1,P.match_length-ae),P.lookahead-=P.match_length,P.strstart+=P.match_length,P.match_length=0):(we=h._tr_tally(P,0,P.window[P.strstart]),P.lookahead--,P.strstart++),we&&(O(P,!1),P.strm.avail_out===0))return K}return P.insert=0,de===n?(O(P,!0),P.strm.avail_out===0?$:te):P.last_lit&&(O(P,!1),P.strm.avail_out===0)?K:L}function Fe(P,de){for(var we;;){if(P.lookahead===0&&(ye(P),P.lookahead===0)){if(de===f)return K;break}if(P.match_length=0,we=h._tr_tally(P,0,P.window[P.strstart]),P.lookahead--,P.strstart++,we&&(O(P,!1),P.strm.avail_out===0))return K}return P.insert=0,de===n?(O(P,!0),P.strm.avail_out===0?$:te):P.last_lit&&(O(P,!1),P.strm.avail_out===0)?K:L}function ke(P,de,we,Z,ue){this.good_length=P,this.max_lazy=de,this.nice_length=we,this.max_chain=Z,this.func=ue}var He;He=[new ke(0,0,0,0,Ee),new ke(4,4,8,4,Se),new ke(4,5,16,8,Se),new ke(4,6,32,32,Se),new ke(4,4,16,16,Ie),new ke(8,16,32,32,Ie),new ke(8,16,128,128,Ie),new ke(8,32,128,256,Ie),new ke(32,128,258,1024,Ie),new ke(32,258,258,4096,Ie)];function Me(P){P.window_size=2*P.w_size,q(P.head),P.max_lazy_match=He[P.level].max_lazy,P.good_match=He[P.level].good_length,P.nice_match=He[P.level].nice_length,P.max_chain_length=He[P.level].max_chain,P.strstart=0,P.block_start=0,P.lookahead=0,P.insert=0,P.match_length=P.prev_length=ae-1,P.match_available=0,P.ins_h=0}function j(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=M,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new v.Buf16(ie*2),this.dyn_dtree=new v.Buf16((2*G+1)*2),this.bl_tree=new v.Buf16((2*U+1)*2),q(this.dyn_ltree),q(this.dyn_dtree),q(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new v.Buf16(se+1),this.heap=new v.Buf16(2*T+1),q(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new v.Buf16(2*T+1),q(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function me(P){var de;return!P||!P.state?z(P,m):(P.total_in=P.total_out=0,P.data_type=R,de=P.state,de.pending=0,de.pending_out=0,de.wrap<0&&(de.wrap=-de.wrap),de.status=de.wrap?re:ce,P.adler=de.wrap===2?0:1,de.last_flush=f,h._tr_init(de),y)}function be(P){var de=me(P);return de===y&&Me(P.state),de}function Pe(P,de){return!P||!P.state||P.state.wrap!==2?m:(P.state.gzhead=de,y)}function ve(P,de,we,Z,ue,Ae){if(!P)return m;var Re=1;if(de===x&&(de=6),Z<0?(Re=0,Z=-Z):Z>15&&(Re=2,Z-=16),ue<1||ue>B||we!==M||Z<8||Z>15||de<0||de>9||Ae<0||Ae>k)return z(P,m);Z===8&&(Z=9);var Ce=new j;return P.state=Ce,Ce.strm=P,Ce.wrap=Re,Ce.gzhead=null,Ce.w_bits=Z,Ce.w_size=1<<Ce.w_bits,Ce.w_mask=Ce.w_size-1,Ce.hash_bits=ue+7,Ce.hash_size=1<<Ce.hash_bits,Ce.hash_mask=Ce.hash_size-1,Ce.hash_shift=~~((Ce.hash_bits+ae-1)/ae),Ce.window=new v.Buf8(Ce.w_size*2),Ce.head=new v.Buf16(Ce.hash_size),Ce.prev=new v.Buf16(Ce.w_size),Ce.lit_bufsize=1<<ue+6,Ce.pending_buf_size=Ce.lit_bufsize*4,Ce.pending_buf=new v.Buf8(Ce.pending_buf_size),Ce.d_buf=1*Ce.lit_bufsize,Ce.l_buf=(1+2)*Ce.lit_bufsize,Ce.level=de,Ce.strategy=Ae,Ce.method=we,be(P)}function xe(P,de){return ve(P,de,M,I,Y,S)}function ne(P,de){var we,Z,ue,Ae;if(!P||!P.state||de>p||de<0)return P?z(P,m):m;if(Z=P.state,!P.output||!P.input&&P.avail_in!==0||Z.status===X&&de!==n)return z(P,P.avail_out===0?w:m);if(Z.strm=P,we=Z.last_flush,Z.last_flush=de,Z.status===re)if(Z.wrap===2)P.adler=0,C(Z,31),C(Z,139),C(Z,8),Z.gzhead?(C(Z,(Z.gzhead.text?1:0)+(Z.gzhead.hcrc?2:0)+(Z.gzhead.extra?4:0)+(Z.gzhead.name?8:0)+(Z.gzhead.comment?16:0)),C(Z,Z.gzhead.time&255),C(Z,Z.gzhead.time>>8&255),C(Z,Z.gzhead.time>>16&255),C(Z,Z.gzhead.time>>24&255),C(Z,Z.level===9?2:Z.strategy>=N||Z.level<2?4:0),C(Z,Z.gzhead.os&255),Z.gzhead.extra&&Z.gzhead.extra.length&&(C(Z,Z.gzhead.extra.length&255),C(Z,Z.gzhead.extra.length>>8&255)),Z.gzhead.hcrc&&(P.adler=b(P.adler,Z.pending_buf,Z.pending,0)),Z.gzindex=0,Z.status=fe):(C(Z,0),C(Z,0),C(Z,0),C(Z,0),C(Z,0),C(Z,Z.level===9?2:Z.strategy>=N||Z.level<2?4:0),C(Z,V),Z.status=ce);else{var Re=M+(Z.w_bits-8<<4)<<8,Ce=-1;Z.strategy>=N||Z.level<2?Ce=0:Z.level<6?Ce=1:Z.level===6?Ce=2:Ce=3,Re|=Ce<<6,Z.strstart!==0&&(Re|=_),Re+=31-Re%31,Z.status=ce,Q(Z,Re),Z.strstart!==0&&(Q(Z,P.adler>>>16),Q(Z,P.adler&65535)),P.adler=1}if(Z.status===fe)if(Z.gzhead.extra){for(ue=Z.pending;Z.gzindex<(Z.gzhead.extra.length&65535)&&!(Z.pending===Z.pending_buf_size&&(Z.gzhead.hcrc&&Z.pending>ue&&(P.adler=b(P.adler,Z.pending_buf,Z.pending-ue,ue)),H(P),ue=Z.pending,Z.pending===Z.pending_buf_size));)C(Z,Z.gzhead.extra[Z.gzindex]&255),Z.gzindex++;Z.gzhead.hcrc&&Z.pending>ue&&(P.adler=b(P.adler,Z.pending_buf,Z.pending-ue,ue)),Z.gzindex===Z.gzhead.extra.length&&(Z.gzindex=0,Z.status=pe)}else Z.status=pe;if(Z.status===pe)if(Z.gzhead.name){ue=Z.pending;do{if(Z.pending===Z.pending_buf_size&&(Z.gzhead.hcrc&&Z.pending>ue&&(P.adler=b(P.adler,Z.pending_buf,Z.pending-ue,ue)),H(P),ue=Z.pending,Z.pending===Z.pending_buf_size)){Ae=1;break}Z.gzindex<Z.gzhead.name.length?Ae=Z.gzhead.name.charCodeAt(Z.gzindex++)&255:Ae=0,C(Z,Ae)}while(Ae!==0);Z.gzhead.hcrc&&Z.pending>ue&&(P.adler=b(P.adler,Z.pending_buf,Z.pending-ue,ue)),Ae===0&&(Z.gzindex=0,Z.status=he)}else Z.status=he;if(Z.status===he)if(Z.gzhead.comment){ue=Z.pending;do{if(Z.pending===Z.pending_buf_size&&(Z.gzhead.hcrc&&Z.pending>ue&&(P.adler=b(P.adler,Z.pending_buf,Z.pending-ue,ue)),H(P),ue=Z.pending,Z.pending===Z.pending_buf_size)){Ae=1;break}Z.gzindex<Z.gzhead.comment.length?Ae=Z.gzhead.comment.charCodeAt(Z.gzindex++)&255:Ae=0,C(Z,Ae)}while(Ae!==0);Z.gzhead.hcrc&&Z.pending>ue&&(P.adler=b(P.adler,Z.pending_buf,Z.pending-ue,ue)),Ae===0&&(Z.status=oe)}else Z.status=oe;if(Z.status===oe&&(Z.gzhead.hcrc?(Z.pending+2>Z.pending_buf_size&&H(P),Z.pending+2<=Z.pending_buf_size&&(C(Z,P.adler&255),C(Z,P.adler>>8&255),P.adler=0,Z.status=ce)):Z.status=ce),Z.pending!==0){if(H(P),P.avail_out===0)return Z.last_flush=-1,y}else if(P.avail_in===0&&F(de)<=F(we)&&de!==n)return z(P,w);if(Z.status===X&&P.avail_in!==0)return z(P,w);if(P.avail_in!==0||Z.lookahead!==0||de!==f&&Z.status!==X){var ze=Z.strategy===N?Fe(Z,de):Z.strategy===E?Oe(Z,de):He[Z.level].func(Z,de);if((ze===$||ze===te)&&(Z.status=X),ze===K||ze===$)return P.avail_out===0&&(Z.last_flush=-1),y;if(ze===L&&(de===s?h._tr_align(Z):de!==p&&(h._tr_stored_block(Z,0,0,!1),de===i&&(q(Z.head),Z.lookahead===0&&(Z.strstart=0,Z.block_start=0,Z.insert=0))),H(P),P.avail_out===0))return Z.last_flush=-1,y}return de!==n?y:Z.wrap<=0?l:(Z.wrap===2?(C(Z,P.adler&255),C(Z,P.adler>>8&255),C(Z,P.adler>>16&255),C(Z,P.adler>>24&255),C(Z,P.total_in&255),C(Z,P.total_in>>8&255),C(Z,P.total_in>>16&255),C(Z,P.total_in>>24&255)):(Q(Z,P.adler>>>16),Q(Z,P.adler&65535)),H(P),Z.wrap>0&&(Z.wrap=-Z.wrap),Z.pending!==0?y:l)}function Ne(P){var de;return!P||!P.state?m:(de=P.state.status,de!==re&&de!==fe&&de!==pe&&de!==he&&de!==oe&&de!==ce&&de!==X?z(P,m):(P.state=null,de===ce?z(P,c):y))}function Te(P,de){var we=de.length,Z,ue,Ae,Re,Ce,ze,De,gt;if(!P||!P.state||(Z=P.state,Re=Z.wrap,Re===2||Re===1&&Z.status!==re||Z.lookahead))return m;for(Re===1&&(P.adler=g(P.adler,de,we,0)),Z.wrap=0,we>=Z.w_size&&(Re===0&&(q(Z.head),Z.strstart=0,Z.block_start=0,Z.insert=0),gt=new v.Buf8(Z.w_size),v.arraySet(gt,de,we-Z.w_size,Z.w_size,0),de=gt,we=Z.w_size),Ce=P.avail_in,ze=P.next_in,De=P.input,P.avail_in=we,P.next_in=0,P.input=de,ye(Z);Z.lookahead>=ae;){ue=Z.strstart,Ae=Z.lookahead-(ae-1);do Z.ins_h=(Z.ins_h<<Z.hash_shift^Z.window[ue+ae-1])&Z.hash_mask,Z.prev[ue&Z.w_mask]=Z.head[Z.ins_h],Z.head[Z.ins_h]=ue,ue++;while(--Ae);Z.strstart=ue,Z.lookahead=ae-1,ye(Z)}return Z.strstart+=Z.lookahead,Z.block_start=Z.strstart,Z.insert=Z.lookahead,Z.lookahead=0,Z.match_length=Z.prev_length=ae-1,Z.match_available=0,P.next_in=ze,P.input=De,P.avail_in=Ce,Z.wrap=Re,y}o.deflateInit=xe,o.deflateInit2=ve,o.deflateReset=be,o.deflateResetKeep=me,o.deflateSetHeader=Pe,o.deflate=ne,o.deflateEnd=Ne,o.deflateSetDictionary=Te,o.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":36,"./adler32":37,"./crc32":39,"./messages":44,"./trees":45}],41:[function(t,d,o){var v=30,h=12;d.exports=function(b,u){var f,s,i,n,p,y,l,m,c,w,x,A,N,E,k,S,R,M,B,I,Y,J,D,T,G;f=b.state,s=b.next_in,T=b.input,i=s+(b.avail_in-5),n=b.next_out,G=b.output,p=n-(u-b.avail_out),y=n+(b.avail_out-257),l=f.dmax,m=f.wsize,c=f.whave,w=f.wnext,x=f.window,A=f.hold,N=f.bits,E=f.lencode,k=f.distcode,S=(1<<f.lenbits)-1,R=(1<<f.distbits)-1;e:do{N<15&&(A+=T[s++]<<N,N+=8,A+=T[s++]<<N,N+=8),M=E[A&S];t:for(;;){if(B=M>>>24,A>>>=B,N-=B,B=M>>>16&255,B===0)G[n++]=M&65535;else if(B&16){I=M&65535,B&=15,B&&(N<B&&(A+=T[s++]<<N,N+=8),I+=A&(1<<B)-1,A>>>=B,N-=B),N<15&&(A+=T[s++]<<N,N+=8,A+=T[s++]<<N,N+=8),M=k[A&R];r:for(;;){if(B=M>>>24,A>>>=B,N-=B,B=M>>>16&255,B&16){if(Y=M&65535,B&=15,N<B&&(A+=T[s++]<<N,N+=8,N<B&&(A+=T[s++]<<N,N+=8)),Y+=A&(1<<B)-1,Y>l){b.msg="invalid distance too far back",f.mode=v;break e}if(A>>>=B,N-=B,B=n-p,Y>B){if(B=Y-B,B>c&&f.sane){b.msg="invalid distance too far back",f.mode=v;break e}if(J=0,D=x,w===0){if(J+=m-B,B<I){I-=B;do G[n++]=x[J++];while(--B);J=n-Y,D=G}}else if(w<B){if(J+=m+w-B,B-=w,B<I){I-=B;do G[n++]=x[J++];while(--B);if(J=0,w<I){B=w,I-=B;do G[n++]=x[J++];while(--B);J=n-Y,D=G}}}else if(J+=w-B,B<I){I-=B;do G[n++]=x[J++];while(--B);J=n-Y,D=G}for(;I>2;)G[n++]=D[J++],G[n++]=D[J++],G[n++]=D[J++],I-=3;I&&(G[n++]=D[J++],I>1&&(G[n++]=D[J++]))}else{J=n-Y;do G[n++]=G[J++],G[n++]=G[J++],G[n++]=G[J++],I-=3;while(I>2);I&&(G[n++]=G[J++],I>1&&(G[n++]=G[J++]))}}else if((B&64)===0){M=k[(M&65535)+(A&(1<<B)-1)];continue r}else{b.msg="invalid distance code",f.mode=v;break e}break}}else if((B&64)===0){M=E[(M&65535)+(A&(1<<B)-1)];continue t}else if(B&32){f.mode=h;break e}else{b.msg="invalid literal/length code",f.mode=v;break e}break}}while(s<i&&n<y);I=N>>3,s-=I,N-=I<<3,A&=(1<<N)-1,b.next_in=s,b.next_out=n,b.avail_in=s<i?5+(i-s):5-(s-i),b.avail_out=n<y?257+(y-n):257-(n-y),f.hold=A,f.bits=N}},{}],42:[function(t,d,o){var v=t("../utils/common"),h=t("./adler32"),g=t("./crc32"),b=t("./inffast"),u=t("./inftrees"),f=0,s=1,i=2,n=4,p=5,y=6,l=0,m=1,c=2,w=-2,x=-3,A=-4,N=-5,E=8,k=1,S=2,R=3,M=4,B=5,I=6,Y=7,J=8,D=9,T=10,G=11,U=12,ie=13,se=14,ae=15,W=16,ee=17,_=18,re=19,fe=20,pe=21,he=22,oe=23,ce=24,X=25,K=26,L=27,$=28,te=29,V=30,z=31,F=32,q=852,H=592,O=15,C=O;function Q(ve){return(ve>>>24&255)+(ve>>>8&65280)+((ve&65280)<<8)+((ve&255)<<24)}function le(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new v.Buf16(320),this.work=new v.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function ge(ve){var xe;return!ve||!ve.state?w:(xe=ve.state,ve.total_in=ve.total_out=xe.total=0,ve.msg="",xe.wrap&&(ve.adler=xe.wrap&1),xe.mode=k,xe.last=0,xe.havedict=0,xe.dmax=32768,xe.head=null,xe.hold=0,xe.bits=0,xe.lencode=xe.lendyn=new v.Buf32(q),xe.distcode=xe.distdyn=new v.Buf32(H),xe.sane=1,xe.back=-1,l)}function ye(ve){var xe;return!ve||!ve.state?w:(xe=ve.state,xe.wsize=0,xe.whave=0,xe.wnext=0,ge(ve))}function Ee(ve,xe){var ne,Ne;return!ve||!ve.state||(Ne=ve.state,xe<0?(ne=0,xe=-xe):(ne=(xe>>4)+1,xe<48&&(xe&=15)),xe&&(xe<8||xe>15))?w:(Ne.window!==null&&Ne.wbits!==xe&&(Ne.window=null),Ne.wrap=ne,Ne.wbits=xe,ye(ve))}function Se(ve,xe){var ne,Ne;return ve?(Ne=new le,ve.state=Ne,Ne.window=null,ne=Ee(ve,xe),ne!==l&&(ve.state=null),ne):w}function Ie(ve){return Se(ve,C)}var Oe=!0,Fe,ke;function He(ve){if(Oe){var xe;for(Fe=new v.Buf32(512),ke=new v.Buf32(32),xe=0;xe<144;)ve.lens[xe++]=8;for(;xe<256;)ve.lens[xe++]=9;for(;xe<280;)ve.lens[xe++]=7;for(;xe<288;)ve.lens[xe++]=8;for(u(s,ve.lens,0,288,Fe,0,ve.work,{bits:9}),xe=0;xe<32;)ve.lens[xe++]=5;u(i,ve.lens,0,32,ke,0,ve.work,{bits:5}),Oe=!1}ve.lencode=Fe,ve.lenbits=9,ve.distcode=ke,ve.distbits=5}function Me(ve,xe,ne,Ne){var Te,P=ve.state;return P.window===null&&(P.wsize=1<<P.wbits,P.wnext=0,P.whave=0,P.window=new v.Buf8(P.wsize)),Ne>=P.wsize?(v.arraySet(P.window,xe,ne-P.wsize,P.wsize,0),P.wnext=0,P.whave=P.wsize):(Te=P.wsize-P.wnext,Te>Ne&&(Te=Ne),v.arraySet(P.window,xe,ne-Ne,Te,P.wnext),Ne-=Te,Ne?(v.arraySet(P.window,xe,ne-Ne,Ne,0),P.wnext=Ne,P.whave=P.wsize):(P.wnext+=Te,P.wnext===P.wsize&&(P.wnext=0),P.whave<P.wsize&&(P.whave+=Te))),0}function j(ve,xe){var ne,Ne,Te,P,de,we,Z,ue,Ae,Re,Ce,ze,De,gt,tt=0,qe,at,ft,xt,kr,Sr,ut,bt,ht=new v.Buf8(4),It,kt,gn=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!ve||!ve.state||!ve.output||!ve.input&&ve.avail_in!==0)return w;ne=ve.state,ne.mode===U&&(ne.mode=ie),de=ve.next_out,Te=ve.output,Z=ve.avail_out,P=ve.next_in,Ne=ve.input,we=ve.avail_in,ue=ne.hold,Ae=ne.bits,Re=we,Ce=Z,bt=l;e:for(;;)switch(ne.mode){case k:if(ne.wrap===0){ne.mode=ie;break}for(;Ae<16;){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}if(ne.wrap&2&&ue===35615){ne.check=0,ht[0]=ue&255,ht[1]=ue>>>8&255,ne.check=g(ne.check,ht,2,0),ue=0,Ae=0,ne.mode=S;break}if(ne.flags=0,ne.head&&(ne.head.done=!1),!(ne.wrap&1)||(((ue&255)<<8)+(ue>>8))%31){ve.msg="incorrect header check",ne.mode=V;break}if((ue&15)!==E){ve.msg="unknown compression method",ne.mode=V;break}if(ue>>>=4,Ae-=4,ut=(ue&15)+8,ne.wbits===0)ne.wbits=ut;else if(ut>ne.wbits){ve.msg="invalid window size",ne.mode=V;break}ne.dmax=1<<ut,ve.adler=ne.check=1,ne.mode=ue&512?T:U,ue=0,Ae=0;break;case S:for(;Ae<16;){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}if(ne.flags=ue,(ne.flags&255)!==E){ve.msg="unknown compression method",ne.mode=V;break}if(ne.flags&57344){ve.msg="unknown header flags set",ne.mode=V;break}ne.head&&(ne.head.text=ue>>8&1),ne.flags&512&&(ht[0]=ue&255,ht[1]=ue>>>8&255,ne.check=g(ne.check,ht,2,0)),ue=0,Ae=0,ne.mode=R;case R:for(;Ae<32;){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}ne.head&&(ne.head.time=ue),ne.flags&512&&(ht[0]=ue&255,ht[1]=ue>>>8&255,ht[2]=ue>>>16&255,ht[3]=ue>>>24&255,ne.check=g(ne.check,ht,4,0)),ue=0,Ae=0,ne.mode=M;case M:for(;Ae<16;){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}ne.head&&(ne.head.xflags=ue&255,ne.head.os=ue>>8),ne.flags&512&&(ht[0]=ue&255,ht[1]=ue>>>8&255,ne.check=g(ne.check,ht,2,0)),ue=0,Ae=0,ne.mode=B;case B:if(ne.flags&1024){for(;Ae<16;){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}ne.length=ue,ne.head&&(ne.head.extra_len=ue),ne.flags&512&&(ht[0]=ue&255,ht[1]=ue>>>8&255,ne.check=g(ne.check,ht,2,0)),ue=0,Ae=0}else ne.head&&(ne.head.extra=null);ne.mode=I;case I:if(ne.flags&1024&&(ze=ne.length,ze>we&&(ze=we),ze&&(ne.head&&(ut=ne.head.extra_len-ne.length,ne.head.extra||(ne.head.extra=new Array(ne.head.extra_len)),v.arraySet(ne.head.extra,Ne,P,ze,ut)),ne.flags&512&&(ne.check=g(ne.check,Ne,ze,P)),we-=ze,P+=ze,ne.length-=ze),ne.length))break e;ne.length=0,ne.mode=Y;case Y:if(ne.flags&2048){if(we===0)break e;ze=0;do ut=Ne[P+ze++],ne.head&&ut&&ne.length<65536&&(ne.head.name+=String.fromCharCode(ut));while(ut&&ze<we);if(ne.flags&512&&(ne.check=g(ne.check,Ne,ze,P)),we-=ze,P+=ze,ut)break e}else ne.head&&(ne.head.name=null);ne.length=0,ne.mode=J;case J:if(ne.flags&4096){if(we===0)break e;ze=0;do ut=Ne[P+ze++],ne.head&&ut&&ne.length<65536&&(ne.head.comment+=String.fromCharCode(ut));while(ut&&ze<we);if(ne.flags&512&&(ne.check=g(ne.check,Ne,ze,P)),we-=ze,P+=ze,ut)break e}else ne.head&&(ne.head.comment=null);ne.mode=D;case D:if(ne.flags&512){for(;Ae<16;){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}if(ue!==(ne.check&65535)){ve.msg="header crc mismatch",ne.mode=V;break}ue=0,Ae=0}ne.head&&(ne.head.hcrc=ne.flags>>9&1,ne.head.done=!0),ve.adler=ne.check=0,ne.mode=U;break;case T:for(;Ae<32;){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}ve.adler=ne.check=Q(ue),ue=0,Ae=0,ne.mode=G;case G:if(ne.havedict===0)return ve.next_out=de,ve.avail_out=Z,ve.next_in=P,ve.avail_in=we,ne.hold=ue,ne.bits=Ae,c;ve.adler=ne.check=1,ne.mode=U;case U:if(xe===p||xe===y)break e;case ie:if(ne.last){ue>>>=Ae&7,Ae-=Ae&7,ne.mode=L;break}for(;Ae<3;){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}switch(ne.last=ue&1,ue>>>=1,Ae-=1,ue&3){case 0:ne.mode=se;break;case 1:if(He(ne),ne.mode=fe,xe===y){ue>>>=2,Ae-=2;break e}break;case 2:ne.mode=ee;break;case 3:ve.msg="invalid block type",ne.mode=V}ue>>>=2,Ae-=2;break;case se:for(ue>>>=Ae&7,Ae-=Ae&7;Ae<32;){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}if((ue&65535)!==(ue>>>16^65535)){ve.msg="invalid stored block lengths",ne.mode=V;break}if(ne.length=ue&65535,ue=0,Ae=0,ne.mode=ae,xe===y)break e;case ae:ne.mode=W;case W:if(ze=ne.length,ze){if(ze>we&&(ze=we),ze>Z&&(ze=Z),ze===0)break e;v.arraySet(Te,Ne,P,ze,de),we-=ze,P+=ze,Z-=ze,de+=ze,ne.length-=ze;break}ne.mode=U;break;case ee:for(;Ae<14;){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}if(ne.nlen=(ue&31)+257,ue>>>=5,Ae-=5,ne.ndist=(ue&31)+1,ue>>>=5,Ae-=5,ne.ncode=(ue&15)+4,ue>>>=4,Ae-=4,ne.nlen>286||ne.ndist>30){ve.msg="too many length or distance symbols",ne.mode=V;break}ne.have=0,ne.mode=_;case _:for(;ne.have<ne.ncode;){for(;Ae<3;){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}ne.lens[gn[ne.have++]]=ue&7,ue>>>=3,Ae-=3}for(;ne.have<19;)ne.lens[gn[ne.have++]]=0;if(ne.lencode=ne.lendyn,ne.lenbits=7,It={bits:ne.lenbits},bt=u(f,ne.lens,0,19,ne.lencode,0,ne.work,It),ne.lenbits=It.bits,bt){ve.msg="invalid code lengths set",ne.mode=V;break}ne.have=0,ne.mode=re;case re:for(;ne.have<ne.nlen+ne.ndist;){for(;tt=ne.lencode[ue&(1<<ne.lenbits)-1],qe=tt>>>24,at=tt>>>16&255,ft=tt&65535,!(qe<=Ae);){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}if(ft<16)ue>>>=qe,Ae-=qe,ne.lens[ne.have++]=ft;else{if(ft===16){for(kt=qe+2;Ae<kt;){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}if(ue>>>=qe,Ae-=qe,ne.have===0){ve.msg="invalid bit length repeat",ne.mode=V;break}ut=ne.lens[ne.have-1],ze=3+(ue&3),ue>>>=2,Ae-=2}else if(ft===17){for(kt=qe+3;Ae<kt;){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}ue>>>=qe,Ae-=qe,ut=0,ze=3+(ue&7),ue>>>=3,Ae-=3}else{for(kt=qe+7;Ae<kt;){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}ue>>>=qe,Ae-=qe,ut=0,ze=11+(ue&127),ue>>>=7,Ae-=7}if(ne.have+ze>ne.nlen+ne.ndist){ve.msg="invalid bit length repeat",ne.mode=V;break}for(;ze--;)ne.lens[ne.have++]=ut}}if(ne.mode===V)break;if(ne.lens[256]===0){ve.msg="invalid code -- missing end-of-block",ne.mode=V;break}if(ne.lenbits=9,It={bits:ne.lenbits},bt=u(s,ne.lens,0,ne.nlen,ne.lencode,0,ne.work,It),ne.lenbits=It.bits,bt){ve.msg="invalid literal/lengths set",ne.mode=V;break}if(ne.distbits=6,ne.distcode=ne.distdyn,It={bits:ne.distbits},bt=u(i,ne.lens,ne.nlen,ne.ndist,ne.distcode,0,ne.work,It),ne.distbits=It.bits,bt){ve.msg="invalid distances set",ne.mode=V;break}if(ne.mode=fe,xe===y)break e;case fe:ne.mode=pe;case pe:if(we>=6&&Z>=258){ve.next_out=de,ve.avail_out=Z,ve.next_in=P,ve.avail_in=we,ne.hold=ue,ne.bits=Ae,b(ve,Ce),de=ve.next_out,Te=ve.output,Z=ve.avail_out,P=ve.next_in,Ne=ve.input,we=ve.avail_in,ue=ne.hold,Ae=ne.bits,ne.mode===U&&(ne.back=-1);break}for(ne.back=0;tt=ne.lencode[ue&(1<<ne.lenbits)-1],qe=tt>>>24,at=tt>>>16&255,ft=tt&65535,!(qe<=Ae);){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}if(at&&(at&240)===0){for(xt=qe,kr=at,Sr=ft;tt=ne.lencode[Sr+((ue&(1<<xt+kr)-1)>>xt)],qe=tt>>>24,at=tt>>>16&255,ft=tt&65535,!(xt+qe<=Ae);){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}ue>>>=xt,Ae-=xt,ne.back+=xt}if(ue>>>=qe,Ae-=qe,ne.back+=qe,ne.length=ft,at===0){ne.mode=K;break}if(at&32){ne.back=-1,ne.mode=U;break}if(at&64){ve.msg="invalid literal/length code",ne.mode=V;break}ne.extra=at&15,ne.mode=he;case he:if(ne.extra){for(kt=ne.extra;Ae<kt;){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}ne.length+=ue&(1<<ne.extra)-1,ue>>>=ne.extra,Ae-=ne.extra,ne.back+=ne.extra}ne.was=ne.length,ne.mode=oe;case oe:for(;tt=ne.distcode[ue&(1<<ne.distbits)-1],qe=tt>>>24,at=tt>>>16&255,ft=tt&65535,!(qe<=Ae);){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}if((at&240)===0){for(xt=qe,kr=at,Sr=ft;tt=ne.distcode[Sr+((ue&(1<<xt+kr)-1)>>xt)],qe=tt>>>24,at=tt>>>16&255,ft=tt&65535,!(xt+qe<=Ae);){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}ue>>>=xt,Ae-=xt,ne.back+=xt}if(ue>>>=qe,Ae-=qe,ne.back+=qe,at&64){ve.msg="invalid distance code",ne.mode=V;break}ne.offset=ft,ne.extra=at&15,ne.mode=ce;case ce:if(ne.extra){for(kt=ne.extra;Ae<kt;){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}ne.offset+=ue&(1<<ne.extra)-1,ue>>>=ne.extra,Ae-=ne.extra,ne.back+=ne.extra}if(ne.offset>ne.dmax){ve.msg="invalid distance too far back",ne.mode=V;break}ne.mode=X;case X:if(Z===0)break e;if(ze=Ce-Z,ne.offset>ze){if(ze=ne.offset-ze,ze>ne.whave&&ne.sane){ve.msg="invalid distance too far back",ne.mode=V;break}ze>ne.wnext?(ze-=ne.wnext,De=ne.wsize-ze):De=ne.wnext-ze,ze>ne.length&&(ze=ne.length),gt=ne.window}else gt=Te,De=de-ne.offset,ze=ne.length;ze>Z&&(ze=Z),Z-=ze,ne.length-=ze;do Te[de++]=gt[De++];while(--ze);ne.length===0&&(ne.mode=pe);break;case K:if(Z===0)break e;Te[de++]=ne.length,Z--,ne.mode=pe;break;case L:if(ne.wrap){for(;Ae<32;){if(we===0)break e;we--,ue|=Ne[P++]<<Ae,Ae+=8}if(Ce-=Z,ve.total_out+=Ce,ne.total+=Ce,Ce&&(ve.adler=ne.check=ne.flags?g(ne.check,Te,Ce,de-Ce):h(ne.check,Te,Ce,de-Ce)),Ce=Z,(ne.flags?ue:Q(ue))!==ne.check){ve.msg="incorrect data check",ne.mode=V;break}ue=0,Ae=0}ne.mode=$;case $:if(ne.wrap&&ne.flags){for(;Ae<32;){if(we===0)break e;we--,ue+=Ne[P++]<<Ae,Ae+=8}if(ue!==(ne.total&4294967295)){ve.msg="incorrect length check",ne.mode=V;break}ue=0,Ae=0}ne.mode=te;case te:bt=m;break e;case V:bt=x;break e;case z:return A;case F:default:return w}return ve.next_out=de,ve.avail_out=Z,ve.next_in=P,ve.avail_in=we,ne.hold=ue,ne.bits=Ae,(ne.wsize||Ce!==ve.avail_out&&ne.mode<V&&(ne.mode<L||xe!==n))&&Me(ve,ve.output,ve.next_out,Ce-ve.avail_out),Re-=ve.avail_in,Ce-=ve.avail_out,ve.total_in+=Re,ve.total_out+=Ce,ne.total+=Ce,ne.wrap&&Ce&&(ve.adler=ne.check=ne.flags?g(ne.check,Te,Ce,ve.next_out-Ce):h(ne.check,Te,Ce,ve.next_out-Ce)),ve.data_type=ne.bits+(ne.last?64:0)+(ne.mode===U?128:0)+(ne.mode===fe||ne.mode===ae?256:0),(Re===0&&Ce===0||xe===n)&&bt===l&&(bt=N),bt}function me(ve){if(!ve||!ve.state)return w;var xe=ve.state;return xe.window&&(xe.window=null),ve.state=null,l}function be(ve,xe){var ne;return!ve||!ve.state||(ne=ve.state,(ne.wrap&2)===0)?w:(ne.head=xe,xe.done=!1,l)}function Pe(ve,xe){var ne=xe.length,Ne,Te,P;return!ve||!ve.state||(Ne=ve.state,Ne.wrap!==0&&Ne.mode!==G)?w:Ne.mode===G&&(Te=1,Te=h(Te,xe,ne,0),Te!==Ne.check)?x:(P=Me(ve,xe,ne,ne),P?(Ne.mode=z,A):(Ne.havedict=1,l))}o.inflateReset=ye,o.inflateReset2=Ee,o.inflateResetKeep=ge,o.inflateInit=Ie,o.inflateInit2=Se,o.inflate=j,o.inflateEnd=me,o.inflateGetHeader=be,o.inflateSetDictionary=Pe,o.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":36,"./adler32":37,"./crc32":39,"./inffast":41,"./inftrees":43}],43:[function(t,d,o){var v=t("../utils/common"),h=15,g=852,b=592,u=0,f=1,s=2,i=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],n=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],p=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],y=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];d.exports=function(m,c,w,x,A,N,E,k){var S=k.bits,R=0,M=0,B=0,I=0,Y=0,J=0,D=0,T=0,G=0,U=0,ie,se,ae,W,ee,_=null,re=0,fe,pe=new v.Buf16(h+1),he=new v.Buf16(h+1),oe=null,ce=0,X,K,L;for(R=0;R<=h;R++)pe[R]=0;for(M=0;M<x;M++)pe[c[w+M]]++;for(Y=S,I=h;I>=1&&pe[I]===0;I--);if(Y>I&&(Y=I),I===0)return A[N++]=1<<24|64<<16|0,A[N++]=1<<24|64<<16|0,k.bits=1,0;for(B=1;B<I&&pe[B]===0;B++);for(Y<B&&(Y=B),T=1,R=1;R<=h;R++)if(T<<=1,T-=pe[R],T<0)return-1;if(T>0&&(m===u||I!==1))return-1;for(he[1]=0,R=1;R<h;R++)he[R+1]=he[R]+pe[R];for(M=0;M<x;M++)c[w+M]!==0&&(E[he[c[w+M]]++]=M);if(m===u?(_=oe=E,fe=19):m===f?(_=i,re-=257,oe=n,ce-=257,fe=256):(_=p,oe=y,fe=-1),U=0,M=0,R=B,ee=N,J=Y,D=0,ae=-1,G=1<<Y,W=G-1,m===f&&G>g||m===s&&G>b)return 1;for(;;){X=R-D,E[M]<fe?(K=0,L=E[M]):E[M]>fe?(K=oe[ce+E[M]],L=_[re+E[M]]):(K=32+64,L=0),ie=1<<R-D,se=1<<J,B=se;do se-=ie,A[ee+(U>>D)+se]=X<<24|K<<16|L|0;while(se!==0);for(ie=1<<R-1;U&ie;)ie>>=1;if(ie!==0?(U&=ie-1,U+=ie):U=0,M++,--pe[R]===0){if(R===I)break;R=c[w+E[M]]}if(R>Y&&(U&W)!==ae){for(D===0&&(D=Y),ee+=B,J=R-D,T=1<<J;J+D<I&&(T-=pe[J+D],!(T<=0));)J++,T<<=1;if(G+=1<<J,m===f&&G>g||m===s&&G>b)return 1;ae=U&W,A[ae]=Y<<24|J<<16|ee-N|0}}return U!==0&&(A[ee+U]=R-D<<24|64<<16|0),k.bits=Y,0}},{"../utils/common":36}],44:[function(t,d,o){d.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],45:[function(t,d,o){var v=t("../utils/common"),h=4,g=0,b=1,u=2;function f(j){for(var me=j.length;--me>=0;)j[me]=0}var s=0,i=1,n=2,p=3,y=258,l=29,m=256,c=m+1+l,w=30,x=19,A=2*c+1,N=15,E=16,k=7,S=256,R=16,M=17,B=18,I=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],Y=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],J=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],D=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],T=512,G=new Array((c+2)*2);f(G);var U=new Array(w*2);f(U);var ie=new Array(T);f(ie);var se=new Array(y-p+1);f(se);var ae=new Array(l);f(ae);var W=new Array(w);f(W);function ee(j,me,be,Pe,ve){this.static_tree=j,this.extra_bits=me,this.extra_base=be,this.elems=Pe,this.max_length=ve,this.has_stree=j&&j.length}var _,re,fe;function pe(j,me){this.dyn_tree=j,this.max_code=0,this.stat_desc=me}function he(j){return j<256?ie[j]:ie[256+(j>>>7)]}function oe(j,me){j.pending_buf[j.pending++]=me&255,j.pending_buf[j.pending++]=me>>>8&255}function ce(j,me,be){j.bi_valid>E-be?(j.bi_buf|=me<<j.bi_valid&65535,oe(j,j.bi_buf),j.bi_buf=me>>E-j.bi_valid,j.bi_valid+=be-E):(j.bi_buf|=me<<j.bi_valid&65535,j.bi_valid+=be)}function X(j,me,be){ce(j,be[me*2],be[me*2+1])}function K(j,me){var be=0;do be|=j&1,j>>>=1,be<<=1;while(--me>0);return be>>>1}function L(j){j.bi_valid===16?(oe(j,j.bi_buf),j.bi_buf=0,j.bi_valid=0):j.bi_valid>=8&&(j.pending_buf[j.pending++]=j.bi_buf&255,j.bi_buf>>=8,j.bi_valid-=8)}function $(j,me){var be=me.dyn_tree,Pe=me.max_code,ve=me.stat_desc.static_tree,xe=me.stat_desc.has_stree,ne=me.stat_desc.extra_bits,Ne=me.stat_desc.extra_base,Te=me.stat_desc.max_length,P,de,we,Z,ue,Ae,Re=0;for(Z=0;Z<=N;Z++)j.bl_count[Z]=0;for(be[j.heap[j.heap_max]*2+1]=0,P=j.heap_max+1;P<A;P++)de=j.heap[P],Z=be[be[de*2+1]*2+1]+1,Z>Te&&(Z=Te,Re++),be[de*2+1]=Z,!(de>Pe)&&(j.bl_count[Z]++,ue=0,de>=Ne&&(ue=ne[de-Ne]),Ae=be[de*2],j.opt_len+=Ae*(Z+ue),xe&&(j.static_len+=Ae*(ve[de*2+1]+ue)));if(Re!==0){do{for(Z=Te-1;j.bl_count[Z]===0;)Z--;j.bl_count[Z]--,j.bl_count[Z+1]+=2,j.bl_count[Te]--,Re-=2}while(Re>0);for(Z=Te;Z!==0;Z--)for(de=j.bl_count[Z];de!==0;)we=j.heap[--P],!(we>Pe)&&(be[we*2+1]!==Z&&(j.opt_len+=(Z-be[we*2+1])*be[we*2],be[we*2+1]=Z),de--)}}function te(j,me,be){var Pe=new Array(N+1),ve=0,xe,ne;for(xe=1;xe<=N;xe++)Pe[xe]=ve=ve+be[xe-1]<<1;for(ne=0;ne<=me;ne++){var Ne=j[ne*2+1];Ne!==0&&(j[ne*2]=K(Pe[Ne]++,Ne))}}function V(){var j,me,be,Pe,ve,xe=new Array(N+1);for(be=0,Pe=0;Pe<l-1;Pe++)for(ae[Pe]=be,j=0;j<1<<I[Pe];j++)se[be++]=Pe;for(se[be-1]=Pe,ve=0,Pe=0;Pe<16;Pe++)for(W[Pe]=ve,j=0;j<1<<Y[Pe];j++)ie[ve++]=Pe;for(ve>>=7;Pe<w;Pe++)for(W[Pe]=ve<<7,j=0;j<1<<Y[Pe]-7;j++)ie[256+ve++]=Pe;for(me=0;me<=N;me++)xe[me]=0;for(j=0;j<=143;)G[j*2+1]=8,j++,xe[8]++;for(;j<=255;)G[j*2+1]=9,j++,xe[9]++;for(;j<=279;)G[j*2+1]=7,j++,xe[7]++;for(;j<=287;)G[j*2+1]=8,j++,xe[8]++;for(te(G,c+1,xe),j=0;j<w;j++)U[j*2+1]=5,U[j*2]=K(j,5);_=new ee(G,I,m+1,c,N),re=new ee(U,Y,0,w,N),fe=new ee(new Array(0),J,0,x,k)}function z(j){var me;for(me=0;me<c;me++)j.dyn_ltree[me*2]=0;for(me=0;me<w;me++)j.dyn_dtree[me*2]=0;for(me=0;me<x;me++)j.bl_tree[me*2]=0;j.dyn_ltree[S*2]=1,j.opt_len=j.static_len=0,j.last_lit=j.matches=0}function F(j){j.bi_valid>8?oe(j,j.bi_buf):j.bi_valid>0&&(j.pending_buf[j.pending++]=j.bi_buf),j.bi_buf=0,j.bi_valid=0}function q(j,me,be,Pe){F(j),Pe&&(oe(j,be),oe(j,~be)),v.arraySet(j.pending_buf,j.window,me,be,j.pending),j.pending+=be}function H(j,me,be,Pe){var ve=me*2,xe=be*2;return j[ve]<j[xe]||j[ve]===j[xe]&&Pe[me]<=Pe[be]}function O(j,me,be){for(var Pe=j.heap[be],ve=be<<1;ve<=j.heap_len&&(ve<j.heap_len&&H(me,j.heap[ve+1],j.heap[ve],j.depth)&&ve++,!H(me,Pe,j.heap[ve],j.depth));)j.heap[be]=j.heap[ve],be=ve,ve<<=1;j.heap[be]=Pe}function C(j,me,be){var Pe,ve,xe=0,ne,Ne;if(j.last_lit!==0)do Pe=j.pending_buf[j.d_buf+xe*2]<<8|j.pending_buf[j.d_buf+xe*2+1],ve=j.pending_buf[j.l_buf+xe],xe++,Pe===0?X(j,ve,me):(ne=se[ve],X(j,ne+m+1,me),Ne=I[ne],Ne!==0&&(ve-=ae[ne],ce(j,ve,Ne)),Pe--,ne=he(Pe),X(j,ne,be),Ne=Y[ne],Ne!==0&&(Pe-=W[ne],ce(j,Pe,Ne)));while(xe<j.last_lit);X(j,S,me)}function Q(j,me){var be=me.dyn_tree,Pe=me.stat_desc.static_tree,ve=me.stat_desc.has_stree,xe=me.stat_desc.elems,ne,Ne,Te=-1,P;for(j.heap_len=0,j.heap_max=A,ne=0;ne<xe;ne++)be[ne*2]!==0?(j.heap[++j.heap_len]=Te=ne,j.depth[ne]=0):be[ne*2+1]=0;for(;j.heap_len<2;)P=j.heap[++j.heap_len]=Te<2?++Te:0,be[P*2]=1,j.depth[P]=0,j.opt_len--,ve&&(j.static_len-=Pe[P*2+1]);for(me.max_code=Te,ne=j.heap_len>>1;ne>=1;ne--)O(j,be,ne);P=xe;do ne=j.heap[1],j.heap[1]=j.heap[j.heap_len--],O(j,be,1),Ne=j.heap[1],j.heap[--j.heap_max]=ne,j.heap[--j.heap_max]=Ne,be[P*2]=be[ne*2]+be[Ne*2],j.depth[P]=(j.depth[ne]>=j.depth[Ne]?j.depth[ne]:j.depth[Ne])+1,be[ne*2+1]=be[Ne*2+1]=P,j.heap[1]=P++,O(j,be,1);while(j.heap_len>=2);j.heap[--j.heap_max]=j.heap[1],$(j,me),te(be,Te,j.bl_count)}function le(j,me,be){var Pe,ve=-1,xe,ne=me[0*2+1],Ne=0,Te=7,P=4;for(ne===0&&(Te=138,P=3),me[(be+1)*2+1]=65535,Pe=0;Pe<=be;Pe++)xe=ne,ne=me[(Pe+1)*2+1],!(++Ne<Te&&xe===ne)&&(Ne<P?j.bl_tree[xe*2]+=Ne:xe!==0?(xe!==ve&&j.bl_tree[xe*2]++,j.bl_tree[R*2]++):Ne<=10?j.bl_tree[M*2]++:j.bl_tree[B*2]++,Ne=0,ve=xe,ne===0?(Te=138,P=3):xe===ne?(Te=6,P=3):(Te=7,P=4))}function ge(j,me,be){var Pe,ve=-1,xe,ne=me[0*2+1],Ne=0,Te=7,P=4;for(ne===0&&(Te=138,P=3),Pe=0;Pe<=be;Pe++)if(xe=ne,ne=me[(Pe+1)*2+1],!(++Ne<Te&&xe===ne)){if(Ne<P)do X(j,xe,j.bl_tree);while(--Ne!==0);else xe!==0?(xe!==ve&&(X(j,xe,j.bl_tree),Ne--),X(j,R,j.bl_tree),ce(j,Ne-3,2)):Ne<=10?(X(j,M,j.bl_tree),ce(j,Ne-3,3)):(X(j,B,j.bl_tree),ce(j,Ne-11,7));Ne=0,ve=xe,ne===0?(Te=138,P=3):xe===ne?(Te=6,P=3):(Te=7,P=4)}}function ye(j){var me;for(le(j,j.dyn_ltree,j.l_desc.max_code),le(j,j.dyn_dtree,j.d_desc.max_code),Q(j,j.bl_desc),me=x-1;me>=3&&j.bl_tree[D[me]*2+1]===0;me--);return j.opt_len+=3*(me+1)+5+5+4,me}function Ee(j,me,be,Pe){var ve;for(ce(j,me-257,5),ce(j,be-1,5),ce(j,Pe-4,4),ve=0;ve<Pe;ve++)ce(j,j.bl_tree[D[ve]*2+1],3);ge(j,j.dyn_ltree,me-1),ge(j,j.dyn_dtree,be-1)}function Se(j){var me=4093624447,be;for(be=0;be<=31;be++,me>>>=1)if(me&1&&j.dyn_ltree[be*2]!==0)return g;if(j.dyn_ltree[9*2]!==0||j.dyn_ltree[10*2]!==0||j.dyn_ltree[13*2]!==0)return b;for(be=32;be<m;be++)if(j.dyn_ltree[be*2]!==0)return b;return g}var Ie=!1;function Oe(j){Ie||(V(),Ie=!0),j.l_desc=new pe(j.dyn_ltree,_),j.d_desc=new pe(j.dyn_dtree,re),j.bl_desc=new pe(j.bl_tree,fe),j.bi_buf=0,j.bi_valid=0,z(j)}function Fe(j,me,be,Pe){ce(j,(s<<1)+(Pe?1:0),3),q(j,me,be,!0)}function ke(j){ce(j,i<<1,3),X(j,S,G),L(j)}function He(j,me,be,Pe){var ve,xe,ne=0;j.level>0?(j.strm.data_type===u&&(j.strm.data_type=Se(j)),Q(j,j.l_desc),Q(j,j.d_desc),ne=ye(j),ve=j.opt_len+3+7>>>3,xe=j.static_len+3+7>>>3,xe<=ve&&(ve=xe)):ve=xe=be+5,be+4<=ve&&me!==-1?Fe(j,me,be,Pe):j.strategy===h||xe===ve?(ce(j,(i<<1)+(Pe?1:0),3),C(j,G,U)):(ce(j,(n<<1)+(Pe?1:0),3),Ee(j,j.l_desc.max_code+1,j.d_desc.max_code+1,ne+1),C(j,j.dyn_ltree,j.dyn_dtree)),z(j),Pe&&F(j)}function Me(j,me,be){return j.pending_buf[j.d_buf+j.last_lit*2]=me>>>8&255,j.pending_buf[j.d_buf+j.last_lit*2+1]=me&255,j.pending_buf[j.l_buf+j.last_lit]=be&255,j.last_lit++,me===0?j.dyn_ltree[be*2]++:(j.matches++,me--,j.dyn_ltree[(se[be]+m+1)*2]++,j.dyn_dtree[he(me)*2]++),j.last_lit===j.lit_bufsize-1}o._tr_init=Oe,o._tr_stored_block=Fe,o._tr_flush_block=He,o._tr_tally=Me,o._tr_align=ke},{"../utils/common":36}],46:[function(t,d,o){function v(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}d.exports=v},{}],47:[function(t,d,o){arguments[4][33][0].apply(o,arguments)},{dup:33}],48:[function(t,d,o){(function(i){var h=t("base64-js"),g=t("ieee754"),b=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;o.Buffer=i,o.SlowBuffer=N,o.INSPECT_MAX_BYTES=50;var u=2147483647;o.kMaxLength=u,i.TYPED_ARRAY_SUPPORT=f(),!i.TYPED_ARRAY_SUPPORT&&typeof console!="undefined"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function f(){try{var H=new Uint8Array(1),O={foo:function(){return 42}};return Object.setPrototypeOf(O,Uint8Array.prototype),Object.setPrototypeOf(H,O),H.foo()===42}catch{return!1}}Object.defineProperty(i.prototype,"parent",{enumerable:!0,get:function(){if(!!i.isBuffer(this))return this.buffer}}),Object.defineProperty(i.prototype,"offset",{enumerable:!0,get:function(){if(!!i.isBuffer(this))return this.byteOffset}});function s(H){if(H>u)throw new RangeError('The value "'+H+'" is invalid for option "size"');var O=new Uint8Array(H);return Object.setPrototypeOf(O,i.prototype),O}function i(H,O,C){if(typeof H=="number"){if(typeof O=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return l(H)}return n(H,O,C)}typeof Symbol!="undefined"&&Symbol.species!=null&&i[Symbol.species]===i&&Object.defineProperty(i,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),i.poolSize=8192;function n(H,O,C){if(typeof H=="string")return m(H,O);if(ArrayBuffer.isView(H))return c(H);if(H==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof H);if(z(H,ArrayBuffer)||H&&z(H.buffer,ArrayBuffer))return w(H,O,C);if(typeof H=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');var Q=H.valueOf&&H.valueOf();if(Q!=null&&Q!==H)return i.from(Q,O,C);var le=x(H);if(le)return le;if(typeof Symbol!="undefined"&&Symbol.toPrimitive!=null&&typeof H[Symbol.toPrimitive]=="function")return i.from(H[Symbol.toPrimitive]("string"),O,C);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof H)}i.from=function(H,O,C){return n(H,O,C)},Object.setPrototypeOf(i.prototype,Uint8Array.prototype),Object.setPrototypeOf(i,Uint8Array);function p(H){if(typeof H!="number")throw new TypeError('"size" argument must be of type number');if(H<0)throw new RangeError('The value "'+H+'" is invalid for option "size"')}function y(H,O,C){return p(H),H<=0?s(H):O!==void 0?typeof C=="string"?s(H).fill(O,C):s(H).fill(O):s(H)}i.alloc=function(H,O,C){return y(H,O,C)};function l(H){return p(H),s(H<0?0:A(H)|0)}i.allocUnsafe=function(H){return l(H)},i.allocUnsafeSlow=function(H){return l(H)};function m(H,O){if((typeof O!="string"||O==="")&&(O="utf8"),!i.isEncoding(O))throw new TypeError("Unknown encoding: "+O);var C=E(H,O)|0,Q=s(C),le=Q.write(H,O);return le!==C&&(Q=Q.slice(0,le)),Q}function c(H){for(var O=H.length<0?0:A(H.length)|0,C=s(O),Q=0;Q<O;Q+=1)C[Q]=H[Q]&255;return C}function w(H,O,C){if(O<0||H.byteLength<O)throw new RangeError('"offset" is outside of buffer bounds');if(H.byteLength<O+(C||0))throw new RangeError('"length" is outside of buffer bounds');var Q;return O===void 0&&C===void 0?Q=new Uint8Array(H):C===void 0?Q=new Uint8Array(H,O):Q=new Uint8Array(H,O,C),Object.setPrototypeOf(Q,i.prototype),Q}function x(H){if(i.isBuffer(H)){var O=A(H.length)|0,C=s(O);return C.length===0||H.copy(C,0,0,O),C}if(H.length!==void 0)return typeof H.length!="number"||F(H.length)?s(0):c(H);if(H.type==="Buffer"&&Array.isArray(H.data))return c(H.data)}function A(H){if(H>=u)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+u.toString(16)+" bytes");return H|0}function N(H){return+H!=H&&(H=0),i.alloc(+H)}i.isBuffer=function(O){return O!=null&&O._isBuffer===!0&&O!==i.prototype},i.compare=function(O,C){if(z(O,Uint8Array)&&(O=i.from(O,O.offset,O.byteLength)),z(C,Uint8Array)&&(C=i.from(C,C.offset,C.byteLength)),!i.isBuffer(O)||!i.isBuffer(C))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(O===C)return 0;for(var Q=O.length,le=C.length,ge=0,ye=Math.min(Q,le);ge<ye;++ge)if(O[ge]!==C[ge]){Q=O[ge],le=C[ge];break}return Q<le?-1:le<Q?1:0},i.isEncoding=function(O){switch(String(O).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},i.concat=function(O,C){if(!Array.isArray(O))throw new TypeError('"list" argument must be an Array of Buffers');if(O.length===0)return i.alloc(0);var Q;if(C===void 0)for(C=0,Q=0;Q<O.length;++Q)C+=O[Q].length;var le=i.allocUnsafe(C),ge=0;for(Q=0;Q<O.length;++Q){var ye=O[Q];if(z(ye,Uint8Array)&&(ye=i.from(ye)),!i.isBuffer(ye))throw new TypeError('"list" argument must be an Array of Buffers');ye.copy(le,ge),ge+=ye.length}return le};function E(H,O){if(i.isBuffer(H))return H.length;if(ArrayBuffer.isView(H)||z(H,ArrayBuffer))return H.byteLength;if(typeof H!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof H);var C=H.length,Q=arguments.length>2&&arguments[2]===!0;if(!Q&&C===0)return 0;for(var le=!1;;)switch(O){case"ascii":case"latin1":case"binary":return C;case"utf8":case"utf-8":return K(H).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C*2;case"hex":return C>>>1;case"base64":return te(H).length;default:if(le)return Q?-1:K(H).length;O=(""+O).toLowerCase(),le=!0}}i.byteLength=E;function k(H,O,C){var Q=!1;if((O===void 0||O<0)&&(O=0),O>this.length||((C===void 0||C>this.length)&&(C=this.length),C<=0)||(C>>>=0,O>>>=0,C<=O))return"";for(H||(H="utf8");;)switch(H){case"hex":return ee(this,O,C);case"utf8":case"utf-8":return U(this,O,C);case"ascii":return ae(this,O,C);case"latin1":case"binary":return W(this,O,C);case"base64":return G(this,O,C);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return _(this,O,C);default:if(Q)throw new TypeError("Unknown encoding: "+H);H=(H+"").toLowerCase(),Q=!0}}i.prototype._isBuffer=!0;function S(H,O,C){var Q=H[O];H[O]=H[C],H[C]=Q}i.prototype.swap16=function(){var O=this.length;if(O%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var C=0;C<O;C+=2)S(this,C,C+1);return this},i.prototype.swap32=function(){var O=this.length;if(O%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var C=0;C<O;C+=4)S(this,C,C+3),S(this,C+1,C+2);return this},i.prototype.swap64=function(){var O=this.length;if(O%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var C=0;C<O;C+=8)S(this,C,C+7),S(this,C+1,C+6),S(this,C+2,C+5),S(this,C+3,C+4);return this},i.prototype.toString=function(){var O=this.length;return O===0?"":arguments.length===0?U(this,0,O):k.apply(this,arguments)},i.prototype.toLocaleString=i.prototype.toString,i.prototype.equals=function(O){if(!i.isBuffer(O))throw new TypeError("Argument must be a Buffer");return this===O?!0:i.compare(this,O)===0},i.prototype.inspect=function(){var O="",C=o.INSPECT_MAX_BYTES;return O=this.toString("hex",0,C).replace(/(.{2})/g,"$1 ").trim(),this.length>C&&(O+=" ... "),"<Buffer "+O+">"},b&&(i.prototype[b]=i.prototype.inspect),i.prototype.compare=function(O,C,Q,le,ge){if(z(O,Uint8Array)&&(O=i.from(O,O.offset,O.byteLength)),!i.isBuffer(O))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof O);if(C===void 0&&(C=0),Q===void 0&&(Q=O?O.length:0),le===void 0&&(le=0),ge===void 0&&(ge=this.length),C<0||Q>O.length||le<0||ge>this.length)throw new RangeError("out of range index");if(le>=ge&&C>=Q)return 0;if(le>=ge)return-1;if(C>=Q)return 1;if(C>>>=0,Q>>>=0,le>>>=0,ge>>>=0,this===O)return 0;for(var ye=ge-le,Ee=Q-C,Se=Math.min(ye,Ee),Ie=this.slice(le,ge),Oe=O.slice(C,Q),Fe=0;Fe<Se;++Fe)if(Ie[Fe]!==Oe[Fe]){ye=Ie[Fe],Ee=Oe[Fe];break}return ye<Ee?-1:Ee<ye?1:0};function R(H,O,C,Q,le){if(H.length===0)return-1;if(typeof C=="string"?(Q=C,C=0):C>2147483647?C=2147483647:C<-2147483648&&(C=-2147483648),C=+C,F(C)&&(C=le?0:H.length-1),C<0&&(C=H.length+C),C>=H.length){if(le)return-1;C=H.length-1}else if(C<0)if(le)C=0;else return-1;if(typeof O=="string"&&(O=i.from(O,Q)),i.isBuffer(O))return O.length===0?-1:M(H,O,C,Q,le);if(typeof O=="number")return O=O&255,typeof Uint8Array.prototype.indexOf=="function"?le?Uint8Array.prototype.indexOf.call(H,O,C):Uint8Array.prototype.lastIndexOf.call(H,O,C):M(H,[O],C,Q,le);throw new TypeError("val must be string, number or Buffer")}function M(H,O,C,Q,le){var ge=1,ye=H.length,Ee=O.length;if(Q!==void 0&&(Q=String(Q).toLowerCase(),Q==="ucs2"||Q==="ucs-2"||Q==="utf16le"||Q==="utf-16le")){if(H.length<2||O.length<2)return-1;ge=2,ye/=2,Ee/=2,C/=2}function Se(He,Me){return ge===1?He[Me]:He.readUInt16BE(Me*ge)}var Ie;if(le){var Oe=-1;for(Ie=C;Ie<ye;Ie++)if(Se(H,Ie)===Se(O,Oe===-1?0:Ie-Oe)){if(Oe===-1&&(Oe=Ie),Ie-Oe+1===Ee)return Oe*ge}else Oe!==-1&&(Ie-=Ie-Oe),Oe=-1}else for(C+Ee>ye&&(C=ye-Ee),Ie=C;Ie>=0;Ie--){for(var Fe=!0,ke=0;ke<Ee;ke++)if(Se(H,Ie+ke)!==Se(O,ke)){Fe=!1;break}if(Fe)return Ie}return-1}i.prototype.includes=function(O,C,Q){return this.indexOf(O,C,Q)!==-1},i.prototype.indexOf=function(O,C,Q){return R(this,O,C,Q,!0)},i.prototype.lastIndexOf=function(O,C,Q){return R(this,O,C,Q,!1)};function B(H,O,C,Q){C=Number(C)||0;var le=H.length-C;Q?(Q=Number(Q),Q>le&&(Q=le)):Q=le;var ge=O.length;Q>ge/2&&(Q=ge/2);for(var ye=0;ye<Q;++ye){var Ee=parseInt(O.substr(ye*2,2),16);if(F(Ee))return ye;H[C+ye]=Ee}return ye}function I(H,O,C,Q){return V(K(O,H.length-C),H,C,Q)}function Y(H,O,C,Q){return V(L(O),H,C,Q)}function J(H,O,C,Q){return Y(H,O,C,Q)}function D(H,O,C,Q){return V(te(O),H,C,Q)}function T(H,O,C,Q){return V($(O,H.length-C),H,C,Q)}i.prototype.write=function(O,C,Q,le){if(C===void 0)le="utf8",Q=this.length,C=0;else if(Q===void 0&&typeof C=="string")le=C,Q=this.length,C=0;else if(isFinite(C))C=C>>>0,isFinite(Q)?(Q=Q>>>0,le===void 0&&(le="utf8")):(le=Q,Q=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");var ge=this.length-C;if((Q===void 0||Q>ge)&&(Q=ge),O.length>0&&(Q<0||C<0)||C>this.length)throw new RangeError("Attempt to write outside buffer bounds");le||(le="utf8");for(var ye=!1;;)switch(le){case"hex":return B(this,O,C,Q);case"utf8":case"utf-8":return I(this,O,C,Q);case"ascii":return Y(this,O,C,Q);case"latin1":case"binary":return J(this,O,C,Q);case"base64":return D(this,O,C,Q);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return T(this,O,C,Q);default:if(ye)throw new TypeError("Unknown encoding: "+le);le=(""+le).toLowerCase(),ye=!0}},i.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function G(H,O,C){return O===0&&C===H.length?h.fromByteArray(H):h.fromByteArray(H.slice(O,C))}function U(H,O,C){C=Math.min(H.length,C);for(var Q=[],le=O;le<C;){var ge=H[le],ye=null,Ee=ge>239?4:ge>223?3:ge>191?2:1;if(le+Ee<=C){var Se,Ie,Oe,Fe;switch(Ee){case 1:ge<128&&(ye=ge);break;case 2:Se=H[le+1],(Se&192)===128&&(Fe=(ge&31)<<6|Se&63,Fe>127&&(ye=Fe));break;case 3:Se=H[le+1],Ie=H[le+2],(Se&192)===128&&(Ie&192)===128&&(Fe=(ge&15)<<12|(Se&63)<<6|Ie&63,Fe>2047&&(Fe<55296||Fe>57343)&&(ye=Fe));break;case 4:Se=H[le+1],Ie=H[le+2],Oe=H[le+3],(Se&192)===128&&(Ie&192)===128&&(Oe&192)===128&&(Fe=(ge&15)<<18|(Se&63)<<12|(Ie&63)<<6|Oe&63,Fe>65535&&Fe<1114112&&(ye=Fe))}}ye===null?(ye=65533,Ee=1):ye>65535&&(ye-=65536,Q.push(ye>>>10&1023|55296),ye=56320|ye&1023),Q.push(ye),le+=Ee}return se(Q)}var ie=4096;function se(H){var O=H.length;if(O<=ie)return String.fromCharCode.apply(String,H);for(var C="",Q=0;Q<O;)C+=String.fromCharCode.apply(String,H.slice(Q,Q+=ie));return C}function ae(H,O,C){var Q="";C=Math.min(H.length,C);for(var le=O;le<C;++le)Q+=String.fromCharCode(H[le]&127);return Q}function W(H,O,C){var Q="";C=Math.min(H.length,C);for(var le=O;le<C;++le)Q+=String.fromCharCode(H[le]);return Q}function ee(H,O,C){var Q=H.length;(!O||O<0)&&(O=0),(!C||C<0||C>Q)&&(C=Q);for(var le="",ge=O;ge<C;++ge)le+=q[H[ge]];return le}function _(H,O,C){for(var Q=H.slice(O,C),le="",ge=0;ge<Q.length;ge+=2)le+=String.fromCharCode(Q[ge]+Q[ge+1]*256);return le}i.prototype.slice=function(O,C){var Q=this.length;O=~~O,C=C===void 0?Q:~~C,O<0?(O+=Q,O<0&&(O=0)):O>Q&&(O=Q),C<0?(C+=Q,C<0&&(C=0)):C>Q&&(C=Q),C<O&&(C=O);var le=this.subarray(O,C);return Object.setPrototypeOf(le,i.prototype),le};function re(H,O,C){if(H%1!==0||H<0)throw new RangeError("offset is not uint");if(H+O>C)throw new RangeError("Trying to access beyond buffer length")}i.prototype.readUIntLE=function(O,C,Q){O=O>>>0,C=C>>>0,Q||re(O,C,this.length);for(var le=this[O],ge=1,ye=0;++ye<C&&(ge*=256);)le+=this[O+ye]*ge;return le},i.prototype.readUIntBE=function(O,C,Q){O=O>>>0,C=C>>>0,Q||re(O,C,this.length);for(var le=this[O+--C],ge=1;C>0&&(ge*=256);)le+=this[O+--C]*ge;return le},i.prototype.readUInt8=function(O,C){return O=O>>>0,C||re(O,1,this.length),this[O]},i.prototype.readUInt16LE=function(O,C){return O=O>>>0,C||re(O,2,this.length),this[O]|this[O+1]<<8},i.prototype.readUInt16BE=function(O,C){return O=O>>>0,C||re(O,2,this.length),this[O]<<8|this[O+1]},i.prototype.readUInt32LE=function(O,C){return O=O>>>0,C||re(O,4,this.length),(this[O]|this[O+1]<<8|this[O+2]<<16)+this[O+3]*16777216},i.prototype.readUInt32BE=function(O,C){return O=O>>>0,C||re(O,4,this.length),this[O]*16777216+(this[O+1]<<16|this[O+2]<<8|this[O+3])},i.prototype.readIntLE=function(O,C,Q){O=O>>>0,C=C>>>0,Q||re(O,C,this.length);for(var le=this[O],ge=1,ye=0;++ye<C&&(ge*=256);)le+=this[O+ye]*ge;return ge*=128,le>=ge&&(le-=Math.pow(2,8*C)),le},i.prototype.readIntBE=function(O,C,Q){O=O>>>0,C=C>>>0,Q||re(O,C,this.length);for(var le=C,ge=1,ye=this[O+--le];le>0&&(ge*=256);)ye+=this[O+--le]*ge;return ge*=128,ye>=ge&&(ye-=Math.pow(2,8*C)),ye},i.prototype.readInt8=function(O,C){return O=O>>>0,C||re(O,1,this.length),this[O]&128?(255-this[O]+1)*-1:this[O]},i.prototype.readInt16LE=function(O,C){O=O>>>0,C||re(O,2,this.length);var Q=this[O]|this[O+1]<<8;return Q&32768?Q|4294901760:Q},i.prototype.readInt16BE=function(O,C){O=O>>>0,C||re(O,2,this.length);var Q=this[O+1]|this[O]<<8;return Q&32768?Q|4294901760:Q},i.prototype.readInt32LE=function(O,C){return O=O>>>0,C||re(O,4,this.length),this[O]|this[O+1]<<8|this[O+2]<<16|this[O+3]<<24},i.prototype.readInt32BE=function(O,C){return O=O>>>0,C||re(O,4,this.length),this[O]<<24|this[O+1]<<16|this[O+2]<<8|this[O+3]},i.prototype.readFloatLE=function(O,C){return O=O>>>0,C||re(O,4,this.length),g.read(this,O,!0,23,4)},i.prototype.readFloatBE=function(O,C){return O=O>>>0,C||re(O,4,this.length),g.read(this,O,!1,23,4)},i.prototype.readDoubleLE=function(O,C){return O=O>>>0,C||re(O,8,this.length),g.read(this,O,!0,52,8)},i.prototype.readDoubleBE=function(O,C){return O=O>>>0,C||re(O,8,this.length),g.read(this,O,!1,52,8)};function fe(H,O,C,Q,le,ge){if(!i.isBuffer(H))throw new TypeError('"buffer" argument must be a Buffer instance');if(O>le||O<ge)throw new RangeError('"value" argument is out of bounds');if(C+Q>H.length)throw new RangeError("Index out of range")}i.prototype.writeUIntLE=function(O,C,Q,le){if(O=+O,C=C>>>0,Q=Q>>>0,!le){var ge=Math.pow(2,8*Q)-1;fe(this,O,C,Q,ge,0)}var ye=1,Ee=0;for(this[C]=O&255;++Ee<Q&&(ye*=256);)this[C+Ee]=O/ye&255;return C+Q},i.prototype.writeUIntBE=function(O,C,Q,le){if(O=+O,C=C>>>0,Q=Q>>>0,!le){var ge=Math.pow(2,8*Q)-1;fe(this,O,C,Q,ge,0)}var ye=Q-1,Ee=1;for(this[C+ye]=O&255;--ye>=0&&(Ee*=256);)this[C+ye]=O/Ee&255;return C+Q},i.prototype.writeUInt8=function(O,C,Q){return O=+O,C=C>>>0,Q||fe(this,O,C,1,255,0),this[C]=O&255,C+1},i.prototype.writeUInt16LE=function(O,C,Q){return O=+O,C=C>>>0,Q||fe(this,O,C,2,65535,0),this[C]=O&255,this[C+1]=O>>>8,C+2},i.prototype.writeUInt16BE=function(O,C,Q){return O=+O,C=C>>>0,Q||fe(this,O,C,2,65535,0),this[C]=O>>>8,this[C+1]=O&255,C+2},i.prototype.writeUInt32LE=function(O,C,Q){return O=+O,C=C>>>0,Q||fe(this,O,C,4,4294967295,0),this[C+3]=O>>>24,this[C+2]=O>>>16,this[C+1]=O>>>8,this[C]=O&255,C+4},i.prototype.writeUInt32BE=function(O,C,Q){return O=+O,C=C>>>0,Q||fe(this,O,C,4,4294967295,0),this[C]=O>>>24,this[C+1]=O>>>16,this[C+2]=O>>>8,this[C+3]=O&255,C+4},i.prototype.writeIntLE=function(O,C,Q,le){if(O=+O,C=C>>>0,!le){var ge=Math.pow(2,8*Q-1);fe(this,O,C,Q,ge-1,-ge)}var ye=0,Ee=1,Se=0;for(this[C]=O&255;++ye<Q&&(Ee*=256);)O<0&&Se===0&&this[C+ye-1]!==0&&(Se=1),this[C+ye]=(O/Ee>>0)-Se&255;return C+Q},i.prototype.writeIntBE=function(O,C,Q,le){if(O=+O,C=C>>>0,!le){var ge=Math.pow(2,8*Q-1);fe(this,O,C,Q,ge-1,-ge)}var ye=Q-1,Ee=1,Se=0;for(this[C+ye]=O&255;--ye>=0&&(Ee*=256);)O<0&&Se===0&&this[C+ye+1]!==0&&(Se=1),this[C+ye]=(O/Ee>>0)-Se&255;return C+Q},i.prototype.writeInt8=function(O,C,Q){return O=+O,C=C>>>0,Q||fe(this,O,C,1,127,-128),O<0&&(O=255+O+1),this[C]=O&255,C+1},i.prototype.writeInt16LE=function(O,C,Q){return O=+O,C=C>>>0,Q||fe(this,O,C,2,32767,-32768),this[C]=O&255,this[C+1]=O>>>8,C+2},i.prototype.writeInt16BE=function(O,C,Q){return O=+O,C=C>>>0,Q||fe(this,O,C,2,32767,-32768),this[C]=O>>>8,this[C+1]=O&255,C+2},i.prototype.writeInt32LE=function(O,C,Q){return O=+O,C=C>>>0,Q||fe(this,O,C,4,2147483647,-2147483648),this[C]=O&255,this[C+1]=O>>>8,this[C+2]=O>>>16,this[C+3]=O>>>24,C+4},i.prototype.writeInt32BE=function(O,C,Q){return O=+O,C=C>>>0,Q||fe(this,O,C,4,2147483647,-2147483648),O<0&&(O=4294967295+O+1),this[C]=O>>>24,this[C+1]=O>>>16,this[C+2]=O>>>8,this[C+3]=O&255,C+4};function pe(H,O,C,Q,le,ge){if(C+Q>H.length)throw new RangeError("Index out of range");if(C<0)throw new RangeError("Index out of range")}function he(H,O,C,Q,le){return O=+O,C=C>>>0,le||pe(H,O,C,4),g.write(H,O,C,Q,23,4),C+4}i.prototype.writeFloatLE=function(O,C,Q){return he(this,O,C,!0,Q)},i.prototype.writeFloatBE=function(O,C,Q){return he(this,O,C,!1,Q)};function oe(H,O,C,Q,le){return O=+O,C=C>>>0,le||pe(H,O,C,8),g.write(H,O,C,Q,52,8),C+8}i.prototype.writeDoubleLE=function(O,C,Q){return oe(this,O,C,!0,Q)},i.prototype.writeDoubleBE=function(O,C,Q){return oe(this,O,C,!1,Q)},i.prototype.copy=function(O,C,Q,le){if(!i.isBuffer(O))throw new TypeError("argument should be a Buffer");if(Q||(Q=0),!le&&le!==0&&(le=this.length),C>=O.length&&(C=O.length),C||(C=0),le>0&&le<Q&&(le=Q),le===Q||O.length===0||this.length===0)return 0;if(C<0)throw new RangeError("targetStart out of bounds");if(Q<0||Q>=this.length)throw new RangeError("Index out of range");if(le<0)throw new RangeError("sourceEnd out of bounds");le>this.length&&(le=this.length),O.length-C<le-Q&&(le=O.length-C+Q);var ge=le-Q;if(this===O&&typeof Uint8Array.prototype.copyWithin=="function")this.copyWithin(C,Q,le);else if(this===O&&Q<C&&C<le)for(var ye=ge-1;ye>=0;--ye)O[ye+C]=this[ye+Q];else Uint8Array.prototype.set.call(O,this.subarray(Q,le),C);return ge},i.prototype.fill=function(O,C,Q,le){if(typeof O=="string"){if(typeof C=="string"?(le=C,C=0,Q=this.length):typeof Q=="string"&&(le=Q,Q=this.length),le!==void 0&&typeof le!="string")throw new TypeError("encoding must be a string");if(typeof le=="string"&&!i.isEncoding(le))throw new TypeError("Unknown encoding: "+le);if(O.length===1){var ge=O.charCodeAt(0);(le==="utf8"&&ge<128||le==="latin1")&&(O=ge)}}else typeof O=="number"?O=O&255:typeof O=="boolean"&&(O=Number(O));if(C<0||this.length<C||this.length<Q)throw new RangeError("Out of range index");if(Q<=C)return this;C=C>>>0,Q=Q===void 0?this.length:Q>>>0,O||(O=0);var ye;if(typeof O=="number")for(ye=C;ye<Q;++ye)this[ye]=O;else{var Ee=i.isBuffer(O)?O:i.from(O,le),Se=Ee.length;if(Se===0)throw new TypeError('The value "'+O+'" is invalid for argument "value"');for(ye=0;ye<Q-C;++ye)this[ye+C]=Ee[ye%Se]}return this};var ce=/[^+/0-9A-Za-z-_]/g;function X(H){if(H=H.split("=")[0],H=H.trim().replace(ce,""),H.length<2)return"";for(;H.length%4!==0;)H=H+"=";return H}function K(H,O){O=O||1/0;for(var C,Q=H.length,le=null,ge=[],ye=0;ye<Q;++ye){if(C=H.charCodeAt(ye),C>55295&&C<57344){if(!le){if(C>56319){(O-=3)>-1&&ge.push(239,191,189);continue}else if(ye+1===Q){(O-=3)>-1&&ge.push(239,191,189);continue}le=C;continue}if(C<56320){(O-=3)>-1&&ge.push(239,191,189),le=C;continue}C=(le-55296<<10|C-56320)+65536}else le&&(O-=3)>-1&&ge.push(239,191,189);if(le=null,C<128){if((O-=1)<0)break;ge.push(C)}else if(C<2048){if((O-=2)<0)break;ge.push(C>>6|192,C&63|128)}else if(C<65536){if((O-=3)<0)break;ge.push(C>>12|224,C>>6&63|128,C&63|128)}else if(C<1114112){if((O-=4)<0)break;ge.push(C>>18|240,C>>12&63|128,C>>6&63|128,C&63|128)}else throw new Error("Invalid code point")}return ge}function L(H){for(var O=[],C=0;C<H.length;++C)O.push(H.charCodeAt(C)&255);return O}function $(H,O){for(var C,Q,le,ge=[],ye=0;ye<H.length&&!((O-=2)<0);++ye)C=H.charCodeAt(ye),Q=C>>8,le=C%256,ge.push(le),ge.push(Q);return ge}function te(H){return h.toByteArray(X(H))}function V(H,O,C,Q){for(var le=0;le<Q&&!(le+C>=O.length||le>=H.length);++le)O[le+C]=H[le];return le}function z(H,O){return H instanceof O||H!=null&&H.constructor!=null&&H.constructor.name!=null&&H.constructor.name===O.name}function F(H){return H!==H}var q=function(){for(var H="0123456789abcdef",O=new Array(256),C=0;C<16;++C)for(var Q=C*16,le=0;le<16;++le)O[Q+le]=H[C]+H[le];return O}()}).call(this,t("buffer").Buffer)},{"base64-js":29,buffer:48,ieee754:73}],49:[function(t,d,o){var v=t("buffer").Buffer;d.exports=function(h,g){if(!!v.isBuffer(h)&&!!v.isBuffer(g)){if(typeof h.equals=="function")return h.equals(g);if(h.length!==g.length)return!1;for(var b=0;b<h.length;b++)if(h[b]!==g[b])return!1;return!0}}},{buffer:48}],50:[function(t,d,o){d.exports={"100":"Continue","101":"Switching Protocols","102":"Processing","200":"OK","201":"Created","202":"Accepted","203":"Non-Authoritative Information","204":"No Content","205":"Reset Content","206":"Partial Content","207":"Multi-Status","208":"Already Reported","226":"IM Used","300":"Multiple Choices","301":"Moved Permanently","302":"Found","303":"See Other","304":"Not Modified","305":"Use Proxy","307":"Temporary Redirect","308":"Permanent Redirect","400":"Bad Request","401":"Unauthorized","402":"Payment Required","403":"Forbidden","404":"Not Found","405":"Method Not Allowed","406":"Not Acceptable","407":"Proxy Authentication Required","408":"Request Timeout","409":"Conflict","410":"Gone","411":"Length Required","412":"Precondition Failed","413":"Payload Too Large","414":"URI Too Long","415":"Unsupported Media Type","416":"Range Not Satisfiable","417":"Expectation Failed","418":"I'm a teapot","421":"Misdirected Request","422":"Unprocessable Entity","423":"Locked","424":"Failed Dependency","425":"Unordered Collection","426":"Upgrade Required","428":"Precondition Required","429":"Too Many Requests","431":"Request Header Fields Too Large","451":"Unavailable For Legal Reasons","500":"Internal Server Error","501":"Not Implemented","502":"Bad Gateway","503":"Service Unavailable","504":"Gateway Timeout","505":"HTTP Version Not Supported","506":"Variant Also Negotiates","507":"Insufficient Storage","508":"Loop Detected","509":"Bandwidth Limit Exceeded","510":"Not Extended","511":"Network Authentication Required"}},{}],51:[function(t,d,o){(function(v){function h(A){return Array.isArray?Array.isArray(A):x(A)==="[object Array]"}o.isArray=h;function g(A){return typeof A=="boolean"}o.isBoolean=g;function b(A){return A===null}o.isNull=b;function u(A){return A==null}o.isNullOrUndefined=u;function f(A){return typeof A=="number"}o.isNumber=f;function s(A){return typeof A=="string"}o.isString=s;function i(A){return typeof A=="symbol"}o.isSymbol=i;function n(A){return A===void 0}o.isUndefined=n;function p(A){return x(A)==="[object RegExp]"}o.isRegExp=p;function y(A){return typeof A=="object"&&A!==null}o.isObject=y;function l(A){return x(A)==="[object Date]"}o.isDate=l;function m(A){return x(A)==="[object Error]"||A instanceof Error}o.isError=m;function c(A){return typeof A=="function"}o.isFunction=c;function w(A){return A===null||typeof A=="boolean"||typeof A=="number"||typeof A=="string"||typeof A=="symbol"||typeof A=="undefined"}o.isPrimitive=w,o.isBuffer=v.isBuffer;function x(A){return Object.prototype.toString.call(A)}}).call(this,{isBuffer:t("../../is-buffer/index.js")})},{"../../is-buffer/index.js":76}],52:[function(t,d,o){var v=Object.create||R,h=Object.keys||M,g=Function.prototype.bind||B;function b(){(!this._events||!Object.prototype.hasOwnProperty.call(this,"_events"))&&(this._events=v(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0}d.exports=b,b.EventEmitter=b,b.prototype._events=void 0,b.prototype._maxListeners=void 0;var u=10,f;try{var s={};Object.defineProperty&&Object.defineProperty(s,"x",{value:0}),f=s.x===0}catch{f=!1}f?Object.defineProperty(b,"defaultMaxListeners",{enumerable:!0,get:function(){return u},set:function(I){if(typeof I!="number"||I<0||I!==I)throw new TypeError('"defaultMaxListeners" must be a positive number');u=I}}):b.defaultMaxListeners=u,b.prototype.setMaxListeners=function(Y){if(typeof Y!="number"||Y<0||isNaN(Y))throw new TypeError('"n" argument must be a positive number');return this._maxListeners=Y,this};function i(I){return I._maxListeners===void 0?b.defaultMaxListeners:I._maxListeners}b.prototype.getMaxListeners=function(){return i(this)};function n(I,Y,J){if(Y)I.call(J);else for(var D=I.length,T=k(I,D),G=0;G<D;++G)T[G].call(J)}function p(I,Y,J,D){if(Y)I.call(J,D);else for(var T=I.length,G=k(I,T),U=0;U<T;++U)G[U].call(J,D)}function y(I,Y,J,D,T){if(Y)I.call(J,D,T);else for(var G=I.length,U=k(I,G),ie=0;ie<G;++ie)U[ie].call(J,D,T)}function l(I,Y,J,D,T,G){if(Y)I.call(J,D,T,G);else for(var U=I.length,ie=k(I,U),se=0;se<U;++se)ie[se].call(J,D,T,G)}function m(I,Y,J,D){if(Y)I.apply(J,D);else for(var T=I.length,G=k(I,T),U=0;U<T;++U)G[U].apply(J,D)}b.prototype.emit=function(Y){var J,D,T,G,U,ie,se=Y==="error";if(ie=this._events,ie)se=se&&ie.error==null;else if(!se)return!1;if(se){if(arguments.length>1&&(J=arguments[1]),J instanceof Error)throw J;var ae=new Error('Unhandled "error" event. ('+J+")");throw ae.context=J,ae}if(D=ie[Y],!D)return!1;var W=typeof D=="function";switch(T=arguments.length,T){case 1:n(D,W,this);break;case 2:p(D,W,this,arguments[1]);break;case 3:y(D,W,this,arguments[1],arguments[2]);break;case 4:l(D,W,this,arguments[1],arguments[2],arguments[3]);break;default:for(G=new Array(T-1),U=1;U<T;U++)G[U-1]=arguments[U];m(D,W,this,G)}return!0};function c(I,Y,J,D){var T,G,U;if(typeof J!="function")throw new TypeError('"listener" argument must be a function');if(G=I._events,G?(G.newListener&&(I.emit("newListener",Y,J.listener?J.listener:J),G=I._events),U=G[Y]):(G=I._events=v(null),I._eventsCount=0),!U)U=G[Y]=J,++I._eventsCount;else if(typeof U=="function"?U=G[Y]=D?[J,U]:[U,J]:D?U.unshift(J):U.push(J),!U.warned&&(T=i(I),T&&T>0&&U.length>T)){U.warned=!0;var ie=new Error("Possible EventEmitter memory leak detected. "+U.length+' "'+String(Y)+'" listeners added. Use emitter.setMaxListeners() to increase limit.');ie.name="MaxListenersExceededWarning",ie.emitter=I,ie.type=Y,ie.count=U.length,typeof console=="object"&&console.warn&&console.warn("%s: %s",ie.name,ie.message)}return I}b.prototype.addListener=function(Y,J){return c(this,Y,J,!1)},b.prototype.on=b.prototype.addListener,b.prototype.prependListener=function(Y,J){return c(this,Y,J,!0)};function w(){if(!this.fired)switch(this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length){case 0:return this.listener.call(this.target);case 1:return this.listener.call(this.target,arguments[0]);case 2:return this.listener.call(this.target,arguments[0],arguments[1]);case 3:return this.listener.call(this.target,arguments[0],arguments[1],arguments[2]);default:for(var I=new Array(arguments.length),Y=0;Y<I.length;++Y)I[Y]=arguments[Y];this.listener.apply(this.target,I)}}function x(I,Y,J){var D={fired:!1,wrapFn:void 0,target:I,type:Y,listener:J},T=g.call(w,D);return T.listener=J,D.wrapFn=T,T}b.prototype.once=function(Y,J){if(typeof J!="function")throw new TypeError('"listener" argument must be a function');return this.on(Y,x(this,Y,J)),this},b.prototype.prependOnceListener=function(Y,J){if(typeof J!="function")throw new TypeError('"listener" argument must be a function');return this.prependListener(Y,x(this,Y,J)),this},b.prototype.removeListener=function(Y,J){var D,T,G,U,ie;if(typeof J!="function")throw new TypeError('"listener" argument must be a function');if(T=this._events,!T)return this;if(D=T[Y],!D)return this;if(D===J||D.listener===J)--this._eventsCount===0?this._events=v(null):(delete T[Y],T.removeListener&&this.emit("removeListener",Y,D.listener||J));else if(typeof D!="function"){for(G=-1,U=D.length-1;U>=0;U--)if(D[U]===J||D[U].listener===J){ie=D[U].listener,G=U;break}if(G<0)return this;G===0?D.shift():E(D,G),D.length===1&&(T[Y]=D[0]),T.removeListener&&this.emit("removeListener",Y,ie||J)}return this},b.prototype.removeAllListeners=function(Y){var J,D,T;if(D=this._events,!D)return this;if(!D.removeListener)return arguments.length===0?(this._events=v(null),this._eventsCount=0):D[Y]&&(--this._eventsCount===0?this._events=v(null):delete D[Y]),this;if(arguments.length===0){var G=h(D),U;for(T=0;T<G.length;++T)U=G[T],U!=="removeListener"&&this.removeAllListeners(U);return this.removeAllListeners("removeListener"),this._events=v(null),this._eventsCount=0,this}if(J=D[Y],typeof J=="function")this.removeListener(Y,J);else if(J)for(T=J.length-1;T>=0;T--)this.removeListener(Y,J[T]);return this};function A(I,Y,J){var D=I._events;if(!D)return[];var T=D[Y];return T?typeof T=="function"?J?[T.listener||T]:[T]:J?S(T):k(T,T.length):[]}b.prototype.listeners=function(Y){return A(this,Y,!0)},b.prototype.rawListeners=function(Y){return A(this,Y,!1)},b.listenerCount=function(I,Y){return typeof I.listenerCount=="function"?I.listenerCount(Y):N.call(I,Y)},b.prototype.listenerCount=N;function N(I){var Y=this._events;if(Y){var J=Y[I];if(typeof J=="function")return 1;if(J)return J.length}return 0}b.prototype.eventNames=function(){return this._eventsCount>0?Reflect.ownKeys(this._events):[]};function E(I,Y){for(var J=Y,D=J+1,T=I.length;D<T;J+=1,D+=1)I[J]=I[D];I.pop()}function k(I,Y){for(var J=new Array(Y),D=0;D<Y;++D)J[D]=I[D];return J}function S(I){for(var Y=new Array(I.length),J=0;J<Y.length;++J)Y[J]=I[J].listener||I[J];return Y}function R(I){var Y=function(){};return Y.prototype=I,new Y}function M(I){for(var Y in I)Object.prototype.hasOwnProperty.call(I,Y);return Y}function B(I){var Y=this;return function(){return Y.apply(I,arguments)}}},{}],53:[function(t,d,o){var v=t("./lib/parser");function h(){return(0,eval)("this")}d.exports={create:function(g,b){if(b=b||h(),g instanceof b.ArrayBuffer){var u=t("./lib/dom-bufferstream");return new v(new u(g,0,g.byteLength,!0,b))}else{var f=t("./lib/bufferstream");return new v(new f(g,0,g.length,!0))}}}},{"./lib/bufferstream":54,"./lib/dom-bufferstream":56,"./lib/parser":60}],54:[function(t,d,o){function v(h,g,b,u){this.buffer=h,this.offset=g||0,b=typeof b=="number"?b:h.length,this.endPosition=this.offset+b,this.setBigEndian(u)}v.prototype={setBigEndian:function(h){this.bigEndian=!!h},nextUInt8:function(){var h=this.buffer.readUInt8(this.offset);return this.offset+=1,h},nextInt8:function(){var h=this.buffer.readInt8(this.offset);return this.offset+=1,h},nextUInt16:function(){var h=this.bigEndian?this.buffer.readUInt16BE(this.offset):this.buffer.readUInt16LE(this.offset);return this.offset+=2,h},nextUInt32:function(){var h=this.bigEndian?this.buffer.readUInt32BE(this.offset):this.buffer.readUInt32LE(this.offset);return this.offset+=4,h},nextInt16:function(){var h=this.bigEndian?this.buffer.readInt16BE(this.offset):this.buffer.readInt16LE(this.offset);return this.offset+=2,h},nextInt32:function(){var h=this.bigEndian?this.buffer.readInt32BE(this.offset):this.buffer.readInt32LE(this.offset);return this.offset+=4,h},nextFloat:function(){var h=this.bigEndian?this.buffer.readFloatBE(this.offset):this.buffer.readFloatLE(this.offset);return this.offset+=4,h},nextDouble:function(){var h=this.bigEndian?this.buffer.readDoubleBE(this.offset):this.buffer.readDoubleLE(this.offset);return this.offset+=8,h},nextBuffer:function(h){var g=this.buffer.slice(this.offset,this.offset+h);return this.offset+=h,g},remainingLength:function(){return this.endPosition-this.offset},nextString:function(h){var g=this.buffer.toString("utf8",this.offset,this.offset+h);return this.offset+=h,g},mark:function(){var h=this;return{openWithOffset:function(g){return g=(g||0)+this.offset,new v(h.buffer,g,h.endPosition-g,h.bigEndian)},offset:this.offset}},offsetFrom:function(h){return this.offset-h.offset},skip:function(h){this.offset+=h},branch:function(h,g){return g=typeof g=="number"?g:this.endPosition-(this.offset+h),new v(this.buffer,this.offset+h,g,this.bigEndian)}},d.exports=v},{}],55:[function(t,d,o){function v(i){return parseInt(i,10)}var h=3600,g=60;function b(i,n){i=i.map(v),n=n.map(v);var p=i[0],y=i[1]-1,l=i[2],m=n[0],c=n[1],w=n[2],x=Date.UTC(p,y,l,m,c,w,0),A=x/1e3;return A}function u(i){var n=i.substr(0,10).split("-"),p=i.substr(11,8).split(":"),y=i.substr(19,6),l=y.split(":").map(v),m=l[0]*h+l[1]*g,c=b(n,p);if(c-=m,typeof c=="number"&&!isNaN(c))return c}function f(i){var n=i.split(" "),p=n[0].split(":"),y=n[1].split(":"),l=b(p,y);if(typeof l=="number"&&!isNaN(l))return l}function s(i){var n=i.length===19&&i.charAt(4)===":",p=i.length===25&&i.charAt(10)==="T";if(p)return u(i);if(n)return f(i)}d.exports={parseDateWithSpecFormat:f,parseDateWithTimezoneFormat:u,parseExifDate:s}},{}],56:[function(t,d,o){function v(h,g,b,u,f,s){this.global=f,g=g||0,b=b||h.byteLength-g,this.arrayBuffer=h.slice(g,g+b),this.view=new f.DataView(this.arrayBuffer,0,this.arrayBuffer.byteLength),this.setBigEndian(u),this.offset=0,this.parentOffset=(s||0)+g}v.prototype={setBigEndian:function(h){this.littleEndian=!h},nextUInt8:function(){var h=this.view.getUint8(this.offset);return this.offset+=1,h},nextInt8:function(){var h=this.view.getInt8(this.offset);return this.offset+=1,h},nextUInt16:function(){var h=this.view.getUint16(this.offset,this.littleEndian);return this.offset+=2,h},nextUInt32:function(){var h=this.view.getUint32(this.offset,this.littleEndian);return this.offset+=4,h},nextInt16:function(){var h=this.view.getInt16(this.offset,this.littleEndian);return this.offset+=2,h},nextInt32:function(){var h=this.view.getInt32(this.offset,this.littleEndian);return this.offset+=4,h},nextFloat:function(){var h=this.view.getFloat32(this.offset,this.littleEndian);return this.offset+=4,h},nextDouble:function(){var h=this.view.getFloat64(this.offset,this.littleEndian);return this.offset+=8,h},nextBuffer:function(h){var g=this.arrayBuffer.slice(this.offset,this.offset+h);return this.offset+=h,g},remainingLength:function(){return this.arrayBuffer.byteLength-this.offset},nextString:function(h){var g=this.arrayBuffer.slice(this.offset,this.offset+h);return g=String.fromCharCode.apply(null,new this.global.Uint8Array(g)),this.offset+=h,g},mark:function(){var h=this;return{openWithOffset:function(g){return g=(g||0)+this.offset,new v(h.arrayBuffer,g,h.arrayBuffer.byteLength-g,!h.littleEndian,h.global,h.parentOffset)},offset:this.offset,getParentOffset:function(){return h.parentOffset}}},offsetFrom:function(h){return this.parentOffset+this.offset-(h.offset+h.getParentOffset())},skip:function(h){this.offset+=h},branch:function(h,g){return g=typeof g=="number"?g:this.arrayBuffer.byteLength-(this.offset+h),new v(this.arrayBuffer,this.offset+h,g,!this.littleEndian,this.global,this.parentOffset)}},d.exports=v},{}],57:[function(t,d,o){d.exports={exif:{1:"InteropIndex",2:"InteropVersion",11:"ProcessingSoftware",254:"SubfileType",255:"OldSubfileType",256:"ImageWidth",257:"ImageHeight",258:"BitsPerSample",259:"Compression",262:"PhotometricInterpretation",263:"Thresholding",264:"CellWidth",265:"CellLength",266:"FillOrder",269:"DocumentName",270:"ImageDescription",271:"Make",272:"Model",273:"StripOffsets",274:"Orientation",277:"SamplesPerPixel",278:"RowsPerStrip",279:"StripByteCounts",280:"MinSampleValue",281:"MaxSampleValue",282:"XResolution",283:"YResolution",284:"PlanarConfiguration",285:"PageName",286:"XPosition",287:"YPosition",288:"FreeOffsets",289:"FreeByteCounts",290:"GrayResponseUnit",291:"GrayResponseCurve",292:"T4Options",293:"T6Options",296:"ResolutionUnit",297:"PageNumber",300:"ColorResponseUnit",301:"TransferFunction",305:"Software",306:"ModifyDate",315:"Artist",316:"HostComputer",317:"Predictor",318:"WhitePoint",319:"PrimaryChromaticities",320:"ColorMap",321:"HalftoneHints",322:"TileWidth",323:"TileLength",324:"TileOffsets",325:"TileByteCounts",326:"BadFaxLines",327:"CleanFaxData",328:"ConsecutiveBadFaxLines",330:"SubIFD",332:"InkSet",333:"InkNames",334:"NumberofInks",336:"DotRange",337:"TargetPrinter",338:"ExtraSamples",339:"SampleFormat",340:"SMinSampleValue",341:"SMaxSampleValue",342:"TransferRange",343:"ClipPath",344:"XClipPathUnits",345:"YClipPathUnits",346:"Indexed",347:"JPEGTables",351:"OPIProxy",400:"GlobalParametersIFD",401:"ProfileType",402:"FaxProfile",403:"CodingMethods",404:"VersionYear",405:"ModeNumber",433:"Decode",434:"DefaultImageColor",435:"T82Options",437:"JPEGTables",512:"JPEGProc",513:"ThumbnailOffset",514:"ThumbnailLength",515:"JPEGRestartInterval",517:"JPEGLosslessPredictors",518:"JPEGPointTransforms",519:"JPEGQTables",520:"JPEGDCTables",521:"JPEGACTables",529:"YCbCrCoefficients",530:"YCbCrSubSampling",531:"YCbCrPositioning",532:"ReferenceBlackWhite",559:"StripRowCounts",700:"ApplicationNotes",999:"USPTOMiscellaneous",4096:"RelatedImageFileFormat",4097:"RelatedImageWidth",4098:"RelatedImageHeight",18246:"Rating",18247:"XP_DIP_XML",18248:"StitchInfo",18249:"RatingPercent",32781:"ImageID",32931:"WangTag1",32932:"WangAnnotation",32933:"WangTag3",32934:"WangTag4",32995:"Matteing",32996:"DataType",32997:"ImageDepth",32998:"TileDepth",33405:"Model2",33421:"CFARepeatPatternDim",33422:"CFAPattern2",33423:"BatteryLevel",33424:"KodakIFD",33432:"Copyright",33434:"ExposureTime",33437:"FNumber",33445:"MDFileTag",33446:"MDScalePixel",33447:"MDColorTable",33448:"MDLabName",33449:"MDSampleInfo",33450:"MDPrepDate",33451:"MDPrepTime",33452:"MDFileUnits",33550:"PixelScale",33589:"AdventScale",33590:"AdventRevision",33628:"UIC1Tag",33629:"UIC2Tag",33630:"UIC3Tag",33631:"UIC4Tag",33723:"IPTC-NAA",33918:"IntergraphPacketData",33919:"IntergraphFlagRegisters",33920:"IntergraphMatrix",33921:"INGRReserved",33922:"ModelTiePoint",34016:"Site",34017:"ColorSequence",34018:"IT8Header",34019:"RasterPadding",34020:"BitsPerRunLength",34021:"BitsPerExtendedRunLength",34022:"ColorTable",34023:"ImageColorIndicator",34024:"BackgroundColorIndicator",34025:"ImageColorValue",34026:"BackgroundColorValue",34027:"PixelIntensityRange",34028:"TransparencyIndicator",34029:"ColorCharacterization",34030:"HCUsage",34031:"TrapIndicator",34032:"CMYKEquivalent",34118:"SEMInfo",34152:"AFCP_IPTC",34232:"PixelMagicJBIGOptions",34264:"ModelTransform",34306:"WB_GRGBLevels",34310:"LeafData",34377:"PhotoshopSettings",34665:"ExifOffset",34675:"ICC_Profile",34687:"TIFF_FXExtensions",34688:"MultiProfiles",34689:"SharedData",34690:"T88Options",34732:"ImageLayer",34735:"GeoTiffDirectory",34736:"GeoTiffDoubleParams",34737:"GeoTiffAsciiParams",34850:"ExposureProgram",34852:"SpectralSensitivity",34853:"GPSInfo",34855:"ISO",34856:"Opto-ElectricConvFactor",34857:"Interlace",34858:"TimeZoneOffset",34859:"SelfTimerMode",34864:"SensitivityType",34865:"StandardOutputSensitivity",34866:"RecommendedExposureIndex",34867:"ISOSpeed",34868:"ISOSpeedLatitudeyyy",34869:"ISOSpeedLatitudezzz",34908:"FaxRecvParams",34909:"FaxSubAddress",34910:"FaxRecvTime",34954:"LeafSubIFD",36864:"ExifVersion",36867:"DateTimeOriginal",36868:"CreateDate",37121:"ComponentsConfiguration",37122:"CompressedBitsPerPixel",37377:"ShutterSpeedValue",37378:"ApertureValue",37379:"BrightnessValue",37380:"ExposureCompensation",37381:"MaxApertureValue",37382:"SubjectDistance",37383:"MeteringMode",37384:"LightSource",37385:"Flash",37386:"FocalLength",37387:"FlashEnergy",37388:"SpatialFrequencyResponse",37389:"Noise",37390:"FocalPlaneXResolution",37391:"FocalPlaneYResolution",37392:"FocalPlaneResolutionUnit",37393:"ImageNumber",37394:"SecurityClassification",37395:"ImageHistory",37396:"SubjectArea",37397:"ExposureIndex",37398:"TIFF-EPStandardID",37399:"SensingMethod",37434:"CIP3DataFile",37435:"CIP3Sheet",37436:"CIP3Side",37439:"StoNits",37500:"MakerNote",37510:"UserComment",37520:"SubSecTime",37521:"SubSecTimeOriginal",37522:"SubSecTimeDigitized",37679:"MSDocumentText",37680:"MSPropertySetStorage",37681:"MSDocumentTextPosition",37724:"ImageSourceData",40091:"XPTitle",40092:"XPComment",40093:"XPAuthor",40094:"XPKeywords",40095:"XPSubject",40960:"FlashpixVersion",40961:"ColorSpace",40962:"ExifImageWidth",40963:"ExifImageHeight",40964:"RelatedSoundFile",40965:"InteropOffset",41483:"FlashEnergy",41484:"SpatialFrequencyResponse",41485:"Noise",41486:"FocalPlaneXResolution",41487:"FocalPlaneYResolution",41488:"FocalPlaneResolutionUnit",41489:"ImageNumber",41490:"SecurityClassification",41491:"ImageHistory",41492:"SubjectLocation",41493:"ExposureIndex",41494:"TIFF-EPStandardID",41495:"SensingMethod",41728:"FileSource",41729:"SceneType",41730:"CFAPattern",41985:"CustomRendered",41986:"ExposureMode",41987:"WhiteBalance",41988:"DigitalZoomRatio",41989:"FocalLengthIn35mmFormat",41990:"SceneCaptureType",41991:"GainControl",41992:"Contrast",41993:"Saturation",41994:"Sharpness",41995:"DeviceSettingDescription",41996:"SubjectDistanceRange",42016:"ImageUniqueID",42032:"OwnerName",42033:"SerialNumber",42034:"LensInfo",42035:"LensMake",42036:"LensModel",42037:"LensSerialNumber",42112:"GDALMetadata",42113:"GDALNoData",42240:"Gamma",44992:"ExpandSoftware",44993:"ExpandLens",44994:"ExpandFilm",44995:"ExpandFilterLens",44996:"ExpandScanner",44997:"ExpandFlashLamp",48129:"PixelFormat",48130:"Transformation",48131:"Uncompressed",48132:"ImageType",48256:"ImageWidth",48257:"ImageHeight",48258:"WidthResolution",48259:"HeightResolution",48320:"ImageOffset",48321:"ImageByteCount",48322:"AlphaOffset",48323:"AlphaByteCount",48324:"ImageDataDiscard",48325:"AlphaDataDiscard",50215:"OceScanjobDesc",50216:"OceApplicationSelector",50217:"OceIDNumber",50218:"OceImageLogic",50255:"Annotations",50341:"PrintIM",50560:"USPTOOriginalContentType",50706:"DNGVersion",50707:"DNGBackwardVersion",50708:"UniqueCameraModel",50709:"LocalizedCameraModel",50710:"CFAPlaneColor",50711:"CFALayout",50712:"LinearizationTable",50713:"BlackLevelRepeatDim",50714:"BlackLevel",50715:"BlackLevelDeltaH",50716:"BlackLevelDeltaV",50717:"WhiteLevel",50718:"DefaultScale",50719:"DefaultCropOrigin",50720:"DefaultCropSize",50721:"ColorMatrix1",50722:"ColorMatrix2",50723:"CameraCalibration1",50724:"CameraCalibration2",50725:"ReductionMatrix1",50726:"ReductionMatrix2",50727:"AnalogBalance",50728:"AsShotNeutral",50729:"AsShotWhiteXY",50730:"BaselineExposure",50731:"BaselineNoise",50732:"BaselineSharpness",50733:"BayerGreenSplit",50734:"LinearResponseLimit",50735:"CameraSerialNumber",50736:"DNGLensInfo",50737:"ChromaBlurRadius",50738:"AntiAliasStrength",50739:"ShadowScale",50740:"DNGPrivateData",50741:"MakerNoteSafety",50752:"RawImageSegmentation",50778:"CalibrationIlluminant1",50779:"CalibrationIlluminant2",50780:"BestQualityScale",50781:"RawDataUniqueID",50784:"AliasLayerMetadata",50827:"OriginalRawFileName",50828:"OriginalRawFileData",50829:"ActiveArea",50830:"MaskedAreas",50831:"AsShotICCProfile",50832:"AsShotPreProfileMatrix",50833:"CurrentICCProfile",50834:"CurrentPreProfileMatrix",50879:"ColorimetricReference",50898:"PanasonicTitle",50899:"PanasonicTitle2",50931:"CameraCalibrationSig",50932:"ProfileCalibrationSig",50933:"ProfileIFD",50934:"AsShotProfileName",50935:"NoiseReductionApplied",50936:"ProfileName",50937:"ProfileHueSatMapDims",50938:"ProfileHueSatMapData1",50939:"ProfileHueSatMapData2",50940:"ProfileToneCurve",50941:"ProfileEmbedPolicy",50942:"ProfileCopyright",50964:"ForwardMatrix1",50965:"ForwardMatrix2",50966:"PreviewApplicationName",50967:"PreviewApplicationVersion",50968:"PreviewSettingsName",50969:"PreviewSettingsDigest",50970:"PreviewColorSpace",50971:"PreviewDateTime",50972:"RawImageDigest",50973:"OriginalRawFileDigest",50974:"SubTileBlockSize",50975:"RowInterleaveFactor",50981:"ProfileLookTableDims",50982:"ProfileLookTableData",51008:"OpcodeList1",51009:"OpcodeList2",51022:"OpcodeList3",51041:"NoiseProfile",51043:"TimeCodes",51044:"FrameRate",51058:"TStop",51081:"ReelName",51089:"OriginalDefaultFinalSize",51090:"OriginalBestQualitySize",51091:"OriginalDefaultCropSize",51105:"CameraLabel",51107:"ProfileHueSatMapEncoding",51108:"ProfileLookTableEncoding",51109:"BaselineExposureOffset",51110:"DefaultBlackRender",51111:"NewRawImageDigest",51112:"RawToPreviewGain",51125:"DefaultUserCrop",59932:"Padding",59933:"OffsetSchema",65e3:"OwnerName",65001:"SerialNumber",65002:"Lens",65024:"KDC_IFD",65100:"RawFile",65101:"Converter",65102:"WhiteBalance",65105:"Exposure",65106:"Shadows",65107:"Brightness",65108:"Contrast",65109:"Saturation",65110:"Sharpness",65111:"Smoothness",65112:"MoireFilter"},gps:{0:"GPSVersionID",1:"GPSLatitudeRef",2:"GPSLatitude",3:"GPSLongitudeRef",4:"GPSLongitude",5:"GPSAltitudeRef",6:"GPSAltitude",7:"GPSTimeStamp",8:"GPSSatellites",9:"GPSStatus",10:"GPSMeasureMode",11:"GPSDOP",12:"GPSSpeedRef",13:"GPSSpeed",14:"GPSTrackRef",15:"GPSTrack",16:"GPSImgDirectionRef",17:"GPSImgDirection",18:"GPSMapDatum",19:"GPSDestLatitudeRef",20:"GPSDestLatitude",21:"GPSDestLongitudeRef",22:"GPSDestLongitude",23:"GPSDestBearingRef",24:"GPSDestBearing",25:"GPSDestDistanceRef",26:"GPSDestDistance",27:"GPSProcessingMethod",28:"GPSAreaInformation",29:"GPSDateStamp",30:"GPSDifferential",31:"GPSHPositioningError"}}},{}],58:[function(t,d,o){function v(f,s){switch(f){case 1:return s.nextUInt8();case 3:return s.nextUInt16();case 4:return s.nextUInt32();case 5:return[s.nextUInt32(),s.nextUInt32()];case 6:return s.nextInt8();case 8:return s.nextUInt16();case 9:return s.nextUInt32();case 10:return[s.nextInt32(),s.nextInt32()];case 11:return s.nextFloat();case 12:return s.nextDouble();default:throw new Error("Invalid format while decoding: "+f)}}function h(f){switch(f){case 1:case 2:case 6:case 7:return 1;case 3:case 8:return 2;case 4:case 9:case 11:return 4;case 5:case 10:case 12:return 8;default:return 0}}function g(f,s){var i=s.nextUInt16(),n=s.nextUInt16(),p=h(n),y=s.nextUInt32(),l=p*y,m,c;if(l>4&&(s=f.openWithOffset(s.nextUInt32())),n===2){m=s.nextString(y);var w=m.indexOf("\0");w!==-1&&(m=m.substr(0,w))}else if(n===7)m=s.nextBuffer(y);else if(n!==0)for(m=[],c=0;c<y;++c)m.push(v(n,s));return l<4&&s.skip(4-l),[i,m,n]}function b(f,s,i){var n=s.nextUInt16(),p,y;for(y=0;y<n;++y)p=g(f,s),i(p[0],p[1],p[2])}function u(f){var s=f.nextString(6);if(s!=="Exif\0\0")throw new Error("Invalid EXIF header");var i=f.mark(),n=f.nextUInt16();if(n===18761)f.setBigEndian(!1);else if(n===19789)f.setBigEndian(!0);else throw new Error("Invalid TIFF header");if(f.nextUInt16()!==42)throw new Error("Invalid TIFF data");return i}d.exports={IFD0:1,IFD1:2,GPSIFD:3,SubIFD:4,InteropIFD:5,parseTags:function(f,s){var i;try{i=u(f)}catch{return!1}var n,p,y,l=i.openWithOffset(f.nextUInt32()),m=this.IFD0;b(i,l,function(k,S,R){switch(k){case 34853:p=S[0];break;case 34665:n=S[0];break;default:s(m,k,S,R);break}});var c=l.nextUInt32();if(c!==0){var w=i.openWithOffset(c);b(i,w,s.bind(null,this.IFD1))}if(p){var x=i.openWithOffset(p);b(i,x,s.bind(null,this.GPSIFD))}if(n){var A=i.openWithOffset(n),N=this.InteropIFD;b(i,A,function(k,S,R){k===40965?y=S[0]:s(N,k,S,R)})}if(y){var E=i.openWithOffset(y);b(i,E,s.bind(null,this.InteropIFD))}return!0}}},{}],59:[function(t,d,o){d.exports={parseSections:function(v,h){var g,b;for(v.setBigEndian(!0);v.remainingLength()>0&&b!==218;){if(v.nextUInt8()!==255)throw new Error("Invalid JPEG section offset");b=v.nextUInt8(),b>=208&&b<=217||b===218?g=0:g=v.nextUInt16()-2,h(b,v.branch(0,g)),v.skip(g)}},getSizeFromSOFSection:function(v){return v.skip(1),{height:v.nextUInt16(),width:v.nextUInt16()}},getSectionName:function(v){var h,g;switch(v){case 216:h="SOI";break;case 196:h="DHT";break;case 219:h="DQT";break;case 221:h="DRI";break;case 218:h="SOS";break;case 254:h="COM";break;case 217:h="EOI";break;default:v>=224&&v<=239?(h="APP",g=v-224):v>=192&&v<=207&&v!==196&&v!==200&&v!==204?(h="SOF",g=v-192):v>=208&&v<=215&&(h="RST",g=v-208);break}var b={name:h};return typeof g=="number"&&(b.index=g),b}}},{}],60:[function(t,d,o){var v=t("./jpeg"),h=t("./exif"),g=t("./simplify");function b(f,s,i,n,p,y,l){this.startMarker=f,this.tags=s,this.imageSize=i,this.thumbnailOffset=n,this.thumbnailLength=p,this.thumbnailType=y,this.app1Offset=l}b.prototype={hasThumbnail:function(f){return!this.thumbnailOffset||!this.thumbnailLength?!1:typeof f!="string"?!0:f.toLowerCase().trim()==="image/jpeg"?this.thumbnailType===6:f.toLowerCase().trim()==="image/tiff"?this.thumbnailType===1:!1},getThumbnailOffset:function(){return this.app1Offset+6+this.thumbnailOffset},getThumbnailLength:function(){return this.thumbnailLength},getThumbnailBuffer:function(){return this._getThumbnailStream().nextBuffer(this.thumbnailLength)},_getThumbnailStream:function(){return this.startMarker.openWithOffset(this.getThumbnailOffset())},getImageSize:function(){return this.imageSize},getThumbnailSize:function(){var f=this._getThumbnailStream(),s;return v.parseSections(f,function(i,n){v.getSectionName(i).name==="SOF"&&(s=v.getSizeFromSOFSection(n))}),s}};function u(f){this.stream=f,this.flags={readBinaryTags:!1,resolveTagNames:!0,simplifyValues:!0,imageSize:!0,hidePointers:!0,returnTags:!0}}u.prototype={enableBinaryFields:function(f){return this.flags.readBinaryTags=!!f,this},enablePointers:function(f){return this.flags.hidePointers=!f,this},enableTagNames:function(f){return this.flags.resolveTagNames=!!f,this},enableImageSize:function(f){return this.flags.imageSize=!!f,this},enableReturnTags:function(f){return this.flags.returnTags=!!f,this},enableSimpleValues:function(f){return this.flags.simplifyValues=!!f,this},parse:function(){var f=this.stream.mark(),s=f.openWithOffset(0),i=this.flags,n,p,y,l,m,c,w,x,A;return i.resolveTagNames&&(w=t("./exif-tags")),i.resolveTagNames?(n={},x=function(N){return n[N.name]},A=function(N,E){n[N.name]=E}):(n=[],x=function(N){var E;for(E=0;E<n.length;++E)if(n[E].type===N.type&&n[E].section===N.section)return n.value},A=function(N,E){var k;for(k=0;k<n.length;++k)if(n[k].type===N.type&&n[k].section===N.section){n.value=E;return}}),v.parseSections(s,function(N,E){var k,S=E.offsetFrom(f);N===225?(k=h.parseTags(E,function(R,M,B,I){if(!(!i.readBinaryTags&&I===7)){if(M===513){if(y=B[0],i.hidePointers)return}else if(M===514){if(l=B[0],i.hidePointers)return}else if(M===259&&(m=B[0],i.hidePointers))return;if(!!i.returnTags)if(i.simplifyValues&&(B=g.simplifyValue(B,I)),i.resolveTagNames){var Y=R===h.GPSIFD?w.gps:w.exif,J=Y[M];J||(J=w.exif[M]),n.hasOwnProperty(J)||(n[J]=B)}else n.push({section:R,type:M,value:B})}}),k&&(c=S)):i.imageSize&&v.getSectionName(N).name==="SOF"&&(p=v.getSizeFromSOFSection(E))}),i.simplifyValues&&(g.castDegreeValues(x,A),g.castDateValues(x,A)),new b(f,n,p,y,l,m,c)}},d.exports=u},{"./exif":58,"./exif-tags":57,"./jpeg":59,"./simplify":61}],61:[function(t,d,o){var v=t("./exif"),h=t("./date"),g=[{section:v.GPSIFD,type:2,name:"GPSLatitude",refType:1,refName:"GPSLatitudeRef",posVal:"N"},{section:v.GPSIFD,type:4,name:"GPSLongitude",refType:3,refName:"GPSLongitudeRef",posVal:"E"}],b=[{section:v.SubIFD,type:306,name:"ModifyDate"},{section:v.SubIFD,type:36867,name:"DateTimeOriginal"},{section:v.SubIFD,type:36868,name:"CreateDate"},{section:v.SubIFD,type:306,name:"ModifyDate"}];d.exports={castDegreeValues:function(u,f){g.forEach(function(s){var i=u(s);if(i){var n=u({section:s.section,type:s.refType,name:s.refName}),p=n===s.posVal?1:-1,y=(i[0]+i[1]/60+i[2]/3600)*p;f(s,y)}})},castDateValues:function(u,f){b.forEach(function(s){var i=u(s);if(i){var n=h.parseExifDate(i);typeof n!="undefined"&&f(s,n)}})},simplifyValue:function(u,f){return Array.isArray(u)&&(u=u.map(function(s){return f===10||f===5?s[0]/s[1]:s}),u.length===1&&(u=u[0])),u}}},{"./date":55,"./exif":58}],62:[function(t,d,o){var v=t("@babel/runtime/helpers/interopRequireDefault"),h=v(t("@babel/runtime/helpers/toConsumableArray")),g=function(i){return(0,h.default)(i).map(function(n){return n.charCodeAt(0)})},b=g("META-INF/mozilla.rsa"),u=g("[Content_Types].xml"),f=g("_rels/.rels");d.exports=function(s){var i=s instanceof Uint8Array?s:new Uint8Array(s);if(!(i&&i.length>1))return null;var n=function(R,M){M=Object.assign({offset:0},M);for(var B=0;B<R.length;B++)if(M.mask){if(R[B]!==(M.mask[B]&i[B+M.offset]))return!1}else if(R[B]!==i[B+M.offset])return!1;return!0},p=function(R,M){return n(g(R),M)};if(n([255,216,255]))return{ext:"jpg",mime:"image/jpeg"};if(n([137,80,78,71,13,10,26,10]))return{ext:"png",mime:"image/png"};if(n([71,73,70]))return{ext:"gif",mime:"image/gif"};if(n([87,69,66,80],{offset:8}))return{ext:"webp",mime:"image/webp"};if(n([70,76,73,70]))return{ext:"flif",mime:"image/flif"};if((n([73,73,42,0])||n([77,77,0,42]))&&n([67,82],{offset:8}))return{ext:"cr2",mime:"image/x-canon-cr2"};if(n([73,73,42,0])||n([77,77,0,42]))return{ext:"tif",mime:"image/tiff"};if(n([66,77]))return{ext:"bmp",mime:"image/bmp"};if(n([73,73,188]))return{ext:"jxr",mime:"image/vnd.ms-photo"};if(n([56,66,80,83]))return{ext:"psd",mime:"image/vnd.adobe.photoshop"};if(n([80,75,3,4])){if(n([109,105,109,101,116,121,112,101,97,112,112,108,105,99,97,116,105,111,110,47,101,112,117,98,43,122,105,112],{offset:30}))return{ext:"epub",mime:"application/epub+zip"};if(n(b,{offset:30}))return{ext:"xpi",mime:"application/x-xpinstall"};if(p("mimetypeapplication/vnd.oasis.opendocument.text",{offset:30}))return{ext:"odt",mime:"application/vnd.oasis.opendocument.text"};if(p("mimetypeapplication/vnd.oasis.opendocument.spreadsheet",{offset:30}))return{ext:"ods",mime:"application/vnd.oasis.opendocument.spreadsheet"};if(p("mimetypeapplication/vnd.oasis.opendocument.presentation",{offset:30}))return{ext:"odp",mime:"application/vnd.oasis.opendocument.presentation"};var y=function(R){var M=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return R.findIndex(function(B,I,Y){return I>=M&&Y[I]===80&&Y[I+1]===75&&Y[I+2]===3&&Y[I+3]===4})},l=0,m=!1,c=null;do{var w=l+30;if(m||(m=n(u,{offset:w})||n(f,{offset:w})),c||(p("word/",{offset:w})?c={ext:"docx",mime:"application/vnd.openxmlformats-officedocument.wordprocessingml.document"}:p("ppt/",{offset:w})?c={ext:"pptx",mime:"application/vnd.openxmlformats-officedocument.presentationml.presentation"}:p("xl/",{offset:w})&&(c={ext:"xlsx",mime:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"})),m&&c)return c;l=y(i,w)}while(l>=0);if(c)return c}if(n([80,75])&&(i[2]===3||i[2]===5||i[2]===7)&&(i[3]===4||i[3]===6||i[3]===8))return{ext:"zip",mime:"application/zip"};if(n([117,115,116,97,114],{offset:257}))return{ext:"tar",mime:"application/x-tar"};if(n([82,97,114,33,26,7])&&(i[6]===0||i[6]===1))return{ext:"rar",mime:"application/x-rar-compressed"};if(n([31,139,8]))return{ext:"gz",mime:"application/gzip"};if(n([66,90,104]))return{ext:"bz2",mime:"application/x-bzip2"};if(n([55,122,188,175,39,28]))return{ext:"7z",mime:"application/x-7z-compressed"};if(n([120,1]))return{ext:"dmg",mime:"application/x-apple-diskimage"};if(n([51,103,112,53])||n([0,0,0])&&n([102,116,121,112],{offset:4})&&(n([109,112,52,49],{offset:8})||n([109,112,52,50],{offset:8})||n([105,115,111,109],{offset:8})||n([105,115,111,50],{offset:8})||n([109,109,112,52],{offset:8})||n([77,52,86],{offset:8})||n([100,97,115,104],{offset:8})))return{ext:"mp4",mime:"video/mp4"};if(n([77,84,104,100]))return{ext:"mid",mime:"audio/midi"};if(n([26,69,223,163])){var x=i.subarray(4,4100),A=x.findIndex(function(S,R,M){return M[R]===66&&M[R+1]===130});if(A!==-1){var N=A+3,E=function(R){return(0,h.default)(R).every(function(M,B){return x[N+B]===M.charCodeAt(0)})};if(E("matroska"))return{ext:"mkv",mime:"video/x-matroska"};if(E("webm"))return{ext:"webm",mime:"video/webm"}}}if(n([0,0,0,20,102,116,121,112,113,116,32,32])||n([102,114,101,101],{offset:4})||n([102,116,121,112,113,116,32,32],{offset:4})||n([109,100,97,116],{offset:4})||n([119,105,100,101],{offset:4}))return{ext:"mov",mime:"video/quicktime"};if(n([82,73,70,70])){if(n([65,86,73],{offset:8}))return{ext:"avi",mime:"video/vnd.avi"};if(n([87,65,86,69],{offset:8}))return{ext:"wav",mime:"audio/vnd.wave"};if(n([81,76,67,77],{offset:8}))return{ext:"qcp",mime:"audio/qcelp"}}if(n([48,38,178,117,142,102,207,17,166,217]))return{ext:"wmv",mime:"video/x-ms-wmv"};if(n([0,0,1,186])||n([0,0,1,179]))return{ext:"mpg",mime:"video/mpeg"};if(n([102,116,121,112,51,103],{offset:4}))return{ext:"3gp",mime:"video/3gpp"};for(var k=0;k<2&&k<i.length-16;k++){if(n([73,68,51],{offset:k})||n([255,226],{offset:k,mask:[255,226]}))return{ext:"mp3",mime:"audio/mpeg"};if(n([255,228],{offset:k,mask:[255,228]}))return{ext:"mp2",mime:"audio/mpeg"};if(n([255,248],{offset:k,mask:[255,252]}))return{ext:"mp2",mime:"audio/mpeg"};if(n([255,240],{offset:k,mask:[255,252]}))return{ext:"mp4",mime:"audio/mpeg"}}if(n([102,116,121,112,77,52,65],{offset:4})||n([77,52,65,32]))return{ext:"m4a",mime:"audio/mp4"};if(n([79,112,117,115,72,101,97,100],{offset:28}))return{ext:"opus",mime:"audio/opus"};if(n([79,103,103,83]))return n([128,116,104,101,111,114,97],{offset:28})?{ext:"ogv",mime:"video/ogg"}:n([1,118,105,100,101,111,0],{offset:28})?{ext:"ogm",mime:"video/ogg"}:n([127,70,76,65,67],{offset:28})?{ext:"oga",mime:"audio/ogg"}:n([83,112,101,101,120,32,32],{offset:28})?{ext:"spx",mime:"audio/ogg"}:n([1,118,111,114,98,105,115],{offset:28})?{ext:"ogg",mime:"audio/ogg"}:{ext:"ogx",mime:"application/ogg"};if(n([102,76,97,67]))return{ext:"flac",mime:"audio/x-flac"};if(n([77,65,67,32]))return{ext:"ape",mime:"audio/ape"};if(n([119,118,112,107]))return{ext:"wv",mime:"audio/wavpack"};if(n([35,33,65,77,82,10]))return{ext:"amr",mime:"audio/amr"};if(n([37,80,68,70]))return{ext:"pdf",mime:"application/pdf"};if(n([77,90]))return{ext:"exe",mime:"application/x-msdownload"};if((i[0]===67||i[0]===70)&&n([87,83],{offset:1}))return{ext:"swf",mime:"application/x-shockwave-flash"};if(n([123,92,114,116,102]))return{ext:"rtf",mime:"application/rtf"};if(n([0,97,115,109]))return{ext:"wasm",mime:"application/wasm"};if(n([119,79,70,70])&&(n([0,1,0,0],{offset:4})||n([79,84,84,79],{offset:4})))return{ext:"woff",mime:"font/woff"};if(n([119,79,70,50])&&(n([0,1,0,0],{offset:4})||n([79,84,84,79],{offset:4})))return{ext:"woff2",mime:"font/woff2"};if(n([76,80],{offset:34})&&(n([0,0,1],{offset:8})||n([1,0,2],{offset:8})||n([2,0,2],{offset:8})))return{ext:"eot",mime:"application/vnd.ms-fontobject"};if(n([0,1,0,0,0]))return{ext:"ttf",mime:"font/ttf"};if(n([79,84,84,79,0]))return{ext:"otf",mime:"font/otf"};if(n([0,0,1,0]))return{ext:"ico",mime:"image/x-icon"};if(n([0,0,2,0]))return{ext:"cur",mime:"image/x-icon"};if(n([70,76,86,1]))return{ext:"flv",mime:"video/x-flv"};if(n([37,33]))return{ext:"ps",mime:"application/postscript"};if(n([253,55,122,88,90,0]))return{ext:"xz",mime:"application/x-xz"};if(n([83,81,76,105]))return{ext:"sqlite",mime:"application/x-sqlite3"};if(n([78,69,83,26]))return{ext:"nes",mime:"application/x-nintendo-nes-rom"};if(n([67,114,50,52]))return{ext:"crx",mime:"application/x-google-chrome-extension"};if(n([77,83,67,70])||n([73,83,99,40]))return{ext:"cab",mime:"application/vnd.ms-cab-compressed"};if(n([33,60,97,114,99,104,62,10,100,101,98,105,97,110,45,98,105,110,97,114,121]))return{ext:"deb",mime:"application/x-deb"};if(n([33,60,97,114,99,104,62]))return{ext:"ar",mime:"application/x-unix-archive"};if(n([237,171,238,219]))return{ext:"rpm",mime:"application/x-rpm"};if(n([31,160])||n([31,157]))return{ext:"Z",mime:"application/x-compress"};if(n([76,90,73,80]))return{ext:"lz",mime:"application/x-lzip"};if(n([208,207,17,224,161,177,26,225]))return{ext:"msi",mime:"application/x-msi"};if(n([6,14,43,52,2,5,1,1,13,1,2,1,1,2]))return{ext:"mxf",mime:"application/mxf"};if(n([71],{offset:4})&&(n([71],{offset:192})||n([71],{offset:196})))return{ext:"mts",mime:"video/mp2t"};if(n([66,76,69,78,68,69,82]))return{ext:"blend",mime:"application/x-blender"};if(n([66,80,71,251]))return{ext:"bpg",mime:"image/bpg"};if(n([0,0,0,12,106,80,32,32,13,10,135,10])){if(n([106,112,50,32],{offset:20}))return{ext:"jp2",mime:"image/jp2"};if(n([106,112,120,32],{offset:20}))return{ext:"jpx",mime:"image/jpx"};if(n([106,112,109,32],{offset:20}))return{ext:"jpm",mime:"image/jpm"};if(n([109,106,112,50],{offset:20}))return{ext:"mj2",mime:"image/mj2"}}if(n([70,79,82,77,0]))return{ext:"aif",mime:"audio/aiff"};if(p("<?xml "))return{ext:"xml",mime:"application/xml"};if(n([66,79,79,75,77,79,66,73],{offset:60}))return{ext:"mobi",mime:"application/x-mobipocket-ebook"};if(n([102,116,121,112],{offset:4})){if(n([109,105,102,49],{offset:8}))return{ext:"heic",mime:"image/heif"};if(n([109,115,102,49],{offset:8}))return{ext:"heic",mime:"image/heif-sequence"};if(n([104,101,105,99],{offset:8})||n([104,101,105,120],{offset:8}))return{ext:"heic",mime:"image/heic"};if(n([104,101,118,99],{offset:8})||n([104,101,118,120],{offset:8}))return{ext:"heic",mime:"image/heic-sequence"}}return n([171,75,84,88,32,49,49,187,13,10,26,10])?{ext:"ktx",mime:"image/ktx"}:null}},{"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/toConsumableArray":20}],63:[function(t,d,o){var v=t("is-callable"),h=Object.prototype.toString,g=Object.prototype.hasOwnProperty,b=function(n,p,y){for(var l=0,m=n.length;l<m;l++)g.call(n,l)&&(y==null?p(n[l],l,n):p.call(y,n[l],l,n))},u=function(n,p,y){for(var l=0,m=n.length;l<m;l++)y==null?p(n.charAt(l),l,n):p.call(y,n.charAt(l),l,n)},f=function(n,p,y){for(var l in n)g.call(n,l)&&(y==null?p(n[l],l,n):p.call(y,n[l],l,n))},s=function(n,p,y){if(!v(p))throw new TypeError("iterator must be a function");var l;arguments.length>=3&&(l=y),h.call(n)==="[object Array]"?b(n,p,l):typeof n=="string"?u(n,p,l):f(n,p,l)};d.exports=s},{"is-callable":77}],64:[function(t,d,o){function v(u,f,s,p){var n=0,p=p===void 0?{}:p,y=p.loop===void 0?null:p.loop,l=p.palette===void 0?null:p.palette;if(f<=0||s<=0||f>65535||s>65535)throw new Error("Width/Height invalid.");function m(S){var R=S.length;if(R<2||R>256||R&R-1)throw new Error("Invalid code/color length, must be power of 2 and 2 .. 256.");return R}u[n++]=71,u[n++]=73,u[n++]=70,u[n++]=56,u[n++]=57,u[n++]=97;var c=0,w=0;if(l!==null){for(var x=m(l);x>>=1;)++c;if(x=1<<c,--c,p.background!==void 0){if(w=p.background,w>=x)throw new Error("Background index out of range.");if(w===0)throw new Error("Background index explicitly passed as 0.")}}if(u[n++]=f&255,u[n++]=f>>8&255,u[n++]=s&255,u[n++]=s>>8&255,u[n++]=(l!==null?128:0)|c,u[n++]=w,u[n++]=0,l!==null)for(var A=0,N=l.length;A<N;++A){var E=l[A];u[n++]=E>>16&255,u[n++]=E>>8&255,u[n++]=E&255}if(y!==null){if(y<0||y>65535)throw new Error("Loop count invalid.");u[n++]=33,u[n++]=255,u[n++]=11,u[n++]=78,u[n++]=69,u[n++]=84,u[n++]=83,u[n++]=67,u[n++]=65,u[n++]=80,u[n++]=69,u[n++]=50,u[n++]=46,u[n++]=48,u[n++]=3,u[n++]=1,u[n++]=y&255,u[n++]=y>>8&255,u[n++]=0}var k=!1;this.addFrame=function(S,R,M,B,I,Y){if(k===!0&&(--n,k=!1),Y=Y===void 0?{}:Y,S<0||R<0||S>65535||R>65535)throw new Error("x/y invalid.");if(M<=0||B<=0||M>65535||B>65535)throw new Error("Width/Height invalid.");if(I.length<M*B)throw new Error("Not enough pixels for the frame size.");var J=!0,D=Y.palette;if(D==null&&(J=!1,D=l),D==null)throw new Error("Must supply either a local or global palette.");for(var T=m(D),G=0;T>>=1;)++G;T=1<<G;var U=Y.delay===void 0?0:Y.delay,ie=Y.disposal===void 0?0:Y.disposal;if(ie<0||ie>3)throw new Error("Disposal out of range.");var se=!1,ae=0;if(Y.transparent!==void 0&&Y.transparent!==null&&(se=!0,ae=Y.transparent,ae<0||ae>=T))throw new Error("Transparent color index.");if((ie!==0||se||U!==0)&&(u[n++]=33,u[n++]=249,u[n++]=4,u[n++]=ie<<2|(se===!0?1:0),u[n++]=U&255,u[n++]=U>>8&255,u[n++]=ae,u[n++]=0),u[n++]=44,u[n++]=S&255,u[n++]=S>>8&255,u[n++]=R&255,u[n++]=R>>8&255,u[n++]=M&255,u[n++]=M>>8&255,u[n++]=B&255,u[n++]=B>>8&255,u[n++]=J===!0?128|G-1:0,J===!0)for(var W=0,ee=D.length;W<ee;++W){var _=D[W];u[n++]=_>>16&255,u[n++]=_>>8&255,u[n++]=_&255}return n=h(u,n,G<2?2:G,I),n},this.end=function(){return k===!1&&(u[n++]=59,k=!0),n},this.getOutputBuffer=function(){return u},this.setOutputBuffer=function(S){u=S},this.getOutputBufferPosition=function(){return n},this.setOutputBufferPosition=function(S){n=S}}function h(u,f,s,i){u[f++]=s;var n=f++,p=1<<s,y=p-1,l=p+1,m=l+1,c=s+1,w=0,x=0;function A(Y){for(;w>=Y;)u[f++]=x&255,x>>=8,w-=8,f===n+256&&(u[n]=255,n=f++)}function N(Y){x|=Y<<w,w+=c,A(8)}var E=i[0]&y,k={};N(p);for(var S=1,R=i.length;S<R;++S){var M=i[S]&y,B=E<<8|M,I=k[B];if(I===void 0){for(x|=E<<w,w+=c;w>=8;)u[f++]=x&255,x>>=8,w-=8,f===n+256&&(u[n]=255,n=f++);m===4096?(N(p),m=l+1,c=s+1,k={}):(m>=1<<c&&++c,k[B]=m++),E=M}else E=I}return N(E),N(l),A(1),n+1===f?u[n]=0:(u[n]=f-n-1,u[f++]=0),f}function g(u){var f=0;if(u[f++]!==71||u[f++]!==73||u[f++]!==70||u[f++]!==56||(u[f++]+1&253)!==56||u[f++]!==97)throw new Error("Invalid GIF 87a/89a header.");var s=u[f++]|u[f++]<<8,i=u[f++]|u[f++]<<8,n=u[f++],p=n>>7,y=n&7,l=1<<y+1;u[f++],u[f++];var m=null,c=null;p&&(m=f,c=l,f+=l*3);var w=!0,x=[],A=0,N=null,E=0,k=null;for(this.width=s,this.height=i;w&&f<u.length;)switch(u[f++]){case 33:switch(u[f++]){case 255:if(u[f]!==11||u[f+1]==78&&u[f+2]==69&&u[f+3]==84&&u[f+4]==83&&u[f+5]==67&&u[f+6]==65&&u[f+7]==80&&u[f+8]==69&&u[f+9]==50&&u[f+10]==46&&u[f+11]==48&&u[f+12]==3&&u[f+13]==1&&u[f+16]==0)f+=14,k=u[f++]|u[f++]<<8,f++;else for(f+=12;;){var S=u[f++];if(!(S>=0))throw Error("Invalid block size");if(S===0)break;f+=S}break;case 249:if(u[f++]!==4||u[f+4]!==0)throw new Error("Invalid graphics extension block.");var R=u[f++];A=u[f++]|u[f++]<<8,N=u[f++],(R&1)===0&&(N=null),E=R>>2&7,f++;break;case 254:for(;;){var S=u[f++];if(!(S>=0))throw Error("Invalid block size");if(S===0)break;f+=S}break;default:throw new Error("Unknown graphic control label: 0x"+u[f-1].toString(16))}break;case 44:var M=u[f++]|u[f++]<<8,B=u[f++]|u[f++]<<8,I=u[f++]|u[f++]<<8,Y=u[f++]|u[f++]<<8,J=u[f++],D=J>>7,T=J>>6&1,G=J&7,U=1<<G+1,ie=m,se=c,ae=!1;if(D){var ae=!0;ie=f,se=U,f+=U*3}var W=f;for(f++;;){var S=u[f++];if(!(S>=0))throw Error("Invalid block size");if(S===0)break;f+=S}x.push({x:M,y:B,width:I,height:Y,has_local_palette:ae,palette_offset:ie,palette_size:se,data_offset:W,data_length:f-W,transparent_index:N,interlaced:!!T,delay:A,disposal:E});break;case 59:w=!1;break;default:throw new Error("Unknown gif block: 0x"+u[f-1].toString(16))}this.numFrames=function(){return x.length},this.loopCount=function(){return k},this.frameInfo=function(ee){if(ee<0||ee>=x.length)throw new Error("Frame index out of range.");return x[ee]},this.decodeAndBlitFrameBGRA=function(ee,_){var re=this.frameInfo(ee),fe=re.width*re.height,pe=new Uint8Array(fe);b(u,re.data_offset,pe,fe);var he=re.palette_offset,oe=re.transparent_index;oe===null&&(oe=256);var ce=re.width,X=s-ce,K=ce,L=(re.y*s+re.x)*4,$=((re.y+re.height)*s+re.x)*4,te=L,V=X*4;re.interlaced===!0&&(V+=s*4*7);for(var z=8,F=0,q=pe.length;F<q;++F){var H=pe[F];if(K===0&&(te+=V,K=ce,te>=$&&(V=X*4+s*4*(z-1),te=L+(ce+X)*(z<<1),z>>=1)),H===oe)te+=4;else{var O=u[he+H*3],C=u[he+H*3+1],Q=u[he+H*3+2];_[te++]=Q,_[te++]=C,_[te++]=O,_[te++]=255}--K}},this.decodeAndBlitFrameRGBA=function(ee,_){var re=this.frameInfo(ee),fe=re.width*re.height,pe=new Uint8Array(fe);b(u,re.data_offset,pe,fe);var he=re.palette_offset,oe=re.transparent_index;oe===null&&(oe=256);var ce=re.width,X=s-ce,K=ce,L=(re.y*s+re.x)*4,$=((re.y+re.height)*s+re.x)*4,te=L,V=X*4;re.interlaced===!0&&(V+=s*4*7);for(var z=8,F=0,q=pe.length;F<q;++F){var H=pe[F];if(K===0&&(te+=V,K=ce,te>=$&&(V=X*4+s*4*(z-1),te=L+(ce+X)*(z<<1),z>>=1)),H===oe)te+=4;else{var O=u[he+H*3],C=u[he+H*3+1],Q=u[he+H*3+2];_[te++]=O,_[te++]=C,_[te++]=Q,_[te++]=255}--K}}}function b(u,f,s,i){for(var n=u[f++],p=1<<n,y=p+1,l=y+1,m=n+1,c=(1<<m)-1,w=0,x=0,A=0,N=u[f++],E=new Int32Array(4096),k=null;;){for(;w<16&&N!==0;)x|=u[f++]<<w,w+=8,N===1?N=u[f++]:--N;if(w<m)break;var S=x&c;if(x>>=m,w-=m,S===p){l=y+1,m=n+1,c=(1<<m)-1,k=null;continue}else if(S===y)break;for(var R=S<l?S:k,M=0,B=R;B>p;)B=E[B]>>8,++M;var I=B,Y=A+M+(R!==S?1:0);if(Y>i){console.log("Warning, gif stream longer than expected.");return}s[A++]=I,A+=M;var J=A;for(R!==S&&(s[A++]=I),B=R;M--;)B=E[B],s[--J]=B&255,B>>=8;k!==null&&l<4096&&(E[l++]=k<<8|I,l>=c+1&&m<12&&(++m,c=c<<1|1)),k=S}return A!==i&&console.log("Warning, gif stream shorter than expected."),s}try{o.GifWriter=v,o.GifReader=g}catch{}},{}],65:[function(t,d,o){(function(v){class h{constructor(...b){if(b.length===0)throw new Error("constructor requires parameters");const u=b[0];if(u!==null&&typeof u=="object")if(u instanceof h){const f=u.bitmap;this.bitmap={width:f.width,height:f.height,data:new v(f.width*f.height*4)},f.data.copy(this.bitmap.data)}else if(u.width&&u.height&&u.data)this.bitmap=u;else throw new Error("unrecognized constructor parameters");else if(typeof u=="number"&&typeof b[1]=="number"){const f=u,s=b[1],i=b[2];this.bitmap={width:f,height:s},v.isBuffer(i)?this.bitmap.data=i:(this.bitmap.data=new v(f*s*4),typeof i=="number"&&this.fillRGBA(i))}else throw new Error("unrecognized constructor parameters")}blit(b,u,f,s,i,n,p){if(s+n>this.bitmap.width)throw new Error("copy exceeds width of source bitmap");if(u+n>b.bitmap.width)throw new Error("copy exceeds width of target bitmap");if(i+p>this.bitmap.height)throw new Error("copy exceeds height of source bitmap");if(f+p>b.bitmap.height)throw new Erro("copy exceeds height of target bitmap");const y=this.bitmap.data,l=b.bitmap.data,m=this.bitmap.width*4,c=b.bitmap.width*4,w=n*4;let x=i*m+s*4,A=f*c+u*4;for(;--p>=0;)y.copy(l,A,x,x+w),x+=m,A+=c;return this}fillRGBA(b){const u=this.bitmap.data,f=this.bitmap.height*4;let s=0;for(;s<f;)u.writeUInt32BE(b,s),s+=4;for(;s<u.length;)u.copy(u,s,0,f),s+=f;return this}getRGBA(b,u){const f=(u*this.bitmap.width+b)*4;return this.bitmap.data.readUInt32BE(f)}getRGBASet(){const b=new Set,u=this.bitmap.data;for(let f=0;f<u.length;f+=4)b.add(u.readUInt32BE(f,!0));return b}greyscale(){const b=this.bitmap.data;return this.scan(0,0,this.bitmap.width,this.bitmap.height,(u,f,s)=>{const i=Math.round(.299*b[s]+.587*b[s+1]+.114*b[s+2]);b[s]=i,b[s+1]=i,b[s+2]=i}),this}reframe(b,u,f,s,i){const n=b<0?0:b,p=u<0?0:u,y=f+n>this.bitmap.width?this.bitmap.width-n:f,l=s+p>this.bitmap.height?this.bitmap.height-p:s,m=b<0?-b:0,c=u<0?-u:0;let w;if(i===void 0){if(n!==b||p!=u||y!==f||l!==s)throw new GifError("fillRGBA required for this reframing");w=new h(f,s)}else w=new h(f,s,i);return this.blit(w,m,c,n,p,y,l),this.bitmap=w.bitmap,this}scale(b){if(b===1)return;if(!Number.isInteger(b)||b<1)throw new Error("the scale must be an integer >= 1");const u=this.bitmap.width,f=this.bitmap.height,s=u*b*4,i=this.bitmap.data,n=new v(f*s*b);let p=0,y,l=0;for(let m=0;m<f;++m){y=l;for(let c=0;c<u;++c){const w=i.readUInt32BE(p,!0);for(let x=0;x<b;++x)n.writeUInt32BE(w,l),l+=4;p+=4}for(let c=1;c<b;++c)n.copy(n,l,y,l),l+=s,y+=s}return this.bitmap={width:u*b,height:f*b,data:n},this}scanAllCoords(b){const u=this.bitmap.width,f=this.bitmap.data.length;let s=0,i=0;for(let n=0;n<f;n+=4)b(s,i,n),++s===u&&(s=0,++i)}scanAllIndexes(b){const u=this.bitmap.data.length;for(let f=0;f<u;f+=4)b(f)}}d.exports=h}).call(this,t("buffer").Buffer)},{buffer:48}],66:[function(t,d,o){class v{constructor(b,u,f){this.width=f.width,this.height=f.height,this.loops=f.loops,this.usesTransparency=f.usesTransparency,this.colorScope=f.colorScope,this.frames=u,this.buffer=b}}v.GlobalColorsPreferred=0,v.GlobalColorsOnly=1,v.LocalColorsOnly=2;class h extends Error{constructor(b){super(b),b instanceof Error&&(this.stack="Gif"+b.stack)}}o.Gif=v,o.GifError=h},{}],67:[function(t,d,o){(function(v,h){const g=t("omggif"),{Gif:b,GifError:u}=t("./gif");let f;v.nextTick(()=>{f=t("./gifutil")});const{GifFrame:s}=t("./gifframe"),i=200,n=100;class p{constructor(S={}){this._transparentRGB=null,typeof S.transparentRGB=="number"&&S.transparentRGB!==0&&(this._transparentRGBA=S.transparentRGB*256),this._testInitialBufferSize=0}decodeGif(S){try{let R;try{R=new g.GifReader(S)}catch(Y){throw new u(Y)}const M=R.numFrames(),B=[],I={width:R.width,height:R.height,loops:R.loopCount()};I.usesTransparency=!1;for(let Y=0;Y<M;++Y){const J=this._decodeFrame(R,Y,I.usesTransparency);B.push(J.frame),J.usesTransparency&&(I.usesTransparency=!0)}return Promise.resolve(new b(S,B,I))}catch(R){return Promise.reject(R)}}encodeGif(S,R={}){try{if(S===null||S.length===0)throw new u("there are no frames");const M=f.getMaxDimensions(S);return R=Object.assign({},R),R.width=M.maxWidth,R.height=M.maxHeight,R.loops=R.loops||0,R.colorScope=R.colorScope||b.GlobalColorsPreferred,Promise.resolve(this._encodeGif(S,R))}catch(M){return Promise.reject(M)}}_decodeFrame(S,R,M){let B,I;try{if(B=S.frameInfo(R),I=new h(S.width*S.height*4),S.decodeAndBlitFrameRGBA(R,I),B.width!==S.width||B.height!==S.height){if(B.y&&(I=I.slice(B.y*S.width*4)),S.width>B.width)for(let D=0;D<B.height;++D)I.copy(I,D*B.width*4,(B.x+D*S.width)*4,(B.x+D*S.width)*4+B.width*4);I=I.slice(0,B.width*B.height*4)}}catch(D){throw new u(D)}let Y=!1;if(this._transparentRGBA===null){if(!M)for(let D=3;D<I.length;D+=4)I[D]===0&&(Y=!0,D=I.length)}else for(let D=3;D<I.length;D+=4)I[D]===0&&(I.writeUInt32BE(this._transparentRGBA,D-3),Y=!0);return{frame:new s(B.width,B.height,I,{xOffset:B.x,yOffset:B.y,disposalMethod:B.disposal,interlaced:B.interlaced,delayCentisecs:B.delay}),usesTransparency:Y}}_encodeGif(S,R){let M;if(R.colorScope===b.LocalColorsOnly)M=f.getColorInfo(S,0);else if(M=f.getColorInfo(S,256),!M.colors){if(R.colorScope===b.GlobalColorsOnly)throw new u("Too many color indexes for global color table");R.colorScope=b.LocalColorsOnly}R.usesTransparency=M.usesTransparency;const B=M.palettes;return R.colorScope===b.LocalColorsOnly?c(S,R,2e3,B):m(S,R,2e3,M)}_getSizeEstimateGlobal(S,R){if(this._testInitialBufferSize>0)return this._testInitialBufferSize;let M=i+3*256;const B=N(S);return R.forEach(I=>{M+=x(I,B)}),M}_getSizeEstimateLocal(S,R){if(this._testInitialBufferSize>0)return this._testInitialBufferSize;let M=i;for(let B=0;B<R.length;++B){const I=S[B],Y=N(I);M+=x(R[B],Y)}return M}}o.GifCodec=p;function y(k,S){const R=k.indexOf(S);return R===-1?null:R}function l(k,S){for(var R=0,M=k.length-1,B;R<=M;)if(B=Math.floor((R+M)/2),k[B]>S)M=B-1;else if(k[B]<S)R=B+1;else return B;return null}function m(k,S,R,M){const B={colors:M.colors.slice(),usesTransparency:M.usesTransparency};w(B);const I={palette:B.colors,loop:S.loops};let Y=new h(R),J;try{J=new g.GifWriter(Y,S.width,S.height,I)}catch(D){throw new u(D)}for(let D=0;D<k.length;++D)Y=E(J,D,k[D],M,!1);return new b(Y.slice(0,J.end()),k,S)}function c(k,S,R,M){const B={loop:S.loops};let I=new h(R),Y;try{Y=new g.GifWriter(I,S.width,S.height,B)}catch(J){throw new u(J)}for(let J=0;J<k.length;++J)I=E(Y,J,k[J],M[J],!0);return new b(I.slice(0,Y.end()),k,S)}function w(k){const S=k.colors;k.usesTransparency&&S.push(0);const R=S.length;let M=2;for(;R>M;)M<<=1;S.length=M,S.fill(0,R)}function x(k,S){let R=k.bitmap.width*k.bitmap.height;return R=Math.ceil(R*S/8),R+=Math.ceil(R/255),n+R+3*256}function A(k,S,R){const M=R.colors,B=M.length<=8?y:l,I=S.bitmap.data,Y=new h(I.length/4);let J=M.length,D=0,T=0;for(;D<I.length;){if(I[D+3]!==0){const G=I.readUInt32BE(D,!0)>>8&16777215;Y[T]=B(M,G)}else Y[T]=J;D+=4,++T}if(R.usesTransparency){if(J===256)throw new u(`Frame ${k} already has 256 colorsand so can't use transparency`)}else J=null;return{buffer:Y,transparentIndex:J}}function N(k){let S=k.indexCount,R=0;for(--S;S;)++R,S>>=1;return R>0?R:1}function E(k,S,R,M,B){if(R.interlaced)throw new u("writing interlaced GIFs is not supported");const I=A(S,R,M),Y={delay:R.delayCentisecs,disposal:R.disposalMethod,transparent:I.transparentIndex};B&&(w(M),Y.palette=M.colors);try{let J=k.getOutputBuffer(),D=k.getOutputBufferPosition(),T,G=!0;for(;G;)if(T=k.addFrame(R.xOffset,R.yOffset,R.bitmap.width,R.bitmap.height,I.buffer,Y),G=!1,T>=J.length-1){const U=new h(J.length*1.5);J.copy(U),k.setOutputBuffer(U),k.setOutputBufferPosition(D),J=U,G=!0}return J}catch(J){throw new u(J)}}}).call(this,t("_process"),t("buffer").Buffer)},{"./gif":66,"./gifframe":68,"./gifutil":69,_process:133,buffer:48,omggif:64}],68:[function(t,d,o){const v=t("./bitmapimage");t("./gif");class h extends v{constructor(...b){if(super(...b),b[0]instanceof h){const u=b[0];this.xOffset=u.xOffset,this.yOffset=u.yOffset,this.disposalMethod=u.disposalMethod,this.delayCentisecs=u.delayCentisecs,this.interlaced=u.interlaced}else{const u=b[b.length-1];let f={};typeof u=="object"&&!(u instanceof v)&&(f=u),this.xOffset=f.xOffset||0,this.yOffset=f.yOffset||0,this.disposalMethod=f.disposalMethod!==void 0?f.disposalMethod:h.DisposeToBackgroundColor,this.delayCentisecs=f.delayCentisecs||8,this.interlaced=f.interlaced||!1}}getPalette(){const b=new Set,u=this.bitmap.data;let f=0,s=!1;for(;f<u.length;){if(u[f+3]===0)s=!0;else{const y=u.readUInt32BE(f,!0)>>8&16777215;b.add(y)}f+=4}const i=new Array(b.size),n=b.values();for(f=0;f<i.length;++f)i[f]=n.next().value;i.sort((y,l)=>y-l);let p=i.length;return s&&++p,{colors:i,usesTransparency:s,indexCount:p}}}h.DisposeToAnything=0,h.DisposeNothing=1,h.DisposeToBackgroundColor=2,h.DisposeToPrevious=3,o.GifFrame=h},{"./bitmapimage":65,"./gif":66}],69:[function(t,d,o){(function(v){const h=t("fs"),g=t("image-q"),b=t("./bitmapimage"),{GifFrame:u}=t("./gifframe"),{GifError:f}=t("./gif"),{GifCodec:s}=t("./gifcodec"),i=[".jpg",".jpeg",".png",".bmp"],n=new s;o.cloneFrames=function(m){let c=[];return m.forEach(w=>{c.push(new u(w))}),c},o.getColorInfo=function(m,c){let w=!1;const x=[];for(let S=0;S<m.length;++S){let R=m[S].getPalette();if(R.usesTransparency&&(w=!0),R.indexCount>256)throw new f(`Frame ${S} uses more than 256 color indexes`);x.push(R)}if(c===0)return{usesTransparency:w,palettes:x};const A=new Set;x.forEach(S=>{S.colors.forEach(R=>{A.add(R)})});let N=A.size;if(w&&++N,c&&N>c)return{usesTransparency:w,palettes:x};const E=new Array(A.size),k=A.values();for(let S=0;S<E.length;++S)E[S]=k.next().value;return E.sort((S,R)=>S-R),{colors:E,indexCount:N,usesTransparency:w,palettes:x}},o.copyAsJimp=function(m,c){return o.shareAsJimp(m,new b(c))},o.getMaxDimensions=function(m){let c=0,w=0;return m.forEach(x=>{const A=x.xOffset+x.bitmap.width;A>c&&(c=A);const N=x.yOffset+x.bitmap.height;N>w&&(w=N)}),{maxWidth:c,maxHeight:w}},o.quantizeDekker=function(m,c,w){c=c||256,p(m,"NeuQuantFloat",c,0,w)},o.quantizeSorokin=function(m,c,w,x){c=c||256,w=w||"min-pop";let A;switch(w){case"min-pop":A=2;break;case"top-pop":A=1;break;default:throw new Error(`Invalid quantizeSorokin histogram '${w}'`)}p(m,"RGBQuant",c,A,x)},o.quantizeWu=function(m,c,w,x){if(c=c||256,w=w||5,w<1||w>8)throw new Error("Invalid quantization quality");p(m,"WuQuant",c,w,x)},o.read=function(m,c){return c=c||n,v.isBuffer(m)?c.decodeGif(m):y(m).then(w=>c.decodeGif(w))},o.shareAsJimp=function(m,c){const w=new m(c.bitmap.width,c.bitmap.height,0);return w.bitmap.data=c.bitmap.data,w},o.write=function(m,c,w,x){x=x||n;const A=m.match(/\.[a-zA-Z]+$/);if(A!==null&&i.includes(A[0].toLowerCase()))throw new Error(`GIF '${m}' has an unexpected suffix`);return x.encodeGif(c,w).then(N=>l(m,N.buffer).then(()=>N))};function p(m,c,w,x,A){const N=Array.isArray(m)?m:[m],E=["FloydSteinberg","FalseFloydSteinberg","Stucki","Atkinson","Jarvis","Burkes","Sierra","TwoSierra","SierraLite"];if(A){if(E.indexOf(A.ditherAlgorithm)<0)throw new Error(`Invalid ditherAlgorithm '${A.ditherAlgorithm}'`);A.serpentine===void 0&&(A.serpentine=!0),A.minimumColorDistanceToDither===void 0&&(A.minimumColorDistanceToDither=0),A.calculateErrorLikeGIMP===void 0&&(A.calculateErrorLikeGIMP=!1)}const k=new g.distance.Euclidean,S=new g.palette[c](k,w,x);let R;A?R=new g.image.ErrorDiffusionArray(k,g.image.ErrorDiffusionArrayKernel[A.ditherAlgorithm],A.serpentine,A.minimumColorDistanceToDither,A.calculateErrorLikeGIMP):R=new g.image.NearestColor(k);const M=[];N.forEach(I=>{const Y=I.bitmap.data,J=new ArrayBuffer(Y.length),D=new Uint32Array(J);for(let G=0,U=0;G<Y.length;G+=4,++U)D[U]=Y.readUInt32LE(G,!0);const T=g.utils.PointContainer.fromUint32Array(D,I.bitmap.width,I.bitmap.height);S.sample(T),M.push(T)});const B=S.quantize();for(let I=0;I<N.length;++I){const Y=N[I].bitmap.data,D=R.quantize(M[I],B).toUint32Array();for(let T=0,G=0;T<Y.length;T+=4,++G)Y.writeUInt32LE(D[G],T)}}function y(m){return new Promise((c,w)=>{h.readFile(m,(x,A)=>x?w(x):c(A))})}function l(m,c){return new Promise((w,x)=>{h.writeFile(m,c,A=>A?x(A):w())})}}).call(this,{isBuffer:t("../../is-buffer/index.js")})},{"../../is-buffer/index.js":76,"./bitmapimage":65,"./gif":66,"./gifcodec":67,"./gifframe":68,fs:47,"image-q":74}],70:[function(t,d,o){const v=t("./bitmapimage"),{Gif:h,GifError:g}=t("./gif"),{GifCodec:b}=t("./gifcodec"),{GifFrame:u}=t("./gifframe"),f=t("./gifutil");d.exports={BitmapImage:v,Gif:h,GifCodec:b,GifFrame:u,GifUtil:f,GifError:g}},{"./bitmapimage":65,"./gif":66,"./gifcodec":67,"./gifframe":68,"./gifutil":69}],71:[function(t,d,o){(function(v){var h;typeof a!="undefined"?h=a:typeof v!="undefined"?h=v:typeof self!="undefined"?h=self:h={},d.exports=h}).call(this,typeof nt!="undefined"?nt:typeof self!="undefined"?self:typeof a!="undefined"?a:{})},{}],72:[function(t,d,o){var v=t("http"),h=t("url"),g=d.exports;for(var b in v)v.hasOwnProperty(b)&&(g[b]=v[b]);g.request=function(f,s){return f=u(f),v.request.call(this,f,s)},g.get=function(f,s){return f=u(f),v.get.call(this,f,s)};function u(f){if(typeof f=="string"&&(f=h.parse(f)),f.protocol||(f.protocol="https:"),f.protocol!=="https:")throw new Error('Protocol "'+f.protocol+'" not supported. Expected "https:"');return f}},{http:156,url:180}],73:[function(t,d,o){o.read=function(v,h,g,b,u){var f,s,i=u*8-b-1,n=(1<<i)-1,p=n>>1,y=-7,l=g?u-1:0,m=g?-1:1,c=v[h+l];for(l+=m,f=c&(1<<-y)-1,c>>=-y,y+=i;y>0;f=f*256+v[h+l],l+=m,y-=8);for(s=f&(1<<-y)-1,f>>=-y,y+=b;y>0;s=s*256+v[h+l],l+=m,y-=8);if(f===0)f=1-p;else{if(f===n)return s?NaN:(c?-1:1)*(1/0);s=s+Math.pow(2,b),f=f-p}return(c?-1:1)*s*Math.pow(2,f-b)},o.write=function(v,h,g,b,u,f){var s,i,n,p=f*8-u-1,y=(1<<p)-1,l=y>>1,m=u===23?Math.pow(2,-24)-Math.pow(2,-77):0,c=b?0:f-1,w=b?1:-1,x=h<0||h===0&&1/h<0?1:0;for(h=Math.abs(h),isNaN(h)||h===1/0?(i=isNaN(h)?1:0,s=y):(s=Math.floor(Math.log(h)/Math.LN2),h*(n=Math.pow(2,-s))<1&&(s--,n*=2),s+l>=1?h+=m/n:h+=m*Math.pow(2,1-l),h*n>=2&&(s++,n/=2),s+l>=y?(i=0,s=y):s+l>=1?(i=(h*n-1)*Math.pow(2,u),s=s+l):(i=h*Math.pow(2,l-1)*Math.pow(2,u),s=0));u>=8;v[g+c]=i&255,c+=w,i/=256,u-=8);for(s=s<<u|i,p+=u;p>0;v[g+c]=s&255,c+=w,s/=256,p-=8);v[g+c-w]|=x*128}},{}],74:[function(t,d,o){(function(h,g){typeof o=="object"&&typeof d=="object"?d.exports=g():typeof o=="object"?o.iq=g():h.iq=g()})(this,function(){return function(v){var h={};function g(b){if(h[b])return h[b].exports;var u=h[b]={exports:{},id:b,loaded:!1};return v[b].call(u.exports,u,u.exports,g),u.loaded=!0,u.exports}return g.m=v,g.c=h,g.p="",g(0)}([function(v,h,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * iq.ts - Image Quantization Library
 */var b=g(1);h.constants=b;var u=g(3);h.conversion=u;var f=g(12);h.distance=f;var s=g(20);h.palette=s;var i=g(30);h.image=i;var n=g(35);h.quality=n;var p=g(37);h.utils=p},function(v,h,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * constants.ts - part of Image Quantization Library
 */var b=g(2);h.bt709=b},function(v,h){var g;(function(f){f[f.RED=.2126]="RED",f[f.GREEN=.7152]="GREEN",f[f.BLUE=.0722]="BLUE",f[f.WHITE=1]="WHITE"})(g||(g={})),h.Y=g;var b;(function(f){f[f.RED=.64]="RED",f[f.GREEN=.3]="GREEN",f[f.BLUE=.15]="BLUE",f[f.WHITE=.3127]="WHITE"})(b||(b={})),h.x=b;var u;(function(f){f[f.RED=.33]="RED",f[f.GREEN=.6]="GREEN",f[f.BLUE=.06]="BLUE",f[f.WHITE=.329]="WHITE"})(u||(u={})),h.y=u},function(v,h,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * iq.ts - Image Quantization Library
 */var b=g(4);h.rgb2xyz=b.rgb2xyz;var u=g(5);h.rgb2hsl=u.rgb2hsl;var f=g(7);h.rgb2lab=f.rgb2lab;var s=g(9);h.lab2xyz=s.lab2xyz;var i=g(10);h.lab2rgb=i.lab2rgb;var n=g(8);h.xyz2lab=n.xyz2lab;var p=g(11);h.xyz2rgb=p.xyz2rgb},function(v,h){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * rgb2xyz.ts - part of Image Quantization Library
 */function g(u){return u>.04045?Math.pow((u+.055)/1.055,2.4):u/12.92}function b(u,f,s){return u=g(u/255),f=g(f/255),s=g(s/255),{x:u*.4124+f*.3576+s*.1805,y:u*.2126+f*.7152+s*.0722,z:u*.0193+f*.1192+s*.9505}}h.rgb2xyz=b},function(v,h,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * rgb2hsl.ts - part of Image Quantization Library
 */var b=g(6);function u(f,s,i){var n=b.min3(f,s,i),p=b.max3(f,s,i),y=p-n,l=(n+p)/510,m=0;l>0&&l<1&&(m=y/(l<.5?p+n:510-p-n));var c=0;return y>0&&(p===f?c=(s-i)/y:p===s?c=2+(i-f)/y:c=4+(f-s)/y,c*=60,c<0&&(c+=360)),{h:c,s:m,l}}h.rgb2hsl=u},function(v,h){function g(p){return p*(Math.PI/180)}h.degrees2radians=g;function b(p,y,l){var m=p;return m<y&&(m=y),m<l&&(m=l),m}h.max3=b;function u(p,y,l){var m=p;return m>y&&(m=y),m>l&&(m=l),m}h.min3=u;function f(p,y,l){return p>l&&(p=l),p<y&&(p=y),p|0}h.intInRange=f;function s(p){return p=Math.round(p),p>255?p=255:p<0&&(p=0),p}h.inRange0to255Rounded=s;function i(p){return p>255?p=255:p<0&&(p=0),p}h.inRange0to255=i;function n(p,y){var l=typeof p[0],m;if(l==="number"||l==="string"){for(var c=Object.create(null),w=0,x=p.length;w<x;w++){var A=p[w];c[A]||c[A]===0||(c[A]=w)}m=p.sort(function(E,k){return y(E,k)||c[E]-c[k]})}else{var N=p.slice(0);m=p.sort(function(E,k){return y(E,k)||N.indexOf(E)-N.indexOf(k)})}return m}h.stableSort=n},function(v,h,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * rgb2lab.ts - part of Image Quantization Library
 */var b=g(4),u=g(8);function f(s,i,n){var p=b.rgb2xyz(s,i,n);return u.xyz2lab(p.x,p.y,p.z)}h.rgb2lab=f},function(v,h){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * xyz2lab.ts - part of Image Quantization Library
 */var g=.95047,b=1,u=1.08883;function f(i){return i>.008856?Math.pow(i,1/3):7.787*i+16/116}function s(i,n,p){if(i=f(i/g),n=f(n/b),p=f(p/u),116*n-16<0)throw new Error("xxx");return{L:Math.max(0,116*n-16),a:500*(i-n),b:200*(n-p)}}h.xyz2lab=s},function(v,h){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * lab2xyz.ts - part of Image Quantization Library
 */var g=.95047,b=1,u=1.08883;function f(i){return i>.206893034?Math.pow(i,3):(i-16/116)/7.787}function s(i,n,p){var y=(i+16)/116,l=n/500+y,m=y-p/200;return{x:g*f(l),y:b*f(y),z:u*f(m)}}h.lab2xyz=s},function(v,h,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * lab2rgb.ts - part of Image Quantization Library
 */var b=g(9),u=g(11);function f(s,i,n){var p=b.lab2xyz(s,i,n);return u.xyz2rgb(p.x,p.y,p.z)}h.lab2rgb=f},function(v,h,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * xyz2rgb.ts - part of Image Quantization Library
 */var b=g(6);function u(s){return s>.0031308?1.055*Math.pow(s,1/2.4)-.055:12.92*s}function f(s,i,n){var p=u(s*3.2406+i*-1.5372+n*-.4986),y=u(s*-.9689+i*1.8758+n*.0415),l=u(s*.0557+i*-.204+n*1.057);return{r:b.inRange0to255Rounded(p*255),g:b.inRange0to255Rounded(y*255),b:b.inRange0to255Rounded(l*255)}}h.xyz2rgb=f},function(v,h,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * iq.ts - Image Quantization Library
 */var b=g(13);h.AbstractDistanceCalculator=b.AbstractDistanceCalculator;var u=g(14);h.CIE94Textiles=u.CIE94Textiles,h.CIE94GraphicArts=u.CIE94GraphicArts;var f=g(15);h.CIEDE2000=f.CIEDE2000;var s=g(16);h.CMETRIC=s.CMETRIC;var i=g(17);h.AbstractEuclidean=i.AbstractEuclidean,h.Euclidean=i.Euclidean,h.EuclideanRgbQuantWOAlpha=i.EuclideanRgbQuantWOAlpha,h.EuclideanRgbQuantWithAlpha=i.EuclideanRgbQuantWithAlpha;var n=g(18);h.AbstractManhattan=n.AbstractManhattan,h.Manhattan=n.Manhattan,h.ManhattanSRGB=n.ManhattanSRGB,h.ManhattanNommyde=n.ManhattanNommyde;var p=g(19);h.PNGQUANT=p.PNGQUANT},function(v,h){var g=function(){function b(){this._setDefaults(),this.setWhitePoint(255,255,255,255)}return b.prototype.setWhitePoint=function(u,f,s,i){this._whitePoint={r:u>0?255/u:0,g:f>0?255/f:0,b:s>0?255/s:0,a:i>0?255/i:0},this._maxDistance=this.calculateRaw(u,f,s,i,0,0,0,0)},b.prototype.calculateNormalized=function(u,f){return this.calculateRaw(u.r,u.g,u.b,u.a,f.r,f.g,f.b,f.a)/this._maxDistance},b.prototype._setDefaults=function(){},b}();h.AbstractDistanceCalculator=g},function(v,h,g){var b=this&&this.__extends||function(y,l){for(var m in l)l.hasOwnProperty(m)&&(y[m]=l[m]);function c(){this.constructor=y}y.prototype=l===null?Object.create(l):(c.prototype=l.prototype,new c)};/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * cie94.ts - part of Image Quantization Library
 */var u=g(13),f=g(7),s=g(6),i=function(y){b(l,y);function l(){y.apply(this,arguments)}return l.prototype.calculateRaw=function(m,c,w,x,A,N,E,k){var S=f.rgb2lab(s.inRange0to255(m*this._whitePoint.r),s.inRange0to255(c*this._whitePoint.g),s.inRange0to255(w*this._whitePoint.b)),R=f.rgb2lab(s.inRange0to255(A*this._whitePoint.r),s.inRange0to255(N*this._whitePoint.g),s.inRange0to255(E*this._whitePoint.b)),M=S.L-R.L,B=S.a-R.a,I=S.b-R.b,Y=Math.sqrt(S.a*S.a+S.b*S.b),J=Math.sqrt(R.a*R.a+R.b*R.b),D=Y-J,T=B*B+I*I-D*D;T=T<0?0:Math.sqrt(T);var G=(k-x)*this._whitePoint.a*this._kA;return Math.sqrt(Math.pow(M/this._Kl,2)+Math.pow(D/(1+this._K1*Y),2)+Math.pow(T/(1+this._K2*Y),2)+Math.pow(G,2))},l}(u.AbstractDistanceCalculator);h.AbstractCIE94=i;var n=function(y){b(l,y);function l(){y.apply(this,arguments)}return l.prototype._setDefaults=function(){this._Kl=2,this._K1=.048,this._K2=.014,this._kA=.25*50/255},l}(i);h.CIE94Textiles=n;var p=function(y){b(l,y);function l(){y.apply(this,arguments)}return l.prototype._setDefaults=function(){this._Kl=1,this._K1=.045,this._K2=.015,this._kA=.25*100/255},l}(i);h.CIE94GraphicArts=p},function(v,h,g){var b=this&&this.__extends||function(n,p){for(var y in p)p.hasOwnProperty(y)&&(n[y]=p[y]);function l(){this.constructor=n}n.prototype=p===null?Object.create(p):(l.prototype=p.prototype,new l)};/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * ciede2000.ts - part of Image Quantization Library
 */var u=g(13),f=g(7),s=g(6),i=function(n){b(p,n);function p(){n.apply(this,arguments)}return p.prototype.calculateRaw=function(y,l,m,c,w,x,A,N){var E=f.rgb2lab(s.inRange0to255(y*this._whitePoint.r),s.inRange0to255(l*this._whitePoint.g),s.inRange0to255(m*this._whitePoint.b)),k=f.rgb2lab(s.inRange0to255(w*this._whitePoint.r),s.inRange0to255(x*this._whitePoint.g),s.inRange0to255(A*this._whitePoint.b)),S=(N-c)*this._whitePoint.a*p._kA,R=this.calculateRawInLab(E,k);return Math.sqrt(R+S*S)},p.prototype.calculateRawInLab=function(y,l){var m=y.L,c=y.a,w=y.b,x=l.L,A=l.a,N=l.b,E=Math.sqrt(c*c+w*w),k=Math.sqrt(A*A+N*N),S=Math.pow((E+k)/2,7),R=.5*(1-Math.sqrt(S/(S+p._pow25to7))),M=(1+R)*c,B=(1+R)*A,I=Math.sqrt(M*M+w*w),Y=Math.sqrt(B*B+N*N),J=I*Y,D=p._calculatehp(w,M),T=p._calculatehp(N,B),G=Math.abs(D-T),U=x-m,ie=Y-I,se=p._calculate_dHp(J,G,T,D),ae=p._calculate_ahp(J,G,D,T),W=p._calculateT(ae),ee=(I+Y)/2,_=Math.pow((m+x)/2-50,2),re=1+.015*_/Math.sqrt(20+_),fe=1+.045*ee,pe=1+.015*W*ee,he=p._calculateRT(ae,ee),oe=U/re,ce=ie/fe,X=se/pe;return Math.pow(oe,2)+Math.pow(ce,2)+Math.pow(X,2)+he*ce*X},p._calculatehp=function(y,l){var m=Math.atan2(y,l);return m>=0?m:m+p._deg360InRad},p._calculateRT=function(y,l){var m=Math.pow(l,7),c=2*Math.sqrt(m/(m+p._pow25to7)),w=p._deg30InRad*Math.exp(-Math.pow((y-p._deg275InRad)/p._deg25InRad,2));return-Math.sin(2*w)*c},p._calculateT=function(y){return 1-.17*Math.cos(y-p._deg30InRad)+.24*Math.cos(y*2)+.32*Math.cos(y*3+p._deg6InRad)-.2*Math.cos(y*4-p._deg63InRad)},p._calculate_ahp=function(y,l,m,c){var w=m+c;return y==0?w:l<=p._deg180InRad?w/2:w<p._deg360InRad?(w+p._deg360InRad)/2:(w-p._deg360InRad)/2},p._calculate_dHp=function(y,l,m,c){var w;return y==0?w=0:l<=p._deg180InRad?w=m-c:m<=c?w=m-c+p._deg360InRad:w=m-c-p._deg360InRad,2*Math.sqrt(y)*Math.sin(w/2)},p._kA=.25*100/255,p._pow25to7=Math.pow(25,7),p._deg360InRad=s.degrees2radians(360),p._deg180InRad=s.degrees2radians(180),p._deg30InRad=s.degrees2radians(30),p._deg6InRad=s.degrees2radians(6),p._deg63InRad=s.degrees2radians(63),p._deg275InRad=s.degrees2radians(275),p._deg25InRad=s.degrees2radians(25),p}(u.AbstractDistanceCalculator);h.CIEDE2000=i},function(v,h,g){var b=this&&this.__extends||function(s,i){for(var n in i)i.hasOwnProperty(n)&&(s[n]=i[n]);function p(){this.constructor=s}s.prototype=i===null?Object.create(i):(p.prototype=i.prototype,new p)};/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * cmetric.ts - part of Image Quantization Library
 */var u=g(13),f=function(s){b(i,s);function i(){s.apply(this,arguments)}return i.prototype.calculateRaw=function(n,p,y,l,m,c,w,x){var A=(n+m)/2*this._whitePoint.r,N=(n-m)*this._whitePoint.r,E=(p-c)*this._whitePoint.g,k=(y-w)*this._whitePoint.b,S=((512+A)*N*N>>8)+4*E*E+((767-A)*k*k>>8),R=(x-l)*this._whitePoint.a;return Math.sqrt(S+R*R)},i}(u.AbstractDistanceCalculator);h.CMETRIC=f},function(v,h,g){var b=this&&this.__extends||function(y,l){for(var m in l)l.hasOwnProperty(m)&&(y[m]=l[m]);function c(){this.constructor=y}y.prototype=l===null?Object.create(l):(c.prototype=l.prototype,new c)};/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * euclidean.ts - part of Image Quantization Library
 */var u=g(13),f=g(2),s=function(y){b(l,y);function l(){y.apply(this,arguments)}return l.prototype.calculateRaw=function(m,c,w,x,A,N,E,k){var S=A-m,R=N-c,M=E-w,B=k-x;return Math.sqrt(this._kR*S*S+this._kG*R*R+this._kB*M*M+this._kA*B*B)},l}(u.AbstractDistanceCalculator);h.AbstractEuclidean=s;var i=function(y){b(l,y);function l(){y.apply(this,arguments)}return l.prototype._setDefaults=function(){this._kR=1,this._kG=1,this._kB=1,this._kA=1},l}(s);h.Euclidean=i;var n=function(y){b(l,y);function l(){y.apply(this,arguments)}return l.prototype._setDefaults=function(){this._kR=f.Y.RED,this._kG=f.Y.GREEN,this._kB=f.Y.BLUE,this._kA=1},l}(s);h.EuclideanRgbQuantWithAlpha=n;var p=function(y){b(l,y);function l(){y.apply(this,arguments)}return l.prototype._setDefaults=function(){this._kR=f.Y.RED,this._kG=f.Y.GREEN,this._kB=f.Y.BLUE,this._kA=0},l}(s);h.EuclideanRgbQuantWOAlpha=p},function(v,h,g){var b=this&&this.__extends||function(y,l){for(var m in l)l.hasOwnProperty(m)&&(y[m]=l[m]);function c(){this.constructor=y}y.prototype=l===null?Object.create(l):(c.prototype=l.prototype,new c)};/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * manhattanNeuQuant.ts - part of Image Quantization Library
 */var u=g(13),f=g(2),s=function(y){b(l,y);function l(){y.apply(this,arguments)}return l.prototype.calculateRaw=function(m,c,w,x,A,N,E,k){var S=A-m,R=N-c,M=E-w,B=k-x;return S<0&&(S=0-S),R<0&&(R=0-R),M<0&&(M=0-M),B<0&&(B=0-B),this._kR*S+this._kG*R+this._kB*M+this._kA*B},l}(u.AbstractDistanceCalculator);h.AbstractManhattan=s;var i=function(y){b(l,y);function l(){y.apply(this,arguments)}return l.prototype._setDefaults=function(){this._kR=1,this._kG=1,this._kB=1,this._kA=1},l}(s);h.Manhattan=i;var n=function(y){b(l,y);function l(){y.apply(this,arguments)}return l.prototype._setDefaults=function(){this._kR=.4984,this._kG=.8625,this._kB=.2979,this._kA=1},l}(s);h.ManhattanNommyde=n;var p=function(y){b(l,y);function l(){y.apply(this,arguments)}return l.prototype._setDefaults=function(){this._kR=f.Y.RED,this._kG=f.Y.GREEN,this._kB=f.Y.BLUE,this._kA=1},l}(s);h.ManhattanSRGB=p},function(v,h,g){var b=this&&this.__extends||function(s,i){for(var n in i)i.hasOwnProperty(n)&&(s[n]=i[n]);function p(){this.constructor=s}s.prototype=i===null?Object.create(i):(p.prototype=i.prototype,new p)};/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * pngQuant.ts - part of Image Quantization Library
 */var u=g(13),f=function(s){b(i,s);function i(){s.apply(this,arguments)}return i.prototype.calculateRaw=function(n,p,y,l,m,c,w,x){var A=(x-l)*this._whitePoint.a;return this._colordifference_ch(n*this._whitePoint.r,m*this._whitePoint.r,A)+this._colordifference_ch(p*this._whitePoint.g,c*this._whitePoint.g,A)+this._colordifference_ch(y*this._whitePoint.b,w*this._whitePoint.b,A)},i.prototype._colordifference_ch=function(n,p,y){var l=n-p,m=l+y;return l*l+m*m},i}(u.AbstractDistanceCalculator);h.PNGQUANT=f},function(v,h,g){var b=g(21);h.NeuQuant=b.NeuQuant;var u=g(25);h.NeuQuantFloat=u.NeuQuantFloat;var f=g(26);h.RGBQuant=f.RGBQuant;var s=g(27);h.ColorHistogram=s.ColorHistogram;var i=g(29);h.WuQuant=i.WuQuant,h.WuColorCube=i.WuColorCube},function(v,h,g){/**
 * @preserve TypeScript port:
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * neuquant.ts - part of Image Quantization Library
 */var b=g(22),u=g(24),f=3,s=function(){function n(p){this.r=this.g=this.b=this.a=p}return n.prototype.toPoint=function(){return u.Point.createByRGBA(this.r>>f,this.g>>f,this.b>>f,this.a>>f)},n.prototype.subtract=function(p,y,l,m){this.r-=p|0,this.g-=y|0,this.b-=l|0,this.a-=m|0},n}(),i=function(){function n(p,y){y===void 0&&(y=256),this._distance=p,this._pointArray=[],this._sampleFactor=1,this._networkSize=y,this._distance.setWhitePoint(255<<f,255<<f,255<<f,255<<f)}return n.prototype.sample=function(p){this._pointArray=this._pointArray.concat(p.getPointArray())},n.prototype.quantize=function(){return this._init(),this._learn(),this._buildPalette()},n.prototype._init=function(){this._freq=[],this._bias=[],this._radPower=[],this._network=[];for(var p=0;p<this._networkSize;p++)this._network[p]=new s((p<<f+8)/this._networkSize|0),this._freq[p]=n._initialBias/this._networkSize|0,this._bias[p]=0},n.prototype._learn=function(){var p=this._sampleFactor,y=this._pointArray.length;y<n._minpicturebytes&&(p=1);var l=30+(p-1)/3|0,m=y/p|0,c=m/n._nCycles|0,w=n._initAlpha,x=(this._networkSize>>3)*n._radiusBias,A=x>>n._radiusBiasShift;A<=1&&(A=0);for(var N=0;N<A;N++)this._radPower[N]=w*((A*A-N*N)*n._radBias/(A*A))>>>0;var E;y<n._minpicturebytes?E=1:y%n._prime1!=0?E=n._prime1:y%n._prime2!=0?E=n._prime2:y%n._prime3!=0?E=n._prime3:E=n._prime4;for(var N=0,k=0;N<m;){var S=this._pointArray[k],R=S.b<<f,M=S.g<<f,B=S.r<<f,I=S.a<<f,Y=this._contest(R,M,B,I);if(this._alterSingle(w,Y,R,M,B,I),A!==0&&this._alterNeighbour(A,Y,R,M,B,I),k+=E,k>=y&&(k-=y),N++,c===0&&(c=1),N%c===0){w-=w/l|0,x-=x/n._radiusDecrease|0,A=x>>n._radiusBiasShift,A<=1&&(A=0);for(var J=0;J<A;J++)this._radPower[J]=w*((A*A-J*J)*n._radBias/(A*A))>>>0}}},n.prototype._buildPalette=function(){var p=new b.Palette;return this._network.forEach(function(y){p.add(y.toPoint())}),p.sort(),p},n.prototype._alterNeighbour=function(p,y,l,m,c,w){var x=y-p;x<-1&&(x=-1);var A=y+p;A>this._networkSize&&(A=this._networkSize);for(var N=y+1,E=y-1,k=1;N<A||E>x;){var S=this._radPower[k++]/n._alphaRadBias;if(N<A){var R=this._network[N++];R.subtract(S*(R.r-c),S*(R.g-m),S*(R.b-l),S*(R.a-w))}if(E>x){var R=this._network[E--];R.subtract(S*(R.r-c),S*(R.g-m),S*(R.b-l),S*(R.a-w))}}},n.prototype._alterSingle=function(p,y,l,m,c,w){p/=n._initAlpha;var x=this._network[y];x.subtract(p*(x.r-c),p*(x.g-m),p*(x.b-l),p*(x.a-w))},n.prototype._contest=function(p,y,l,m){for(var c=1020<<f,w=~(1<<31),x=w,A=-1,N=A,E=0;E<this._networkSize;E++){var k=this._network[E],S=this._distance.calculateNormalized(k,{r:l,g:y,b:p,a:m})*c|0;S<w&&(w=S,A=E);var R=S-(this._bias[E]>>n._initialBiasShift-f);R<x&&(x=R,N=E);var M=this._freq[E]>>n._betaShift;this._freq[E]-=M,this._bias[E]+=M<<n._gammaShift}return this._freq[A]+=n._beta,this._bias[A]-=n._betaGamma,N},n._prime1=499,n._prime2=491,n._prime3=487,n._prime4=503,n._minpicturebytes=n._prime4,n._nCycles=100,n._initialBiasShift=16,n._initialBias=1<<n._initialBiasShift,n._gammaShift=10,n._betaShift=10,n._beta=n._initialBias>>n._betaShift,n._betaGamma=n._initialBias<<n._gammaShift-n._betaShift,n._radiusBiasShift=6,n._radiusBias=1<<n._radiusBiasShift,n._radiusDecrease=30,n._alphaBiasShift=10,n._initAlpha=1<<n._alphaBiasShift,n._radBiasShift=8,n._radBias=1<<n._radBiasShift,n._alphaRadBiasShift=n._alphaBiasShift+n._radBiasShift,n._alphaRadBias=1<<n._alphaRadBiasShift,n}();h.NeuQuant=i},function(v,h,g){var b=g(23),u=g(5),f=10;function s(n,p){for(var y=360,l=y/p,m=l/2,c=1,w=l-m;c<p;c++,w+=l)if(n>=w&&n<w+l)return c;return 0}h.hueGroup=s;var i=function(){function n(){this._pointArray=[],this._i32idx={},this._pointContainer=new b.PointContainer,this._pointContainer.setHeight(1),this._pointArray=this._pointContainer.getPointArray()}return n.prototype.add=function(p){this._pointArray.push(p),this._pointContainer.setWidth(this._pointArray.length)},n.prototype.has=function(p){for(var y=this._pointArray.length-1;y>=0;y--)if(p.uint32===this._pointArray[y].uint32)return!0;return!1},n.prototype.getNearestColor=function(p,y){return this._pointArray[this.getNearestIndex(p,y)|0]},n.prototype.getPointContainer=function(){return this._pointContainer},n.prototype._nearestPointFromCache=function(p){return typeof this._i32idx[p]=="number"?this._i32idx[p]:-1},n.prototype.getNearestIndex=function(p,y){var l=this._nearestPointFromCache(""+y.uint32);if(l>=0)return l;var m=Number.MAX_VALUE;l=0;for(var c=0,w=this._pointArray.length;c<w;c++){var x=this._pointArray[c],A=p.calculateRaw(y.r,y.g,y.b,y.a,x.r,x.g,x.b,x.a);A<m&&(m=A,l=c)}return this._i32idx[y.uint32]=l,l},n.prototype.sort=function(){this._i32idx={},this._pointArray.sort(function(p,y){var l=u.rgb2hsl(p.r,p.g,p.b),m=u.rgb2hsl(y.r,y.g,y.b),c=p.r===p.g&&p.g===p.b?0:1+s(l.h,f),w=y.r===y.g&&y.g===y.b?0:1+s(m.h,f),x=w-c;if(x)return-x;var A=p.getLuminosity(!0),N=y.getLuminosity(!0);if(N-A!==0)return N-A;var E=(m.s*100|0)-(l.s*100|0);return E?-E:0})},n}();h.Palette=i},function(v,h,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * pointContainer.ts - part of Image Quantization Library
 */var b=g(24),u=function(){function f(){this._width=0,this._height=0,this._pointArray=[]}return f.prototype.getWidth=function(){return this._width},f.prototype.getHeight=function(){return this._height},f.prototype.setWidth=function(s){this._width=s},f.prototype.setHeight=function(s){this._height=s},f.prototype.getPointArray=function(){return this._pointArray},f.prototype.clone=function(){var s=new f;s._width=this._width,s._height=this._height;for(var i=0,n=this._pointArray.length;i<n;i++)s._pointArray[i]=b.Point.createByUint32(this._pointArray[i].uint32|0);return s},f.prototype.toUint32Array=function(){for(var s=this._pointArray.length,i=new Uint32Array(s),n=0;n<s;n++)i[n]=this._pointArray[n].uint32;return i},f.prototype.toUint8Array=function(){return new Uint8Array(this.toUint32Array().buffer)},f.fromHTMLImageElement=function(s){var i=s.naturalWidth,n=s.naturalHeight,p=document.createElement("canvas");p.width=i,p.height=n;var y=p.getContext("2d");return y.drawImage(s,0,0,i,n,0,0,i,n),f.fromHTMLCanvasElement(p)},f.fromHTMLCanvasElement=function(s){var i=s.width,n=s.height,p=s.getContext("2d"),y=p.getImageData(0,0,i,n);return f.fromImageData(y)},f.fromNodeCanvas=function(s){return f.fromHTMLCanvasElement(s)},f.fromImageData=function(s){var i=s.width,n=s.height;return f.fromCanvasPixelArray(s.data,i,n)},f.fromArray=function(s,i,n){var p=new Uint8Array(s);return f.fromUint8Array(p,i,n)},f.fromCanvasPixelArray=function(s,i,n){return f.fromArray(s,i,n)},f.fromUint8Array=function(s,i,n){return f.fromUint32Array(new Uint32Array(s.buffer),i,n)},f.fromUint32Array=function(s,i,n){var p=new f;p._width=i,p._height=n;for(var y=0,l=s.length;y<l;y++)p._pointArray[y]=b.Point.createByUint32(s[y]|0);return p},f}();h.PointContainer=u},function(v,h,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * point.ts - part of Image Quantization Library
 */var b=g(2),u=function(){function f(){this.uint32=-1>>>0,this.r=this.g=this.b=this.a=0,this.rgba=new Array(4),this.rgba[0]=0,this.rgba[1]=0,this.rgba[2]=0,this.rgba[3]=0}return f.createByQuadruplet=function(s){var i=new f;return i.r=s[0]|0,i.g=s[1]|0,i.b=s[2]|0,i.a=s[3]|0,i._loadUINT32(),i._loadQuadruplet(),i},f.createByRGBA=function(s,i,n,p){var y=new f;return y.r=s|0,y.g=i|0,y.b=n|0,y.a=p|0,y._loadUINT32(),y._loadQuadruplet(),y},f.createByUint32=function(s){var i=new f;return i.uint32=s>>>0,i._loadRGBA(),i._loadQuadruplet(),i},f.prototype.from=function(s){this.r=s.r,this.g=s.g,this.b=s.b,this.a=s.a,this.uint32=s.uint32,this.rgba[0]=s.r,this.rgba[1]=s.g,this.rgba[2]=s.b,this.rgba[3]=s.a},f.prototype.getLuminosity=function(s){var i=this.r,n=this.g,p=this.b;return s&&(i=Math.min(255,255-this.a+this.a*i/255),n=Math.min(255,255-this.a+this.a*n/255),p=Math.min(255,255-this.a+this.a*p/255)),i*b.Y.RED+n*b.Y.GREEN+p*b.Y.BLUE},f.prototype._loadUINT32=function(){this.uint32=(this.a<<24|this.b<<16|this.g<<8|this.r)>>>0},f.prototype._loadRGBA=function(){this.r=this.uint32&255,this.g=this.uint32>>>8&255,this.b=this.uint32>>>16&255,this.a=this.uint32>>>24&255},f.prototype._loadQuadruplet=function(){this.rgba[0]=this.r,this.rgba[1]=this.g,this.rgba[2]=this.b,this.rgba[3]=this.a},f}();h.Point=u},function(v,h,g){/**
 * @preserve TypeScript port:
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * neuquant.ts - part of Image Quantization Library
 */var b=g(22),u=g(24),f=3,s=function(){function n(p){this.r=this.g=this.b=this.a=p}return n.prototype.toPoint=function(){return u.Point.createByRGBA(this.r>>f,this.g>>f,this.b>>f,this.a>>f)},n.prototype.subtract=function(p,y,l,m){this.r-=p,this.g-=y,this.b-=l,this.a-=m},n}(),i=function(){function n(p,y){y===void 0&&(y=256),this._distance=p,this._pointArray=[],this._sampleFactor=1,this._networkSize=y,this._distance.setWhitePoint(255<<f,255<<f,255<<f,255<<f)}return n.prototype.sample=function(p){this._pointArray=this._pointArray.concat(p.getPointArray())},n.prototype.quantize=function(){return this._init(),this._learn(),this._buildPalette()},n.prototype._init=function(){this._freq=[],this._bias=[],this._radPower=[],this._network=[];for(var p=0;p<this._networkSize;p++)this._network[p]=new s((p<<f+8)/this._networkSize),this._freq[p]=n._initialBias/this._networkSize,this._bias[p]=0},n.prototype._learn=function(){var p=this._sampleFactor,y=this._pointArray.length;y<n._minpicturebytes&&(p=1);var l=30+(p-1)/3,m=y/p,c=m/n._nCycles|0,w=n._initAlpha,x=(this._networkSize>>3)*n._radiusBias,A=x>>n._radiusBiasShift;A<=1&&(A=0);for(var N=0;N<A;N++)this._radPower[N]=w*((A*A-N*N)*n._radBias/(A*A));var E;y<n._minpicturebytes?E=1:y%n._prime1!=0?E=n._prime1:y%n._prime2!=0?E=n._prime2:y%n._prime3!=0?E=n._prime3:E=n._prime4;for(var N=0,k=0;N<m;){var S=this._pointArray[k],R=S.b<<f,M=S.g<<f,B=S.r<<f,I=S.a<<f,Y=this._contest(R,M,B,I);if(this._alterSingle(w,Y,R,M,B,I),A!=0&&this._alterNeighbour(A,Y,R,M,B,I),k+=E,k>=y&&(k-=y),N++,c==0&&(c=1),N%c==0){w-=w/l,x-=x/n._radiusDecrease,A=x>>n._radiusBiasShift,A<=1&&(A=0);for(var J=0;J<A;J++)this._radPower[J]=w*((A*A-J*J)*n._radBias/(A*A))}}},n.prototype._buildPalette=function(){var p=new b.Palette;return this._network.forEach(function(y){p.add(y.toPoint())}),p.sort(),p},n.prototype._alterNeighbour=function(p,y,l,m,c,w){var x=y-p;x<-1&&(x=-1);var A=y+p;A>this._networkSize&&(A=this._networkSize);for(var N=y+1,E=y-1,k=1;N<A||E>x;){var S=this._radPower[k++]/n._alphaRadBias;if(N<A){var R=this._network[N++];R.subtract(S*(R.r-c),S*(R.g-m),S*(R.b-l),S*(R.a-w))}if(E>x){var R=this._network[E--];R.subtract(S*(R.r-c),S*(R.g-m),S*(R.b-l),S*(R.a-w))}}},n.prototype._alterSingle=function(p,y,l,m,c,w){p/=n._initAlpha;var x=this._network[y];x.subtract(p*(x.r-c),p*(x.g-m),p*(x.b-l),p*(x.a-w))},n.prototype._contest=function(p,y,l,m){for(var c=1020<<f,w=~(1<<31),x=w,A=-1,N=A,E=0;E<this._networkSize;E++){var k=this._network[E],S=this._distance.calculateNormalized(k,{r:l,g:y,b:p,a:m})*c;S<w&&(w=S,A=E);var R=S-(this._bias[E]>>n._initialBiasShift-f);R<x&&(x=R,N=E);var M=this._freq[E]>>n._betaShift;this._freq[E]-=M,this._bias[E]+=M<<n._gammaShift}return this._freq[A]+=n._beta,this._bias[A]-=n._betaGamma,N},n._prime1=499,n._prime2=491,n._prime3=487,n._prime4=503,n._minpicturebytes=n._prime4,n._nCycles=100,n._initialBiasShift=16,n._initialBias=1<<n._initialBiasShift,n._gammaShift=10,n._betaShift=10,n._beta=n._initialBias>>n._betaShift,n._betaGamma=n._initialBias<<n._gammaShift-n._betaShift,n._radiusBiasShift=6,n._radiusBias=1<<n._radiusBiasShift,n._radiusDecrease=30,n._alphaBiasShift=10,n._initAlpha=1<<n._alphaBiasShift,n._radBiasShift=8,n._radBias=1<<n._radBiasShift,n._alphaRadBiasShift=n._alphaBiasShift+n._radBiasShift,n._alphaRadBias=1<<n._alphaRadBiasShift,n}();h.NeuQuantFloat=i},function(v,h,g){/**
 * @preserve TypeScript port:
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * rgbquant.ts - part of Image Quantization Library
 */var b=g(22),u=g(24),f=g(27),s=g(6),i=function(){function p(y,l,m){this.index=y,this.color=l,this.distance=m}return p}(),n=function(){function p(y,l,m){l===void 0&&(l=256),m===void 0&&(m=2),this._distance=y,this._colors=l,this._histogram=new f.ColorHistogram(m,l),this._initialDistance=.01,this._distanceIncrement=.005}return p.prototype.sample=function(y){this._histogram.sample(y)},p.prototype.quantize=function(){var y=this._histogram.getImportanceSortedColorsIDXI32();if(y.length===0)throw new Error("No colors in image");var l=this._buildPalette(y);return l.sort(),l},p.prototype._buildPalette=function(y){for(var l=new b.Palette,m=l.getPointContainer().getPointArray(),c=new Array(y.length),w=0;w<y.length;w++)m.push(u.Point.createByUint32(y[w])),c[w]=1;for(var x=m.length,A=[],N=x,E=this._initialDistance;N>this._colors;){A.length=0;for(var w=0;w<x;w++)if(c[w]!==0){for(var k=m[w],S=w+1;S<x;S++)if(c[S]!==0){var R=m[S],M=this._distance.calculateNormalized(k,R);M<E&&(A.push(new i(S,R,M)),c[S]=0,N--)}}E+=N>this._colors*3?this._initialDistance:this._distanceIncrement}if(N<this._colors){s.stableSort(A,function(D,T){return T.distance-D.distance});for(var B=0;N<this._colors&&B<A.length;){var I=A[B];c[I.index]=1,N++,B++}}for(var Y=m.length,J=Y-1;J>=0;J--)c[J]===0&&(J!==Y-1&&(m[J]=m[Y-1]),--Y);return m.length=Y,l},p}();h.RGBQuant=n},function(v,h,g){/**
 * @preserve TypeScript port:
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * colorHistogram.ts - part of Image Quantization Library
 */var b=g(28),u=g(6),f=function(){function s(i,n){this._method=i,this._minHueCols=n<<2,this._initColors=n<<2,this._hueStats=new b.HueStatistics(s._hueGroups,this._minHueCols),this._histogram=Object.create(null)}return s.prototype.sample=function(i){switch(this._method){case 1:this._colorStats1D(i);break;case 2:this._colorStats2D(i);break}},s.prototype.getImportanceSortedColorsIDXI32=function(){var i=this,n=u.stableSort(Object.keys(this._histogram),function(x,A){return i._histogram[A]-i._histogram[x]});if(n.length===0)return[];var p;switch(this._method){case 1:var y=Math.min(n.length,this._initColors),l=n[y-1],m=this._histogram[l];p=n.slice(0,y);for(var c=y,w=n.length;c<w&&this._histogram[n[c]]==m;)p.push(n[c++]);this._hueStats.injectIntoArray(p);break;case 2:p=n;break;default:throw new Error("Incorrect method")}return p.map(function(x){return+x})},s.prototype._colorStats1D=function(i){for(var n=this._histogram,p=i.getPointArray(),y=p.length,l=0;l<y;l++){var m=p[l].uint32;this._hueStats.check(m),m in n?n[m]++:n[m]=1}},s.prototype._colorStats2D=function(i){var n=this,p=i.getWidth(),y=i.getHeight(),l=i.getPointArray(),m=s._boxSize[0],c=s._boxSize[1],w=m*c,x=this._makeBoxes(p,y,m,c),A=this._histogram;x.forEach(function(N){var E=Math.round(N.w*N.h/w)*s._boxPixels;E<2&&(E=2);var k={};n._iterateBox(N,p,function(S){var R=l[S].uint32;n._hueStats.check(R),R in A?A[R]++:R in k?++k[R]>=E&&(A[R]=k[R]):k[R]=1})}),this._hueStats.injectIntoDictionary(A)},s.prototype._iterateBox=function(i,n,p){var y=i,l=y.y*n+y.x,m=(y.y+y.h-1)*n+(y.x+y.w-1),c=n-y.w+1,w=0,x=l;do p.call(this,x),x+=++w%y.w==0?c:1;while(x<=m)},s.prototype._makeBoxes=function(i,n,p,y){for(var l=i%p,m=n%y,c=i-l,w=n-m,x=[],A=0;A<n;A+=y)for(var N=0;N<i;N+=p)x.push({x:N,y:A,w:N==c?l:p,h:A==w?m:y});return x},s._boxSize=[64,64],s._boxPixels=2,s._hueGroups=10,s}();h.ColorHistogram=f},function(v,h,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * hueStatistics.ts - part of Image Quantization Library
 */var b=g(5),u=g(22),f=function(){function i(){this.num=0,this.cols=[]}return i}(),s=function(){function i(n,p){this._numGroups=n,this._minCols=p,this._stats=[];for(var y=0;y<=n;y++)this._stats[y]=new f;this._groupsFull=0}return i.prototype.check=function(n){this._groupsFull==this._numGroups+1&&(this.check=function(){});var p=n&255,y=n>>>8&255,l=n>>>16&255,m=p==y&&y==l?0:1+u.hueGroup(b.rgb2hsl(p,y,l).h,this._numGroups),c=this._stats[m],w=this._minCols;c.num++,!(c.num>w)&&(c.num==w&&this._groupsFull++,c.num<=w&&this._stats[m].cols.push(n))},i.prototype.injectIntoDictionary=function(n){for(var p=0;p<=this._numGroups;p++)this._stats[p].num<=this._minCols&&this._stats[p].cols.forEach(function(y){n[y]?n[y]++:n[y]=1})},i.prototype.injectIntoArray=function(n){for(var p=0;p<=this._numGroups;p++)this._stats[p].num<=this._minCols&&this._stats[p].cols.forEach(function(y){n.indexOf(y)==-1&&n.push(y)})},i}();h.HueStatistics=s},function(v,h,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * wuQuant.ts - part of Image Quantization Library
 */var b=g(22),u=g(24);function f(m){for(var c=[],w=0;w<m;w++)c[w]=0;return c}function s(m,c,w,x){for(var A=new Array(m),N=0;N<m;N++){A[N]=new Array(c);for(var E=0;E<c;E++){A[N][E]=new Array(w);for(var k=0;k<w;k++){A[N][E][k]=new Array(x);for(var S=0;S<x;S++)A[N][E][k][S]=0}}}return A}function i(m,c,w){for(var x=new Array(m),A=0;A<m;A++){x[A]=new Array(c);for(var N=0;N<c;N++){x[A][N]=new Array(w);for(var E=0;E<w;E++)x[A][N][E]=0}}return x}function n(m,c,w,x,A){for(var N=0;N<c;N++){m[N]=[];for(var E=0;E<w;E++){m[N][E]=[];for(var k=0;k<x;k++)m[N][E][k]=A}}}function p(m,c,w){for(var x=0;x<c;x++)m[x]=w}var y=function(){function m(){}return m}();h.WuColorCube=y;var l=function(){function m(c,w,x){w===void 0&&(w=256),x===void 0&&(x=5),this._distance=c,this._setQuality(x),this._initialize(w)}return m.prototype.sample=function(c){for(var w=c.getPointArray(),x=0,A=w.length;x<A;x++)this._addColor(w[x]);this._pixels=this._pixels.concat(w)},m.prototype.quantize=function(){this._preparePalette();for(var c=new b.Palette,w=0;w<this._colors;w++)if(this._sums[w]>0){var x=this._sums[w],A=this._reds[w]/x,N=this._greens[w]/x,E=this._blues[w]/x,k=this._alphas[w]/x,S=u.Point.createByRGBA(A|0,N|0,E|0,k|0);c.add(S)}return c.sort(),c},m.prototype._preparePalette=function(){this._calculateMoments();for(var c=0,w=f(this._colors),x=1;x<this._colors;++x){this._cut(this._cubes[c],this._cubes[x])?(w[c]=this._cubes[c].volume>1?this._calculateVariance(this._cubes[c]):0,w[x]=this._cubes[x].volume>1?this._calculateVariance(this._cubes[x]):0):(w[c]=0,x--),c=0;for(var A=w[0],N=1;N<=x;++N)w[N]>A&&(A=w[N],c=N);if(A<=0){this._colors=x+1;break}}for(var E=[],k=[],S=[],R=[],M=0;M<this._colors;++M){var B=m._volume(this._cubes[M],this._weights);B>0?(E[M]=m._volume(this._cubes[M],this._momentsRed)/B|0,k[M]=m._volume(this._cubes[M],this._momentsGreen)/B|0,S[M]=m._volume(this._cubes[M],this._momentsBlue)/B|0,R[M]=m._volume(this._cubes[M],this._momentsAlpha)/B|0):(E[M]=0,k[M]=0,S[M]=0,R[M]=0)}this._reds=f(this._colors+1),this._greens=f(this._colors+1),this._blues=f(this._colors+1),this._alphas=f(this._colors+1),this._sums=f(this._colors+1);for(var N=0,I=this._pixels.length;N<I;N++){for(var Y=this._pixels[N],J=-1,D=J,T=Number.MAX_VALUE,G=0;G<this._colors;G++){var U=E[G],ie=k[G],se=S[G],ae=R[G],W=this._distance.calculateRaw(U,ie,se,ae,Y.r,Y.g,Y.b,Y.a);W<T&&(T=W,D=G)}this._reds[D]+=Y.r,this._greens[D]+=Y.g,this._blues[D]+=Y.b,this._alphas[D]+=Y.a,this._sums[D]++}},m.prototype._addColor=function(c){var w=8-this._significantBitsPerChannel,x=(c.r>>w)+1,A=(c.g>>w)+1,N=(c.b>>w)+1,E=(c.a>>w)+1;this._weights[E][x][A][N]++,this._momentsRed[E][x][A][N]+=c.r,this._momentsGreen[E][x][A][N]+=c.g,this._momentsBlue[E][x][A][N]+=c.b,this._momentsAlpha[E][x][A][N]+=c.a,this._moments[E][x][A][N]+=this._table[c.r]+this._table[c.g]+this._table[c.b]+this._table[c.a]},m.prototype._calculateMoments=function(){for(var c=[],w=[],x=[],A=[],N=[],E=[],k=i(this._sideSize,this._sideSize,this._sideSize),S=i(this._sideSize,this._sideSize,this._sideSize),R=i(this._sideSize,this._sideSize,this._sideSize),M=i(this._sideSize,this._sideSize,this._sideSize),B=i(this._sideSize,this._sideSize,this._sideSize),I=i(this._sideSize,this._sideSize,this._sideSize),Y=1;Y<=this._alphaMaxSideIndex;++Y){n(k,this._sideSize,this._sideSize,this._sideSize,0),n(S,this._sideSize,this._sideSize,this._sideSize,0),n(R,this._sideSize,this._sideSize,this._sideSize,0),n(M,this._sideSize,this._sideSize,this._sideSize,0),n(B,this._sideSize,this._sideSize,this._sideSize,0),n(I,this._sideSize,this._sideSize,this._sideSize,0);for(var J=1;J<=this._maxSideIndex;++J){p(c,this._sideSize,0),p(w,this._sideSize,0),p(x,this._sideSize,0),p(A,this._sideSize,0),p(N,this._sideSize,0),p(E,this._sideSize,0);for(var D=1;D<=this._maxSideIndex;++D)for(var T=0,G=0,U=0,ie=0,se=0,ae=0,W=1;W<=this._maxSideIndex;++W)T+=this._weights[Y][J][D][W],G+=this._momentsRed[Y][J][D][W],U+=this._momentsGreen[Y][J][D][W],ie+=this._momentsBlue[Y][J][D][W],se+=this._momentsAlpha[Y][J][D][W],ae+=this._moments[Y][J][D][W],c[W]+=T,w[W]+=G,x[W]+=U,A[W]+=ie,N[W]+=se,E[W]+=ae,k[J][D][W]=k[J-1][D][W]+c[W],S[J][D][W]=S[J-1][D][W]+w[W],R[J][D][W]=R[J-1][D][W]+x[W],M[J][D][W]=M[J-1][D][W]+A[W],B[J][D][W]=B[J-1][D][W]+N[W],I[J][D][W]=I[J-1][D][W]+E[W],this._weights[Y][J][D][W]=this._weights[Y-1][J][D][W]+k[J][D][W],this._momentsRed[Y][J][D][W]=this._momentsRed[Y-1][J][D][W]+S[J][D][W],this._momentsGreen[Y][J][D][W]=this._momentsGreen[Y-1][J][D][W]+R[J][D][W],this._momentsBlue[Y][J][D][W]=this._momentsBlue[Y-1][J][D][W]+M[J][D][W],this._momentsAlpha[Y][J][D][W]=this._momentsAlpha[Y-1][J][D][W]+B[J][D][W],this._moments[Y][J][D][W]=this._moments[Y-1][J][D][W]+I[J][D][W]}}},m._volumeFloat=function(c,w){return w[c.alphaMaximum][c.redMaximum][c.greenMaximum][c.blueMaximum]-w[c.alphaMaximum][c.redMaximum][c.greenMinimum][c.blueMaximum]-w[c.alphaMaximum][c.redMinimum][c.greenMaximum][c.blueMaximum]+w[c.alphaMaximum][c.redMinimum][c.greenMinimum][c.blueMaximum]-w[c.alphaMinimum][c.redMaximum][c.greenMaximum][c.blueMaximum]+w[c.alphaMinimum][c.redMaximum][c.greenMinimum][c.blueMaximum]+w[c.alphaMinimum][c.redMinimum][c.greenMaximum][c.blueMaximum]-w[c.alphaMinimum][c.redMinimum][c.greenMinimum][c.blueMaximum]-(w[c.alphaMaximum][c.redMaximum][c.greenMaximum][c.blueMinimum]-w[c.alphaMinimum][c.redMaximum][c.greenMaximum][c.blueMinimum]-w[c.alphaMaximum][c.redMaximum][c.greenMinimum][c.blueMinimum]+w[c.alphaMinimum][c.redMaximum][c.greenMinimum][c.blueMinimum]-w[c.alphaMaximum][c.redMinimum][c.greenMaximum][c.blueMinimum]+w[c.alphaMinimum][c.redMinimum][c.greenMaximum][c.blueMinimum]+w[c.alphaMaximum][c.redMinimum][c.greenMinimum][c.blueMinimum]-w[c.alphaMinimum][c.redMinimum][c.greenMinimum][c.blueMinimum])},m._volume=function(c,w){return m._volumeFloat(c,w)|0},m._top=function(c,w,x,A){var N;switch(w){case m.alpha:N=A[x][c.redMaximum][c.greenMaximum][c.blueMaximum]-A[x][c.redMaximum][c.greenMinimum][c.blueMaximum]-A[x][c.redMinimum][c.greenMaximum][c.blueMaximum]+A[x][c.redMinimum][c.greenMinimum][c.blueMaximum]-(A[x][c.redMaximum][c.greenMaximum][c.blueMinimum]-A[x][c.redMaximum][c.greenMinimum][c.blueMinimum]-A[x][c.redMinimum][c.greenMaximum][c.blueMinimum]+A[x][c.redMinimum][c.greenMinimum][c.blueMinimum]);break;case m.red:N=A[c.alphaMaximum][x][c.greenMaximum][c.blueMaximum]-A[c.alphaMaximum][x][c.greenMinimum][c.blueMaximum]-A[c.alphaMinimum][x][c.greenMaximum][c.blueMaximum]+A[c.alphaMinimum][x][c.greenMinimum][c.blueMaximum]-(A[c.alphaMaximum][x][c.greenMaximum][c.blueMinimum]-A[c.alphaMaximum][x][c.greenMinimum][c.blueMinimum]-A[c.alphaMinimum][x][c.greenMaximum][c.blueMinimum]+A[c.alphaMinimum][x][c.greenMinimum][c.blueMinimum]);break;case m.green:N=A[c.alphaMaximum][c.redMaximum][x][c.blueMaximum]-A[c.alphaMaximum][c.redMinimum][x][c.blueMaximum]-A[c.alphaMinimum][c.redMaximum][x][c.blueMaximum]+A[c.alphaMinimum][c.redMinimum][x][c.blueMaximum]-(A[c.alphaMaximum][c.redMaximum][x][c.blueMinimum]-A[c.alphaMaximum][c.redMinimum][x][c.blueMinimum]-A[c.alphaMinimum][c.redMaximum][x][c.blueMinimum]+A[c.alphaMinimum][c.redMinimum][x][c.blueMinimum]);break;case m.blue:N=A[c.alphaMaximum][c.redMaximum][c.greenMaximum][x]-A[c.alphaMaximum][c.redMaximum][c.greenMinimum][x]-A[c.alphaMaximum][c.redMinimum][c.greenMaximum][x]+A[c.alphaMaximum][c.redMinimum][c.greenMinimum][x]-(A[c.alphaMinimum][c.redMaximum][c.greenMaximum][x]-A[c.alphaMinimum][c.redMaximum][c.greenMinimum][x]-A[c.alphaMinimum][c.redMinimum][c.greenMaximum][x]+A[c.alphaMinimum][c.redMinimum][c.greenMinimum][x]);break;default:throw new Error("impossible")}return N|0},m._bottom=function(c,w,x){switch(w){case m.alpha:return-x[c.alphaMinimum][c.redMaximum][c.greenMaximum][c.blueMaximum]+x[c.alphaMinimum][c.redMaximum][c.greenMinimum][c.blueMaximum]+x[c.alphaMinimum][c.redMinimum][c.greenMaximum][c.blueMaximum]-x[c.alphaMinimum][c.redMinimum][c.greenMinimum][c.blueMaximum]-(-x[c.alphaMinimum][c.redMaximum][c.greenMaximum][c.blueMinimum]+x[c.alphaMinimum][c.redMaximum][c.greenMinimum][c.blueMinimum]+x[c.alphaMinimum][c.redMinimum][c.greenMaximum][c.blueMinimum]-x[c.alphaMinimum][c.redMinimum][c.greenMinimum][c.blueMinimum]);case m.red:return-x[c.alphaMaximum][c.redMinimum][c.greenMaximum][c.blueMaximum]+x[c.alphaMaximum][c.redMinimum][c.greenMinimum][c.blueMaximum]+x[c.alphaMinimum][c.redMinimum][c.greenMaximum][c.blueMaximum]-x[c.alphaMinimum][c.redMinimum][c.greenMinimum][c.blueMaximum]-(-x[c.alphaMaximum][c.redMinimum][c.greenMaximum][c.blueMinimum]+x[c.alphaMaximum][c.redMinimum][c.greenMinimum][c.blueMinimum]+x[c.alphaMinimum][c.redMinimum][c.greenMaximum][c.blueMinimum]-x[c.alphaMinimum][c.redMinimum][c.greenMinimum][c.blueMinimum]);case m.green:return-x[c.alphaMaximum][c.redMaximum][c.greenMinimum][c.blueMaximum]+x[c.alphaMaximum][c.redMinimum][c.greenMinimum][c.blueMaximum]+x[c.alphaMinimum][c.redMaximum][c.greenMinimum][c.blueMaximum]-x[c.alphaMinimum][c.redMinimum][c.greenMinimum][c.blueMaximum]-(-x[c.alphaMaximum][c.redMaximum][c.greenMinimum][c.blueMinimum]+x[c.alphaMaximum][c.redMinimum][c.greenMinimum][c.blueMinimum]+x[c.alphaMinimum][c.redMaximum][c.greenMinimum][c.blueMinimum]-x[c.alphaMinimum][c.redMinimum][c.greenMinimum][c.blueMinimum]);case m.blue:return-x[c.alphaMaximum][c.redMaximum][c.greenMaximum][c.blueMinimum]+x[c.alphaMaximum][c.redMaximum][c.greenMinimum][c.blueMinimum]+x[c.alphaMaximum][c.redMinimum][c.greenMaximum][c.blueMinimum]-x[c.alphaMaximum][c.redMinimum][c.greenMinimum][c.blueMinimum]-(-x[c.alphaMinimum][c.redMaximum][c.greenMaximum][c.blueMinimum]+x[c.alphaMinimum][c.redMaximum][c.greenMinimum][c.blueMinimum]+x[c.alphaMinimum][c.redMinimum][c.greenMaximum][c.blueMinimum]-x[c.alphaMinimum][c.redMinimum][c.greenMinimum][c.blueMinimum]);default:return 0}},m.prototype._calculateVariance=function(c){var w=m._volume(c,this._momentsRed),x=m._volume(c,this._momentsGreen),A=m._volume(c,this._momentsBlue),N=m._volume(c,this._momentsAlpha),E=m._volumeFloat(c,this._moments),k=m._volume(c,this._weights),S=w*w+x*x+A*A+N*N;return E-S/k},m.prototype._maximize=function(c,w,x,A,N,E,k,S,R){for(var M=m._bottom(c,w,this._momentsRed)|0,B=m._bottom(c,w,this._momentsGreen)|0,I=m._bottom(c,w,this._momentsBlue)|0,Y=m._bottom(c,w,this._momentsAlpha)|0,J=m._bottom(c,w,this._weights)|0,D=0,T=-1,G=x;G<A;++G){var U=M+m._top(c,w,G,this._momentsRed),ie=B+m._top(c,w,G,this._momentsGreen),se=I+m._top(c,w,G,this._momentsBlue),ae=Y+m._top(c,w,G,this._momentsAlpha),W=J+m._top(c,w,G,this._weights);if(W!=0){var ee=U*U+ie*ie+se*se+ae*ae,_=ee/W;U=N-U,ie=E-ie,se=k-se,ae=S-ae,W=R-W,W!=0&&(ee=U*U+ie*ie+se*se+ae*ae,_+=ee/W,_>D&&(D=_,T=G))}}return{max:D,position:T}},m.prototype._cut=function(c,w){var x,A=m._volume(c,this._momentsRed),N=m._volume(c,this._momentsGreen),E=m._volume(c,this._momentsBlue),k=m._volume(c,this._momentsAlpha),S=m._volume(c,this._weights),R=this._maximize(c,m.red,c.redMinimum+1,c.redMaximum,A,N,E,k,S),M=this._maximize(c,m.green,c.greenMinimum+1,c.greenMaximum,A,N,E,k,S),B=this._maximize(c,m.blue,c.blueMinimum+1,c.blueMaximum,A,N,E,k,S),I=this._maximize(c,m.alpha,c.alphaMinimum+1,c.alphaMaximum,A,N,E,k,S);if(I.max>=R.max&&I.max>=M.max&&I.max>=B.max){if(x=m.alpha,I.position<0)return!1}else R.max>=I.max&&R.max>=M.max&&R.max>=B.max?x=m.red:M.max>=I.max&&M.max>=R.max&&M.max>=B.max?x=m.green:x=m.blue;switch(w.redMaximum=c.redMaximum,w.greenMaximum=c.greenMaximum,w.blueMaximum=c.blueMaximum,w.alphaMaximum=c.alphaMaximum,x){case m.red:w.redMinimum=c.redMaximum=R.position,w.greenMinimum=c.greenMinimum,w.blueMinimum=c.blueMinimum,w.alphaMinimum=c.alphaMinimum;break;case m.green:w.greenMinimum=c.greenMaximum=M.position,w.redMinimum=c.redMinimum,w.blueMinimum=c.blueMinimum,w.alphaMinimum=c.alphaMinimum;break;case m.blue:w.blueMinimum=c.blueMaximum=B.position,w.redMinimum=c.redMinimum,w.greenMinimum=c.greenMinimum,w.alphaMinimum=c.alphaMinimum;break;case m.alpha:w.alphaMinimum=c.alphaMaximum=I.position,w.blueMinimum=c.blueMinimum,w.redMinimum=c.redMinimum,w.greenMinimum=c.greenMinimum;break}return c.volume=(c.redMaximum-c.redMinimum)*(c.greenMaximum-c.greenMinimum)*(c.blueMaximum-c.blueMinimum)*(c.alphaMaximum-c.alphaMinimum),w.volume=(w.redMaximum-w.redMinimum)*(w.greenMaximum-w.greenMinimum)*(w.blueMaximum-w.blueMinimum)*(w.alphaMaximum-w.alphaMinimum),!0},m.prototype._initialize=function(c){this._colors=c,this._cubes=[];for(var w=0;w<c;w++)this._cubes[w]=new y;this._cubes[0].redMinimum=0,this._cubes[0].greenMinimum=0,this._cubes[0].blueMinimum=0,this._cubes[0].alphaMinimum=0,this._cubes[0].redMaximum=this._maxSideIndex,this._cubes[0].greenMaximum=this._maxSideIndex,this._cubes[0].blueMaximum=this._maxSideIndex,this._cubes[0].alphaMaximum=this._alphaMaxSideIndex,this._weights=s(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize),this._momentsRed=s(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize),this._momentsGreen=s(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize),this._momentsBlue=s(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize),this._momentsAlpha=s(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize),this._moments=s(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize),this._table=[];for(var x=0;x<256;++x)this._table[x]=x*x;this._pixels=[]},m.prototype._setQuality=function(c){c===void 0&&(c=5),this._significantBitsPerChannel=c,this._maxSideIndex=1<<this._significantBitsPerChannel,this._alphaMaxSideIndex=this._maxSideIndex,this._sideSize=this._maxSideIndex+1,this._alphaSideSize=this._alphaMaxSideIndex+1},m.alpha=3,m.red=2,m.green=1,m.blue=0,m}();h.WuQuant=l},function(v,h,g){var b=g(31);h.NearestColor=b.NearestColor;var u=g(32);h.ErrorDiffusionArray=u.ErrorDiffusionArray,h.ErrorDiffusionArrayKernel=u.ErrorDiffusionArrayKernel;var f=g(33);h.ErrorDiffusionRiemersma=f.ErrorDiffusionRiemersma},function(v,h){var g=function(){function b(u){this._distance=u}return b.prototype.quantize=function(u,f){for(var s=u.getPointArray(),i=u.getWidth(),n=u.getHeight(),p=0;p<n;p++)for(var y=0,l=p*i;y<i;y++,l++){var m=s[l];m.from(f.getNearestColor(this._distance,m))}return u},b}();h.NearestColor=g},function(v,h,g){var b=g(24),u=g(6);(function(i){i[i.FloydSteinberg=0]="FloydSteinberg",i[i.FalseFloydSteinberg=1]="FalseFloydSteinberg",i[i.Stucki=2]="Stucki",i[i.Atkinson=3]="Atkinson",i[i.Jarvis=4]="Jarvis",i[i.Burkes=5]="Burkes",i[i.Sierra=6]="Sierra",i[i.TwoSierra=7]="TwoSierra",i[i.SierraLite=8]="SierraLite"})(h.ErrorDiffusionArrayKernel||(h.ErrorDiffusionArrayKernel={}));var f=h.ErrorDiffusionArrayKernel,s=function(){function i(n,p,y,l,m){y===void 0&&(y=!0),l===void 0&&(l=0),m===void 0&&(m=!1),this._setKernel(p),this._distance=n,this._minColorDistance=l,this._serpentine=y,this._calculateErrorLikeGIMP=m}return i.prototype.quantize=function(n,p){for(var y=n.getPointArray(),l=new b.Point,m=n.getWidth(),c=n.getHeight(),w=[],x=1,A=1,N=0;N<this._kernel.length;N++){var E=this._kernel[N][2]+1;A<E&&(A=E)}for(var N=0;N<A;N++)this._fillErrorLine(w[N]=[],m);for(var k=0;k<c;k++){this._serpentine&&(x=x*-1);var S=k*m,R=x==1?0:m-1,M=x==1?m:-1;this._fillErrorLine(w[0],m),w.push(w.shift());for(var B=w[0],I=R,Y=S+R;I!==M;I+=x,Y+=x){var J=y[Y],D=B[I];l.from(J);var T=b.Point.createByRGBA(u.inRange0to255Rounded(J.r+D[0]),u.inRange0to255Rounded(J.g+D[1]),u.inRange0to255Rounded(J.b+D[2]),u.inRange0to255Rounded(J.a+D[3])),G=p.getNearestColor(this._distance,T);if(J.from(G),this._minColorDistance){var U=this._distance.calculateNormalized(J,G);if(U<this._minColorDistance)continue}var ie=void 0,se=void 0,ae=void 0,W=void 0;this._calculateErrorLikeGIMP?(ie=T.r-G.r,se=T.g-G.g,ae=T.b-G.b,W=T.a-G.a):(ie=l.r-G.r,se=l.g-G.g,ae=l.b-G.b,W=l.a-G.a);for(var ee=x==1?0:this._kernel.length-1,_=x==1?this._kernel.length:-1,N=ee;N!==_;N+=x){var re=this._kernel[N][1]*x,fe=this._kernel[N][2];if(re+I>=0&&re+I<m&&fe+k>=0&&fe+k<c){var pe=this._kernel[N][0],he=w[fe][re+I];he[0]=he[0]+ie*pe,he[1]=he[1]+se*pe,he[2]=he[2]+ae*pe,he[3]=he[3]+W*pe}}}}return n},i.prototype._fillErrorLine=function(n,p){n.length>p&&(n.length=p);for(var y=n.length,l=0;l<y;l++){var m=n[l];m[0]=m[1]=m[2]=m[3]=0}for(var l=y;l<p;l++)n[l]=[0,0,0,0]},i.prototype._setKernel=function(n){switch(n){case f.FloydSteinberg:this._kernel=[[7/16,1,0],[3/16,-1,1],[5/16,0,1],[1/16,1,1]];break;case f.FalseFloydSteinberg:this._kernel=[[3/8,1,0],[3/8,0,1],[2/8,1,1]];break;case f.Stucki:this._kernel=[[8/42,1,0],[4/42,2,0],[2/42,-2,1],[4/42,-1,1],[8/42,0,1],[4/42,1,1],[2/42,2,1],[1/42,-2,2],[2/42,-1,2],[4/42,0,2],[2/42,1,2],[1/42,2,2]];break;case f.Atkinson:this._kernel=[[1/8,1,0],[1/8,2,0],[1/8,-1,1],[1/8,0,1],[1/8,1,1],[1/8,0,2]];break;case f.Jarvis:this._kernel=[[7/48,1,0],[5/48,2,0],[3/48,-2,1],[5/48,-1,1],[7/48,0,1],[5/48,1,1],[3/48,2,1],[1/48,-2,2],[3/48,-1,2],[5/48,0,2],[3/48,1,2],[1/48,2,2]];break;case f.Burkes:this._kernel=[[8/32,1,0],[4/32,2,0],[2/32,-2,1],[4/32,-1,1],[8/32,0,1],[4/32,1,1],[2/32,2,1]];break;case f.Sierra:this._kernel=[[5/32,1,0],[3/32,2,0],[2/32,-2,1],[4/32,-1,1],[5/32,0,1],[4/32,1,1],[2/32,2,1],[2/32,-1,2],[3/32,0,2],[2/32,1,2]];break;case f.TwoSierra:this._kernel=[[4/16,1,0],[3/16,2,0],[1/16,-2,1],[2/16,-1,1],[3/16,0,1],[2/16,1,1],[1/16,2,1]];break;case f.SierraLite:this._kernel=[[2/4,1,0],[1/4,-1,1],[1/4,0,1]];break;default:throw new Error("ErrorDiffusionArray: unknown kernel = "+n)}},i}();h.ErrorDiffusionArray=s},function(v,h,g){var b=g(34),u=g(24),f=g(6),s=function(){function i(n,p,y){p===void 0&&(p=16),y===void 0&&(y=1),this._distance=n,this._errorPropagation=y,this._errorQueueSize=p,this._max=this._errorQueueSize,this._createWeights()}return i.prototype.quantize=function(n,p){for(var y=this,l=new b.HilbertCurveBase,m=n.getPointArray(),c=n.getWidth(),w=n.getHeight(),x=[],A=0,N=0;N<this._errorQueueSize;N++)x[N]={r:0,g:0,b:0,a:0};return l.walk(c,w,function(E,k){for(var S=m[E+k*c],R=S.r,M=S.g,B=S.b,I=S.a,Y=0;Y<y._errorQueueSize;Y++){var J=y._weights[Y],D=x[(Y+A)%y._errorQueueSize];R+=D.r*J,M+=D.g*J,B+=D.b*J,I+=D.a*J}var T=u.Point.createByRGBA(f.inRange0to255Rounded(R),f.inRange0to255Rounded(M),f.inRange0to255Rounded(B),f.inRange0to255Rounded(I)),G=p.getNearestColor(y._distance,T);A=(A+1)%y._errorQueueSize;var U=(A+y._errorQueueSize-1)%y._errorQueueSize;x[U].r=S.r-G.r,x[U].g=S.g-G.g,x[U].b=S.b-G.b,x[U].a=S.a-G.a,S.from(G)}),n},i.prototype._createWeights=function(){this._weights=[];for(var n=Math.exp(Math.log(this._max)/(this._errorQueueSize-1)),p=0,y=1;p<this._errorQueueSize;p++)this._weights[p]=(y+.5|0)/this._max*this._errorPropagation,y*=n},i}();h.ErrorDiffusionRiemersma=s},function(v,h){var g;(function(u){u[u.NONE=0]="NONE",u[u.UP=1]="UP",u[u.LEFT=2]="LEFT",u[u.RIGHT=3]="RIGHT",u[u.DOWN=4]="DOWN"})(g||(g={}));var b=function(){function u(){}return u.prototype.walk=function(f,s,i){this._x=0,this._y=0,this._d=0,this._width=f,this._height=s,this._callback=i;var n=Math.max(f,s);this._level=Math.log(n)/Math.log(2)+1|0,this._walkHilbert(g.UP),this._visit(g.NONE)},u.prototype._walkHilbert=function(f){if(!(this._level<1)){switch(this._level--,f){case g.LEFT:this._walkHilbert(g.UP),this._visit(g.RIGHT),this._walkHilbert(g.LEFT),this._visit(g.DOWN),this._walkHilbert(g.LEFT),this._visit(g.LEFT),this._walkHilbert(g.DOWN);break;case g.RIGHT:this._walkHilbert(g.DOWN),this._visit(g.LEFT),this._walkHilbert(g.RIGHT),this._visit(g.UP),this._walkHilbert(g.RIGHT),this._visit(g.RIGHT),this._walkHilbert(g.UP);break;case g.UP:this._walkHilbert(g.LEFT),this._visit(g.DOWN),this._walkHilbert(g.UP),this._visit(g.RIGHT),this._walkHilbert(g.UP),this._visit(g.UP),this._walkHilbert(g.RIGHT);break;case g.DOWN:this._walkHilbert(g.RIGHT),this._visit(g.UP),this._walkHilbert(g.DOWN),this._visit(g.LEFT),this._walkHilbert(g.DOWN),this._visit(g.DOWN),this._walkHilbert(g.LEFT);break}this._level++}},u.prototype._visit=function(f){switch(this._x>=0&&this._x<this._width&&this._y>=0&&this._y<this._height&&(this._callback(this._x,this._y,this._d),this._d++),f){case g.LEFT:this._x--;break;case g.RIGHT:this._x++;break;case g.UP:this._y--;break;case g.DOWN:this._y++;break}},u}();h.HilbertCurveBase=b},function(v,h,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * iq.ts - Image Quantization Library
 */var b=g(36);h.SSIM=b.SSIM},function(v,h,g){var b=g(2),u=.01,f=.03,s=function(){function i(){}return i.prototype.compare=function(n,p){if(n.getHeight()!==p.getHeight()||n.getWidth()!==p.getWidth())throw new Error("Images have different sizes!");var y=8,l=(1<<y)-1,m=Math.pow(u*l,2),c=Math.pow(f*l,2),w=0,x=0;return this._iterate(n,p,function(A,N,E,k){for(var S=0,R=0,M=0,B=0;B<A.length;B++)R+=Math.pow(A[B]-E,2),M+=Math.pow(N[B]-k,2),S+=(A[B]-E)*(N[B]-k);var I=A.length-1;R/=I,M/=I,S/=I;var Y=(2*E*k+m)*(2*S+c),J=(Math.pow(E,2)+Math.pow(k,2)+m)*(R+M+c),D=Y/J;x+=D,w++}),x/w},i.prototype._iterate=function(n,p,y){for(var l=8,m=n.getWidth(),c=n.getHeight(),w=0;w<c;w+=l)for(var x=0;x<m;x+=l){var A=Math.min(l,m-x),N=Math.min(l,c-w),E=this._calculateLumaValuesForWindow(n,x,w,A,N),k=this._calculateLumaValuesForWindow(p,x,w,A,N),S=this._calculateAverageLuma(E),R=this._calculateAverageLuma(k);y(E,k,S,R)}},i.prototype._calculateLumaValuesForWindow=function(n,p,y,l,m){for(var c=n.getPointArray(),w=[],x=0,A=y;A<y+m;A++)for(var N=A*n.getWidth(),E=p;E<p+l;E++){var k=c[N+E];w[x]=k.r*b.Y.RED+k.g*b.Y.GREEN+k.b*b.Y.BLUE,x++}return w},i.prototype._calculateAverageLuma=function(n){for(var p=0,y=0;y<n.length;y++)p+=n[y];return p/n.length},i}();h.SSIM=s},function(v,h,g){/**
 * @preserve
 * Copyright 2015-2016 Igor Bezkrovnyi
 * All rights reserved. (MIT Licensed)
 *
 * iq.ts - Image Quantization Library
 */var b=g(6);h.arithmetic=b;var u=g(28);h.HueStatistics=u.HueStatistics;var f=g(22);h.Palette=f.Palette;var s=g(24);h.Point=s.Point;var i=g(23);h.PointContainer=i.PointContainer}])})},{}],75:[function(t,d,o){typeof Object.create=="function"?d.exports=function(h,g){g&&(h.super_=g,h.prototype=Object.create(g.prototype,{constructor:{value:h,enumerable:!1,writable:!0,configurable:!0}}))}:d.exports=function(h,g){if(g){h.super_=g;var b=function(){};b.prototype=g.prototype,h.prototype=new b,h.prototype.constructor=h}}},{}],76:[function(t,d,o){/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */d.exports=function(g){return g!=null&&(v(g)||h(g)||!!g._isBuffer)};function v(g){return!!g.constructor&&typeof g.constructor.isBuffer=="function"&&g.constructor.isBuffer(g)}function h(g){return typeof g.readFloatLE=="function"&&typeof g.slice=="function"&&v(g.slice(0,0))}},{}],77:[function(t,d,o){var v=Function.prototype.toString,h=/^\s*class\b/,g=function(p){try{var y=v.call(p);return h.test(y)}catch{return!1}},b=function(p){try{return g(p)?!1:(v.call(p),!0)}catch{return!1}},u=Object.prototype.toString,f="[object Function]",s="[object GeneratorFunction]",i=typeof Symbol=="function"&&typeof Symbol.toStringTag=="symbol";d.exports=function(p){if(!p||typeof p!="function"&&typeof p!="object")return!1;if(typeof p=="function"&&!p.prototype)return!0;if(i)return b(p);if(g(p))return!1;var y=u.call(p);return y===f||y===s}},{}],78:[function(t,d,o){d.exports=h;var v=Object.prototype.toString;function h(g){var b=v.call(g);return b==="[object Function]"||typeof g=="function"&&b!=="[object RegExp]"||typeof a!="undefined"&&(g===a.setTimeout||g===a.alert||g===a.confirm||g===a.prompt)}},{}],79:[function(t,d,o){var v={}.toString;d.exports=Array.isArray||function(h){return v.call(h)=="[object Array]"}},{}],80:[function(t,d,o){var v=t("./lib/encoder"),h=t("./lib/decoder");d.exports={encode:v,decode:h}},{"./lib/decoder":81,"./lib/encoder":82}],81:[function(t,d,o){(function(v){var h=function(){var u=new Int32Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]),f=4017,s=799,i=3406,n=2276,p=1567,y=3784,l=5793,m=2896;function c(){}function w(R,M){for(var B=0,I=[],Y,J,D=16;D>0&&!R[D-1];)D--;I.push({children:[],index:0});var T=I[0],G;for(Y=0;Y<D;Y++){for(J=0;J<R[Y];J++){for(T=I.pop(),T.children[T.index]=M[B];T.index>0;){if(I.length===0)throw new Error("Could not recreate Huffman Table");T=I.pop()}for(T.index++,I.push(T);I.length<=Y;)I.push(G={children:[],index:0}),T.children[T.index]=G.children,T=G;B++}Y+1<D&&(I.push(G={children:[],index:0}),T.children[T.index]=G.children,T=G)}return I[0].children}function x(R,M,B,I,Y,J,D,T,G,U){B.precision,B.samplesPerLine,B.scanLines;var ie=B.mcusPerLine,se=B.progressive;B.maxH,B.maxV;var ae=M,W=0,ee=0;function _(){if(ee>0)return ee--,W>>ee&1;if(W=R[M++],W==255){var Oe=R[M++];if(Oe)throw new Error("unexpected marker: "+(W<<8|Oe).toString(16))}return ee=7,W>>>7}function re(Oe){for(var Fe=Oe,ke;(ke=_())!==null;){if(Fe=Fe[ke],typeof Fe=="number")return Fe;if(typeof Fe!="object")throw new Error("invalid huffman sequence")}return null}function fe(Oe){for(var Fe=0;Oe>0;){var ke=_();if(ke===null)return;Fe=Fe<<1|ke,Oe--}return Fe}function pe(Oe){var Fe=fe(Oe);return Fe>=1<<Oe-1?Fe:Fe+(-1<<Oe)+1}function he(Oe,Fe){var ke=re(Oe.huffmanTableDC),He=ke===0?0:pe(ke);Fe[0]=Oe.pred+=He;for(var Me=1;Me<64;){var j=re(Oe.huffmanTableAC),me=j&15,be=j>>4;if(me===0){if(be<15)break;Me+=16;continue}Me+=be;var Pe=u[Me];Fe[Pe]=pe(me),Me++}}function oe(Oe,Fe){var ke=re(Oe.huffmanTableDC),He=ke===0?0:pe(ke)<<G;Fe[0]=Oe.pred+=He}function ce(Oe,Fe){Fe[0]|=_()<<G}var X=0;function K(Oe,Fe){if(X>0){X--;return}for(var ke=J,He=D;ke<=He;){var Me=re(Oe.huffmanTableAC),j=Me&15,me=Me>>4;if(j===0){if(me<15){X=fe(me)+(1<<me)-1;break}ke+=16;continue}ke+=me;var be=u[ke];Fe[be]=pe(j)*(1<<G),ke++}}var L=0,$;function te(Oe,Fe){for(var ke=J,He=D,Me=0;ke<=He;){var j=u[ke],me=Fe[j]<0?-1:1;switch(L){case 0:var be=re(Oe.huffmanTableAC),Pe=be&15,Me=be>>4;if(Pe===0)Me<15?(X=fe(Me)+(1<<Me),L=4):(Me=16,L=1);else{if(Pe!==1)throw new Error("invalid ACn encoding");$=pe(Pe),L=Me?2:3}continue;case 1:case 2:Fe[j]?Fe[j]+=(_()<<G)*me:(Me--,Me===0&&(L=L==2?3:0));break;case 3:Fe[j]?Fe[j]+=(_()<<G)*me:(Fe[j]=$<<G,L=0);break;case 4:Fe[j]&&(Fe[j]+=(_()<<G)*me);break}ke++}L===4&&(X--,X===0&&(L=0))}function V(Oe,Fe,ke,He,Me){var j=ke/ie|0,me=ke%ie,be=j*Oe.v+He,Pe=me*Oe.h+Me;Oe.blocks[be]===void 0&&U.tolerantDecoding||Fe(Oe,Oe.blocks[be][Pe])}function z(Oe,Fe,ke){var He=ke/Oe.blocksPerLine|0,Me=ke%Oe.blocksPerLine;Oe.blocks[He]===void 0&&U.tolerantDecoding||Fe(Oe,Oe.blocks[He][Me])}var F=I.length,q,H,O,C,Q,le;se?J===0?le=T===0?oe:ce:le=T===0?K:te:le=he;var ge=0,ye,Ee;F==1?Ee=I[0].blocksPerLine*I[0].blocksPerColumn:Ee=ie*B.mcusPerColumn,Y||(Y=Ee);for(var Se,Ie;ge<Ee;){for(H=0;H<F;H++)I[H].pred=0;if(X=0,F==1)for(q=I[0],Q=0;Q<Y;Q++)z(q,le,ge),ge++;else for(Q=0;Q<Y;Q++){for(H=0;H<F;H++)for(q=I[H],Se=q.h,Ie=q.v,O=0;O<Ie;O++)for(C=0;C<Se;C++)V(q,le,ge,O,C);if(ge++,ge===Ee)break}if(ge===Ee)do{if(R[M]===255&&R[M+1]!==0)break;M+=1}while(M<R.length-2);if(ee=0,ye=R[M]<<8|R[M+1],ye<65280)throw new Error("marker was not found");if(ye>=65488&&ye<=65495)M+=2;else break}return M-ae}function A(R,M){var B=[],I=M.blocksPerLine,Y=M.blocksPerColumn,J=I<<3,D=new Int32Array(64),T=new Uint8Array(64);function G(fe,pe,he){var oe=M.quantizationTable,ce,X,K,L,$,te,V,z,F,q=he,H;for(H=0;H<64;H++)q[H]=fe[H]*oe[H];for(H=0;H<8;++H){var O=8*H;if(q[1+O]==0&&q[2+O]==0&&q[3+O]==0&&q[4+O]==0&&q[5+O]==0&&q[6+O]==0&&q[7+O]==0){F=l*q[0+O]+512>>10,q[0+O]=F,q[1+O]=F,q[2+O]=F,q[3+O]=F,q[4+O]=F,q[5+O]=F,q[6+O]=F,q[7+O]=F;continue}ce=l*q[0+O]+128>>8,X=l*q[4+O]+128>>8,K=q[2+O],L=q[6+O],$=m*(q[1+O]-q[7+O])+128>>8,z=m*(q[1+O]+q[7+O])+128>>8,te=q[3+O]<<4,V=q[5+O]<<4,F=ce-X+1>>1,ce=ce+X+1>>1,X=F,F=K*y+L*p+128>>8,K=K*p-L*y+128>>8,L=F,F=$-V+1>>1,$=$+V+1>>1,V=F,F=z+te+1>>1,te=z-te+1>>1,z=F,F=ce-L+1>>1,ce=ce+L+1>>1,L=F,F=X-K+1>>1,X=X+K+1>>1,K=F,F=$*n+z*i+2048>>12,$=$*i-z*n+2048>>12,z=F,F=te*s+V*f+2048>>12,te=te*f-V*s+2048>>12,V=F,q[0+O]=ce+z,q[7+O]=ce-z,q[1+O]=X+V,q[6+O]=X-V,q[2+O]=K+te,q[5+O]=K-te,q[3+O]=L+$,q[4+O]=L-$}for(H=0;H<8;++H){var C=H;if(q[8+C]==0&&q[16+C]==0&&q[24+C]==0&&q[32+C]==0&&q[40+C]==0&&q[48+C]==0&&q[56+C]==0){F=l*he[H+0]+8192>>14,q[0+C]=F,q[8+C]=F,q[16+C]=F,q[24+C]=F,q[32+C]=F,q[40+C]=F,q[48+C]=F,q[56+C]=F;continue}ce=l*q[0+C]+2048>>12,X=l*q[32+C]+2048>>12,K=q[16+C],L=q[48+C],$=m*(q[8+C]-q[56+C])+2048>>12,z=m*(q[8+C]+q[56+C])+2048>>12,te=q[24+C],V=q[40+C],F=ce-X+1>>1,ce=ce+X+1>>1,X=F,F=K*y+L*p+2048>>12,K=K*p-L*y+2048>>12,L=F,F=$-V+1>>1,$=$+V+1>>1,V=F,F=z+te+1>>1,te=z-te+1>>1,z=F,F=ce-L+1>>1,ce=ce+L+1>>1,L=F,F=X-K+1>>1,X=X+K+1>>1,K=F,F=$*n+z*i+2048>>12,$=$*i-z*n+2048>>12,z=F,F=te*s+V*f+2048>>12,te=te*f-V*s+2048>>12,V=F,q[0+C]=ce+z,q[56+C]=ce-z,q[8+C]=X+V,q[48+C]=X-V,q[16+C]=K+te,q[40+C]=K-te,q[24+C]=L+$,q[32+C]=L-$}for(H=0;H<64;++H){var Q=128+(q[H]+8>>4);pe[H]=Q<0?0:Q>255?255:Q}}S(J*Y*8);for(var U,ie,se=0;se<Y;se++){var ae=se<<3;for(U=0;U<8;U++)B.push(new Uint8Array(J));for(var W=0;W<I;W++){G(M.blocks[se][W],T,D);var ee=0,_=W<<3;for(ie=0;ie<8;ie++){var re=B[ae+ie];for(U=0;U<8;U++)re[_+U]=T[ee++]}}}return B}function N(R){return R<0?0:R>255?255:R}c.prototype={load:function(M){var B=new XMLHttpRequest;B.open("GET",M,!0),B.responseType="arraybuffer",B.onload=function(){var I=new Uint8Array(B.response||B.mozResponseArrayBuffer);this.parse(I),this.onload&&this.onload()}.bind(this),B.send(null)},parse:function(M){var B=this.opts.maxResolutionInMP*1e3*1e3,I=0;M.length;function Y(){var j=M[I]<<8|M[I+1];return I+=2,j}function J(){var j=Y(),me=M.subarray(I,I+j-2);return I+=me.length,me}function D(j){var me=0,be=0,Pe,ve;for(ve in j.components)j.components.hasOwnProperty(ve)&&(Pe=j.components[ve],me<Pe.h&&(me=Pe.h),be<Pe.v&&(be=Pe.v));var xe=Math.ceil(j.samplesPerLine/8/me),ne=Math.ceil(j.scanLines/8/be);for(ve in j.components)if(j.components.hasOwnProperty(ve)){Pe=j.components[ve];var Ne=Math.ceil(Math.ceil(j.samplesPerLine/8)*Pe.h/me),Te=Math.ceil(Math.ceil(j.scanLines/8)*Pe.v/be),P=xe*Pe.h,de=ne*Pe.v,we=de*P,Z=[];S(we*256);for(var ue=0;ue<de;ue++){for(var Ae=[],Re=0;Re<P;Re++)Ae.push(new Int32Array(64));Z.push(Ae)}Pe.blocksPerLine=Ne,Pe.blocksPerColumn=Te,Pe.blocks=Z}j.maxH=me,j.maxV=be,j.mcusPerLine=xe,j.mcusPerColumn=ne}var T=null,G=null,U,ie,se=[],ae=[],W=[],ee=[],_=Y();if(this.comments=[],_!=65496)throw new Error("SOI not found");for(_=Y();_!=65497;){var re,fe;switch(_){case 65280:break;case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:var pe=J();if(_===65534){var he=String.fromCharCode.apply(null,pe);this.comments.push(he)}_===65504&&pe[0]===74&&pe[1]===70&&pe[2]===73&&pe[3]===70&&pe[4]===0&&(T={version:{major:pe[5],minor:pe[6]},densityUnits:pe[7],xDensity:pe[8]<<8|pe[9],yDensity:pe[10]<<8|pe[11],thumbWidth:pe[12],thumbHeight:pe[13],thumbData:pe.subarray(14,14+3*pe[12]*pe[13])}),_===65505&&pe[0]===69&&pe[1]===120&&pe[2]===105&&pe[3]===102&&pe[4]===0&&(this.exifBuffer=pe.subarray(5,pe.length)),_===65518&&pe[0]===65&&pe[1]===100&&pe[2]===111&&pe[3]===98&&pe[4]===101&&pe[5]===0&&(G={version:pe[6],flags0:pe[7]<<8|pe[8],flags1:pe[9]<<8|pe[10],transformCode:pe[11]});break;case 65499:for(var oe=Y(),ce=oe+I-2;I<ce;){var X=M[I++];S(256);var K=new Int32Array(64);if(X>>4===0)for(fe=0;fe<64;fe++){var L=u[fe];K[L]=M[I++]}else if(X>>4===1)for(fe=0;fe<64;fe++){var L=u[fe];K[L]=Y()}else throw new Error("DQT: invalid table spec");se[X&15]=K}break;case 65472:case 65473:case 65474:Y(),U={},U.extended=_===65473,U.progressive=_===65474,U.precision=M[I++],U.scanLines=Y(),U.samplesPerLine=Y(),U.components={},U.componentsOrder=[];var $=U.scanLines*U.samplesPerLine;if($>B){var te=Math.ceil(($-B)/1e6);throw new Error(`maxResolutionInMP limit exceeded by ${te}MP`)}var V=M[I++],z;for(re=0;re<V;re++){z=M[I];var F=M[I+1]>>4,q=M[I+1]&15,H=M[I+2];U.componentsOrder.push(z),U.components[z]={h:F,v:q,quantizationIdx:H},I+=3}D(U),ae.push(U);break;case 65476:var O=Y();for(re=2;re<O;){var C=M[I++],Q=new Uint8Array(16),le=0;for(fe=0;fe<16;fe++,I++)le+=Q[fe]=M[I];S(16+le);var ge=new Uint8Array(le);for(fe=0;fe<le;fe++,I++)ge[fe]=M[I];re+=17+le,(C>>4===0?ee:W)[C&15]=w(Q,ge)}break;case 65501:Y(),ie=Y();break;case 65500:Y(),Y();break;case 65498:Y();var ye=M[I++],Ee=[],Se;for(re=0;re<ye;re++){Se=U.components[M[I++]];var Ie=M[I++];Se.huffmanTableDC=ee[Ie>>4],Se.huffmanTableAC=W[Ie&15],Ee.push(Se)}var Oe=M[I++],Fe=M[I++],ke=M[I++],He=x(M,I,U,Ee,ie,Oe,Fe,ke>>4,ke&15,this.opts);I+=He;break;case 65535:M[I]!==255&&I--;break;default:if(M[I-3]==255&&M[I-2]>=192&&M[I-2]<=254){I-=3;break}throw new Error("unknown JPEG marker "+_.toString(16))}_=Y()}if(ae.length!=1)throw new Error("only single frame JPEGs supported");for(var re=0;re<ae.length;re++){var Me=ae[re].components;for(var fe in Me)Me[fe].quantizationTable=se[Me[fe].quantizationIdx],delete Me[fe].quantizationIdx}this.width=U.samplesPerLine,this.height=U.scanLines,this.jfif=T,this.adobe=G,this.components=[];for(var re=0;re<U.componentsOrder.length;re++){var Se=U.components[U.componentsOrder[re]];this.components.push({lines:A(U,Se),scaleX:Se.h/U.maxH,scaleY:Se.v/U.maxV})}},getData:function(M,B){var I=this.width/M,Y=this.height/B,J,D,T,G,U,ie,se,ae,W,ee,_=0,re,fe,pe,he,oe,ce,X,K,L,$,te,V=M*B*this.components.length;S(V);var z=new Uint8Array(V);switch(this.components.length){case 1:for(J=this.components[0],ee=0;ee<B;ee++)for(U=J.lines[0|ee*J.scaleY*Y],W=0;W<M;W++)re=U[0|W*J.scaleX*I],z[_++]=re;break;case 2:for(J=this.components[0],D=this.components[1],ee=0;ee<B;ee++)for(U=J.lines[0|ee*J.scaleY*Y],ie=D.lines[0|ee*D.scaleY*Y],W=0;W<M;W++)re=U[0|W*J.scaleX*I],z[_++]=re,re=ie[0|W*D.scaleX*I],z[_++]=re;break;case 3:for(te=!0,this.adobe&&this.adobe.transformCode?te=!0:typeof this.opts.colorTransform!="undefined"&&(te=!!this.opts.colorTransform),J=this.components[0],D=this.components[1],T=this.components[2],ee=0;ee<B;ee++)for(U=J.lines[0|ee*J.scaleY*Y],ie=D.lines[0|ee*D.scaleY*Y],se=T.lines[0|ee*T.scaleY*Y],W=0;W<M;W++)te?(re=U[0|W*J.scaleX*I],fe=ie[0|W*D.scaleX*I],pe=se[0|W*T.scaleX*I],K=N(re+1.402*(pe-128)),L=N(re-.3441363*(fe-128)-.71413636*(pe-128)),$=N(re+1.772*(fe-128))):(K=U[0|W*J.scaleX*I],L=ie[0|W*D.scaleX*I],$=se[0|W*T.scaleX*I]),z[_++]=K,z[_++]=L,z[_++]=$;break;case 4:if(!this.adobe)throw new Error("Unsupported color mode (4 components)");for(te=!1,this.adobe&&this.adobe.transformCode?te=!0:typeof this.opts.colorTransform!="undefined"&&(te=!!this.opts.colorTransform),J=this.components[0],D=this.components[1],T=this.components[2],G=this.components[3],ee=0;ee<B;ee++)for(U=J.lines[0|ee*J.scaleY*Y],ie=D.lines[0|ee*D.scaleY*Y],se=T.lines[0|ee*T.scaleY*Y],ae=G.lines[0|ee*G.scaleY*Y],W=0;W<M;W++)te?(re=U[0|W*J.scaleX*I],fe=ie[0|W*D.scaleX*I],pe=se[0|W*T.scaleX*I],he=ae[0|W*G.scaleX*I],oe=255-N(re+1.402*(pe-128)),ce=255-N(re-.3441363*(fe-128)-.71413636*(pe-128)),X=255-N(re+1.772*(fe-128))):(oe=U[0|W*J.scaleX*I],ce=ie[0|W*D.scaleX*I],X=se[0|W*T.scaleX*I],he=ae[0|W*G.scaleX*I]),z[_++]=255-oe,z[_++]=255-ce,z[_++]=255-X,z[_++]=255-he;break;default:throw new Error("Unsupported color mode")}return z},copyToImageData:function(M,B){var I=M.width,Y=M.height,J=M.data,D=this.getData(I,Y),T=0,G=0,U,ie,se,ae,W,ee,_,re,fe;switch(this.components.length){case 1:for(ie=0;ie<Y;ie++)for(U=0;U<I;U++)se=D[T++],J[G++]=se,J[G++]=se,J[G++]=se,B&&(J[G++]=255);break;case 3:for(ie=0;ie<Y;ie++)for(U=0;U<I;U++)_=D[T++],re=D[T++],fe=D[T++],J[G++]=_,J[G++]=re,J[G++]=fe,B&&(J[G++]=255);break;case 4:for(ie=0;ie<Y;ie++)for(U=0;U<I;U++)W=D[T++],ee=D[T++],se=D[T++],ae=D[T++],_=255-N(W*(1-ae/255)+ae),re=255-N(ee*(1-ae/255)+ae),fe=255-N(se*(1-ae/255)+ae),J[G++]=_,J[G++]=re,J[G++]=fe,B&&(J[G++]=255);break;default:throw new Error("Unsupported color mode")}}};var E=0,k=0;function S(R=0){var M=E+R;if(M>k){var B=Math.ceil((M-k)/1024/1024);throw new Error(`maxMemoryUsageInMB limit exceeded by at least ${B}MB`)}E=M}return c.resetMaxMemoryUsage=function(R){E=0,k=R},c.getBytesAllocated=function(){return E},c.requestMemoryAllocation=S,c}();typeof d!="undefined"?d.exports=g:typeof a!="undefined"&&(a["jpeg-js"]=a["jpeg-js"]||{},a["jpeg-js"].decode=g);function g(b,u={}){var f={colorTransform:void 0,useTArray:!1,formatAsRGBA:!0,tolerantDecoding:!0,maxResolutionInMP:100,maxMemoryUsageInMB:512},s=Wn(Wn({},f),u),i=new Uint8Array(b),n=new h;n.opts=s,h.resetMaxMemoryUsage(s.maxMemoryUsageInMB*1024*1024),n.parse(i);var p=s.formatAsRGBA?4:3,y=n.width*n.height*p;try{h.requestMemoryAllocation(y);var l={width:n.width,height:n.height,exifBuffer:n.exifBuffer,data:s.useTArray?new Uint8Array(y):v.alloc(y)};n.comments.length>0&&(l.comments=n.comments)}catch(m){throw m instanceof RangeError?new Error("Could not allocate enough memory for the image. Required: "+y):m}return n.copyToImageData(l,s.formatAsRGBA),l}}).call(this,t("buffer").Buffer)},{buffer:48}],82:[function(t,d,o){(function(v){function h(b){var u=Math.floor,f=new Array(64),s=new Array(64),i=new Array(64),n=new Array(64),p,y,l,m,c=new Array(65535),w=new Array(65535),x=new Array(64),A=new Array(64),N=[],E=0,k=7,S=new Array(64),R=new Array(64),M=new Array(64),B=new Array(256),I=new Array(2048),Y,J=[0,1,5,6,14,15,27,28,2,4,7,13,16,26,29,42,3,8,12,17,25,30,41,43,9,11,18,24,31,40,44,53,10,19,23,32,39,45,52,54,20,22,33,38,46,51,55,60,21,34,37,47,50,56,59,61,35,36,48,49,57,58,62,63],D=[0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0],T=[0,1,2,3,4,5,6,7,8,9,10,11],G=[0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125],U=[1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250],ie=[0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0],se=[0,1,2,3,4,5,6,7,8,9,10,11],ae=[0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119],W=[0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250];function ee(C){for(var Q=[16,11,10,16,24,40,51,61,12,12,14,19,26,58,60,55,14,13,16,24,40,57,69,56,14,17,22,29,51,87,80,62,18,22,37,56,68,109,103,77,24,35,55,64,81,104,113,92,49,64,78,87,103,121,120,101,72,92,95,98,112,100,103,99],le=0;le<64;le++){var ge=u((Q[le]*C+50)/100);ge<1?ge=1:ge>255&&(ge=255),f[J[le]]=ge}for(var ye=[17,18,24,47,99,99,99,99,18,21,26,66,99,99,99,99,24,26,56,99,99,99,99,99,47,66,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99],Ee=0;Ee<64;Ee++){var Se=u((ye[Ee]*C+50)/100);Se<1?Se=1:Se>255&&(Se=255),s[J[Ee]]=Se}for(var Ie=[1,1.387039845,1.306562965,1.175875602,1,.785694958,.5411961,.275899379],Oe=0,Fe=0;Fe<8;Fe++)for(var ke=0;ke<8;ke++)i[Oe]=1/(f[J[Oe]]*Ie[Fe]*Ie[ke]*8),n[Oe]=1/(s[J[Oe]]*Ie[Fe]*Ie[ke]*8),Oe++}function _(C,Q){for(var le=0,ge=0,ye=new Array,Ee=1;Ee<=16;Ee++){for(var Se=1;Se<=C[Ee];Se++)ye[Q[ge]]=[],ye[Q[ge]][0]=le,ye[Q[ge]][1]=Ee,ge++,le++;le*=2}return ye}function re(){p=_(D,T),y=_(ie,se),l=_(G,U),m=_(ae,W)}function fe(){for(var C=1,Q=2,le=1;le<=15;le++){for(var ge=C;ge<Q;ge++)w[32767+ge]=le,c[32767+ge]=[],c[32767+ge][1]=le,c[32767+ge][0]=ge;for(var ye=-(Q-1);ye<=-C;ye++)w[32767+ye]=le,c[32767+ye]=[],c[32767+ye][1]=le,c[32767+ye][0]=Q-1+ye;C<<=1,Q<<=1}}function pe(){for(var C=0;C<256;C++)I[C]=19595*C,I[C+256>>0]=38470*C,I[C+512>>0]=7471*C+32768,I[C+768>>0]=-11059*C,I[C+1024>>0]=-21709*C,I[C+1280>>0]=32768*C+8421375,I[C+1536>>0]=-27439*C,I[C+1792>>0]=-5329*C}function he(C){for(var Q=C[0],le=C[1]-1;le>=0;)Q&1<<le&&(E|=1<<k),le--,k--,k<0&&(E==255?(oe(255),oe(0)):oe(E),k=7,E=0)}function oe(C){N.push(C)}function ce(C){oe(C>>8&255),oe(C&255)}function X(C,Q){var le,ge,ye,Ee,Se,Ie,Oe,Fe,ke=0,He,Me=8,j=64;for(He=0;He<Me;++He){le=C[ke],ge=C[ke+1],ye=C[ke+2],Ee=C[ke+3],Se=C[ke+4],Ie=C[ke+5],Oe=C[ke+6],Fe=C[ke+7];var me=le+Fe,be=le-Fe,Pe=ge+Oe,ve=ge-Oe,xe=ye+Ie,ne=ye-Ie,Ne=Ee+Se,Te=Ee-Se,P=me+Ne,de=me-Ne,we=Pe+xe,Z=Pe-xe;C[ke]=P+we,C[ke+4]=P-we;var ue=(Z+de)*.707106781;C[ke+2]=de+ue,C[ke+6]=de-ue,P=Te+ne,we=ne+ve,Z=ve+be;var Ae=(P-Z)*.382683433,Re=.5411961*P+Ae,Ce=1.306562965*Z+Ae,ze=we*.707106781,De=be+ze,gt=be-ze;C[ke+5]=gt+Re,C[ke+3]=gt-Re,C[ke+1]=De+Ce,C[ke+7]=De-Ce,ke+=8}for(ke=0,He=0;He<Me;++He){le=C[ke],ge=C[ke+8],ye=C[ke+16],Ee=C[ke+24],Se=C[ke+32],Ie=C[ke+40],Oe=C[ke+48],Fe=C[ke+56];var tt=le+Fe,qe=le-Fe,at=ge+Oe,ft=ge-Oe,xt=ye+Ie,kr=ye-Ie,Sr=Ee+Se,ut=Ee-Se,bt=tt+Sr,ht=tt-Sr,It=at+xt,kt=at-xt;C[ke]=bt+It,C[ke+32]=bt-It;var gn=(kt+ht)*.707106781;C[ke+16]=ht+gn,C[ke+48]=ht-gn,bt=ut+kr,It=kr+ft,kt=ft+qe;var Jo=(bt-kt)*.382683433,Xo=.5411961*bt+Jo,qo=1.306562965*kt+Jo,Uo=It*.707106781,Wo=qe+Uo,Ko=qe-Uo;C[ke+40]=Ko+Xo,C[ke+24]=Ko-Xo,C[ke+8]=Wo+qo,C[ke+56]=Wo-qo,ke++}var Un;for(He=0;He<j;++He)Un=C[He]*Q[He],x[He]=Un>0?Un+.5|0:Un-.5|0;return x}function K(){ce(65504),ce(16),oe(74),oe(70),oe(73),oe(70),oe(0),oe(1),oe(1),oe(0),ce(1),ce(1),oe(0),oe(0)}function L(C){if(!!C){ce(65505),C[0]===69&&C[1]===120&&C[2]===105&&C[3]===102?ce(C.length+2):(ce(C.length+5+2),oe(69),oe(120),oe(105),oe(102),oe(0));for(var Q=0;Q<C.length;Q++)oe(C[Q])}}function $(C,Q){ce(65472),ce(17),oe(8),ce(Q),ce(C),oe(3),oe(1),oe(17),oe(0),oe(2),oe(17),oe(1),oe(3),oe(17),oe(1)}function te(){ce(65499),ce(132),oe(0);for(var C=0;C<64;C++)oe(f[C]);oe(1);for(var Q=0;Q<64;Q++)oe(s[Q])}function V(){ce(65476),ce(418),oe(0);for(var C=0;C<16;C++)oe(D[C+1]);for(var Q=0;Q<=11;Q++)oe(T[Q]);oe(16);for(var le=0;le<16;le++)oe(G[le+1]);for(var ge=0;ge<=161;ge++)oe(U[ge]);oe(1);for(var ye=0;ye<16;ye++)oe(ie[ye+1]);for(var Ee=0;Ee<=11;Ee++)oe(se[Ee]);oe(17);for(var Se=0;Se<16;Se++)oe(ae[Se+1]);for(var Ie=0;Ie<=161;Ie++)oe(W[Ie])}function z(){ce(65498),ce(12),oe(3),oe(1),oe(0),oe(2),oe(17),oe(3),oe(17),oe(0),oe(63),oe(0)}function F(C,Q,le,ge,ye){for(var Ee=ye[0],Se=ye[240],Ie,Oe=16,Fe=63,ke=64,He=X(C,Q),Me=0;Me<ke;++Me)A[J[Me]]=He[Me];var j=A[0]-le;le=A[0],j==0?he(ge[0]):(Ie=32767+j,he(ge[w[Ie]]),he(c[Ie]));for(var me=63;me>0&&A[me]==0;me--);if(me==0)return he(Ee),le;for(var be=1,Pe;be<=me;){for(var ve=be;A[be]==0&&be<=me;++be);var xe=be-ve;if(xe>=Oe){Pe=xe>>4;for(var ne=1;ne<=Pe;++ne)he(Se);xe=xe&15}Ie=32767+A[be],he(ye[(xe<<4)+w[Ie]]),he(c[Ie]),be++}return me!=Fe&&he(Ee),le}function q(){for(var C=String.fromCharCode,Q=0;Q<256;Q++)B[Q]=C(Q)}this.encode=function(C,Q){new Date().getTime(),Q&&H(Q),N=new Array,E=0,k=7,ce(65496),K(),L(C.exifBuffer),te(),$(C.width,C.height),V(),z();var le=0,ge=0,ye=0;E=0,k=7,this.encode.displayName="_encode_";for(var Ee=C.data,Se=C.width,Ie=C.height,Oe=Se*4,Fe,ke=0,He,Me,j,me,be,Pe,ve,xe;ke<Ie;){for(Fe=0;Fe<Oe;){for(me=Oe*ke+Fe,be=me,Pe=-1,ve=0,xe=0;xe<64;xe++)ve=xe>>3,Pe=(xe&7)*4,be=me+ve*Oe+Pe,ke+ve>=Ie&&(be-=Oe*(ke+1+ve-Ie)),Fe+Pe>=Oe&&(be-=Fe+Pe-Oe+4),He=Ee[be++],Me=Ee[be++],j=Ee[be++],S[xe]=(I[He]+I[Me+256>>0]+I[j+512>>0]>>16)-128,R[xe]=(I[He+768>>0]+I[Me+1024>>0]+I[j+1280>>0]>>16)-128,M[xe]=(I[He+1280>>0]+I[Me+1536>>0]+I[j+1792>>0]>>16)-128;le=F(S,i,le,p,l),ge=F(R,n,ge,y,m),ye=F(M,n,ye,y,m),Fe+=32}ke+=8}if(k>=0){var ne=[];ne[1]=k+1,ne[0]=(1<<k+1)-1,he(ne)}return ce(65497),typeof d=="undefined"?new Uint8Array(N):v.from(N)};function H(C){if(C<=0&&(C=1),C>100&&(C=100),Y!=C){var Q=0;C<50?Q=Math.floor(5e3/C):Q=Math.floor(200-C*2),ee(Q),Y=C}}function O(){var C=new Date().getTime();b||(b=50),q(),re(),fe(),pe(),H(b),new Date().getTime()-C}O()}typeof d!="undefined"?d.exports=g:typeof a!="undefined"&&(a["jpeg-js"]=a["jpeg-js"]||{},a["jpeg-js"].encode=g);function g(b,u){typeof u=="undefined"&&(u=50);var f=new h(u),s=f.encode(b,u);return{data:s,width:b.width,height:b.height}}}).call(this,t("buffer").Buffer)},{buffer:48}],83:[function(t,d,o){(function(v){var h=t("path"),g=t("fs"),b=parseInt("0777",8);d.exports=u.mkdirp=u.mkdirP=u;function u(f,s,i,n){typeof s=="function"?(i=s,s={}):(!s||typeof s!="object")&&(s={mode:s});var p=s.mode,y=s.fs||g;p===void 0&&(p=b&~v.umask()),n||(n=null);var l=i||function(){};f=h.resolve(f),y.mkdir(f,p,function(m){if(!m)return n=n||f,l(null,n);switch(m.code){case"ENOENT":u(h.dirname(f),s,function(c,w){c?l(c,w):u(f,s,l,w)});break;default:y.stat(f,function(c,w){c||!w.isDirectory()?l(m,n):l(null,n)});break}})}u.sync=function f(s,i,n){(!i||typeof i!="object")&&(i={mode:i});var p=i.mode,y=i.fs||g;p===void 0&&(p=b&~v.umask()),n||(n=null),s=h.resolve(s);try{y.mkdirSync(s,p),n=n||s}catch(m){switch(m.code){case"ENOENT":n=f(h.dirname(s),i,n),f(s,i,n);break;default:var l;try{l=y.statSync(s)}catch{throw m}if(!l.isDirectory())throw m;break}}return n}}).call(this,t("_process"))},{_process:133,fs:47,path:107}],84:[function(t,d,o){var v=Object.getOwnPropertySymbols,h=Object.prototype.hasOwnProperty,g=Object.prototype.propertyIsEnumerable;function b(f){if(f==null)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(f)}function u(){try{if(!Object.assign)return!1;var f=new String("abc");if(f[5]="de",Object.getOwnPropertyNames(f)[0]==="5")return!1;for(var s={},i=0;i<10;i++)s["_"+String.fromCharCode(i)]=i;var n=Object.getOwnPropertyNames(s).map(function(y){return s[y]});if(n.join("")!=="0123456789")return!1;var p={};return"abcdefghijklmnopqrst".split("").forEach(function(y){p[y]=y}),Object.keys(Object.assign({},p)).join("")==="abcdefghijklmnopqrst"}catch{return!1}}d.exports=u()?Object.assign:function(f,s){for(var i,n=b(f),p,y=1;y<arguments.length;y++){i=Object(arguments[y]);for(var l in i)h.call(i,l)&&(n[l]=i[l]);if(v){p=v(i);for(var m=0;m<p.length;m++)g.call(i,p[m])&&(n[p[m]]=i[p[m]])}}return n}},{}],85:[function(t,d,o){arguments[4][64][0].apply(o,arguments)},{dup:64}],86:[function(t,d,o){var v=t("./lib/utils/common").assign,h=t("./lib/deflate"),g=t("./lib/inflate"),b=t("./lib/zlib/constants"),u={};v(u,h,g,b),d.exports=u},{"./lib/deflate":87,"./lib/inflate":88,"./lib/utils/common":89,"./lib/zlib/constants":92}],87:[function(t,d,o){var v=t("./zlib/deflate"),h=t("./utils/common"),g=t("./utils/strings"),b=t("./zlib/messages"),u=t("./zlib/zstream"),f=Object.prototype.toString,s=0,i=4,n=0,p=1,y=2,l=-1,m=0,c=8;function w(E){if(!(this instanceof w))return new w(E);this.options=h.assign({level:l,method:c,chunkSize:16384,windowBits:15,memLevel:8,strategy:m,to:""},E||{});var k=this.options;k.raw&&k.windowBits>0?k.windowBits=-k.windowBits:k.gzip&&k.windowBits>0&&k.windowBits<16&&(k.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new u,this.strm.avail_out=0;var S=v.deflateInit2(this.strm,k.level,k.method,k.windowBits,k.memLevel,k.strategy);if(S!==n)throw new Error(b[S]);if(k.header&&v.deflateSetHeader(this.strm,k.header),k.dictionary){var R;if(typeof k.dictionary=="string"?R=g.string2buf(k.dictionary):f.call(k.dictionary)==="[object ArrayBuffer]"?R=new Uint8Array(k.dictionary):R=k.dictionary,S=v.deflateSetDictionary(this.strm,R),S!==n)throw new Error(b[S]);this._dict_set=!0}}w.prototype.push=function(E,k){var S=this.strm,R=this.options.chunkSize,M,B;if(this.ended)return!1;B=k===~~k?k:k===!0?i:s,typeof E=="string"?S.input=g.string2buf(E):f.call(E)==="[object ArrayBuffer]"?S.input=new Uint8Array(E):S.input=E,S.next_in=0,S.avail_in=S.input.length;do{if(S.avail_out===0&&(S.output=new h.Buf8(R),S.next_out=0,S.avail_out=R),M=v.deflate(S,B),M!==p&&M!==n)return this.onEnd(M),this.ended=!0,!1;(S.avail_out===0||S.avail_in===0&&(B===i||B===y))&&(this.options.to==="string"?this.onData(g.buf2binstring(h.shrinkBuf(S.output,S.next_out))):this.onData(h.shrinkBuf(S.output,S.next_out)))}while((S.avail_in>0||S.avail_out===0)&&M!==p);return B===i?(M=v.deflateEnd(this.strm),this.onEnd(M),this.ended=!0,M===n):(B===y&&(this.onEnd(n),S.avail_out=0),!0)},w.prototype.onData=function(E){this.chunks.push(E)},w.prototype.onEnd=function(E){E===n&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=E,this.msg=this.strm.msg};function x(E,k){var S=new w(k);if(S.push(E,!0),S.err)throw S.msg||b[S.err];return S.result}function A(E,k){return k=k||{},k.raw=!0,x(E,k)}function N(E,k){return k=k||{},k.gzip=!0,x(E,k)}o.Deflate=w,o.deflate=x,o.deflateRaw=A,o.gzip=N},{"./utils/common":89,"./utils/strings":90,"./zlib/deflate":94,"./zlib/messages":99,"./zlib/zstream":101}],88:[function(t,d,o){var v=t("./zlib/inflate"),h=t("./utils/common"),g=t("./utils/strings"),b=t("./zlib/constants"),u=t("./zlib/messages"),f=t("./zlib/zstream"),s=t("./zlib/gzheader"),i=Object.prototype.toString;function n(l){if(!(this instanceof n))return new n(l);this.options=h.assign({chunkSize:16384,windowBits:0,to:""},l||{});var m=this.options;m.raw&&m.windowBits>=0&&m.windowBits<16&&(m.windowBits=-m.windowBits,m.windowBits===0&&(m.windowBits=-15)),m.windowBits>=0&&m.windowBits<16&&!(l&&l.windowBits)&&(m.windowBits+=32),m.windowBits>15&&m.windowBits<48&&(m.windowBits&15)===0&&(m.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new f,this.strm.avail_out=0;var c=v.inflateInit2(this.strm,m.windowBits);if(c!==b.Z_OK)throw new Error(u[c]);this.header=new s,v.inflateGetHeader(this.strm,this.header)}n.prototype.push=function(l,m){var c=this.strm,w=this.options.chunkSize,x=this.options.dictionary,A,N,E,k,S,R,M=!1;if(this.ended)return!1;N=m===~~m?m:m===!0?b.Z_FINISH:b.Z_NO_FLUSH,typeof l=="string"?c.input=g.binstring2buf(l):i.call(l)==="[object ArrayBuffer]"?c.input=new Uint8Array(l):c.input=l,c.next_in=0,c.avail_in=c.input.length;do{if(c.avail_out===0&&(c.output=new h.Buf8(w),c.next_out=0,c.avail_out=w),A=v.inflate(c,b.Z_NO_FLUSH),A===b.Z_NEED_DICT&&x&&(typeof x=="string"?R=g.string2buf(x):i.call(x)==="[object ArrayBuffer]"?R=new Uint8Array(x):R=x,A=v.inflateSetDictionary(this.strm,R)),A===b.Z_BUF_ERROR&&M===!0&&(A=b.Z_OK,M=!1),A!==b.Z_STREAM_END&&A!==b.Z_OK)return this.onEnd(A),this.ended=!0,!1;c.next_out&&(c.avail_out===0||A===b.Z_STREAM_END||c.avail_in===0&&(N===b.Z_FINISH||N===b.Z_SYNC_FLUSH))&&(this.options.to==="string"?(E=g.utf8border(c.output,c.next_out),k=c.next_out-E,S=g.buf2string(c.output,E),c.next_out=k,c.avail_out=w-k,k&&h.arraySet(c.output,c.output,E,k,0),this.onData(S)):this.onData(h.shrinkBuf(c.output,c.next_out))),c.avail_in===0&&c.avail_out===0&&(M=!0)}while((c.avail_in>0||c.avail_out===0)&&A!==b.Z_STREAM_END);return A===b.Z_STREAM_END&&(N=b.Z_FINISH),N===b.Z_FINISH?(A=v.inflateEnd(this.strm),this.onEnd(A),this.ended=!0,A===b.Z_OK):(N===b.Z_SYNC_FLUSH&&(this.onEnd(b.Z_OK),c.avail_out=0),!0)},n.prototype.onData=function(l){this.chunks.push(l)},n.prototype.onEnd=function(l){l===b.Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=l,this.msg=this.strm.msg};function p(l,m){var c=new n(m);if(c.push(l,!0),c.err)throw c.msg||u[c.err];return c.result}function y(l,m){return m=m||{},m.raw=!0,p(l,m)}o.Inflate=n,o.inflate=p,o.inflateRaw=y,o.ungzip=p},{"./utils/common":89,"./utils/strings":90,"./zlib/constants":92,"./zlib/gzheader":95,"./zlib/inflate":97,"./zlib/messages":99,"./zlib/zstream":101}],89:[function(t,d,o){arguments[4][36][0].apply(o,arguments)},{dup:36}],90:[function(t,d,o){var v=t("./common"),h=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch{h=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch{g=!1}for(var b=new v.Buf8(256),u=0;u<256;u++)b[u]=u>=252?6:u>=248?5:u>=240?4:u>=224?3:u>=192?2:1;b[254]=b[254]=1,o.string2buf=function(s){var i,n,p,y,l,m=s.length,c=0;for(y=0;y<m;y++)n=s.charCodeAt(y),(n&64512)===55296&&y+1<m&&(p=s.charCodeAt(y+1),(p&64512)===56320&&(n=65536+(n-55296<<10)+(p-56320),y++)),c+=n<128?1:n<2048?2:n<65536?3:4;for(i=new v.Buf8(c),l=0,y=0;l<c;y++)n=s.charCodeAt(y),(n&64512)===55296&&y+1<m&&(p=s.charCodeAt(y+1),(p&64512)===56320&&(n=65536+(n-55296<<10)+(p-56320),y++)),n<128?i[l++]=n:n<2048?(i[l++]=192|n>>>6,i[l++]=128|n&63):n<65536?(i[l++]=224|n>>>12,i[l++]=128|n>>>6&63,i[l++]=128|n&63):(i[l++]=240|n>>>18,i[l++]=128|n>>>12&63,i[l++]=128|n>>>6&63,i[l++]=128|n&63);return i};function f(s,i){if(i<65537&&(s.subarray&&g||!s.subarray&&h))return String.fromCharCode.apply(null,v.shrinkBuf(s,i));for(var n="",p=0;p<i;p++)n+=String.fromCharCode(s[p]);return n}o.buf2binstring=function(s){return f(s,s.length)},o.binstring2buf=function(s){for(var i=new v.Buf8(s.length),n=0,p=i.length;n<p;n++)i[n]=s.charCodeAt(n);return i},o.buf2string=function(s,i){var n,p,y,l,m=i||s.length,c=new Array(m*2);for(p=0,n=0;n<m;){if(y=s[n++],y<128){c[p++]=y;continue}if(l=b[y],l>4){c[p++]=65533,n+=l-1;continue}for(y&=l===2?31:l===3?15:7;l>1&&n<m;)y=y<<6|s[n++]&63,l--;if(l>1){c[p++]=65533;continue}y<65536?c[p++]=y:(y-=65536,c[p++]=55296|y>>10&1023,c[p++]=56320|y&1023)}return f(c,p)},o.utf8border=function(s,i){var n;for(i=i||s.length,i>s.length&&(i=s.length),n=i-1;n>=0&&(s[n]&192)===128;)n--;return n<0||n===0?i:n+b[s[n]]>i?n:i}},{"./common":89}],91:[function(t,d,o){arguments[4][37][0].apply(o,arguments)},{dup:37}],92:[function(t,d,o){arguments[4][38][0].apply(o,arguments)},{dup:38}],93:[function(t,d,o){arguments[4][39][0].apply(o,arguments)},{dup:39}],94:[function(t,d,o){var v=t("../utils/common"),h=t("./trees"),g=t("./adler32"),b=t("./crc32"),u=t("./messages"),f=0,s=1,i=3,n=4,p=5,y=0,l=1,m=-2,c=-3,w=-5,x=-1,A=1,N=2,E=3,k=4,S=0,R=2,M=8,B=9,I=15,Y=8,J=29,D=256,T=D+1+J,G=30,U=19,ie=2*T+1,se=15,ae=3,W=258,ee=W+ae+1,_=32,re=42,fe=69,pe=73,he=91,oe=103,ce=113,X=666,K=1,L=2,$=3,te=4,V=3;function z(P,de){return P.msg=u[de],de}function F(P){return(P<<1)-(P>4?9:0)}function q(P){for(var de=P.length;--de>=0;)P[de]=0}function H(P){var de=P.state,we=de.pending;we>P.avail_out&&(we=P.avail_out),we!==0&&(v.arraySet(P.output,de.pending_buf,de.pending_out,we,P.next_out),P.next_out+=we,de.pending_out+=we,P.total_out+=we,P.avail_out-=we,de.pending-=we,de.pending===0&&(de.pending_out=0))}function O(P,de){h._tr_flush_block(P,P.block_start>=0?P.block_start:-1,P.strstart-P.block_start,de),P.block_start=P.strstart,H(P.strm)}function C(P,de){P.pending_buf[P.pending++]=de}function Q(P,de){P.pending_buf[P.pending++]=de>>>8&255,P.pending_buf[P.pending++]=de&255}function le(P,de,we,Z){var ue=P.avail_in;return ue>Z&&(ue=Z),ue===0?0:(P.avail_in-=ue,v.arraySet(de,P.input,P.next_in,ue,we),P.state.wrap===1?P.adler=g(P.adler,de,ue,we):P.state.wrap===2&&(P.adler=b(P.adler,de,ue,we)),P.next_in+=ue,P.total_in+=ue,ue)}function ge(P,de){var we=P.max_chain_length,Z=P.strstart,ue,Ae,Re=P.prev_length,Ce=P.nice_match,ze=P.strstart>P.w_size-ee?P.strstart-(P.w_size-ee):0,De=P.window,gt=P.w_mask,tt=P.prev,qe=P.strstart+W,at=De[Z+Re-1],ft=De[Z+Re];P.prev_length>=P.good_match&&(we>>=2),Ce>P.lookahead&&(Ce=P.lookahead);do if(ue=de,!(De[ue+Re]!==ft||De[ue+Re-1]!==at||De[ue]!==De[Z]||De[++ue]!==De[Z+1])){Z+=2,ue++;do;while(De[++Z]===De[++ue]&&De[++Z]===De[++ue]&&De[++Z]===De[++ue]&&De[++Z]===De[++ue]&&De[++Z]===De[++ue]&&De[++Z]===De[++ue]&&De[++Z]===De[++ue]&&De[++Z]===De[++ue]&&Z<qe);if(Ae=W-(qe-Z),Z=qe-W,Ae>Re){if(P.match_start=de,Re=Ae,Ae>=Ce)break;at=De[Z+Re-1],ft=De[Z+Re]}}while((de=tt[de&gt])>ze&&--we!==0);return Re<=P.lookahead?Re:P.lookahead}function ye(P){var de=P.w_size,we,Z,ue,Ae,Re;do{if(Ae=P.window_size-P.lookahead-P.strstart,P.strstart>=de+(de-ee)){v.arraySet(P.window,P.window,de,de,0),P.match_start-=de,P.strstart-=de,P.block_start-=de,Z=P.hash_size,we=Z;do ue=P.head[--we],P.head[we]=ue>=de?ue-de:0;while(--Z);Z=de,we=Z;do ue=P.prev[--we],P.prev[we]=ue>=de?ue-de:0;while(--Z);Ae+=de}if(P.strm.avail_in===0)break;if(Z=le(P.strm,P.window,P.strstart+P.lookahead,Ae),P.lookahead+=Z,P.lookahead+P.insert>=ae)for(Re=P.strstart-P.insert,P.ins_h=P.window[Re],P.ins_h=(P.ins_h<<P.hash_shift^P.window[Re+1])&P.hash_mask;P.insert&&(P.ins_h=(P.ins_h<<P.hash_shift^P.window[Re+ae-1])&P.hash_mask,P.prev[Re&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=Re,Re++,P.insert--,!(P.lookahead+P.insert<ae)););}while(P.lookahead<ee&&P.strm.avail_in!==0)}function Ee(P,de){var we=65535;for(we>P.pending_buf_size-5&&(we=P.pending_buf_size-5);;){if(P.lookahead<=1){if(ye(P),P.lookahead===0&&de===f)return K;if(P.lookahead===0)break}P.strstart+=P.lookahead,P.lookahead=0;var Z=P.block_start+we;if((P.strstart===0||P.strstart>=Z)&&(P.lookahead=P.strstart-Z,P.strstart=Z,O(P,!1),P.strm.avail_out===0)||P.strstart-P.block_start>=P.w_size-ee&&(O(P,!1),P.strm.avail_out===0))return K}return P.insert=0,de===n?(O(P,!0),P.strm.avail_out===0?$:te):(P.strstart>P.block_start&&(O(P,!1),P.strm.avail_out===0),K)}function Se(P,de){for(var we,Z;;){if(P.lookahead<ee){if(ye(P),P.lookahead<ee&&de===f)return K;if(P.lookahead===0)break}if(we=0,P.lookahead>=ae&&(P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+ae-1])&P.hash_mask,we=P.prev[P.strstart&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=P.strstart),we!==0&&P.strstart-we<=P.w_size-ee&&(P.match_length=ge(P,we)),P.match_length>=ae)if(Z=h._tr_tally(P,P.strstart-P.match_start,P.match_length-ae),P.lookahead-=P.match_length,P.match_length<=P.max_lazy_match&&P.lookahead>=ae){P.match_length--;do P.strstart++,P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+ae-1])&P.hash_mask,we=P.prev[P.strstart&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=P.strstart;while(--P.match_length!==0);P.strstart++}else P.strstart+=P.match_length,P.match_length=0,P.ins_h=P.window[P.strstart],P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+1])&P.hash_mask;else Z=h._tr_tally(P,0,P.window[P.strstart]),P.lookahead--,P.strstart++;if(Z&&(O(P,!1),P.strm.avail_out===0))return K}return P.insert=P.strstart<ae-1?P.strstart:ae-1,de===n?(O(P,!0),P.strm.avail_out===0?$:te):P.last_lit&&(O(P,!1),P.strm.avail_out===0)?K:L}function Ie(P,de){for(var we,Z,ue;;){if(P.lookahead<ee){if(ye(P),P.lookahead<ee&&de===f)return K;if(P.lookahead===0)break}if(we=0,P.lookahead>=ae&&(P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+ae-1])&P.hash_mask,we=P.prev[P.strstart&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=P.strstart),P.prev_length=P.match_length,P.prev_match=P.match_start,P.match_length=ae-1,we!==0&&P.prev_length<P.max_lazy_match&&P.strstart-we<=P.w_size-ee&&(P.match_length=ge(P,we),P.match_length<=5&&(P.strategy===A||P.match_length===ae&&P.strstart-P.match_start>4096)&&(P.match_length=ae-1)),P.prev_length>=ae&&P.match_length<=P.prev_length){ue=P.strstart+P.lookahead-ae,Z=h._tr_tally(P,P.strstart-1-P.prev_match,P.prev_length-ae),P.lookahead-=P.prev_length-1,P.prev_length-=2;do++P.strstart<=ue&&(P.ins_h=(P.ins_h<<P.hash_shift^P.window[P.strstart+ae-1])&P.hash_mask,we=P.prev[P.strstart&P.w_mask]=P.head[P.ins_h],P.head[P.ins_h]=P.strstart);while(--P.prev_length!==0);if(P.match_available=0,P.match_length=ae-1,P.strstart++,Z&&(O(P,!1),P.strm.avail_out===0))return K}else if(P.match_available){if(Z=h._tr_tally(P,0,P.window[P.strstart-1]),Z&&O(P,!1),P.strstart++,P.lookahead--,P.strm.avail_out===0)return K}else P.match_available=1,P.strstart++,P.lookahead--}return P.match_available&&(Z=h._tr_tally(P,0,P.window[P.strstart-1]),P.match_available=0),P.insert=P.strstart<ae-1?P.strstart:ae-1,de===n?(O(P,!0),P.strm.avail_out===0?$:te):P.last_lit&&(O(P,!1),P.strm.avail_out===0)?K:L}function Oe(P,de){for(var we,Z,ue,Ae,Re=P.window;;){if(P.lookahead<=W){if(ye(P),P.lookahead<=W&&de===f)return K;if(P.lookahead===0)break}if(P.match_length=0,P.lookahead>=ae&&P.strstart>0&&(ue=P.strstart-1,Z=Re[ue],Z===Re[++ue]&&Z===Re[++ue]&&Z===Re[++ue])){Ae=P.strstart+W;do;while(Z===Re[++ue]&&Z===Re[++ue]&&Z===Re[++ue]&&Z===Re[++ue]&&Z===Re[++ue]&&Z===Re[++ue]&&Z===Re[++ue]&&Z===Re[++ue]&&ue<Ae);P.match_length=W-(Ae-ue),P.match_length>P.lookahead&&(P.match_length=P.lookahead)}if(P.match_length>=ae?(we=h._tr_tally(P,1,P.match_length-ae),P.lookahead-=P.match_length,P.strstart+=P.match_length,P.match_length=0):(we=h._tr_tally(P,0,P.window[P.strstart]),P.lookahead--,P.strstart++),we&&(O(P,!1),P.strm.avail_out===0))return K}return P.insert=0,de===n?(O(P,!0),P.strm.avail_out===0?$:te):P.last_lit&&(O(P,!1),P.strm.avail_out===0)?K:L}function Fe(P,de){for(var we;;){if(P.lookahead===0&&(ye(P),P.lookahead===0)){if(de===f)return K;break}if(P.match_length=0,we=h._tr_tally(P,0,P.window[P.strstart]),P.lookahead--,P.strstart++,we&&(O(P,!1),P.strm.avail_out===0))return K}return P.insert=0,de===n?(O(P,!0),P.strm.avail_out===0?$:te):P.last_lit&&(O(P,!1),P.strm.avail_out===0)?K:L}function ke(P,de,we,Z,ue){this.good_length=P,this.max_lazy=de,this.nice_length=we,this.max_chain=Z,this.func=ue}var He;He=[new ke(0,0,0,0,Ee),new ke(4,4,8,4,Se),new ke(4,5,16,8,Se),new ke(4,6,32,32,Se),new ke(4,4,16,16,Ie),new ke(8,16,32,32,Ie),new ke(8,16,128,128,Ie),new ke(8,32,128,256,Ie),new ke(32,128,258,1024,Ie),new ke(32,258,258,4096,Ie)];function Me(P){P.window_size=2*P.w_size,q(P.head),P.max_lazy_match=He[P.level].max_lazy,P.good_match=He[P.level].good_length,P.nice_match=He[P.level].nice_length,P.max_chain_length=He[P.level].max_chain,P.strstart=0,P.block_start=0,P.lookahead=0,P.insert=0,P.match_length=P.prev_length=ae-1,P.match_available=0,P.ins_h=0}function j(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=M,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new v.Buf16(ie*2),this.dyn_dtree=new v.Buf16((2*G+1)*2),this.bl_tree=new v.Buf16((2*U+1)*2),q(this.dyn_ltree),q(this.dyn_dtree),q(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new v.Buf16(se+1),this.heap=new v.Buf16(2*T+1),q(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new v.Buf16(2*T+1),q(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function me(P){var de;return!P||!P.state?z(P,m):(P.total_in=P.total_out=0,P.data_type=R,de=P.state,de.pending=0,de.pending_out=0,de.wrap<0&&(de.wrap=-de.wrap),de.status=de.wrap?re:ce,P.adler=de.wrap===2?0:1,de.last_flush=f,h._tr_init(de),y)}function be(P){var de=me(P);return de===y&&Me(P.state),de}function Pe(P,de){return!P||!P.state||P.state.wrap!==2?m:(P.state.gzhead=de,y)}function ve(P,de,we,Z,ue,Ae){if(!P)return m;var Re=1;if(de===x&&(de=6),Z<0?(Re=0,Z=-Z):Z>15&&(Re=2,Z-=16),ue<1||ue>B||we!==M||Z<8||Z>15||de<0||de>9||Ae<0||Ae>k)return z(P,m);Z===8&&(Z=9);var Ce=new j;return P.state=Ce,Ce.strm=P,Ce.wrap=Re,Ce.gzhead=null,Ce.w_bits=Z,Ce.w_size=1<<Ce.w_bits,Ce.w_mask=Ce.w_size-1,Ce.hash_bits=ue+7,Ce.hash_size=1<<Ce.hash_bits,Ce.hash_mask=Ce.hash_size-1,Ce.hash_shift=~~((Ce.hash_bits+ae-1)/ae),Ce.window=new v.Buf8(Ce.w_size*2),Ce.head=new v.Buf16(Ce.hash_size),Ce.prev=new v.Buf16(Ce.w_size),Ce.lit_bufsize=1<<ue+6,Ce.pending_buf_size=Ce.lit_bufsize*4,Ce.pending_buf=new v.Buf8(Ce.pending_buf_size),Ce.d_buf=1*Ce.lit_bufsize,Ce.l_buf=(1+2)*Ce.lit_bufsize,Ce.level=de,Ce.strategy=Ae,Ce.method=we,be(P)}function xe(P,de){return ve(P,de,M,I,Y,S)}function ne(P,de){var we,Z,ue,Ae;if(!P||!P.state||de>p||de<0)return P?z(P,m):m;if(Z=P.state,!P.output||!P.input&&P.avail_in!==0||Z.status===X&&de!==n)return z(P,P.avail_out===0?w:m);if(Z.strm=P,we=Z.last_flush,Z.last_flush=de,Z.status===re)if(Z.wrap===2)P.adler=0,C(Z,31),C(Z,139),C(Z,8),Z.gzhead?(C(Z,(Z.gzhead.text?1:0)+(Z.gzhead.hcrc?2:0)+(Z.gzhead.extra?4:0)+(Z.gzhead.name?8:0)+(Z.gzhead.comment?16:0)),C(Z,Z.gzhead.time&255),C(Z,Z.gzhead.time>>8&255),C(Z,Z.gzhead.time>>16&255),C(Z,Z.gzhead.time>>24&255),C(Z,Z.level===9?2:Z.strategy>=N||Z.level<2?4:0),C(Z,Z.gzhead.os&255),Z.gzhead.extra&&Z.gzhead.extra.length&&(C(Z,Z.gzhead.extra.length&255),C(Z,Z.gzhead.extra.length>>8&255)),Z.gzhead.hcrc&&(P.adler=b(P.adler,Z.pending_buf,Z.pending,0)),Z.gzindex=0,Z.status=fe):(C(Z,0),C(Z,0),C(Z,0),C(Z,0),C(Z,0),C(Z,Z.level===9?2:Z.strategy>=N||Z.level<2?4:0),C(Z,V),Z.status=ce);else{var Re=M+(Z.w_bits-8<<4)<<8,Ce=-1;Z.strategy>=N||Z.level<2?Ce=0:Z.level<6?Ce=1:Z.level===6?Ce=2:Ce=3,Re|=Ce<<6,Z.strstart!==0&&(Re|=_),Re+=31-Re%31,Z.status=ce,Q(Z,Re),Z.strstart!==0&&(Q(Z,P.adler>>>16),Q(Z,P.adler&65535)),P.adler=1}if(Z.status===fe)if(Z.gzhead.extra){for(ue=Z.pending;Z.gzindex<(Z.gzhead.extra.length&65535)&&!(Z.pending===Z.pending_buf_size&&(Z.gzhead.hcrc&&Z.pending>ue&&(P.adler=b(P.adler,Z.pending_buf,Z.pending-ue,ue)),H(P),ue=Z.pending,Z.pending===Z.pending_buf_size));)C(Z,Z.gzhead.extra[Z.gzindex]&255),Z.gzindex++;Z.gzhead.hcrc&&Z.pending>ue&&(P.adler=b(P.adler,Z.pending_buf,Z.pending-ue,ue)),Z.gzindex===Z.gzhead.extra.length&&(Z.gzindex=0,Z.status=pe)}else Z.status=pe;if(Z.status===pe)if(Z.gzhead.name){ue=Z.pending;do{if(Z.pending===Z.pending_buf_size&&(Z.gzhead.hcrc&&Z.pending>ue&&(P.adler=b(P.adler,Z.pending_buf,Z.pending-ue,ue)),H(P),ue=Z.pending,Z.pending===Z.pending_buf_size)){Ae=1;break}Z.gzindex<Z.gzhead.name.length?Ae=Z.gzhead.name.charCodeAt(Z.gzindex++)&255:Ae=0,C(Z,Ae)}while(Ae!==0);Z.gzhead.hcrc&&Z.pending>ue&&(P.adler=b(P.adler,Z.pending_buf,Z.pending-ue,ue)),Ae===0&&(Z.gzindex=0,Z.status=he)}else Z.status=he;if(Z.status===he)if(Z.gzhead.comment){ue=Z.pending;do{if(Z.pending===Z.pending_buf_size&&(Z.gzhead.hcrc&&Z.pending>ue&&(P.adler=b(P.adler,Z.pending_buf,Z.pending-ue,ue)),H(P),ue=Z.pending,Z.pending===Z.pending_buf_size)){Ae=1;break}Z.gzindex<Z.gzhead.comment.length?Ae=Z.gzhead.comment.charCodeAt(Z.gzindex++)&255:Ae=0,C(Z,Ae)}while(Ae!==0);Z.gzhead.hcrc&&Z.pending>ue&&(P.adler=b(P.adler,Z.pending_buf,Z.pending-ue,ue)),Ae===0&&(Z.status=oe)}else Z.status=oe;if(Z.status===oe&&(Z.gzhead.hcrc?(Z.pending+2>Z.pending_buf_size&&H(P),Z.pending+2<=Z.pending_buf_size&&(C(Z,P.adler&255),C(Z,P.adler>>8&255),P.adler=0,Z.status=ce)):Z.status=ce),Z.pending!==0){if(H(P),P.avail_out===0)return Z.last_flush=-1,y}else if(P.avail_in===0&&F(de)<=F(we)&&de!==n)return z(P,w);if(Z.status===X&&P.avail_in!==0)return z(P,w);if(P.avail_in!==0||Z.lookahead!==0||de!==f&&Z.status!==X){var ze=Z.strategy===N?Fe(Z,de):Z.strategy===E?Oe(Z,de):He[Z.level].func(Z,de);if((ze===$||ze===te)&&(Z.status=X),ze===K||ze===$)return P.avail_out===0&&(Z.last_flush=-1),y;if(ze===L&&(de===s?h._tr_align(Z):de!==p&&(h._tr_stored_block(Z,0,0,!1),de===i&&(q(Z.head),Z.lookahead===0&&(Z.strstart=0,Z.block_start=0,Z.insert=0))),H(P),P.avail_out===0))return Z.last_flush=-1,y}return de!==n?y:Z.wrap<=0?l:(Z.wrap===2?(C(Z,P.adler&255),C(Z,P.adler>>8&255),C(Z,P.adler>>16&255),C(Z,P.adler>>24&255),C(Z,P.total_in&255),C(Z,P.total_in>>8&255),C(Z,P.total_in>>16&255),C(Z,P.total_in>>24&255)):(Q(Z,P.adler>>>16),Q(Z,P.adler&65535)),H(P),Z.wrap>0&&(Z.wrap=-Z.wrap),Z.pending!==0?y:l)}function Ne(P){var de;return!P||!P.state?m:(de=P.state.status,de!==re&&de!==fe&&de!==pe&&de!==he&&de!==oe&&de!==ce&&de!==X?z(P,m):(P.state=null,de===ce?z(P,c):y))}function Te(P,de){var we=de.length,Z,ue,Ae,Re,Ce,ze,De,gt;if(!P||!P.state||(Z=P.state,Re=Z.wrap,Re===2||Re===1&&Z.status!==re||Z.lookahead))return m;for(Re===1&&(P.adler=g(P.adler,de,we,0)),Z.wrap=0,we>=Z.w_size&&(Re===0&&(q(Z.head),Z.strstart=0,Z.block_start=0,Z.insert=0),gt=new v.Buf8(Z.w_size),v.arraySet(gt,de,we-Z.w_size,Z.w_size,0),de=gt,we=Z.w_size),Ce=P.avail_in,ze=P.next_in,De=P.input,P.avail_in=we,P.next_in=0,P.input=de,ye(Z);Z.lookahead>=ae;){ue=Z.strstart,Ae=Z.lookahead-(ae-1);do Z.ins_h=(Z.ins_h<<Z.hash_shift^Z.window[ue+ae-1])&Z.hash_mask,Z.prev[ue&Z.w_mask]=Z.head[Z.ins_h],Z.head[Z.ins_h]=ue,ue++;while(--Ae);Z.strstart=ue,Z.lookahead=ae-1,ye(Z)}return Z.strstart+=Z.lookahead,Z.block_start=Z.strstart,Z.insert=Z.lookahead,Z.lookahead=0,Z.match_length=Z.prev_length=ae-1,Z.match_available=0,P.next_in=ze,P.input=De,P.avail_in=Ce,Z.wrap=Re,y}o.deflateInit=xe,o.deflateInit2=ve,o.deflateReset=be,o.deflateResetKeep=me,o.deflateSetHeader=Pe,o.deflate=ne,o.deflateEnd=Ne,o.deflateSetDictionary=Te,o.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":89,"./adler32":91,"./crc32":93,"./messages":99,"./trees":100}],95:[function(t,d,o){function v(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}d.exports=v},{}],96:[function(t,d,o){arguments[4][41][0].apply(o,arguments)},{dup:41}],97:[function(t,d,o){arguments[4][42][0].apply(o,arguments)},{"../utils/common":89,"./adler32":91,"./crc32":93,"./inffast":96,"./inftrees":98,dup:42}],98:[function(t,d,o){arguments[4][43][0].apply(o,arguments)},{"../utils/common":89,dup:43}],99:[function(t,d,o){arguments[4][44][0].apply(o,arguments)},{dup:44}],100:[function(t,d,o){var v=t("../utils/common"),h=4,g=0,b=1,u=2;function f(j){for(var me=j.length;--me>=0;)j[me]=0}var s=0,i=1,n=2,p=3,y=258,l=29,m=256,c=m+1+l,w=30,x=19,A=2*c+1,N=15,E=16,k=7,S=256,R=16,M=17,B=18,I=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],Y=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],J=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],D=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],T=512,G=new Array((c+2)*2);f(G);var U=new Array(w*2);f(U);var ie=new Array(T);f(ie);var se=new Array(y-p+1);f(se);var ae=new Array(l);f(ae);var W=new Array(w);f(W);function ee(j,me,be,Pe,ve){this.static_tree=j,this.extra_bits=me,this.extra_base=be,this.elems=Pe,this.max_length=ve,this.has_stree=j&&j.length}var _,re,fe;function pe(j,me){this.dyn_tree=j,this.max_code=0,this.stat_desc=me}function he(j){return j<256?ie[j]:ie[256+(j>>>7)]}function oe(j,me){j.pending_buf[j.pending++]=me&255,j.pending_buf[j.pending++]=me>>>8&255}function ce(j,me,be){j.bi_valid>E-be?(j.bi_buf|=me<<j.bi_valid&65535,oe(j,j.bi_buf),j.bi_buf=me>>E-j.bi_valid,j.bi_valid+=be-E):(j.bi_buf|=me<<j.bi_valid&65535,j.bi_valid+=be)}function X(j,me,be){ce(j,be[me*2],be[me*2+1])}function K(j,me){var be=0;do be|=j&1,j>>>=1,be<<=1;while(--me>0);return be>>>1}function L(j){j.bi_valid===16?(oe(j,j.bi_buf),j.bi_buf=0,j.bi_valid=0):j.bi_valid>=8&&(j.pending_buf[j.pending++]=j.bi_buf&255,j.bi_buf>>=8,j.bi_valid-=8)}function $(j,me){var be=me.dyn_tree,Pe=me.max_code,ve=me.stat_desc.static_tree,xe=me.stat_desc.has_stree,ne=me.stat_desc.extra_bits,Ne=me.stat_desc.extra_base,Te=me.stat_desc.max_length,P,de,we,Z,ue,Ae,Re=0;for(Z=0;Z<=N;Z++)j.bl_count[Z]=0;for(be[j.heap[j.heap_max]*2+1]=0,P=j.heap_max+1;P<A;P++)de=j.heap[P],Z=be[be[de*2+1]*2+1]+1,Z>Te&&(Z=Te,Re++),be[de*2+1]=Z,!(de>Pe)&&(j.bl_count[Z]++,ue=0,de>=Ne&&(ue=ne[de-Ne]),Ae=be[de*2],j.opt_len+=Ae*(Z+ue),xe&&(j.static_len+=Ae*(ve[de*2+1]+ue)));if(Re!==0){do{for(Z=Te-1;j.bl_count[Z]===0;)Z--;j.bl_count[Z]--,j.bl_count[Z+1]+=2,j.bl_count[Te]--,Re-=2}while(Re>0);for(Z=Te;Z!==0;Z--)for(de=j.bl_count[Z];de!==0;)we=j.heap[--P],!(we>Pe)&&(be[we*2+1]!==Z&&(j.opt_len+=(Z-be[we*2+1])*be[we*2],be[we*2+1]=Z),de--)}}function te(j,me,be){var Pe=new Array(N+1),ve=0,xe,ne;for(xe=1;xe<=N;xe++)Pe[xe]=ve=ve+be[xe-1]<<1;for(ne=0;ne<=me;ne++){var Ne=j[ne*2+1];Ne!==0&&(j[ne*2]=K(Pe[Ne]++,Ne))}}function V(){var j,me,be,Pe,ve,xe=new Array(N+1);for(be=0,Pe=0;Pe<l-1;Pe++)for(ae[Pe]=be,j=0;j<1<<I[Pe];j++)se[be++]=Pe;for(se[be-1]=Pe,ve=0,Pe=0;Pe<16;Pe++)for(W[Pe]=ve,j=0;j<1<<Y[Pe];j++)ie[ve++]=Pe;for(ve>>=7;Pe<w;Pe++)for(W[Pe]=ve<<7,j=0;j<1<<Y[Pe]-7;j++)ie[256+ve++]=Pe;for(me=0;me<=N;me++)xe[me]=0;for(j=0;j<=143;)G[j*2+1]=8,j++,xe[8]++;for(;j<=255;)G[j*2+1]=9,j++,xe[9]++;for(;j<=279;)G[j*2+1]=7,j++,xe[7]++;for(;j<=287;)G[j*2+1]=8,j++,xe[8]++;for(te(G,c+1,xe),j=0;j<w;j++)U[j*2+1]=5,U[j*2]=K(j,5);_=new ee(G,I,m+1,c,N),re=new ee(U,Y,0,w,N),fe=new ee(new Array(0),J,0,x,k)}function z(j){var me;for(me=0;me<c;me++)j.dyn_ltree[me*2]=0;for(me=0;me<w;me++)j.dyn_dtree[me*2]=0;for(me=0;me<x;me++)j.bl_tree[me*2]=0;j.dyn_ltree[S*2]=1,j.opt_len=j.static_len=0,j.last_lit=j.matches=0}function F(j){j.bi_valid>8?oe(j,j.bi_buf):j.bi_valid>0&&(j.pending_buf[j.pending++]=j.bi_buf),j.bi_buf=0,j.bi_valid=0}function q(j,me,be,Pe){F(j),Pe&&(oe(j,be),oe(j,~be)),v.arraySet(j.pending_buf,j.window,me,be,j.pending),j.pending+=be}function H(j,me,be,Pe){var ve=me*2,xe=be*2;return j[ve]<j[xe]||j[ve]===j[xe]&&Pe[me]<=Pe[be]}function O(j,me,be){for(var Pe=j.heap[be],ve=be<<1;ve<=j.heap_len&&(ve<j.heap_len&&H(me,j.heap[ve+1],j.heap[ve],j.depth)&&ve++,!H(me,Pe,j.heap[ve],j.depth));)j.heap[be]=j.heap[ve],be=ve,ve<<=1;j.heap[be]=Pe}function C(j,me,be){var Pe,ve,xe=0,ne,Ne;if(j.last_lit!==0)do Pe=j.pending_buf[j.d_buf+xe*2]<<8|j.pending_buf[j.d_buf+xe*2+1],ve=j.pending_buf[j.l_buf+xe],xe++,Pe===0?X(j,ve,me):(ne=se[ve],X(j,ne+m+1,me),Ne=I[ne],Ne!==0&&(ve-=ae[ne],ce(j,ve,Ne)),Pe--,ne=he(Pe),X(j,ne,be),Ne=Y[ne],Ne!==0&&(Pe-=W[ne],ce(j,Pe,Ne)));while(xe<j.last_lit);X(j,S,me)}function Q(j,me){var be=me.dyn_tree,Pe=me.stat_desc.static_tree,ve=me.stat_desc.has_stree,xe=me.stat_desc.elems,ne,Ne,Te=-1,P;for(j.heap_len=0,j.heap_max=A,ne=0;ne<xe;ne++)be[ne*2]!==0?(j.heap[++j.heap_len]=Te=ne,j.depth[ne]=0):be[ne*2+1]=0;for(;j.heap_len<2;)P=j.heap[++j.heap_len]=Te<2?++Te:0,be[P*2]=1,j.depth[P]=0,j.opt_len--,ve&&(j.static_len-=Pe[P*2+1]);for(me.max_code=Te,ne=j.heap_len>>1;ne>=1;ne--)O(j,be,ne);P=xe;do ne=j.heap[1],j.heap[1]=j.heap[j.heap_len--],O(j,be,1),Ne=j.heap[1],j.heap[--j.heap_max]=ne,j.heap[--j.heap_max]=Ne,be[P*2]=be[ne*2]+be[Ne*2],j.depth[P]=(j.depth[ne]>=j.depth[Ne]?j.depth[ne]:j.depth[Ne])+1,be[ne*2+1]=be[Ne*2+1]=P,j.heap[1]=P++,O(j,be,1);while(j.heap_len>=2);j.heap[--j.heap_max]=j.heap[1],$(j,me),te(be,Te,j.bl_count)}function le(j,me,be){var Pe,ve=-1,xe,ne=me[0*2+1],Ne=0,Te=7,P=4;for(ne===0&&(Te=138,P=3),me[(be+1)*2+1]=65535,Pe=0;Pe<=be;Pe++)xe=ne,ne=me[(Pe+1)*2+1],!(++Ne<Te&&xe===ne)&&(Ne<P?j.bl_tree[xe*2]+=Ne:xe!==0?(xe!==ve&&j.bl_tree[xe*2]++,j.bl_tree[R*2]++):Ne<=10?j.bl_tree[M*2]++:j.bl_tree[B*2]++,Ne=0,ve=xe,ne===0?(Te=138,P=3):xe===ne?(Te=6,P=3):(Te=7,P=4))}function ge(j,me,be){var Pe,ve=-1,xe,ne=me[0*2+1],Ne=0,Te=7,P=4;for(ne===0&&(Te=138,P=3),Pe=0;Pe<=be;Pe++)if(xe=ne,ne=me[(Pe+1)*2+1],!(++Ne<Te&&xe===ne)){if(Ne<P)do X(j,xe,j.bl_tree);while(--Ne!==0);else xe!==0?(xe!==ve&&(X(j,xe,j.bl_tree),Ne--),X(j,R,j.bl_tree),ce(j,Ne-3,2)):Ne<=10?(X(j,M,j.bl_tree),ce(j,Ne-3,3)):(X(j,B,j.bl_tree),ce(j,Ne-11,7));Ne=0,ve=xe,ne===0?(Te=138,P=3):xe===ne?(Te=6,P=3):(Te=7,P=4)}}function ye(j){var me;for(le(j,j.dyn_ltree,j.l_desc.max_code),le(j,j.dyn_dtree,j.d_desc.max_code),Q(j,j.bl_desc),me=x-1;me>=3&&j.bl_tree[D[me]*2+1]===0;me--);return j.opt_len+=3*(me+1)+5+5+4,me}function Ee(j,me,be,Pe){var ve;for(ce(j,me-257,5),ce(j,be-1,5),ce(j,Pe-4,4),ve=0;ve<Pe;ve++)ce(j,j.bl_tree[D[ve]*2+1],3);ge(j,j.dyn_ltree,me-1),ge(j,j.dyn_dtree,be-1)}function Se(j){var me=4093624447,be;for(be=0;be<=31;be++,me>>>=1)if(me&1&&j.dyn_ltree[be*2]!==0)return g;if(j.dyn_ltree[9*2]!==0||j.dyn_ltree[10*2]!==0||j.dyn_ltree[13*2]!==0)return b;for(be=32;be<m;be++)if(j.dyn_ltree[be*2]!==0)return b;return g}var Ie=!1;function Oe(j){Ie||(V(),Ie=!0),j.l_desc=new pe(j.dyn_ltree,_),j.d_desc=new pe(j.dyn_dtree,re),j.bl_desc=new pe(j.bl_tree,fe),j.bi_buf=0,j.bi_valid=0,z(j)}function Fe(j,me,be,Pe){ce(j,(s<<1)+(Pe?1:0),3),q(j,me,be,!0)}function ke(j){ce(j,i<<1,3),X(j,S,G),L(j)}function He(j,me,be,Pe){var ve,xe,ne=0;j.level>0?(j.strm.data_type===u&&(j.strm.data_type=Se(j)),Q(j,j.l_desc),Q(j,j.d_desc),ne=ye(j),ve=j.opt_len+3+7>>>3,xe=j.static_len+3+7>>>3,xe<=ve&&(ve=xe)):ve=xe=be+5,be+4<=ve&&me!==-1?Fe(j,me,be,Pe):j.strategy===h||xe===ve?(ce(j,(i<<1)+(Pe?1:0),3),C(j,G,U)):(ce(j,(n<<1)+(Pe?1:0),3),Ee(j,j.l_desc.max_code+1,j.d_desc.max_code+1,ne+1),C(j,j.dyn_ltree,j.dyn_dtree)),z(j),Pe&&F(j)}function Me(j,me,be){return j.pending_buf[j.d_buf+j.last_lit*2]=me>>>8&255,j.pending_buf[j.d_buf+j.last_lit*2+1]=me&255,j.pending_buf[j.l_buf+j.last_lit]=be&255,j.last_lit++,me===0?j.dyn_ltree[be*2]++:(j.matches++,me--,j.dyn_ltree[(se[be]+m+1)*2]++,j.dyn_dtree[he(me)*2]++),j.last_lit===j.lit_bufsize-1}o._tr_init=Oe,o._tr_stored_block=Fe,o._tr_flush_block=He,o._tr_tally=Me,o._tr_align=ke},{"../utils/common":89}],101:[function(t,d,o){arguments[4][46][0].apply(o,arguments)},{dup:46}],102:[function(t,d,o){d.exports=function(u){if(!u)throw new Error("no data provided");u=u.toString().trim();var f={pages:[],chars:[],kernings:[]},s=u.split(/\r\n?|\n/g);if(s.length===0)throw new Error("no data in BMFont file");for(var i=0;i<s.length;i++){var n=v(s[i],i);if(!!n)if(n.key==="page"){if(typeof n.data.id!="number")throw new Error("malformed file at line "+i+" -- needs page id=N");if(typeof n.data.file!="string")throw new Error("malformed file at line "+i+' -- needs page file="path"');f.pages[n.data.id]=n.data.file}else n.key==="chars"||n.key==="kernings"||(n.key==="char"?f.chars.push(n.data):n.key==="kerning"?f.kernings.push(n.data):f[n.key]=n.data)}return f};function v(b,u){if(b=b.replace(/\t+/g," ").trim(),!b)return null;var f=b.indexOf(" ");if(f===-1)throw new Error("no named row at line "+u);var s=b.substring(0,f);b=b.substring(f+1),b=b.replace(/letter=[\'\"]\S+[\'\"]/gi,""),b=b.split("="),b=b.map(function(l){return l.trim().match(/(".*?"|[^"\s]+)+(?=\s*|\s*$)/g)});for(var i=[],n=0;n<b.length;n++){var p=b[n];n===0?i.push({key:p[0],data:""}):n===b.length-1?i[i.length-1].data=h(p[0]):(i[i.length-1].data=h(p[0]),i.push({key:p[1],data:""}))}var y={key:s,data:{}};return i.forEach(function(l){y.data[l.key]=l.data}),y}function h(b){return!b||b.length===0?"":b.indexOf('"')===0||b.indexOf("'")===0?b.substring(1,b.length-1):b.indexOf(",")!==-1?g(b):parseInt(b,10)}function g(b){return b.split(",").map(function(u){return parseInt(u,10)})}},{}],103:[function(t,d,o){var v=[66,77,70];d.exports=function(y){if(y.length<6)throw new Error("invalid buffer length for BMFont");var l=v.every(function(A,N){return y.readUInt8(N)===A});if(!l)throw new Error("BMFont missing BMF byte header");var m=3,c=y.readUInt8(m++);if(c>3)throw new Error("Only supports BMFont Binary v3 (BMFont App v1.10)");for(var w={kernings:[],chars:[]},x=0;x<5;x++)m+=h(w,y,m);return w};function h(p,y,l){if(l>y.length-1)return 0;var m=y.readUInt8(l++),c=y.readInt32LE(l);switch(l+=4,m){case 1:p.info=g(y,l);break;case 2:p.common=b(y,l);break;case 3:p.pages=u(y,l,c);break;case 4:p.chars=f(y,l,c);break;case 5:p.kernings=s(y,l,c);break}return 5+c}function g(p,y){var l={};l.size=p.readInt16LE(y);var m=p.readUInt8(y+2);return l.smooth=m>>7&1,l.unicode=m>>6&1,l.italic=m>>5&1,l.bold=m>>4&1,m>>3&1&&(l.fixedHeight=1),l.charset=p.readUInt8(y+3)||"",l.stretchH=p.readUInt16LE(y+4),l.aa=p.readUInt8(y+6),l.padding=[p.readInt8(y+7),p.readInt8(y+8),p.readInt8(y+9),p.readInt8(y+10)],l.spacing=[p.readInt8(y+11),p.readInt8(y+12)],l.outline=p.readUInt8(y+13),l.face=n(p,y+14),l}function b(p,y){var l={};return l.lineHeight=p.readUInt16LE(y),l.base=p.readUInt16LE(y+2),l.scaleW=p.readUInt16LE(y+4),l.scaleH=p.readUInt16LE(y+6),l.pages=p.readUInt16LE(y+8),p.readUInt8(y+10),l.packed=0,l.alphaChnl=p.readUInt8(y+11),l.redChnl=p.readUInt8(y+12),l.greenChnl=p.readUInt8(y+13),l.blueChnl=p.readUInt8(y+14),l}function u(p,y,l){for(var m=[],c=i(p,y),w=c.length+1,x=l/w,A=0;A<x;A++)m[A]=p.slice(y,y+c.length).toString("utf8"),y+=w;return m}function f(p,y,l){for(var m=[],c=l/20,w=0;w<c;w++){var x={},A=w*20;x.id=p.readUInt32LE(y+0+A),x.x=p.readUInt16LE(y+4+A),x.y=p.readUInt16LE(y+6+A),x.width=p.readUInt16LE(y+8+A),x.height=p.readUInt16LE(y+10+A),x.xoffset=p.readInt16LE(y+12+A),x.yoffset=p.readInt16LE(y+14+A),x.xadvance=p.readInt16LE(y+16+A),x.page=p.readUInt8(y+18+A),x.chnl=p.readUInt8(y+19+A),m[w]=x}return m}function s(p,y,l){for(var m=[],c=l/10,w=0;w<c;w++){var x={},A=w*10;x.first=p.readUInt32LE(y+0+A),x.second=p.readUInt32LE(y+4+A),x.amount=p.readInt16LE(y+8+A),m[w]=x}return m}function i(p,y){for(var l=y;l<p.length&&p[l]!==0;l++);return p.slice(y,l)}function n(p,y){return i(p,y).toString("utf8")}},{}],104:[function(t,d,o){var v=t("./parse-attribs"),h=t("xml-parse-from-string"),g={scaleh:"scaleH",scalew:"scaleW",stretchh:"stretchH",lineheight:"lineHeight",alphachnl:"alphaChnl",redchnl:"redChnl",greenchnl:"greenChnl",bluechnl:"blueChnl"};d.exports=function(i){i=i.toString();var n=h(i),p={pages:[],chars:[],kernings:[]};["info","common"].forEach(function(A){var N=n.getElementsByTagName(A)[0];N&&(p[A]=v(b(N)))});var y=n.getElementsByTagName("pages")[0];if(!y)throw new Error("malformed file -- no <pages> element");for(var l=y.getElementsByTagName("page"),m=0;m<l.length;m++){var c=l[m],w=parseInt(c.getAttribute("id"),10),x=c.getAttribute("file");if(isNaN(w))throw new Error('malformed file -- page "id" attribute is NaN');if(!x)throw new Error('malformed file -- needs page "file" attribute');p.pages[parseInt(w,10)]=x}return["chars","kernings"].forEach(function(A){var N=n.getElementsByTagName(A)[0];if(!!N)for(var E=A.substring(0,A.length-1),k=N.getElementsByTagName(E),S=0;S<k.length;S++){var R=k[S];p[A].push(v(b(R)))}}),p};function b(s){var i=u(s);return i.reduce(function(n,p){var y=f(p.nodeName);return n[y]=p.nodeValue,n},{})}function u(s){for(var i=[],n=0;n<s.attributes.length;n++)i.push(s.attributes[n]);return i}function f(s){return g[s.toLowerCase()]||s}},{"./parse-attribs":105,"xml-parse-from-string":188}],105:[function(t,d,o){var v="chasrset";d.exports=function(b){v in b&&(b.charset=b[v],delete b[v]);for(var u in b)u==="face"||u==="charset"||(u==="padding"||u==="spacing"?b[u]=h(b[u]):b[u]=parseInt(b[u],10));return b};function h(g){return g.split(",").map(function(b){return parseInt(b,10)})}},{}],106:[function(t,d,o){var v=t("trim"),h=t("for-each"),g=function(b){return Object.prototype.toString.call(b)==="[object Array]"};d.exports=function(b){if(!b)return{};var u={};return h(v(b).split(`
`),function(f){var s=f.indexOf(":"),i=v(f.slice(0,s)).toLowerCase(),n=v(f.slice(s+1));typeof u[i]=="undefined"?u[i]=n:g(u[i])?u[i].push(n):u[i]=[u[i],n]}),u}},{"for-each":63,trim:179}],107:[function(t,d,o){(function(v){function h(f,s){for(var i=0,n=f.length-1;n>=0;n--){var p=f[n];p==="."?f.splice(n,1):p===".."?(f.splice(n,1),i++):i&&(f.splice(n,1),i--)}if(s)for(;i--;i)f.unshift("..");return f}o.resolve=function(){for(var f="",s=!1,i=arguments.length-1;i>=-1&&!s;i--){var n=i>=0?arguments[i]:v.cwd();if(typeof n!="string")throw new TypeError("Arguments to path.resolve must be strings");if(!n)continue;f=n+"/"+f,s=n.charAt(0)==="/"}return f=h(b(f.split("/"),function(p){return!!p}),!s).join("/"),(s?"/":"")+f||"."},o.normalize=function(f){var s=o.isAbsolute(f),i=u(f,-1)==="/";return f=h(b(f.split("/"),function(n){return!!n}),!s).join("/"),!f&&!s&&(f="."),f&&i&&(f+="/"),(s?"/":"")+f},o.isAbsolute=function(f){return f.charAt(0)==="/"},o.join=function(){var f=Array.prototype.slice.call(arguments,0);return o.normalize(b(f,function(s,i){if(typeof s!="string")throw new TypeError("Arguments to path.join must be strings");return s}).join("/"))},o.relative=function(f,s){f=o.resolve(f).substr(1),s=o.resolve(s).substr(1);function i(w){for(var x=0;x<w.length&&w[x]==="";x++);for(var A=w.length-1;A>=0&&w[A]==="";A--);return x>A?[]:w.slice(x,A-x+1)}for(var n=i(f.split("/")),p=i(s.split("/")),y=Math.min(n.length,p.length),l=y,m=0;m<y;m++)if(n[m]!==p[m]){l=m;break}for(var c=[],m=l;m<n.length;m++)c.push("..");return c=c.concat(p.slice(l)),c.join("/")},o.sep="/",o.delimiter=":",o.dirname=function(f){if(typeof f!="string"&&(f=f+""),f.length===0)return".";for(var s=f.charCodeAt(0),i=s===47,n=-1,p=!0,y=f.length-1;y>=1;--y)if(s=f.charCodeAt(y),s===47){if(!p){n=y;break}}else p=!1;return n===-1?i?"/":".":i&&n===1?"/":f.slice(0,n)};function g(f){typeof f!="string"&&(f=f+"");var s=0,i=-1,n=!0,p;for(p=f.length-1;p>=0;--p)if(f.charCodeAt(p)===47){if(!n){s=p+1;break}}else i===-1&&(n=!1,i=p+1);return i===-1?"":f.slice(s,i)}o.basename=function(f,s){var i=g(f);return s&&i.substr(-1*s.length)===s&&(i=i.substr(0,i.length-s.length)),i},o.extname=function(f){typeof f!="string"&&(f=f+"");for(var s=-1,i=0,n=-1,p=!0,y=0,l=f.length-1;l>=0;--l){var m=f.charCodeAt(l);if(m===47){if(!p){i=l+1;break}continue}n===-1&&(p=!1,n=l+1),m===46?s===-1?s=l:y!==1&&(y=1):s!==-1&&(y=-1)}return s===-1||n===-1||y===0||y===1&&s===n-1&&s===i+1?"":f.slice(s,n)};function b(f,s){if(f.filter)return f.filter(s);for(var i=[],n=0;n<f.length;n++)s(f[n],n,f)&&i.push(f[n]);return i}var u="ab".substr(-1)==="b"?function(f,s,i){return f.substr(s,i)}:function(f,s,i){return s<0&&(s=f.length+s),f.substr(s,i)}}).call(this,t("_process"))},{_process:133}],108:[function(t,d,o){(function(v){var h=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(p){return typeof p}:function(p){return p&&typeof Symbol=="function"&&p.constructor===Symbol&&p!==Symbol.prototype?"symbol":typeof p},g=t("http"),b=t("https"),u=t("url"),f=t("querystring"),s=t("zlib"),i=t("util"),n=function(y,l){if(typeof y!="string"&&!y.hasOwnProperty("url"))throw new Error("Missing url option from options for request method.");var m=(typeof y=="undefined"?"undefined":h(y))==="object"?u.parse(y.url):u.parse(y),c={hostname:m.hostname,port:m.port||(m.protocol.toLowerCase()==="http:"?80:443),path:m.path,method:"GET",headers:{},auth:m.auth||null,parse:"none",stream:!1};if((typeof y=="undefined"?"undefined":h(y))==="object"&&(c=Object.assign(c,y)),c.port=Number(c.port),c.hasOwnProperty("timeout")&&delete c.timeout,c.compressed===!0&&(c.headers["accept-encoding"]="gzip, deflate"),y.hasOwnProperty("form")){if(h(y.form)!=="object")throw new Error("phin 'form' option must be of type Object if present.");var w=f.stringify(y.form);c.headers["Content-Type"]="application/x-www-form-urlencoded",c.headers["Content-Length"]=v.byteLength(w),y.data=w}var x=void 0,A=function(S){var R=S;c.compressed===!0&&(S.headers["content-encoding"]==="gzip"?R=S.pipe(s.createGunzip()):S.headers["content-encoding"]==="deflate"&&(R=S.pipe(s.createInflate()))),c.stream===!0?(S.stream=R,l(null,S)):(S.body=new v([]),R.on("data",function(M){S.body=v.concat([S.body,M])}),R.on("end",function(){if(l){if(c.parse==="json")try{S.body=JSON.parse(S.body.toString())}catch{l("Invalid JSON received.",S);return}l(null,S)}}))};switch(m.protocol.toLowerCase()){case"http:":x=g.request(c,A);break;case"https:":x=b.request(c,A);break;default:l&&l(new Error("Invalid / unknown URL protocol. Expected HTTP or HTTPS."),null);return}if(typeof y.timeout=="number"&&x.setTimeout(y.timeout,function(){x.abort(),l(new Error("Timeout has been reached."),null),l=null}),x.on("error",function(k){l&&l(k,null)}),y.hasOwnProperty("data")){var N=y.data;if(!(y.data instanceof v)&&h(y.data)==="object"){var E=c.headers["content-type"]||c.headers["Content-Type"];if(E==="application/x-www-form-urlencoded")N=f.stringify(y.data);else try{N=JSON.stringify(y.data)}catch{l(new Error("Couldn't stringify object. (Likely due to a circular reference.)"),null)}}x.write(N)}x.end()};n.promisified=function(p,y){return new Promise(function(l,m){n(p,function(c,w){c?m(c):l(w)})})},i.promisify&&(n[i.promisify.custom]=n.promisified),d.exports=n}).call(this,t("buffer").Buffer)},{buffer:48,http:156,https:72,querystring:137,url:180,util:186,zlib:35}],109:[function(t,d,o){d.exports=v;function v(p,y,l,m,c,w){w||(w={});for(var x=w.threshold===void 0?.1:w.threshold,A=35215*x*x,N=0,E=0;E<c;E++)for(var k=0;k<m;k++){var S=(E*m+k)*4,R=g(p,y,S,S);if(R>A)!w.includeAA&&(h(p,k,E,m,c,y)||h(y,k,E,m,c,p))?l&&i(l,S,255,255,0):(l&&i(l,S,255,0,0),N++);else if(l){var M=s(n(p,S),.1);i(l,S,M,M,M)}}return N}function h(p,y,l,m,c,w){for(var x=Math.max(y-1,0),A=Math.max(l-1,0),N=Math.min(y+1,m-1),E=Math.min(l+1,c-1),k=(l*m+y)*4,S=0,R=0,M=0,B=0,I=0,Y,J,D,T,G=x;G<=N;G++)for(var U=A;U<=E;U++)if(!(G===y&&U===l)){var ie=g(p,p,k,(U*m+G)*4,!0);if(ie===0?S++:ie<0?M++:ie>0&&R++,S>2)return!1;!w||(ie<B&&(B=ie,Y=G,J=U),ie>I&&(I=ie,D=G,T=U))}return w?M===0||R===0?!1:!h(p,Y,J,m,c)&&!h(w,Y,J,m,c)||!h(p,D,T,m,c)&&!h(w,D,T,m,c):!0}function g(p,y,l,m,c){var w=p[l+3]/255,x=y[m+3]/255,A=s(p[l+0],w),N=s(p[l+1],w),E=s(p[l+2],w),k=s(y[m+0],x),S=s(y[m+1],x),R=s(y[m+2],x),M=b(A,N,E)-b(k,S,R);if(c)return M;var B=u(A,N,E)-u(k,S,R),I=f(A,N,E)-f(k,S,R);return .5053*M*M+.299*B*B+.1957*I*I}function b(p,y,l){return p*.29889531+y*.58662247+l*.11448223}function u(p,y,l){return p*.59597799-y*.2741761-l*.32180189}function f(p,y,l){return p*.21147017-y*.52261711+l*.31114694}function s(p,y){return 255+(p-255)*y}function i(p,y,l,m,c){p[y+0]=l,p[y+1]=m,p[y+2]=c,p[y+3]=255}function n(p,y){var l=p[y+3]/255,m=s(p[y+0],l),c=s(p[y+1],l),w=s(p[y+2],l);return b(m,c,w)}},{}],110:[function(t,d,o){(function(v){var h=t("./interlace"),g={1:{0:0,1:0,2:0,3:255},2:{0:0,1:0,2:0,3:1},3:{0:0,1:1,2:2,3:255},4:{0:0,1:1,2:2,3:3}};function b(s,i){var n=[],p=0;function y(){if(p===s.length)throw new Error("Ran out of data");var l=s[p];p++;var m,c,w,x,A,N,E,k;switch(i){default:throw new Error("unrecognised depth");case 16:E=s[p],p++,n.push((l<<8)+E);break;case 4:E=l&15,k=l>>4,n.push(k,E);break;case 2:A=l&3,N=l>>2&3,E=l>>4&3,k=l>>6&3,n.push(k,E,N,A);break;case 1:m=l&1,c=l>>1&1,w=l>>2&1,x=l>>3&1,A=l>>4&1,N=l>>5&1,E=l>>6&1,k=l>>7&1,n.push(k,E,N,A,x,w,c,m);break}}return{get:function(l){for(;n.length<l;)y();var m=n.slice(0,l);return n=n.slice(l),m},resetAfterLine:function(){n.length=0},end:function(){if(p!==s.length)throw new Error("extra data found")}}}function u(s,i,n,p,y,l){for(var m=s.width,c=s.height,w=s.index,x=0;x<c;x++)for(var A=0;A<m;A++){for(var N=n(A,x,w),E=0;E<4;E++){var k=g[p][E];if(k===255)i[N+E]=255;else{var S=k+l;if(S===y.length)throw new Error("Ran out of data");i[N+E]=y[S]}}l+=p}return l}function f(s,i,n,p,y,l){for(var m=s.width,c=s.height,w=s.index,x=0;x<c;x++){for(var A=0;A<m;A++)for(var N=y.get(p),E=n(A,x,w),k=0;k<4;k++){var S=g[p][k];i[E+k]=S!==255?N[S]:l}y.resetAfterLine()}}o.dataToBitMap=function(s,i){var n=i.width,p=i.height,y=i.depth,l=i.bpp,m=i.interlace;if(y!==8)var c=b(s,y);var w;y<=8?w=new v(n*p*4):w=new Uint16Array(n*p*4);var x=Math.pow(2,y)-1,A=0,N,E;if(m)N=h.getImagePasses(n,p),E=h.getInterlaceIterator(n,p);else{var k=0;E=function(){var R=k;return k+=4,R},N=[{width:n,height:p}]}for(var S=0;S<N.length;S++)y===8?A=u(N[S],w,E,l,s,A):f(N[S],w,E,l,c,x);if(y===8){if(A!==s.length)throw new Error("extra data found")}else c.end();return w}}).call(this,t("buffer").Buffer)},{"./interlace":120,buffer:48}],111:[function(t,d,o){(function(v){var h=t("./constants");d.exports=function(g,b,u,f){var s=[h.COLORTYPE_COLOR_ALPHA,h.COLORTYPE_ALPHA].indexOf(f.colorType)!==-1;if(f.colorType===f.inputColorType){var i=function(){var R=new ArrayBuffer(2);return new DataView(R).setInt16(0,256,!0),new Int16Array(R)[0]!==256}();if(f.bitDepth===8||f.bitDepth===16&&i)return g}var n=f.bitDepth!==16?g:new Uint16Array(g.buffer),p=255,y=h.COLORTYPE_TO_BPP_MAP[f.inputColorType];y==4&&!f.inputHasAlpha&&(y=3);var l=h.COLORTYPE_TO_BPP_MAP[f.colorType];f.bitDepth===16&&(p=65535,l*=2);var m=new v(b*u*l),c=0,w=0,x=f.bgColor||{};x.red===void 0&&(x.red=p),x.green===void 0&&(x.green=p),x.blue===void 0&&(x.blue=p);function A(R,M){var B,I,Y,J=p;switch(f.inputColorType){case h.COLORTYPE_COLOR_ALPHA:J=R[M+3],B=R[M],I=R[M+1],Y=R[M+2];break;case h.COLORTYPE_COLOR:B=R[M],I=R[M+1],Y=R[M+2];break;case h.COLORTYPE_ALPHA:J=R[M+1],B=R[M],I=B,Y=B;break;case h.COLORTYPE_GRAYSCALE:B=R[M],I=B,Y=B;break;default:throw new Error("input color type:"+f.inputColorType+" is not supported at present")}return f.inputHasAlpha&&(s||(J/=p,B=Math.min(Math.max(Math.round((1-J)*x.red+J*B),0),p),I=Math.min(Math.max(Math.round((1-J)*x.green+J*I),0),p),Y=Math.min(Math.max(Math.round((1-J)*x.blue+J*Y),0),p))),{red:B,green:I,blue:Y,alpha:J}}for(var N=0;N<u;N++)for(var E=0;E<b;E++){var k=A(n,c);switch(f.colorType){case h.COLORTYPE_COLOR_ALPHA:case h.COLORTYPE_COLOR:f.bitDepth===8?(m[w]=k.red,m[w+1]=k.green,m[w+2]=k.blue,s&&(m[w+3]=k.alpha)):(m.writeUInt16BE(k.red,w),m.writeUInt16BE(k.green,w+2),m.writeUInt16BE(k.blue,w+4),s&&m.writeUInt16BE(k.alpha,w+6));break;case h.COLORTYPE_ALPHA:case h.COLORTYPE_GRAYSCALE:var S=(k.red+k.green+k.blue)/3;f.bitDepth===8?(m[w]=S,s&&(m[w+1]=k.alpha)):(m.writeUInt16BE(S,w),s&&m.writeUInt16BE(k.alpha,w+2));break}c+=y,w+=l}return m}}).call(this,t("buffer").Buffer)},{"./constants":113,buffer:48}],112:[function(t,d,o){(function(v,h){var g=t("util"),b=t("stream"),u=d.exports=function(){b.call(this),this._buffers=[],this._buffered=0,this._reads=[],this._paused=!1,this._encoding="utf8",this.writable=!0};g.inherits(u,b),u.prototype.read=function(f,s){this._reads.push({length:Math.abs(f),allowLess:f<0,func:s}),v.nextTick(function(){this._process(),this._paused&&this._reads.length>0&&(this._paused=!1,this.emit("drain"))}.bind(this))},u.prototype.write=function(f,s){if(!this.writable)return this.emit("error",new Error("Stream not writable")),!1;var i;return h.isBuffer(f)?i=f:i=new h(f,s||this._encoding),this._buffers.push(i),this._buffered+=i.length,this._process(),this._reads&&this._reads.length===0&&(this._paused=!0),this.writable&&!this._paused},u.prototype.end=function(f,s){f&&this.write(f,s),this.writable=!1,this._buffers&&(this._buffers.length===0?this._end():(this._buffers.push(null),this._process()))},u.prototype.destroySoon=u.prototype.end,u.prototype._end=function(){this._reads.length>0&&this.emit("error",new Error("There are some read requests waiting on finished stream")),this.destroy()},u.prototype.destroy=function(){!this._buffers||(this.writable=!1,this._reads=null,this._buffers=null,this.emit("close"))},u.prototype._processReadAllowingLess=function(f){this._reads.shift();var s=this._buffers[0];s.length>f.length?(this._buffered-=f.length,this._buffers[0]=s.slice(f.length),f.func.call(this,s.slice(0,f.length))):(this._buffered-=s.length,this._buffers.shift(),f.func.call(this,s))},u.prototype._processRead=function(f){this._reads.shift();for(var s=0,i=0,n=new h(f.length);s<f.length;){var p=this._buffers[i++],y=Math.min(p.length,f.length-s);p.copy(n,s,0,y),s+=y,y!==p.length&&(this._buffers[--i]=p.slice(y))}i>0&&this._buffers.splice(0,i),this._buffered-=f.length,f.func.call(this,n)},u.prototype._process=function(){try{for(;this._buffered>0&&this._reads&&this._reads.length>0;){var f=this._reads[0];if(f.allowLess)this._processReadAllowingLess(f);else if(this._buffered>=f.length)this._processRead(f);else break}this._buffers&&this._buffers.length>0&&this._buffers[0]===null&&this._end()}catch(s){this.emit("error",s)}}}).call(this,t("_process"),t("buffer").Buffer)},{_process:133,buffer:48,stream:155,util:186}],113:[function(t,d,o){d.exports={PNG_SIGNATURE:[137,80,78,71,13,10,26,10],TYPE_IHDR:1229472850,TYPE_IEND:1229278788,TYPE_IDAT:1229209940,TYPE_PLTE:1347179589,TYPE_tRNS:1951551059,TYPE_gAMA:1732332865,COLORTYPE_GRAYSCALE:0,COLORTYPE_PALETTE:1,COLORTYPE_COLOR:2,COLORTYPE_ALPHA:4,COLORTYPE_PALETTE_COLOR:3,COLORTYPE_COLOR_ALPHA:6,COLORTYPE_TO_BPP_MAP:{0:1,2:3,3:1,4:2,6:4},GAMMA_DIVISION:1e5}},{}],114:[function(t,d,o){var v=[];(function(){for(var g=0;g<256;g++){for(var b=g,u=0;u<8;u++)b&1?b=3988292384^b>>>1:b=b>>>1;v[g]=b}})();var h=d.exports=function(){this._crc=-1};h.prototype.write=function(g){for(var b=0;b<g.length;b++)this._crc=v[(this._crc^g[b])&255]^this._crc>>>8;return!0},h.prototype.crc32=function(){return this._crc^-1},h.crc32=function(g){for(var b=-1,u=0;u<g.length;u++)b=v[(b^g[u])&255]^b>>>8;return b^-1}},{}],115:[function(t,d,o){(function(v){var h=t("./paeth-predictor");function g(w,x,A,N,E){for(var k=0;k<A;k++)N[E+k]=w[x+k]}function b(w,x,A){for(var N=0,E=x+A,k=x;k<E;k++)N+=Math.abs(w[k]);return N}function u(w,x,A,N,E,k){for(var S=0;S<A;S++){var R=S>=k?w[x+S-k]:0,M=w[x+S]-R;N[E+S]=M}}function f(w,x,A,N){for(var E=0,k=0;k<A;k++){var S=k>=N?w[x+k-N]:0,R=w[x+k]-S;E+=Math.abs(R)}return E}function s(w,x,A,N,E){for(var k=0;k<A;k++){var S=x>0?w[x+k-A]:0,R=w[x+k]-S;N[E+k]=R}}function i(w,x,A){for(var N=0,E=x+A,k=x;k<E;k++){var S=x>0?w[k-A]:0,R=w[k]-S;N+=Math.abs(R)}return N}function n(w,x,A,N,E,k){for(var S=0;S<A;S++){var R=S>=k?w[x+S-k]:0,M=x>0?w[x+S-A]:0,B=w[x+S]-(R+M>>1);N[E+S]=B}}function p(w,x,A,N){for(var E=0,k=0;k<A;k++){var S=k>=N?w[x+k-N]:0,R=x>0?w[x+k-A]:0,M=w[x+k]-(S+R>>1);E+=Math.abs(M)}return E}function y(w,x,A,N,E,k){for(var S=0;S<A;S++){var R=S>=k?w[x+S-k]:0,M=x>0?w[x+S-A]:0,B=x>0&&S>=k?w[x+S-(A+k)]:0,I=w[x+S]-h(R,M,B);N[E+S]=I}}function l(w,x,A,N){for(var E=0,k=0;k<A;k++){var S=k>=N?w[x+k-N]:0,R=x>0?w[x+k-A]:0,M=x>0&&k>=N?w[x+k-(A+N)]:0,B=w[x+k]-h(S,R,M);E+=Math.abs(B)}return E}var m={0:g,1:u,2:s,3:n,4:y},c={0:b,1:f,2:i,3:p,4:l};d.exports=function(w,x,A,N,E){var k;if(!("filterType"in N)||N.filterType===-1)k=[0,1,2,3,4];else if(typeof N.filterType=="number")k=[N.filterType];else throw new Error("unrecognised filter types");N.bitDepth===16&&(E*=2);for(var S=x*E,R=0,M=0,B=new v((S+1)*A),I=k[0],Y=0;Y<A;Y++){if(k.length>1)for(var J=1/0,D=0;D<k.length;D++){var T=c[k[D]](w,M,S,E);T<J&&(I=k[D],J=T)}B[R]=I,R++,m[I](w,M,S,B,R,E),R+=S,M+=S}return B}}).call(this,t("buffer").Buffer)},{"./paeth-predictor":124,buffer:48}],116:[function(t,d,o){(function(v){var h=t("util"),g=t("./chunkstream"),b=t("./filter-parse"),u=d.exports=function(f){g.call(this);var s=[],i=this;this._filter=new b(f,{read:this.read.bind(this),write:function(n){s.push(n)},complete:function(){i.emit("complete",v.concat(s))}}),this._filter.start()};h.inherits(u,g)}).call(this,t("buffer").Buffer)},{"./chunkstream":112,"./filter-parse":118,buffer:48,util:186}],117:[function(t,d,o){(function(v){var h=t("./sync-reader"),g=t("./filter-parse");o.process=function(b,u){var f=[],s=new h(b),i=new g(u,{read:s.read.bind(s),write:function(n){f.push(n)},complete:function(){}});return i.start(),s.process(),v.concat(f)}}).call(this,t("buffer").Buffer)},{"./filter-parse":118,"./sync-reader":131,buffer:48}],118:[function(t,d,o){(function(v){var h=t("./interlace"),g=t("./paeth-predictor");function b(f,s,i){var n=f*s;return i!==8&&(n=Math.ceil(n/(8/i))),n}var u=d.exports=function(f,s){var i=f.width,n=f.height,p=f.interlace,y=f.bpp,l=f.depth;if(this.read=s.read,this.write=s.write,this.complete=s.complete,this._imageIndex=0,this._images=[],p)for(var m=h.getImagePasses(i,n),c=0;c<m.length;c++)this._images.push({byteWidth:b(m[c].width,y,l),height:m[c].height,lineIndex:0});else this._images.push({byteWidth:b(i,y,l),height:n,lineIndex:0});l===8?this._xComparison=y:l===16?this._xComparison=y*2:this._xComparison=1};u.prototype.start=function(){this.read(this._images[this._imageIndex].byteWidth+1,this._reverseFilterLine.bind(this))},u.prototype._unFilterType1=function(f,s,i){for(var n=this._xComparison,p=n-1,y=0;y<i;y++){var l=f[1+y],m=y>p?s[y-n]:0;s[y]=l+m}},u.prototype._unFilterType2=function(f,s,i){for(var n=this._lastLine,p=0;p<i;p++){var y=f[1+p],l=n?n[p]:0;s[p]=y+l}},u.prototype._unFilterType3=function(f,s,i){for(var n=this._xComparison,p=n-1,y=this._lastLine,l=0;l<i;l++){var m=f[1+l],c=y?y[l]:0,w=l>p?s[l-n]:0,x=Math.floor((w+c)/2);s[l]=m+x}},u.prototype._unFilterType4=function(f,s,i){for(var n=this._xComparison,p=n-1,y=this._lastLine,l=0;l<i;l++){var m=f[1+l],c=y?y[l]:0,w=l>p?s[l-n]:0,x=l>p&&y?y[l-n]:0,A=g(w,c,x);s[l]=m+A}},u.prototype._reverseFilterLine=function(f){var s=f[0],i,n=this._images[this._imageIndex],p=n.byteWidth;if(s===0)i=f.slice(1,p+1);else switch(i=new v(p),s){case 1:this._unFilterType1(f,i,p);break;case 2:this._unFilterType2(f,i,p);break;case 3:this._unFilterType3(f,i,p);break;case 4:this._unFilterType4(f,i,p);break;default:throw new Error("Unrecognised filter type - "+s)}this.write(i),n.lineIndex++,n.lineIndex>=n.height?(this._lastLine=null,this._imageIndex++,n=this._images[this._imageIndex]):this._lastLine=i,n?this.read(n.byteWidth+1,this._reverseFilterLine.bind(this)):(this._lastLine=null,this.complete())}}).call(this,t("buffer").Buffer)},{"./interlace":120,"./paeth-predictor":124,buffer:48}],119:[function(t,d,o){(function(v){function h(u,f,s,i,n){for(var p=0,y=0;y<i;y++)for(var l=0;l<s;l++){var m=n[u[p]];if(!m)throw new Error("index "+u[p]+" not in palette");for(var c=0;c<4;c++)f[p+c]=m[c];p+=4}}function g(u,f,s,i,n){for(var p=0,y=0;y<i;y++)for(var l=0;l<s;l++){var m=!1;if(n.length===1?n[0]===u[p]&&(m=!0):n[0]===u[p]&&n[1]===u[p+1]&&n[2]===u[p+2]&&(m=!0),m)for(var c=0;c<4;c++)f[p+c]=0;p+=4}}function b(u,f,s,i,n){for(var p=255,y=Math.pow(2,n)-1,l=0,m=0;m<i;m++)for(var c=0;c<s;c++){for(var w=0;w<4;w++)f[l+w]=Math.floor(u[l+w]*p/y+.5);l+=4}}d.exports=function(u,f){var s=f.depth,i=f.width,n=f.height,p=f.colorType,y=f.transColor,l=f.palette,m=u;return p===3?h(u,m,i,n,l):(y&&g(u,m,i,n,y),s!==8&&(s===16&&(m=new v(i*n*4)),b(u,m,i,n,s))),m}}).call(this,t("buffer").Buffer)},{buffer:48}],120:[function(t,d,o){var v=[{x:[0],y:[0]},{x:[4],y:[0]},{x:[0,4],y:[4]},{x:[2,6],y:[0,4]},{x:[0,2,4,6],y:[2,6]},{x:[1,3,5,7],y:[0,2,4,6]},{x:[0,1,2,3,4,5,6,7],y:[1,3,5,7]}];o.getImagePasses=function(h,g){for(var b=[],u=h%8,f=g%8,s=(h-u)/8,i=(g-f)/8,n=0;n<v.length;n++){for(var p=v[n],y=s*p.x.length,l=i*p.y.length,m=0;m<p.x.length&&p.x[m]<u;m++)y++;for(m=0;m<p.y.length&&p.y[m]<f;m++)l++;y>0&&l>0&&b.push({width:y,height:l,index:n})}return b},o.getInterlaceIterator=function(h){return function(g,b,u){var f=g%v[u].x.length,s=(g-f)/v[u].x.length*8+v[u].x[f],i=b%v[u].y.length,n=(b-i)/v[u].y.length*8+v[u].y[i];return s*4+n*h*4}}},{}],121:[function(t,d,o){(function(v){var h=t("util"),g=t("stream"),b=t("./constants"),u=t("./packer"),f=d.exports=function(s){g.call(this);var i=s||{};this._packer=new u(i),this._deflate=this._packer.createDeflate(),this.readable=!0};h.inherits(f,g),f.prototype.pack=function(s,i,n,p){this.emit("data",new v(b.PNG_SIGNATURE)),this.emit("data",this._packer.packIHDR(i,n)),p&&this.emit("data",this._packer.packGAMA(p));var y=this._packer.filterData(s,i,n);this._deflate.on("error",this.emit.bind(this,"error")),this._deflate.on("data",function(l){this.emit("data",this._packer.packIDAT(l))}.bind(this)),this._deflate.on("end",function(){this.emit("data",this._packer.packIEND()),this.emit("end")}.bind(this)),this._deflate.end(y)}}).call(this,t("buffer").Buffer)},{"./constants":113,"./packer":123,buffer:48,stream:155,util:186}],122:[function(t,d,o){(function(v){var h=!0,g=t("zlib");g.deflateSync||(h=!1);var b=t("./constants"),u=t("./packer");d.exports=function(f,s){if(!h)throw new Error("To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0");var i=s||{},n=new u(i),p=[];p.push(new v(b.PNG_SIGNATURE)),p.push(n.packIHDR(f.width,f.height)),f.gamma&&p.push(n.packGAMA(f.gamma));var y=n.filterData(f.data,f.width,f.height),l=g.deflateSync(y,n.getDeflateOptions());if(y=null,!l||!l.length)throw new Error("bad png - invalid compressed data response");return p.push(n.packIDAT(l)),p.push(n.packIEND()),v.concat(p)}}).call(this,t("buffer").Buffer)},{"./constants":113,"./packer":123,buffer:48,zlib:35}],123:[function(t,d,o){(function(v){var h=t("./constants"),g=t("./crc"),b=t("./bitpacker"),u=t("./filter-pack"),f=t("zlib"),s=d.exports=function(i){if(this._options=i,i.deflateChunkSize=i.deflateChunkSize||32*1024,i.deflateLevel=i.deflateLevel!=null?i.deflateLevel:9,i.deflateStrategy=i.deflateStrategy!=null?i.deflateStrategy:3,i.inputHasAlpha=i.inputHasAlpha!=null?i.inputHasAlpha:!0,i.deflateFactory=i.deflateFactory||f.createDeflate,i.bitDepth=i.bitDepth||8,i.colorType=typeof i.colorType=="number"?i.colorType:h.COLORTYPE_COLOR_ALPHA,i.inputColorType=typeof i.inputColorType=="number"?i.inputColorType:h.COLORTYPE_COLOR_ALPHA,[h.COLORTYPE_GRAYSCALE,h.COLORTYPE_COLOR,h.COLORTYPE_COLOR_ALPHA,h.COLORTYPE_ALPHA].indexOf(i.colorType)===-1)throw new Error("option color type:"+i.colorType+" is not supported at present");if([h.COLORTYPE_GRAYSCALE,h.COLORTYPE_COLOR,h.COLORTYPE_COLOR_ALPHA,h.COLORTYPE_ALPHA].indexOf(i.inputColorType)===-1)throw new Error("option input color type:"+i.inputColorType+" is not supported at present");if(i.bitDepth!==8&&i.bitDepth!==16)throw new Error("option bit depth:"+i.bitDepth+" is not supported at present")};s.prototype.getDeflateOptions=function(){return{chunkSize:this._options.deflateChunkSize,level:this._options.deflateLevel,strategy:this._options.deflateStrategy}},s.prototype.createDeflate=function(){return this._options.deflateFactory(this.getDeflateOptions())},s.prototype.filterData=function(i,n,p){var y=b(i,n,p,this._options),l=h.COLORTYPE_TO_BPP_MAP[this._options.colorType],m=u(y,n,p,this._options,l);return m},s.prototype._packChunk=function(i,n){var p=n?n.length:0,y=new v(p+12);return y.writeUInt32BE(p,0),y.writeUInt32BE(i,4),n&&n.copy(y,8),y.writeInt32BE(g.crc32(y.slice(4,y.length-4)),y.length-4),y},s.prototype.packGAMA=function(i){var n=new v(4);return n.writeUInt32BE(Math.floor(i*h.GAMMA_DIVISION),0),this._packChunk(h.TYPE_gAMA,n)},s.prototype.packIHDR=function(i,n){var p=new v(13);return p.writeUInt32BE(i,0),p.writeUInt32BE(n,4),p[8]=this._options.bitDepth,p[9]=this._options.colorType,p[10]=0,p[11]=0,p[12]=0,this._packChunk(h.TYPE_IHDR,p)},s.prototype.packIDAT=function(i){return this._packChunk(h.TYPE_IDAT,i)},s.prototype.packIEND=function(){return this._packChunk(h.TYPE_IEND,null)}}).call(this,t("buffer").Buffer)},{"./bitpacker":111,"./constants":113,"./crc":114,"./filter-pack":115,buffer:48,zlib:35}],124:[function(t,d,o){d.exports=function(h,g,b){var u=h+g-b,f=Math.abs(u-h),s=Math.abs(u-g),i=Math.abs(u-b);return f<=s&&f<=i?h:s<=i?g:b}},{}],125:[function(t,d,o){var v=t("util"),h=t("zlib"),g=t("./chunkstream"),b=t("./filter-parse-async"),u=t("./parser"),f=t("./bitmapper"),s=t("./format-normaliser"),i=d.exports=function(n){g.call(this),this._parser=new u(n,{read:this.read.bind(this),error:this._handleError.bind(this),metadata:this._handleMetaData.bind(this),gamma:this.emit.bind(this,"gamma"),palette:this._handlePalette.bind(this),transColor:this._handleTransColor.bind(this),finished:this._finished.bind(this),inflateData:this._inflateData.bind(this)}),this._options=n,this.writable=!0,this._parser.start()};v.inherits(i,g),i.prototype._handleError=function(n){this.emit("error",n),this.writable=!1,this.destroy(),this._inflate&&this._inflate.destroy&&this._inflate.destroy(),this._filter&&(this._filter.destroy(),this._filter.on("error",function(){})),this.errord=!0},i.prototype._inflateData=function(n){if(!this._inflate)if(this._bitmapInfo.interlace)this._inflate=h.createInflate(),this._inflate.on("error",this.emit.bind(this,"error")),this._filter.on("complete",this._complete.bind(this)),this._inflate.pipe(this._filter);else{var p=(this._bitmapInfo.width*this._bitmapInfo.bpp*this._bitmapInfo.depth+7>>3)+1,y=p*this._bitmapInfo.height,l=Math.max(y,h.Z_MIN_CHUNK);this._inflate=h.createInflate({chunkSize:l});var m=y,c=this.emit.bind(this,"error");this._inflate.on("error",function(x){!m||c(x)}),this._filter.on("complete",this._complete.bind(this));var w=this._filter.write.bind(this._filter);this._inflate.on("data",function(x){!m||(x.length>m&&(x=x.slice(0,m)),m-=x.length,w(x))}),this._inflate.on("end",this._filter.end.bind(this._filter))}this._inflate.write(n)},i.prototype._handleMetaData=function(n){this.emit("metadata",n),this._bitmapInfo=Object.create(n),this._filter=new b(this._bitmapInfo)},i.prototype._handleTransColor=function(n){this._bitmapInfo.transColor=n},i.prototype._handlePalette=function(n){this._bitmapInfo.palette=n},i.prototype._finished=function(){this.errord||(this._inflate?this._inflate.end():this.emit("error","No Inflate block"),this.destroySoon())},i.prototype._complete=function(n){if(!this.errord){try{var p=f.dataToBitMap(n,this._bitmapInfo),y=s(p,this._bitmapInfo);p=null}catch(l){this._handleError(l);return}this.emit("parsed",y)}}},{"./bitmapper":110,"./chunkstream":112,"./filter-parse-async":116,"./format-normaliser":119,"./parser":127,util:186,zlib:35}],126:[function(t,d,o){(function(v){var h=!0,g=t("zlib"),b=t("./sync-inflate");g.deflateSync||(h=!1);var u=t("./sync-reader"),f=t("./filter-parse-sync"),s=t("./parser"),i=t("./bitmapper"),n=t("./format-normaliser");d.exports=function(p,y){if(!h)throw new Error("To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0");var l;function m(U){l=U}var c;function w(U){c=U}function x(U){c.transColor=U}function A(U){c.palette=U}var N;function E(U){N=U}var k=[];function S(U){k.push(U)}var R=new u(p),M=new s(y,{read:R.read.bind(R),error:m,metadata:w,gamma:E,palette:A,transColor:x,inflateData:S});if(M.start(),R.process(),l)throw l;var B=v.concat(k);k.length=0;var I;if(c.interlace)I=g.inflateSync(B);else{var Y=(c.width*c.bpp*c.depth+7>>3)+1,J=Y*c.height;I=b(B,{chunkSize:J,maxLength:J})}if(B=null,!I||!I.length)throw new Error("bad png - invalid inflate data response");var D=f.process(I,c);B=null;var T=i.dataToBitMap(D,c);D=null;var G=n(T,c);return c.data=G,c.gamma=N||0,c}}).call(this,t("buffer").Buffer)},{"./bitmapper":110,"./filter-parse-sync":117,"./format-normaliser":119,"./parser":127,"./sync-inflate":130,"./sync-reader":131,buffer:48,zlib:35}],127:[function(t,d,o){(function(v){var h=t("./constants"),g=t("./crc"),b=d.exports=function(u,f){this._options=u,u.checkCRC=u.checkCRC!==!1,this._hasIHDR=!1,this._hasIEND=!1,this._palette=[],this._colorType=0,this._chunks={},this._chunks[h.TYPE_IHDR]=this._handleIHDR.bind(this),this._chunks[h.TYPE_IEND]=this._handleIEND.bind(this),this._chunks[h.TYPE_IDAT]=this._handleIDAT.bind(this),this._chunks[h.TYPE_PLTE]=this._handlePLTE.bind(this),this._chunks[h.TYPE_tRNS]=this._handleTRNS.bind(this),this._chunks[h.TYPE_gAMA]=this._handleGAMA.bind(this),this.read=f.read,this.error=f.error,this.metadata=f.metadata,this.gamma=f.gamma,this.transColor=f.transColor,this.palette=f.palette,this.parsed=f.parsed,this.inflateData=f.inflateData,this.finished=f.finished};b.prototype.start=function(){this.read(h.PNG_SIGNATURE.length,this._parseSignature.bind(this))},b.prototype._parseSignature=function(u){for(var f=h.PNG_SIGNATURE,s=0;s<f.length;s++)if(u[s]!==f[s]){this.error(new Error("Invalid file signature"));return}this.read(8,this._parseChunkBegin.bind(this))},b.prototype._parseChunkBegin=function(u){for(var f=u.readUInt32BE(0),s=u.readUInt32BE(4),i="",n=4;n<8;n++)i+=String.fromCharCode(u[n]);var p=Boolean(u[4]&32);if(!this._hasIHDR&&s!==h.TYPE_IHDR){this.error(new Error("Expected IHDR on beggining"));return}if(this._crc=new g,this._crc.write(new v(i)),this._chunks[s])return this._chunks[s](f);if(!p){this.error(new Error("Unsupported critical chunk type "+i));return}this.read(f+4,this._skipChunk.bind(this))},b.prototype._skipChunk=function(){this.read(8,this._parseChunkBegin.bind(this))},b.prototype._handleChunkEnd=function(){this.read(4,this._parseChunkEnd.bind(this))},b.prototype._parseChunkEnd=function(u){var f=u.readInt32BE(0),s=this._crc.crc32();if(this._options.checkCRC&&s!==f){this.error(new Error("Crc error - "+f+" - "+s));return}this._hasIEND||this.read(8,this._parseChunkBegin.bind(this))},b.prototype._handleIHDR=function(u){this.read(u,this._parseIHDR.bind(this))},b.prototype._parseIHDR=function(u){this._crc.write(u);var f=u.readUInt32BE(0),s=u.readUInt32BE(4),i=u[8],n=u[9],p=u[10],y=u[11],l=u[12];if(i!==8&&i!==4&&i!==2&&i!==1&&i!==16){this.error(new Error("Unsupported bit depth "+i));return}if(!(n in h.COLORTYPE_TO_BPP_MAP)){this.error(new Error("Unsupported color type"));return}if(p!==0){this.error(new Error("Unsupported compression method"));return}if(y!==0){this.error(new Error("Unsupported filter method"));return}if(l!==0&&l!==1){this.error(new Error("Unsupported interlace method"));return}this._colorType=n;var m=h.COLORTYPE_TO_BPP_MAP[this._colorType];this._hasIHDR=!0,this.metadata({width:f,height:s,depth:i,interlace:Boolean(l),palette:Boolean(n&h.COLORTYPE_PALETTE),color:Boolean(n&h.COLORTYPE_COLOR),alpha:Boolean(n&h.COLORTYPE_ALPHA),bpp:m,colorType:n}),this._handleChunkEnd()},b.prototype._handlePLTE=function(u){this.read(u,this._parsePLTE.bind(this))},b.prototype._parsePLTE=function(u){this._crc.write(u);for(var f=Math.floor(u.length/3),s=0;s<f;s++)this._palette.push([u[s*3],u[s*3+1],u[s*3+2],255]);this.palette(this._palette),this._handleChunkEnd()},b.prototype._handleTRNS=function(u){this.read(u,this._parseTRNS.bind(this))},b.prototype._parseTRNS=function(u){if(this._crc.write(u),this._colorType===h.COLORTYPE_PALETTE_COLOR){if(this._palette.length===0){this.error(new Error("Transparency chunk must be after palette"));return}if(u.length>this._palette.length){this.error(new Error("More transparent colors than palette size"));return}for(var f=0;f<u.length;f++)this._palette[f][3]=u[f];this.palette(this._palette)}this._colorType===h.COLORTYPE_GRAYSCALE&&this.transColor([u.readUInt16BE(0)]),this._colorType===h.COLORTYPE_COLOR&&this.transColor([u.readUInt16BE(0),u.readUInt16BE(2),u.readUInt16BE(4)]),this._handleChunkEnd()},b.prototype._handleGAMA=function(u){this.read(u,this._parseGAMA.bind(this))},b.prototype._parseGAMA=function(u){this._crc.write(u),this.gamma(u.readUInt32BE(0)/h.GAMMA_DIVISION),this._handleChunkEnd()},b.prototype._handleIDAT=function(u){this.read(-u,this._parseIDAT.bind(this,u))},b.prototype._parseIDAT=function(u,f){if(this._crc.write(f),this._colorType===h.COLORTYPE_PALETTE_COLOR&&this._palette.length===0)throw new Error("Expected palette not found");this.inflateData(f);var s=u-f.length;s>0?this._handleIDAT(s):this._handleChunkEnd()},b.prototype._handleIEND=function(u){this.read(u,this._parseIEND.bind(this))},b.prototype._parseIEND=function(u){this._crc.write(u),this._hasIEND=!0,this._handleChunkEnd(),this.finished&&this.finished()}}).call(this,t("buffer").Buffer)},{"./constants":113,"./crc":114,buffer:48}],128:[function(t,d,o){var v=t("./parser-sync"),h=t("./packer-sync");o.read=function(g,b){return v(g,b||{})},o.write=function(g,b){return h(g,b)}},{"./packer-sync":122,"./parser-sync":126}],129:[function(t,d,o){(function(v,h){var g=t("util"),b=t("stream"),u=t("./parser-async"),f=t("./packer-async"),s=t("./png-sync"),i=o.PNG=function(n){b.call(this),n=n||{},this.width=n.width|0,this.height=n.height|0,this.data=this.width>0&&this.height>0?new h(4*this.width*this.height):null,n.fill&&this.data&&this.data.fill(0),this.gamma=0,this.readable=this.writable=!0,this._parser=new u(n),this._parser.on("error",this.emit.bind(this,"error")),this._parser.on("close",this._handleClose.bind(this)),this._parser.on("metadata",this._metadata.bind(this)),this._parser.on("gamma",this._gamma.bind(this)),this._parser.on("parsed",function(p){this.data=p,this.emit("parsed",p)}.bind(this)),this._packer=new f(n),this._packer.on("data",this.emit.bind(this,"data")),this._packer.on("end",this.emit.bind(this,"end")),this._parser.on("close",this._handleClose.bind(this)),this._packer.on("error",this.emit.bind(this,"error"))};g.inherits(i,b),i.sync=s,i.prototype.pack=function(){return!this.data||!this.data.length?(this.emit("error","No data provided"),this):(v.nextTick(function(){this._packer.pack(this.data,this.width,this.height,this.gamma)}.bind(this)),this)},i.prototype.parse=function(n,p){if(p){var y,l;y=function(m){this.removeListener("error",l),this.data=m,p(null,this)}.bind(this),l=function(m){this.removeListener("parsed",y),p(m,null)}.bind(this),this.once("parsed",y),this.once("error",l)}return this.end(n),this},i.prototype.write=function(n){return this._parser.write(n),!0},i.prototype.end=function(n){this._parser.end(n)},i.prototype._metadata=function(n){this.width=n.width,this.height=n.height,this.emit("metadata",n)},i.prototype._gamma=function(n){this.gamma=n},i.prototype._handleClose=function(){!this._parser.writable&&!this._packer.readable&&this.emit("close")},i.bitblt=function(n,p,y,l,m,c,w,x){if(y|=0,l|=0,m|=0,c|=0,w|=0,x|=0,y>n.width||l>n.height||y+m>n.width||l+c>n.height)throw new Error("bitblt reading outside image");if(w>p.width||x>p.height||w+m>p.width||x+c>p.height)throw new Error("bitblt writing outside image");for(var A=0;A<c;A++)n.data.copy(p.data,(x+A)*p.width+w<<2,(l+A)*n.width+y<<2,(l+A)*n.width+y+m<<2)},i.prototype.bitblt=function(n,p,y,l,m,c,w){return i.bitblt(this,n,p,y,l,m,c,w),this},i.adjustGamma=function(n){if(n.gamma){for(var p=0;p<n.height;p++)for(var y=0;y<n.width;y++)for(var l=n.width*p+y<<2,m=0;m<3;m++){var c=n.data[l+m]/255;c=Math.pow(c,1/2.2/n.gamma),n.data[l+m]=Math.round(c*255)}n.gamma=0}},i.prototype.adjustGamma=function(){i.adjustGamma(this)}}).call(this,t("_process"),t("buffer").Buffer)},{"./packer-async":121,"./parser-async":125,"./png-sync":128,_process:133,buffer:48,stream:155,util:186}],130:[function(t,d,o){(function(v,h){var g=t("assert").ok,b=t("zlib"),u=t("util"),f=t("buffer").kMaxLength;function s(l){if(!(this instanceof s))return new s(l);l&&l.chunkSize<b.Z_MIN_CHUNK&&(l.chunkSize=b.Z_MIN_CHUNK),b.Inflate.call(this,l),this._offset=this._offset===void 0?this._outOffset:this._offset,this._buffer=this._buffer||this._outBuffer,l&&l.maxLength!=null&&(this._maxLength=l.maxLength)}function i(l){return new s(l)}function n(l,m){m&&v.nextTick(m),l._handle&&(l._handle.close(),l._handle=null)}s.prototype._processChunk=function(l,m,c){if(typeof c=="function")return b.Inflate._processChunk.call(this,l,m,c);var w=this,x=l&&l.length,A=this._chunkSize-this._offset,N=this._maxLength,E=0,k=[],S=0,R;this.on("error",function(Y){R=Y});function M(Y,J){if(!w._hadError){var D=A-J;if(g(D>=0,"have should not go down"),D>0){var T=w._buffer.slice(w._offset,w._offset+D);if(w._offset+=D,T.length>N&&(T=T.slice(0,N)),k.push(T),S+=T.length,N-=T.length,N===0)return!1}return(J===0||w._offset>=w._chunkSize)&&(A=w._chunkSize,w._offset=0,w._buffer=h.allocUnsafe(w._chunkSize)),J===0?(E+=x-Y,x=Y,!0):!1}}g(this._handle,"zlib binding closed");do{var B=this._handle.writeSync(m,l,E,x,this._buffer,this._offset,A);B=B||this._writeState}while(!this._hadError&&M(B[0],B[1]));if(this._hadError)throw R;if(S>=f)throw n(this),new RangeError("Cannot create final Buffer. It would be larger than 0x"+f.toString(16)+" bytes");var I=h.concat(k,S);return n(this),I},u.inherits(s,b.Inflate);function p(l,m){if(typeof m=="string"&&(m=h.from(m)),!(m instanceof h))throw new TypeError("Not a string or buffer");var c=l._finishFlushFlag;return c==null&&(c=b.Z_FINISH),l._processChunk(m,c)}function y(l,m){return p(new s(m),l)}d.exports=o=y,o.Inflate=s,o.createInflate=i,o.inflateSync=y}).call(this,t("_process"),t("buffer").Buffer)},{_process:133,assert:25,buffer:48,util:186,zlib:35}],131:[function(t,d,o){var v=d.exports=function(h){this._buffer=h,this._reads=[]};v.prototype.read=function(h,g){this._reads.push({length:Math.abs(h),allowLess:h<0,func:g})},v.prototype.process=function(){for(;this._reads.length>0&&this._buffer.length;){var h=this._reads[0];if(this._buffer.length&&(this._buffer.length>=h.length||h.allowLess)){this._reads.shift();var g=this._buffer;this._buffer=g.slice(h.length),h.func.call(this,g.slice(0,h.length))}else break}if(this._reads.length>0)return new Error("There are some read requests waitng on finished stream");if(this._buffer.length>0)return new Error("unrecognised content at end of stream")}},{}],132:[function(t,d,o){(function(v){typeof v=="undefined"||!v.version||v.version.indexOf("v0.")===0||v.version.indexOf("v1.")===0&&v.version.indexOf("v1.8.")!==0?d.exports={nextTick:h}:d.exports=v;function h(g,b,u,f){if(typeof g!="function")throw new TypeError('"callback" argument must be a function');var s=arguments.length,i,n;switch(s){case 0:case 1:return v.nextTick(g);case 2:return v.nextTick(function(){g.call(null,b)});case 3:return v.nextTick(function(){g.call(null,b,u)});case 4:return v.nextTick(function(){g.call(null,b,u,f)});default:for(i=new Array(s-1),n=0;n<i.length;)i[n++]=arguments[n];return v.nextTick(function(){g.apply(null,i)})}}}).call(this,t("_process"))},{_process:133}],133:[function(t,d,o){var v=d.exports={},h,g;function b(){throw new Error("setTimeout has not been defined")}function u(){throw new Error("clearTimeout has not been defined")}(function(){try{typeof setTimeout=="function"?h=setTimeout:h=b}catch{h=b}try{typeof clearTimeout=="function"?g=clearTimeout:g=u}catch{g=u}})();function f(x){if(h===setTimeout)return setTimeout(x,0);if((h===b||!h)&&setTimeout)return h=setTimeout,setTimeout(x,0);try{return h(x,0)}catch{try{return h.call(null,x,0)}catch{return h.call(this,x,0)}}}function s(x){if(g===clearTimeout)return clearTimeout(x);if((g===u||!g)&&clearTimeout)return g=clearTimeout,clearTimeout(x);try{return g(x)}catch{try{return g.call(null,x)}catch{return g.call(this,x)}}}var i=[],n=!1,p,y=-1;function l(){!n||!p||(n=!1,p.length?i=p.concat(i):y=-1,i.length&&m())}function m(){if(!n){var x=f(l);n=!0;for(var A=i.length;A;){for(p=i,i=[];++y<A;)p&&p[y].run();y=-1,A=i.length}p=null,n=!1,s(x)}}v.nextTick=function(x){var A=new Array(arguments.length-1);if(arguments.length>1)for(var N=1;N<arguments.length;N++)A[N-1]=arguments[N];i.push(new c(x,A)),i.length===1&&!n&&f(m)};function c(x,A){this.fun=x,this.array=A}c.prototype.run=function(){this.fun.apply(null,this.array)},v.title="browser",v.browser=!0,v.env={},v.argv=[],v.version="",v.versions={};function w(){}v.on=w,v.addListener=w,v.once=w,v.off=w,v.removeListener=w,v.removeAllListeners=w,v.emit=w,v.prependListener=w,v.prependOnceListener=w,v.listeners=function(x){return[]},v.binding=function(x){throw new Error("process.binding is not supported")},v.cwd=function(){return"/"},v.chdir=function(x){throw new Error("process.chdir is not supported")},v.umask=function(){return 0}},{}],134:[function(t,d,o){(function(v){(function(h){var g=typeof o=="object"&&o&&!o.nodeType&&o,b=typeof d=="object"&&d&&!d.nodeType&&d,u=typeof v=="object"&&v;(u.global===u||u.window===u||u.self===u)&&(h=u);var f,s=2147483647,i=36,n=1,p=26,y=38,l=700,m=72,c=128,w="-",x=/^xn--/,A=/[^\x20-\x7E]/,N=/[\x2E\u3002\uFF0E\uFF61]/g,E={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},k=i-n,S=Math.floor,R=String.fromCharCode,M;function B(ee){throw new RangeError(E[ee])}function I(ee,_){for(var re=ee.length,fe=[];re--;)fe[re]=_(ee[re]);return fe}function Y(ee,_){var re=ee.split("@"),fe="";re.length>1&&(fe=re[0]+"@",ee=re[1]),ee=ee.replace(N,".");var pe=ee.split("."),he=I(pe,_).join(".");return fe+he}function J(ee){for(var _=[],re=0,fe=ee.length,pe,he;re<fe;)pe=ee.charCodeAt(re++),pe>=55296&&pe<=56319&&re<fe?(he=ee.charCodeAt(re++),(he&64512)==56320?_.push(((pe&1023)<<10)+(he&1023)+65536):(_.push(pe),re--)):_.push(pe);return _}function D(ee){return I(ee,function(_){var re="";return _>65535&&(_-=65536,re+=R(_>>>10&1023|55296),_=56320|_&1023),re+=R(_),re}).join("")}function T(ee){return ee-48<10?ee-22:ee-65<26?ee-65:ee-97<26?ee-97:i}function G(ee,_){return ee+22+75*(ee<26)-((_!=0)<<5)}function U(ee,_,re){var fe=0;for(ee=re?S(ee/l):ee>>1,ee+=S(ee/_);ee>k*p>>1;fe+=i)ee=S(ee/k);return S(fe+(k+1)*ee/(ee+y))}function ie(ee){var _=[],re=ee.length,fe,pe=0,he=c,oe=m,ce,X,K,L,$,te,V,z,F;for(ce=ee.lastIndexOf(w),ce<0&&(ce=0),X=0;X<ce;++X)ee.charCodeAt(X)>=128&&B("not-basic"),_.push(ee.charCodeAt(X));for(K=ce>0?ce+1:0;K<re;){for(L=pe,$=1,te=i;K>=re&&B("invalid-input"),V=T(ee.charCodeAt(K++)),(V>=i||V>S((s-pe)/$))&&B("overflow"),pe+=V*$,z=te<=oe?n:te>=oe+p?p:te-oe,!(V<z);te+=i)F=i-z,$>S(s/F)&&B("overflow"),$*=F;fe=_.length+1,oe=U(pe-L,fe,L==0),S(pe/fe)>s-he&&B("overflow"),he+=S(pe/fe),pe%=fe,_.splice(pe++,0,he)}return D(_)}function se(ee){var _,re,fe,pe,he,oe,ce,X,K,L,$,te=[],V,z,F,q;for(ee=J(ee),V=ee.length,_=c,re=0,he=m,oe=0;oe<V;++oe)$=ee[oe],$<128&&te.push(R($));for(fe=pe=te.length,pe&&te.push(w);fe<V;){for(ce=s,oe=0;oe<V;++oe)$=ee[oe],$>=_&&$<ce&&(ce=$);for(z=fe+1,ce-_>S((s-re)/z)&&B("overflow"),re+=(ce-_)*z,_=ce,oe=0;oe<V;++oe)if($=ee[oe],$<_&&++re>s&&B("overflow"),$==_){for(X=re,K=i;L=K<=he?n:K>=he+p?p:K-he,!(X<L);K+=i)q=X-L,F=i-L,te.push(R(G(L+q%F,0))),X=S(q/F);te.push(R(G(X,0))),he=U(re,z,fe==pe),re=0,++fe}++re,++_}return te.join("")}function ae(ee){return Y(ee,function(_){return x.test(_)?ie(_.slice(4).toLowerCase()):_})}function W(ee){return Y(ee,function(_){return A.test(_)?"xn--"+se(_):_})}if(f={version:"1.4.1",ucs2:{decode:J,encode:D},decode:ie,encode:se,toASCII:W,toUnicode:ae},g&&b)if(d.exports==g)b.exports=f;else for(M in f)f.hasOwnProperty(M)&&(g[M]=f[M]);else h.punycode=f})(this)}).call(this,typeof nt!="undefined"?nt:typeof self!="undefined"?self:typeof a!="undefined"?a:{})},{}],135:[function(t,d,o){function v(g,b){return Object.prototype.hasOwnProperty.call(g,b)}d.exports=function(g,b,u,f){b=b||"&",u=u||"=";var s={};if(typeof g!="string"||g.length===0)return s;var i=/\+/g;g=g.split(b);var n=1e3;f&&typeof f.maxKeys=="number"&&(n=f.maxKeys);var p=g.length;n>0&&p>n&&(p=n);for(var y=0;y<p;++y){var l=g[y].replace(i,"%20"),m=l.indexOf(u),c,w,x,A;m>=0?(c=l.substr(0,m),w=l.substr(m+1)):(c=l,w=""),x=decodeURIComponent(c),A=decodeURIComponent(w),v(s,x)?h(s[x])?s[x].push(A):s[x]=[s[x],A]:s[x]=A}return s};var h=Array.isArray||function(g){return Object.prototype.toString.call(g)==="[object Array]"}},{}],136:[function(t,d,o){var v=function(u){switch(typeof u){case"string":return u;case"boolean":return u?"true":"false";case"number":return isFinite(u)?u:"";default:return""}};d.exports=function(u,f,s,i){return f=f||"&",s=s||"=",u===null&&(u=void 0),typeof u=="object"?g(b(u),function(n){var p=encodeURIComponent(v(n))+s;return h(u[n])?g(u[n],function(y){return p+encodeURIComponent(v(y))}).join(f):p+encodeURIComponent(v(u[n]))}).join(f):i?encodeURIComponent(v(i))+s+encodeURIComponent(v(u)):""};var h=Array.isArray||function(u){return Object.prototype.toString.call(u)==="[object Array]"};function g(u,f){if(u.map)return u.map(f);for(var s=[],i=0;i<u.length;i++)s.push(f(u[i],i));return s}var b=Object.keys||function(u){var f=[];for(var s in u)Object.prototype.hasOwnProperty.call(u,s)&&f.push(s);return f}},{}],137:[function(t,d,o){o.decode=o.parse=t("./decode"),o.encode=o.stringify=t("./encode")},{"./decode":135,"./encode":136}],138:[function(t,d,o){d.exports=t("./lib/_stream_duplex.js")},{"./lib/_stream_duplex.js":139}],139:[function(t,d,o){var v=t("process-nextick-args"),h=Object.keys||function(l){var m=[];for(var c in l)m.push(c);return m};d.exports=n;var g=t("core-util-is");g.inherits=t("inherits");var b=t("./_stream_readable"),u=t("./_stream_writable");g.inherits(n,b);for(var f=h(u.prototype),s=0;s<f.length;s++){var i=f[s];n.prototype[i]||(n.prototype[i]=u.prototype[i])}function n(l){if(!(this instanceof n))return new n(l);b.call(this,l),u.call(this,l),l&&l.readable===!1&&(this.readable=!1),l&&l.writable===!1&&(this.writable=!1),this.allowHalfOpen=!0,l&&l.allowHalfOpen===!1&&(this.allowHalfOpen=!1),this.once("end",p)}Object.defineProperty(n.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}});function p(){this.allowHalfOpen||this._writableState.ended||v.nextTick(y,this)}function y(l){l.end()}Object.defineProperty(n.prototype,"destroyed",{get:function(){return this._readableState===void 0||this._writableState===void 0?!1:this._readableState.destroyed&&this._writableState.destroyed},set:function(l){this._readableState===void 0||this._writableState===void 0||(this._readableState.destroyed=l,this._writableState.destroyed=l)}}),n.prototype._destroy=function(l,m){this.push(null),this.end(),v.nextTick(m,l)}},{"./_stream_readable":141,"./_stream_writable":143,"core-util-is":51,inherits:75,"process-nextick-args":132}],140:[function(t,d,o){d.exports=g;var v=t("./_stream_transform"),h=t("core-util-is");h.inherits=t("inherits"),h.inherits(g,v);function g(b){if(!(this instanceof g))return new g(b);v.call(this,b)}g.prototype._transform=function(b,u,f){f(null,b)}},{"./_stream_transform":142,"core-util-is":51,inherits:75}],141:[function(t,d,o){(function(v,h){var g=t("process-nextick-args");d.exports=S;var b=t("isarray"),u;S.ReadableState=k,t("events").EventEmitter;var f=function(L,$){return L.listeners($).length},s=t("./internal/streams/stream"),i=t("safe-buffer").Buffer,n=h.Uint8Array||function(){};function p(L){return i.from(L)}function y(L){return i.isBuffer(L)||L instanceof n}var l=t("core-util-is");l.inherits=t("inherits");var m=t("util"),c=void 0;m&&m.debuglog?c=m.debuglog("stream"):c=function(){};var w=t("./internal/streams/BufferList"),x=t("./internal/streams/destroy"),A;l.inherits(S,s);var N=["error","close","destroy","pause","resume"];function E(L,$,te){if(typeof L.prependListener=="function")return L.prependListener($,te);!L._events||!L._events[$]?L.on($,te):b(L._events[$])?L._events[$].unshift(te):L._events[$]=[te,L._events[$]]}function k(L,$){u=u||t("./_stream_duplex"),L=L||{};var te=$ instanceof u;this.objectMode=!!L.objectMode,te&&(this.objectMode=this.objectMode||!!L.readableObjectMode);var V=L.highWaterMark,z=L.readableHighWaterMark,F=this.objectMode?16:16*1024;V||V===0?this.highWaterMark=V:te&&(z||z===0)?this.highWaterMark=z:this.highWaterMark=F,this.highWaterMark=Math.floor(this.highWaterMark),this.buffer=new w,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.destroyed=!1,this.defaultEncoding=L.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,L.encoding&&(A||(A=t("string_decoder/").StringDecoder),this.decoder=new A(L.encoding),this.encoding=L.encoding)}function S(L){if(u=u||t("./_stream_duplex"),!(this instanceof S))return new S(L);this._readableState=new k(L,this),this.readable=!0,L&&(typeof L.read=="function"&&(this._read=L.read),typeof L.destroy=="function"&&(this._destroy=L.destroy)),s.call(this)}Object.defineProperty(S.prototype,"destroyed",{get:function(){return this._readableState===void 0?!1:this._readableState.destroyed},set:function(L){!this._readableState||(this._readableState.destroyed=L)}}),S.prototype.destroy=x.destroy,S.prototype._undestroy=x.undestroy,S.prototype._destroy=function(L,$){this.push(null),$(L)},S.prototype.push=function(L,$){var te=this._readableState,V;return te.objectMode?V=!0:typeof L=="string"&&($=$||te.defaultEncoding,$!==te.encoding&&(L=i.from(L,$),$=""),V=!0),R(this,L,$,!1,V)},S.prototype.unshift=function(L){return R(this,L,null,!0,!1)};function R(L,$,te,V,z){var F=L._readableState;if($===null)F.reading=!1,T(L,F);else{var q;z||(q=B(F,$)),q?L.emit("error",q):F.objectMode||$&&$.length>0?(typeof $!="string"&&!F.objectMode&&Object.getPrototypeOf($)!==i.prototype&&($=p($)),V?F.endEmitted?L.emit("error",new Error("stream.unshift() after end event")):M(L,F,$,!0):F.ended?L.emit("error",new Error("stream.push() after EOF")):(F.reading=!1,F.decoder&&!te?($=F.decoder.write($),F.objectMode||$.length!==0?M(L,F,$,!1):ie(L,F)):M(L,F,$,!1))):V||(F.reading=!1)}return I(F)}function M(L,$,te,V){$.flowing&&$.length===0&&!$.sync?(L.emit("data",te),L.read(0)):($.length+=$.objectMode?1:te.length,V?$.buffer.unshift(te):$.buffer.push(te),$.needReadable&&G(L)),ie(L,$)}function B(L,$){var te;return!y($)&&typeof $!="string"&&$!==void 0&&!L.objectMode&&(te=new TypeError("Invalid non-string/buffer chunk")),te}function I(L){return!L.ended&&(L.needReadable||L.length<L.highWaterMark||L.length===0)}S.prototype.isPaused=function(){return this._readableState.flowing===!1},S.prototype.setEncoding=function(L){return A||(A=t("string_decoder/").StringDecoder),this._readableState.decoder=new A(L),this._readableState.encoding=L,this};var Y=8388608;function J(L){return L>=Y?L=Y:(L--,L|=L>>>1,L|=L>>>2,L|=L>>>4,L|=L>>>8,L|=L>>>16,L++),L}function D(L,$){return L<=0||$.length===0&&$.ended?0:$.objectMode?1:L!==L?$.flowing&&$.length?$.buffer.head.data.length:$.length:(L>$.highWaterMark&&($.highWaterMark=J(L)),L<=$.length?L:$.ended?$.length:($.needReadable=!0,0))}S.prototype.read=function(L){c("read",L),L=parseInt(L,10);var $=this._readableState,te=L;if(L!==0&&($.emittedReadable=!1),L===0&&$.needReadable&&($.length>=$.highWaterMark||$.ended))return c("read: emitReadable",$.length,$.ended),$.length===0&&$.ended?ce(this):G(this),null;if(L=D(L,$),L===0&&$.ended)return $.length===0&&ce(this),null;var V=$.needReadable;c("need readable",V),($.length===0||$.length-L<$.highWaterMark)&&(V=!0,c("length less than watermark",V)),$.ended||$.reading?(V=!1,c("reading or ended",V)):V&&(c("do read"),$.reading=!0,$.sync=!0,$.length===0&&($.needReadable=!0),this._read($.highWaterMark),$.sync=!1,$.reading||(L=D(te,$)));var z;return L>0?z=fe(L,$):z=null,z===null?($.needReadable=!0,L=0):$.length-=L,$.length===0&&($.ended||($.needReadable=!0),te!==L&&$.ended&&ce(this)),z!==null&&this.emit("data",z),z};function T(L,$){if(!$.ended){if($.decoder){var te=$.decoder.end();te&&te.length&&($.buffer.push(te),$.length+=$.objectMode?1:te.length)}$.ended=!0,G(L)}}function G(L){var $=L._readableState;$.needReadable=!1,$.emittedReadable||(c("emitReadable",$.flowing),$.emittedReadable=!0,$.sync?g.nextTick(U,L):U(L))}function U(L){c("emit readable"),L.emit("readable"),re(L)}function ie(L,$){$.readingMore||($.readingMore=!0,g.nextTick(se,L,$))}function se(L,$){for(var te=$.length;!$.reading&&!$.flowing&&!$.ended&&$.length<$.highWaterMark&&(c("maybeReadMore read 0"),L.read(0),te!==$.length);)te=$.length;$.readingMore=!1}S.prototype._read=function(L){this.emit("error",new Error("_read() is not implemented"))},S.prototype.pipe=function(L,$){var te=this,V=this._readableState;switch(V.pipesCount){case 0:V.pipes=L;break;case 1:V.pipes=[V.pipes,L];break;default:V.pipes.push(L);break}V.pipesCount+=1,c("pipe count=%d opts=%j",V.pipesCount,$);var z=(!$||$.end!==!1)&&L!==v.stdout&&L!==v.stderr,F=z?H:Ie;V.endEmitted?g.nextTick(F):te.once("end",F),L.on("unpipe",q);function q(Oe,Fe){c("onunpipe"),Oe===te&&Fe&&Fe.hasUnpiped===!1&&(Fe.hasUnpiped=!0,Q())}function H(){c("onend"),L.end()}var O=ae(te);L.on("drain",O);var C=!1;function Q(){c("cleanup"),L.removeListener("close",Ee),L.removeListener("finish",Se),L.removeListener("drain",O),L.removeListener("error",ye),L.removeListener("unpipe",q),te.removeListener("end",H),te.removeListener("end",Ie),te.removeListener("data",ge),C=!0,V.awaitDrain&&(!L._writableState||L._writableState.needDrain)&&O()}var le=!1;te.on("data",ge);function ge(Oe){c("ondata"),le=!1;var Fe=L.write(Oe);Fe===!1&&!le&&((V.pipesCount===1&&V.pipes===L||V.pipesCount>1&&K(V.pipes,L)!==-1)&&!C&&(c("false write response, pause",te._readableState.awaitDrain),te._readableState.awaitDrain++,le=!0),te.pause())}function ye(Oe){c("onerror",Oe),Ie(),L.removeListener("error",ye),f(L,"error")===0&&L.emit("error",Oe)}E(L,"error",ye);function Ee(){L.removeListener("finish",Se),Ie()}L.once("close",Ee);function Se(){c("onfinish"),L.removeListener("close",Ee),Ie()}L.once("finish",Se);function Ie(){c("unpipe"),te.unpipe(L)}return L.emit("pipe",te),V.flowing||(c("pipe resume"),te.resume()),L};function ae(L){return function(){var $=L._readableState;c("pipeOnDrain",$.awaitDrain),$.awaitDrain&&$.awaitDrain--,$.awaitDrain===0&&f(L,"data")&&($.flowing=!0,re(L))}}S.prototype.unpipe=function(L){var $=this._readableState,te={hasUnpiped:!1};if($.pipesCount===0)return this;if($.pipesCount===1)return L&&L!==$.pipes?this:(L||(L=$.pipes),$.pipes=null,$.pipesCount=0,$.flowing=!1,L&&L.emit("unpipe",this,te),this);if(!L){var V=$.pipes,z=$.pipesCount;$.pipes=null,$.pipesCount=0,$.flowing=!1;for(var F=0;F<z;F++)V[F].emit("unpipe",this,te);return this}var q=K($.pipes,L);return q===-1?this:($.pipes.splice(q,1),$.pipesCount-=1,$.pipesCount===1&&($.pipes=$.pipes[0]),L.emit("unpipe",this,te),this)},S.prototype.on=function(L,$){var te=s.prototype.on.call(this,L,$);if(L==="data")this._readableState.flowing!==!1&&this.resume();else if(L==="readable"){var V=this._readableState;!V.endEmitted&&!V.readableListening&&(V.readableListening=V.needReadable=!0,V.emittedReadable=!1,V.reading?V.length&&G(this):g.nextTick(W,this))}return te},S.prototype.addListener=S.prototype.on;function W(L){c("readable nexttick read 0"),L.read(0)}S.prototype.resume=function(){var L=this._readableState;return L.flowing||(c("resume"),L.flowing=!0,ee(this,L)),this};function ee(L,$){$.resumeScheduled||($.resumeScheduled=!0,g.nextTick(_,L,$))}function _(L,$){$.reading||(c("resume read 0"),L.read(0)),$.resumeScheduled=!1,$.awaitDrain=0,L.emit("resume"),re(L),$.flowing&&!$.reading&&L.read(0)}S.prototype.pause=function(){return c("call pause flowing=%j",this._readableState.flowing),this._readableState.flowing!==!1&&(c("pause"),this._readableState.flowing=!1,this.emit("pause")),this};function re(L){var $=L._readableState;for(c("flow",$.flowing);$.flowing&&L.read()!==null;);}S.prototype.wrap=function(L){var $=this,te=this._readableState,V=!1;L.on("end",function(){if(c("wrapped end"),te.decoder&&!te.ended){var q=te.decoder.end();q&&q.length&&$.push(q)}$.push(null)}),L.on("data",function(q){if(c("wrapped data"),te.decoder&&(q=te.decoder.write(q)),!(te.objectMode&&q==null)&&!(!te.objectMode&&(!q||!q.length))){var H=$.push(q);H||(V=!0,L.pause())}});for(var z in L)this[z]===void 0&&typeof L[z]=="function"&&(this[z]=function(q){return function(){return L[q].apply(L,arguments)}}(z));for(var F=0;F<N.length;F++)L.on(N[F],this.emit.bind(this,N[F]));return this._read=function(q){c("wrapped _read",q),V&&(V=!1,L.resume())},this},Object.defineProperty(S.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),S._fromList=fe;function fe(L,$){if($.length===0)return null;var te;return $.objectMode?te=$.buffer.shift():!L||L>=$.length?($.decoder?te=$.buffer.join(""):$.buffer.length===1?te=$.buffer.head.data:te=$.buffer.concat($.length),$.buffer.clear()):te=pe(L,$.buffer,$.decoder),te}function pe(L,$,te){var V;return L<$.head.data.length?(V=$.head.data.slice(0,L),$.head.data=$.head.data.slice(L)):L===$.head.data.length?V=$.shift():V=te?he(L,$):oe(L,$),V}function he(L,$){var te=$.head,V=1,z=te.data;for(L-=z.length;te=te.next;){var F=te.data,q=L>F.length?F.length:L;if(q===F.length?z+=F:z+=F.slice(0,L),L-=q,L===0){q===F.length?(++V,te.next?$.head=te.next:$.head=$.tail=null):($.head=te,te.data=F.slice(q));break}++V}return $.length-=V,z}function oe(L,$){var te=i.allocUnsafe(L),V=$.head,z=1;for(V.data.copy(te),L-=V.data.length;V=V.next;){var F=V.data,q=L>F.length?F.length:L;if(F.copy(te,te.length-L,0,q),L-=q,L===0){q===F.length?(++z,V.next?$.head=V.next:$.head=$.tail=null):($.head=V,V.data=F.slice(q));break}++z}return $.length-=z,te}function ce(L){var $=L._readableState;if($.length>0)throw new Error('"endReadable()" called on non-empty stream');$.endEmitted||($.ended=!0,g.nextTick(X,$,L))}function X(L,$){!L.endEmitted&&L.length===0&&(L.endEmitted=!0,$.readable=!1,$.emit("end"))}function K(L,$){for(var te=0,V=L.length;te<V;te++)if(L[te]===$)return te;return-1}}).call(this,t("_process"),typeof nt!="undefined"?nt:typeof self!="undefined"?self:typeof a!="undefined"?a:{})},{"./_stream_duplex":139,"./internal/streams/BufferList":144,"./internal/streams/destroy":145,"./internal/streams/stream":146,_process:133,"core-util-is":51,events:52,inherits:75,isarray:79,"process-nextick-args":132,"safe-buffer":147,"string_decoder/":148,util:33}],142:[function(t,d,o){d.exports=b;var v=t("./_stream_duplex"),h=t("core-util-is");h.inherits=t("inherits"),h.inherits(b,v);function g(s,i){var n=this._transformState;n.transforming=!1;var p=n.writecb;if(!p)return this.emit("error",new Error("write callback called multiple times"));n.writechunk=null,n.writecb=null,i!=null&&this.push(i),p(s);var y=this._readableState;y.reading=!1,(y.needReadable||y.length<y.highWaterMark)&&this._read(y.highWaterMark)}function b(s){if(!(this instanceof b))return new b(s);v.call(this,s),this._transformState={afterTransform:g.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,s&&(typeof s.transform=="function"&&(this._transform=s.transform),typeof s.flush=="function"&&(this._flush=s.flush)),this.on("prefinish",u)}function u(){var s=this;typeof this._flush=="function"?this._flush(function(i,n){f(s,i,n)}):f(this,null,null)}b.prototype.push=function(s,i){return this._transformState.needTransform=!1,v.prototype.push.call(this,s,i)},b.prototype._transform=function(s,i,n){throw new Error("_transform() is not implemented")},b.prototype._write=function(s,i,n){var p=this._transformState;if(p.writecb=n,p.writechunk=s,p.writeencoding=i,!p.transforming){var y=this._readableState;(p.needTransform||y.needReadable||y.length<y.highWaterMark)&&this._read(y.highWaterMark)}},b.prototype._read=function(s){var i=this._transformState;i.writechunk!==null&&i.writecb&&!i.transforming?(i.transforming=!0,this._transform(i.writechunk,i.writeencoding,i.afterTransform)):i.needTransform=!0},b.prototype._destroy=function(s,i){var n=this;v.prototype._destroy.call(this,s,function(p){i(p),n.emit("close")})};function f(s,i,n){if(i)return s.emit("error",i);if(n!=null&&s.push(n),s._writableState.length)throw new Error("Calling transform done when ws.length != 0");if(s._transformState.transforming)throw new Error("Calling transform done when still transforming");return s.push(null)}},{"./_stream_duplex":139,"core-util-is":51,inherits:75}],143:[function(t,d,o){(function(v,h,g){var b=t("process-nextick-args");d.exports=E;function u(_){var re=this;this.next=null,this.entry=null,this.finish=function(){ee(re,_)}}var f=!v.browser&&["v0.10","v0.9."].indexOf(v.version.slice(0,5))>-1?g:b.nextTick,s;E.WritableState=A;var i=t("core-util-is");i.inherits=t("inherits");var n={deprecate:t("util-deprecate")},p=t("./internal/streams/stream"),y=t("safe-buffer").Buffer,l=h.Uint8Array||function(){};function m(_){return y.from(_)}function c(_){return y.isBuffer(_)||_ instanceof l}var w=t("./internal/streams/destroy");i.inherits(E,p);function x(){}function A(_,re){s=s||t("./_stream_duplex"),_=_||{};var fe=re instanceof s;this.objectMode=!!_.objectMode,fe&&(this.objectMode=this.objectMode||!!_.writableObjectMode);var pe=_.highWaterMark,he=_.writableHighWaterMark,oe=this.objectMode?16:16*1024;pe||pe===0?this.highWaterMark=pe:fe&&(he||he===0)?this.highWaterMark=he:this.highWaterMark=oe,this.highWaterMark=Math.floor(this.highWaterMark),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var ce=_.decodeStrings===!1;this.decodeStrings=!ce,this.defaultEncoding=_.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(X){J(re,X)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new u(this)}A.prototype.getBuffer=function(){for(var re=this.bufferedRequest,fe=[];re;)fe.push(re),re=re.next;return fe},function(){try{Object.defineProperty(A.prototype,"buffer",{get:n.deprecate(function(){return this.getBuffer()},"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch{}}();var N;typeof Symbol=="function"&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]=="function"?(N=Function.prototype[Symbol.hasInstance],Object.defineProperty(E,Symbol.hasInstance,{value:function(_){return N.call(this,_)?!0:this!==E?!1:_&&_._writableState instanceof A}})):N=function(_){return _ instanceof this};function E(_){if(s=s||t("./_stream_duplex"),!N.call(E,this)&&!(this instanceof s))return new E(_);this._writableState=new A(_,this),this.writable=!0,_&&(typeof _.write=="function"&&(this._write=_.write),typeof _.writev=="function"&&(this._writev=_.writev),typeof _.destroy=="function"&&(this._destroy=_.destroy),typeof _.final=="function"&&(this._final=_.final)),p.call(this)}E.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe, not readable"))};function k(_,re){var fe=new Error("write after end");_.emit("error",fe),b.nextTick(re,fe)}function S(_,re,fe,pe){var he=!0,oe=!1;return fe===null?oe=new TypeError("May not write null values to stream"):typeof fe!="string"&&fe!==void 0&&!re.objectMode&&(oe=new TypeError("Invalid non-string/buffer chunk")),oe&&(_.emit("error",oe),b.nextTick(pe,oe),he=!1),he}E.prototype.write=function(_,re,fe){var pe=this._writableState,he=!1,oe=!pe.objectMode&&c(_);return oe&&!y.isBuffer(_)&&(_=m(_)),typeof re=="function"&&(fe=re,re=null),oe?re="buffer":re||(re=pe.defaultEncoding),typeof fe!="function"&&(fe=x),pe.ended?k(this,fe):(oe||S(this,pe,_,fe))&&(pe.pendingcb++,he=M(this,pe,oe,_,re,fe)),he},E.prototype.cork=function(){var _=this._writableState;_.corked++},E.prototype.uncork=function(){var _=this._writableState;_.corked&&(_.corked--,!_.writing&&!_.corked&&!_.finished&&!_.bufferProcessing&&_.bufferedRequest&&G(this,_))},E.prototype.setDefaultEncoding=function(re){if(typeof re=="string"&&(re=re.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((re+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+re);return this._writableState.defaultEncoding=re,this};function R(_,re,fe){return!_.objectMode&&_.decodeStrings!==!1&&typeof re=="string"&&(re=y.from(re,fe)),re}Object.defineProperty(E.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}});function M(_,re,fe,pe,he,oe){if(!fe){var ce=R(re,pe,he);pe!==ce&&(fe=!0,he="buffer",pe=ce)}var X=re.objectMode?1:pe.length;re.length+=X;var K=re.length<re.highWaterMark;if(K||(re.needDrain=!0),re.writing||re.corked){var L=re.lastBufferedRequest;re.lastBufferedRequest={chunk:pe,encoding:he,isBuf:fe,callback:oe,next:null},L?L.next=re.lastBufferedRequest:re.bufferedRequest=re.lastBufferedRequest,re.bufferedRequestCount+=1}else B(_,re,!1,X,pe,he,oe);return K}function B(_,re,fe,pe,he,oe,ce){re.writelen=pe,re.writecb=ce,re.writing=!0,re.sync=!0,fe?_._writev(he,re.onwrite):_._write(he,oe,re.onwrite),re.sync=!1}function I(_,re,fe,pe,he){--re.pendingcb,fe?(b.nextTick(he,pe),b.nextTick(ae,_,re),_._writableState.errorEmitted=!0,_.emit("error",pe)):(he(pe),_._writableState.errorEmitted=!0,_.emit("error",pe),ae(_,re))}function Y(_){_.writing=!1,_.writecb=null,_.length-=_.writelen,_.writelen=0}function J(_,re){var fe=_._writableState,pe=fe.sync,he=fe.writecb;if(Y(fe),re)I(_,fe,pe,re,he);else{var oe=U(fe);!oe&&!fe.corked&&!fe.bufferProcessing&&fe.bufferedRequest&&G(_,fe),pe?f(D,_,fe,oe,he):D(_,fe,oe,he)}}function D(_,re,fe,pe){fe||T(_,re),re.pendingcb--,pe(),ae(_,re)}function T(_,re){re.length===0&&re.needDrain&&(re.needDrain=!1,_.emit("drain"))}function G(_,re){re.bufferProcessing=!0;var fe=re.bufferedRequest;if(_._writev&&fe&&fe.next){var pe=re.bufferedRequestCount,he=new Array(pe),oe=re.corkedRequestsFree;oe.entry=fe;for(var ce=0,X=!0;fe;)he[ce]=fe,fe.isBuf||(X=!1),fe=fe.next,ce+=1;he.allBuffers=X,B(_,re,!0,re.length,he,"",oe.finish),re.pendingcb++,re.lastBufferedRequest=null,oe.next?(re.corkedRequestsFree=oe.next,oe.next=null):re.corkedRequestsFree=new u(re),re.bufferedRequestCount=0}else{for(;fe;){var K=fe.chunk,L=fe.encoding,$=fe.callback,te=re.objectMode?1:K.length;if(B(_,re,!1,te,K,L,$),fe=fe.next,re.bufferedRequestCount--,re.writing)break}fe===null&&(re.lastBufferedRequest=null)}re.bufferedRequest=fe,re.bufferProcessing=!1}E.prototype._write=function(_,re,fe){fe(new Error("_write() is not implemented"))},E.prototype._writev=null,E.prototype.end=function(_,re,fe){var pe=this._writableState;typeof _=="function"?(fe=_,_=null,re=null):typeof re=="function"&&(fe=re,re=null),_!=null&&this.write(_,re),pe.corked&&(pe.corked=1,this.uncork()),!pe.ending&&!pe.finished&&W(this,pe,fe)};function U(_){return _.ending&&_.length===0&&_.bufferedRequest===null&&!_.finished&&!_.writing}function ie(_,re){_._final(function(fe){re.pendingcb--,fe&&_.emit("error",fe),re.prefinished=!0,_.emit("prefinish"),ae(_,re)})}function se(_,re){!re.prefinished&&!re.finalCalled&&(typeof _._final=="function"?(re.pendingcb++,re.finalCalled=!0,b.nextTick(ie,_,re)):(re.prefinished=!0,_.emit("prefinish")))}function ae(_,re){var fe=U(re);return fe&&(se(_,re),re.pendingcb===0&&(re.finished=!0,_.emit("finish"))),fe}function W(_,re,fe){re.ending=!0,ae(_,re),fe&&(re.finished?b.nextTick(fe):_.once("finish",fe)),re.ended=!0,_.writable=!1}function ee(_,re,fe){var pe=_.entry;for(_.entry=null;pe;){var he=pe.callback;re.pendingcb--,he(fe),pe=pe.next}re.corkedRequestsFree?re.corkedRequestsFree.next=_:re.corkedRequestsFree=_}Object.defineProperty(E.prototype,"destroyed",{get:function(){return this._writableState===void 0?!1:this._writableState.destroyed},set:function(_){!this._writableState||(this._writableState.destroyed=_)}}),E.prototype.destroy=w.destroy,E.prototype._undestroy=w.undestroy,E.prototype._destroy=function(_,re){this.end(),re(_)}}).call(this,t("_process"),typeof nt!="undefined"?nt:typeof self!="undefined"?self:typeof a!="undefined"?a:{},t("timers").setImmediate)},{"./_stream_duplex":139,"./internal/streams/destroy":145,"./internal/streams/stream":146,_process:133,"core-util-is":51,inherits:75,"process-nextick-args":132,"safe-buffer":147,timers:176,"util-deprecate":183}],144:[function(t,d,o){function v(u,f){if(!(u instanceof f))throw new TypeError("Cannot call a class as a function")}var h=t("safe-buffer").Buffer,g=t("util");function b(u,f,s){u.copy(f,s)}d.exports=function(){function u(){v(this,u),this.head=null,this.tail=null,this.length=0}return u.prototype.push=function(s){var i={data:s,next:null};this.length>0?this.tail.next=i:this.head=i,this.tail=i,++this.length},u.prototype.unshift=function(s){var i={data:s,next:this.head};this.length===0&&(this.tail=i),this.head=i,++this.length},u.prototype.shift=function(){if(this.length!==0){var s=this.head.data;return this.length===1?this.head=this.tail=null:this.head=this.head.next,--this.length,s}},u.prototype.clear=function(){this.head=this.tail=null,this.length=0},u.prototype.join=function(s){if(this.length===0)return"";for(var i=this.head,n=""+i.data;i=i.next;)n+=s+i.data;return n},u.prototype.concat=function(s){if(this.length===0)return h.alloc(0);if(this.length===1)return this.head.data;for(var i=h.allocUnsafe(s>>>0),n=this.head,p=0;n;)b(n.data,i,p),p+=n.data.length,n=n.next;return i},u}(),g&&g.inspect&&g.inspect.custom&&(d.exports.prototype[g.inspect.custom]=function(){var u=g.inspect({length:this.length});return this.constructor.name+" "+u})},{"safe-buffer":147,util:33}],145:[function(t,d,o){var v=t("process-nextick-args");function h(u,f){var s=this,i=this._readableState&&this._readableState.destroyed,n=this._writableState&&this._writableState.destroyed;return i||n?(f?f(u):u&&(!this._writableState||!this._writableState.errorEmitted)&&v.nextTick(b,this,u),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(u||null,function(p){!f&&p?(v.nextTick(b,s,p),s._writableState&&(s._writableState.errorEmitted=!0)):f&&f(p)}),this)}function g(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)}function b(u,f){u.emit("error",f)}d.exports={destroy:h,undestroy:g}},{"process-nextick-args":132}],146:[function(t,d,o){d.exports=t("events").EventEmitter},{events:52}],147:[function(t,d,o){var v=t("buffer"),h=v.Buffer;function g(u,f){for(var s in u)f[s]=u[s]}h.from&&h.alloc&&h.allocUnsafe&&h.allocUnsafeSlow?d.exports=v:(g(v,o),o.Buffer=b);function b(u,f,s){return h(u,f,s)}g(h,b),b.from=function(u,f,s){if(typeof u=="number")throw new TypeError("Argument must not be a number");return h(u,f,s)},b.alloc=function(u,f,s){if(typeof u!="number")throw new TypeError("Argument must be a number");var i=h(u);return f!==void 0?typeof s=="string"?i.fill(f,s):i.fill(f):i.fill(0),i},b.allocUnsafe=function(u){if(typeof u!="number")throw new TypeError("Argument must be a number");return h(u)},b.allocUnsafeSlow=function(u){if(typeof u!="number")throw new TypeError("Argument must be a number");return v.SlowBuffer(u)}},{buffer:48}],148:[function(t,d,o){var v=t("safe-buffer").Buffer,h=v.isEncoding||function(N){switch(N=""+N,N&&N.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function g(N){if(!N)return"utf8";for(var E;;)switch(N){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return N;default:if(E)return;N=(""+N).toLowerCase(),E=!0}}function b(N){var E=g(N);if(typeof E!="string"&&(v.isEncoding===h||!h(N)))throw new Error("Unknown encoding: "+N);return E||N}o.StringDecoder=u;function u(N){this.encoding=b(N);var E;switch(this.encoding){case"utf16le":this.text=l,this.end=m,E=4;break;case"utf8":this.fillLast=n,E=4;break;case"base64":this.text=c,this.end=w,E=3;break;default:this.write=x,this.end=A;return}this.lastNeed=0,this.lastTotal=0,this.lastChar=v.allocUnsafe(E)}u.prototype.write=function(N){if(N.length===0)return"";var E,k;if(this.lastNeed){if(E=this.fillLast(N),E===void 0)return"";k=this.lastNeed,this.lastNeed=0}else k=0;return k<N.length?E?E+this.text(N,k):this.text(N,k):E||""},u.prototype.end=y,u.prototype.text=p,u.prototype.fillLast=function(N){if(this.lastNeed<=N.length)return N.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);N.copy(this.lastChar,this.lastTotal-this.lastNeed,0,N.length),this.lastNeed-=N.length};function f(N){return N<=127?0:N>>5===6?2:N>>4===14?3:N>>3===30?4:N>>6===2?-1:-2}function s(N,E,k){var S=E.length-1;if(S<k)return 0;var R=f(E[S]);return R>=0?(R>0&&(N.lastNeed=R-1),R):--S<k||R===-2?0:(R=f(E[S]),R>=0?(R>0&&(N.lastNeed=R-2),R):--S<k||R===-2?0:(R=f(E[S]),R>=0?(R>0&&(R===2?R=0:N.lastNeed=R-3),R):0))}function i(N,E,k){if((E[0]&192)!==128)return N.lastNeed=0,"\uFFFD";if(N.lastNeed>1&&E.length>1){if((E[1]&192)!==128)return N.lastNeed=1,"\uFFFD";if(N.lastNeed>2&&E.length>2&&(E[2]&192)!==128)return N.lastNeed=2,"\uFFFD"}}function n(N){var E=this.lastTotal-this.lastNeed,k=i(this,N);if(k!==void 0)return k;if(this.lastNeed<=N.length)return N.copy(this.lastChar,E,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);N.copy(this.lastChar,E,0,N.length),this.lastNeed-=N.length}function p(N,E){var k=s(this,N,E);if(!this.lastNeed)return N.toString("utf8",E);this.lastTotal=k;var S=N.length-(k-this.lastNeed);return N.copy(this.lastChar,0,S),N.toString("utf8",E,S)}function y(N){var E=N&&N.length?this.write(N):"";return this.lastNeed?E+"\uFFFD":E}function l(N,E){if((N.length-E)%2===0){var k=N.toString("utf16le",E);if(k){var S=k.charCodeAt(k.length-1);if(S>=55296&&S<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=N[N.length-2],this.lastChar[1]=N[N.length-1],k.slice(0,-1)}return k}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=N[N.length-1],N.toString("utf16le",E,N.length-1)}function m(N){var E=N&&N.length?this.write(N):"";if(this.lastNeed){var k=this.lastTotal-this.lastNeed;return E+this.lastChar.toString("utf16le",0,k)}return E}function c(N,E){var k=(N.length-E)%3;return k===0?N.toString("base64",E):(this.lastNeed=3-k,this.lastTotal=3,k===1?this.lastChar[0]=N[N.length-1]:(this.lastChar[0]=N[N.length-2],this.lastChar[1]=N[N.length-1]),N.toString("base64",E,N.length-k))}function w(N){var E=N&&N.length?this.write(N):"";return this.lastNeed?E+this.lastChar.toString("base64",0,3-this.lastNeed):E}function x(N){return N.toString(this.encoding)}function A(N){return N&&N.length?this.write(N):""}},{"safe-buffer":147}],149:[function(t,d,o){d.exports=t("./readable").PassThrough},{"./readable":150}],150:[function(t,d,o){o=d.exports=t("./lib/_stream_readable.js"),o.Stream=o,o.Readable=o,o.Writable=t("./lib/_stream_writable.js"),o.Duplex=t("./lib/_stream_duplex.js"),o.Transform=t("./lib/_stream_transform.js"),o.PassThrough=t("./lib/_stream_passthrough.js")},{"./lib/_stream_duplex.js":139,"./lib/_stream_passthrough.js":140,"./lib/_stream_readable.js":141,"./lib/_stream_transform.js":142,"./lib/_stream_writable.js":143}],151:[function(t,d,o){d.exports=t("./readable").Transform},{"./readable":150}],152:[function(t,d,o){d.exports=t("./lib/_stream_writable.js")},{"./lib/_stream_writable.js":143}],153:[function(t,d,o){var v=function(h){var g=Object.prototype,b=g.hasOwnProperty,u,f=typeof Symbol=="function"?Symbol:{},s=f.iterator||"@@iterator",i=f.asyncIterator||"@@asyncIterator",n=f.toStringTag||"@@toStringTag";function p(se,ae,W,ee){var _=ae&&ae.prototype instanceof A?ae:A,re=Object.create(_.prototype),fe=new G(ee||[]);return re._invoke=Y(se,W,fe),re}h.wrap=p;function y(se,ae,W){try{return{type:"normal",arg:se.call(ae,W)}}catch(ee){return{type:"throw",arg:ee}}}var l="suspendedStart",m="suspendedYield",c="executing",w="completed",x={};function A(){}function N(){}function E(){}var k={};k[s]=function(){return this};var S=Object.getPrototypeOf,R=S&&S(S(U([])));R&&R!==g&&b.call(R,s)&&(k=R);var M=E.prototype=A.prototype=Object.create(k);N.prototype=M.constructor=E,E.constructor=N,E[n]=N.displayName="GeneratorFunction";function B(se){["next","throw","return"].forEach(function(ae){se[ae]=function(W){return this._invoke(ae,W)}})}h.isGeneratorFunction=function(se){var ae=typeof se=="function"&&se.constructor;return ae?ae===N||(ae.displayName||ae.name)==="GeneratorFunction":!1},h.mark=function(se){return Object.setPrototypeOf?Object.setPrototypeOf(se,E):(se.__proto__=E,n in se||(se[n]="GeneratorFunction")),se.prototype=Object.create(M),se},h.awrap=function(se){return{__await:se}};function I(se){function ae(_,re,fe,pe){var he=y(se[_],se,re);if(he.type==="throw")pe(he.arg);else{var oe=he.arg,ce=oe.value;return ce&&typeof ce=="object"&&b.call(ce,"__await")?Promise.resolve(ce.__await).then(function(X){ae("next",X,fe,pe)},function(X){ae("throw",X,fe,pe)}):Promise.resolve(ce).then(function(X){oe.value=X,fe(oe)},function(X){return ae("throw",X,fe,pe)})}}var W;function ee(_,re){function fe(){return new Promise(function(pe,he){ae(_,re,pe,he)})}return W=W?W.then(fe,fe):fe()}this._invoke=ee}B(I.prototype),I.prototype[i]=function(){return this},h.AsyncIterator=I,h.async=function(se,ae,W,ee){var _=new I(p(se,ae,W,ee));return h.isGeneratorFunction(ae)?_:_.next().then(function(re){return re.done?re.value:_.next()})};function Y(se,ae,W){var ee=l;return function(re,fe){if(ee===c)throw new Error("Generator is already running");if(ee===w){if(re==="throw")throw fe;return ie()}for(W.method=re,W.arg=fe;;){var pe=W.delegate;if(pe){var he=J(pe,W);if(he){if(he===x)continue;return he}}if(W.method==="next")W.sent=W._sent=W.arg;else if(W.method==="throw"){if(ee===l)throw ee=w,W.arg;W.dispatchException(W.arg)}else W.method==="return"&&W.abrupt("return",W.arg);ee=c;var oe=y(se,ae,W);if(oe.type==="normal"){if(ee=W.done?w:m,oe.arg===x)continue;return{value:oe.arg,done:W.done}}else oe.type==="throw"&&(ee=w,W.method="throw",W.arg=oe.arg)}}}function J(se,ae){var W=se.iterator[ae.method];if(W===u){if(ae.delegate=null,ae.method==="throw"){if(se.iterator.return&&(ae.method="return",ae.arg=u,J(se,ae),ae.method==="throw"))return x;ae.method="throw",ae.arg=new TypeError("The iterator does not provide a 'throw' method")}return x}var ee=y(W,se.iterator,ae.arg);if(ee.type==="throw")return ae.method="throw",ae.arg=ee.arg,ae.delegate=null,x;var _=ee.arg;if(!_)return ae.method="throw",ae.arg=new TypeError("iterator result is not an object"),ae.delegate=null,x;if(_.done)ae[se.resultName]=_.value,ae.next=se.nextLoc,ae.method!=="return"&&(ae.method="next",ae.arg=u);else return _;return ae.delegate=null,x}B(M),M[n]="Generator",M[s]=function(){return this},M.toString=function(){return"[object Generator]"};function D(se){var ae={tryLoc:se[0]};1 in se&&(ae.catchLoc=se[1]),2 in se&&(ae.finallyLoc=se[2],ae.afterLoc=se[3]),this.tryEntries.push(ae)}function T(se){var ae=se.completion||{};ae.type="normal",delete ae.arg,se.completion=ae}function G(se){this.tryEntries=[{tryLoc:"root"}],se.forEach(D,this),this.reset(!0)}h.keys=function(se){var ae=[];for(var W in se)ae.push(W);return ae.reverse(),function ee(){for(;ae.length;){var _=ae.pop();if(_ in se)return ee.value=_,ee.done=!1,ee}return ee.done=!0,ee}};function U(se){if(se){var ae=se[s];if(ae)return ae.call(se);if(typeof se.next=="function")return se;if(!isNaN(se.length)){var W=-1,ee=function _(){for(;++W<se.length;)if(b.call(se,W))return _.value=se[W],_.done=!1,_;return _.value=u,_.done=!0,_};return ee.next=ee}}return{next:ie}}h.values=U;function ie(){return{value:u,done:!0}}return G.prototype={constructor:G,reset:function(se){if(this.prev=0,this.next=0,this.sent=this._sent=u,this.done=!1,this.delegate=null,this.method="next",this.arg=u,this.tryEntries.forEach(T),!se)for(var ae in this)ae.charAt(0)==="t"&&b.call(this,ae)&&!isNaN(+ae.slice(1))&&(this[ae]=u)},stop:function(){this.done=!0;var se=this.tryEntries[0],ae=se.completion;if(ae.type==="throw")throw ae.arg;return this.rval},dispatchException:function(se){if(this.done)throw se;var ae=this;function W(he,oe){return re.type="throw",re.arg=se,ae.next=he,oe&&(ae.method="next",ae.arg=u),!!oe}for(var ee=this.tryEntries.length-1;ee>=0;--ee){var _=this.tryEntries[ee],re=_.completion;if(_.tryLoc==="root")return W("end");if(_.tryLoc<=this.prev){var fe=b.call(_,"catchLoc"),pe=b.call(_,"finallyLoc");if(fe&&pe){if(this.prev<_.catchLoc)return W(_.catchLoc,!0);if(this.prev<_.finallyLoc)return W(_.finallyLoc)}else if(fe){if(this.prev<_.catchLoc)return W(_.catchLoc,!0)}else if(pe){if(this.prev<_.finallyLoc)return W(_.finallyLoc)}else throw new Error("try statement without catch or finally")}}},abrupt:function(se,ae){for(var W=this.tryEntries.length-1;W>=0;--W){var ee=this.tryEntries[W];if(ee.tryLoc<=this.prev&&b.call(ee,"finallyLoc")&&this.prev<ee.finallyLoc){var _=ee;break}}_&&(se==="break"||se==="continue")&&_.tryLoc<=ae&&ae<=_.finallyLoc&&(_=null);var re=_?_.completion:{};return re.type=se,re.arg=ae,_?(this.method="next",this.next=_.finallyLoc,x):this.complete(re)},complete:function(se,ae){if(se.type==="throw")throw se.arg;return se.type==="break"||se.type==="continue"?this.next=se.arg:se.type==="return"?(this.rval=this.arg=se.arg,this.method="return",this.next="end"):se.type==="normal"&&ae&&(this.next=ae),x},finish:function(se){for(var ae=this.tryEntries.length-1;ae>=0;--ae){var W=this.tryEntries[ae];if(W.finallyLoc===se)return this.complete(W.completion,W.afterLoc),T(W),x}},catch:function(se){for(var ae=this.tryEntries.length-1;ae>=0;--ae){var W=this.tryEntries[ae];if(W.tryLoc===se){var ee=W.completion;if(ee.type==="throw"){var _=ee.arg;T(W)}return _}}throw new Error("illegal catch attempt")},delegateYield:function(se,ae,W){return this.delegate={iterator:U(se),resultName:ae,nextLoc:W},this.method==="next"&&(this.arg=u),x}},h}(typeof d=="object"?d.exports:{});try{regeneratorRuntime=v}catch{Function("r","regeneratorRuntime = r")(v)}},{}],154:[function(t,d,o){var v=t("buffer"),h=v.Buffer;function g(u,f){for(var s in u)f[s]=u[s]}h.from&&h.alloc&&h.allocUnsafe&&h.allocUnsafeSlow?d.exports=v:(g(v,o),o.Buffer=b);function b(u,f,s){return h(u,f,s)}b.prototype=Object.create(h.prototype),g(h,b),b.from=function(u,f,s){if(typeof u=="number")throw new TypeError("Argument must not be a number");return h(u,f,s)},b.alloc=function(u,f,s){if(typeof u!="number")throw new TypeError("Argument must be a number");var i=h(u);return f!==void 0?typeof s=="string"?i.fill(f,s):i.fill(f):i.fill(0),i},b.allocUnsafe=function(u){if(typeof u!="number")throw new TypeError("Argument must be a number");return h(u)},b.allocUnsafeSlow=function(u){if(typeof u!="number")throw new TypeError("Argument must be a number");return v.SlowBuffer(u)}},{buffer:48}],155:[function(t,d,o){d.exports=g;var v=t("events").EventEmitter,h=t("inherits");h(g,v),g.Readable=t("readable-stream/readable.js"),g.Writable=t("readable-stream/writable.js"),g.Duplex=t("readable-stream/duplex.js"),g.Transform=t("readable-stream/transform.js"),g.PassThrough=t("readable-stream/passthrough.js"),g.Stream=g;function g(){v.call(this)}g.prototype.pipe=function(b,u){var f=this;function s(c){b.writable&&b.write(c)===!1&&f.pause&&f.pause()}f.on("data",s);function i(){f.readable&&f.resume&&f.resume()}b.on("drain",i),!b._isStdio&&(!u||u.end!==!1)&&(f.on("end",p),f.on("close",y));var n=!1;function p(){n||(n=!0,b.end())}function y(){n||(n=!0,typeof b.destroy=="function"&&b.destroy())}function l(c){if(m(),v.listenerCount(this,"error")===0)throw c}f.on("error",l),b.on("error",l);function m(){f.removeListener("data",s),b.removeListener("drain",i),f.removeListener("end",p),f.removeListener("close",y),f.removeListener("error",l),b.removeListener("error",l),f.removeListener("end",m),f.removeListener("close",m),b.removeListener("close",m)}return f.on("end",m),f.on("close",m),b.on("close",m),b.emit("pipe",f),b}},{events:52,inherits:75,"readable-stream/duplex.js":138,"readable-stream/passthrough.js":149,"readable-stream/readable.js":150,"readable-stream/transform.js":151,"readable-stream/writable.js":152}],156:[function(t,d,o){(function(v){var h=t("./lib/request"),g=t("./lib/response"),b=t("xtend"),u=t("builtin-status-codes"),f=t("url"),s=o;s.request=function(i,n){typeof i=="string"?i=f.parse(i):i=b(i);var p=v.location.protocol.search(/^https?:$/)===-1?"http:":"",y=i.protocol||p,l=i.hostname||i.host,m=i.port,c=i.path||"/";l&&l.indexOf(":")!==-1&&(l="["+l+"]"),i.url=(l?y+"//"+l:"")+(m?":"+m:"")+c,i.method=(i.method||"GET").toUpperCase(),i.headers=i.headers||{};var w=new h(i);return n&&w.on("response",n),w},s.get=function(n,p){var y=s.request(n,p);return y.end(),y},s.ClientRequest=h,s.IncomingMessage=g.IncomingMessage,s.Agent=function(){},s.Agent.defaultMaxSockets=4,s.globalAgent=new s.Agent,s.STATUS_CODES=u,s.METHODS=["CHECKOUT","CONNECT","COPY","DELETE","GET","HEAD","LOCK","M-SEARCH","MERGE","MKACTIVITY","MKCOL","MOVE","NOTIFY","OPTIONS","PATCH","POST","PROPFIND","PROPPATCH","PURGE","PUT","REPORT","SEARCH","SUBSCRIBE","TRACE","UNLOCK","UNSUBSCRIBE"]}).call(this,typeof nt!="undefined"?nt:typeof self!="undefined"?self:typeof a!="undefined"?a:{})},{"./lib/request":158,"./lib/response":159,"builtin-status-codes":50,url:180,xtend:189}],157:[function(t,d,o){(function(v){o.fetch=u(v.fetch)&&u(v.ReadableStream),o.writableStream=u(v.WritableStream),o.abortController=u(v.AbortController);var h;function g(){if(h!==void 0)return h;if(v.XMLHttpRequest){h=new v.XMLHttpRequest;try{h.open("GET",v.XDomainRequest?"/":"https://example.com")}catch{h=null}}else h=null;return h}function b(f){var s=g();if(!s)return!1;try{return s.responseType=f,s.responseType===f}catch{}return!1}o.arraybuffer=o.fetch||b("arraybuffer"),o.msstream=!o.fetch&&b("ms-stream"),o.mozchunkedarraybuffer=!o.fetch&&b("moz-chunked-arraybuffer"),o.overrideMimeType=o.fetch||(g()?u(g().overrideMimeType):!1);function u(f){return typeof f=="function"}h=null}).call(this,typeof nt!="undefined"?nt:typeof self!="undefined"?self:typeof a!="undefined"?a:{})},{}],158:[function(t,d,o){(function(v,h,g){var b=t("./capability"),u=t("inherits"),f=t("./response"),s=t("readable-stream"),i=f.IncomingMessage,n=f.readyStates;function p(c,w){return b.fetch&&w?"fetch":b.mozchunkedarraybuffer?"moz-chunked-arraybuffer":b.msstream?"ms-stream":b.arraybuffer&&c?"arraybuffer":"text"}var y=d.exports=function(c){var w=this;s.Writable.call(w),w._opts=c,w._body=[],w._headers={},c.auth&&w.setHeader("Authorization","Basic "+g.from(c.auth).toString("base64")),Object.keys(c.headers).forEach(function(N){w.setHeader(N,c.headers[N])});var x,A=!0;if(c.mode==="disable-fetch"||"requestTimeout"in c&&!b.abortController)A=!1,x=!0;else if(c.mode==="prefer-streaming")x=!1;else if(c.mode==="allow-wrong-content-type")x=!b.overrideMimeType;else if(!c.mode||c.mode==="default"||c.mode==="prefer-fast")x=!0;else throw new Error("Invalid value for opts.mode");w._mode=p(x,A),w._fetchTimer=null,w.on("finish",function(){w._onFinish()})};u(y,s.Writable),y.prototype.setHeader=function(c,w){var x=this,A=c.toLowerCase();m.indexOf(A)===-1&&(x._headers[A]={name:c,value:w})},y.prototype.getHeader=function(c){var w=this._headers[c.toLowerCase()];return w?w.value:null},y.prototype.removeHeader=function(c){var w=this;delete w._headers[c.toLowerCase()]},y.prototype._onFinish=function(){var c=this;if(!c._destroyed){var w=c._opts,x=c._headers,A=null;w.method!=="GET"&&w.method!=="HEAD"&&(A=new Blob(c._body,{type:(x["content-type"]||{}).value||""}));var N=[];if(Object.keys(x).forEach(function(R){var M=x[R].name,B=x[R].value;Array.isArray(B)?B.forEach(function(I){N.push([M,I])}):N.push([M,B])}),c._mode==="fetch"){var E=null;if(b.abortController){var k=new AbortController;E=k.signal,c._fetchAbortController=k,"requestTimeout"in w&&w.requestTimeout!==0&&(c._fetchTimer=h.setTimeout(function(){c.emit("requestTimeout"),c._fetchAbortController&&c._fetchAbortController.abort()},w.requestTimeout))}h.fetch(c._opts.url,{method:c._opts.method,headers:N,body:A||void 0,mode:"cors",credentials:w.withCredentials?"include":"same-origin",signal:E}).then(function(R){c._fetchResponse=R,c._connect()},function(R){h.clearTimeout(c._fetchTimer),c._destroyed||c.emit("error",R)})}else{var S=c._xhr=new h.XMLHttpRequest;try{S.open(c._opts.method,c._opts.url,!0)}catch(R){v.nextTick(function(){c.emit("error",R)});return}"responseType"in S&&(S.responseType=c._mode),"withCredentials"in S&&(S.withCredentials=!!w.withCredentials),c._mode==="text"&&"overrideMimeType"in S&&S.overrideMimeType("text/plain; charset=x-user-defined"),"requestTimeout"in w&&(S.timeout=w.requestTimeout,S.ontimeout=function(){c.emit("requestTimeout")}),N.forEach(function(R){S.setRequestHeader(R[0],R[1])}),c._response=null,S.onreadystatechange=function(){switch(S.readyState){case n.LOADING:case n.DONE:c._onXHRProgress();break}},c._mode==="moz-chunked-arraybuffer"&&(S.onprogress=function(){c._onXHRProgress()}),S.onerror=function(){c._destroyed||c.emit("error",new Error("XHR error"))};try{S.send(A)}catch(R){v.nextTick(function(){c.emit("error",R)});return}}}};function l(c){try{var w=c.status;return w!==null&&w!==0}catch{return!1}}y.prototype._onXHRProgress=function(){var c=this;!l(c._xhr)||c._destroyed||(c._response||c._connect(),c._response._onXHRProgress())},y.prototype._connect=function(){var c=this;c._destroyed||(c._response=new i(c._xhr,c._fetchResponse,c._mode,c._fetchTimer),c._response.on("error",function(w){c.emit("error",w)}),c.emit("response",c._response))},y.prototype._write=function(c,w,x){var A=this;A._body.push(c),x()},y.prototype.abort=y.prototype.destroy=function(){var c=this;c._destroyed=!0,h.clearTimeout(c._fetchTimer),c._response&&(c._response._destroyed=!0),c._xhr?c._xhr.abort():c._fetchAbortController&&c._fetchAbortController.abort()},y.prototype.end=function(c,w,x){var A=this;typeof c=="function"&&(x=c,c=void 0),s.Writable.prototype.end.call(A,c,w,x)},y.prototype.flushHeaders=function(){},y.prototype.setTimeout=function(){},y.prototype.setNoDelay=function(){},y.prototype.setSocketKeepAlive=function(){};var m=["accept-charset","accept-encoding","access-control-request-headers","access-control-request-method","connection","content-length","cookie","cookie2","date","dnt","expect","host","keep-alive","origin","referer","te","trailer","transfer-encoding","upgrade","via"]}).call(this,t("_process"),typeof nt!="undefined"?nt:typeof self!="undefined"?self:typeof a!="undefined"?a:{},t("buffer").Buffer)},{"./capability":157,"./response":159,_process:133,buffer:48,inherits:75,"readable-stream":174}],159:[function(t,d,o){(function(v,h,g){var b=t("./capability"),u=t("inherits"),f=t("readable-stream"),s=o.readyStates={UNSENT:0,OPENED:1,HEADERS_RECEIVED:2,LOADING:3,DONE:4},i=o.IncomingMessage=function(n,p,y,l){var m=this;if(f.Readable.call(m),m._mode=y,m.headers={},m.rawHeaders=[],m.trailers={},m.rawTrailers=[],m.on("end",function(){v.nextTick(function(){m.emit("close")})}),y==="fetch"){let k=function(){w.read().then(function(S){if(!m._destroyed){if(S.done){h.clearTimeout(l),m.push(null);return}m.push(g.from(S.value)),k()}}).catch(function(S){h.clearTimeout(l),m._destroyed||m.emit("error",S)})};var E=k;if(m._fetchResponse=p,m.url=p.url,m.statusCode=p.status,m.statusMessage=p.statusText,p.headers.forEach(function(S,R){m.headers[R.toLowerCase()]=S,m.rawHeaders.push(R,S)}),b.writableStream){var c=new WritableStream({write:function(S){return new Promise(function(R,M){m._destroyed?M():m.push(g.from(S))?R():m._resumeFetch=R})},close:function(){h.clearTimeout(l),m._destroyed||m.push(null)},abort:function(S){m._destroyed||m.emit("error",S)}});try{p.body.pipeTo(c).catch(function(S){h.clearTimeout(l),m._destroyed||m.emit("error",S)});return}catch{}}var w=p.body.getReader();k()}else{m._xhr=n,m._pos=0,m.url=n.responseURL,m.statusCode=n.status,m.statusMessage=n.statusText;var x=n.getAllResponseHeaders().split(/\r?\n/);if(x.forEach(function(k){var S=k.match(/^([^:]+):\s*(.*)/);if(S){var R=S[1].toLowerCase();R==="set-cookie"?(m.headers[R]===void 0&&(m.headers[R]=[]),m.headers[R].push(S[2])):m.headers[R]!==void 0?m.headers[R]+=", "+S[2]:m.headers[R]=S[2],m.rawHeaders.push(S[1],S[2])}}),m._charset="x-user-defined",!b.overrideMimeType){var A=m.rawHeaders["mime-type"];if(A){var N=A.match(/;\s*charset=([^;])(;|$)/);N&&(m._charset=N[1].toLowerCase())}m._charset||(m._charset="utf-8")}}};u(i,f.Readable),i.prototype._read=function(){var n=this,p=n._resumeFetch;p&&(n._resumeFetch=null,p())},i.prototype._onXHRProgress=function(){var n=this,p=n._xhr,y=null;switch(n._mode){case"text":if(y=p.responseText,y.length>n._pos){var l=y.substr(n._pos);if(n._charset==="x-user-defined"){for(var m=g.alloc(l.length),c=0;c<l.length;c++)m[c]=l.charCodeAt(c)&255;n.push(m)}else n.push(l,n._charset);n._pos=y.length}break;case"arraybuffer":if(p.readyState!==s.DONE||!p.response)break;y=p.response,n.push(g.from(new Uint8Array(y)));break;case"moz-chunked-arraybuffer":if(y=p.response,p.readyState!==s.LOADING||!y)break;n.push(g.from(new Uint8Array(y)));break;case"ms-stream":if(y=p.response,p.readyState!==s.LOADING)break;var w=new h.MSStreamReader;w.onprogress=function(){w.result.byteLength>n._pos&&(n.push(g.from(new Uint8Array(w.result.slice(n._pos)))),n._pos=w.result.byteLength)},w.onload=function(){n.push(null)},w.readAsArrayBuffer(y);break}n._xhr.readyState===s.DONE&&n._mode!=="ms-stream"&&n.push(null)}}).call(this,t("_process"),typeof nt!="undefined"?nt:typeof self!="undefined"?self:typeof a!="undefined"?a:{},t("buffer").Buffer)},{"./capability":157,_process:133,buffer:48,inherits:75,"readable-stream":174}],160:[function(t,d,o){function v(i,n){i.prototype=Object.create(n.prototype),i.prototype.constructor=i,i.__proto__=n}var h={};function g(i,n,p){p||(p=Error);function y(m,c,w){return typeof n=="string"?n:n(m,c,w)}var l=function(m){v(c,m);function c(w,x,A){return m.call(this,y(w,x,A))||this}return c}(p);l.prototype.name=p.name,l.prototype.code=i,h[i]=l}function b(i,n){if(Array.isArray(i)){var p=i.length;return i=i.map(function(y){return String(y)}),p>2?"one of ".concat(n," ").concat(i.slice(0,p-1).join(", "),", or ")+i[p-1]:p===2?"one of ".concat(n," ").concat(i[0]," or ").concat(i[1]):"of ".concat(n," ").concat(i[0])}else return"of ".concat(n," ").concat(String(i))}function u(i,n,p){return i.substr(!p||p<0?0:+p,n.length)===n}function f(i,n,p){return(p===void 0||p>i.length)&&(p=i.length),i.substring(p-n.length,p)===n}function s(i,n,p){return typeof p!="number"&&(p=0),p+n.length>i.length?!1:i.indexOf(n,p)!==-1}g("ERR_INVALID_OPT_VALUE",function(i,n){return'The value "'+n+'" is invalid for option "'+i+'"'},TypeError),g("ERR_INVALID_ARG_TYPE",function(i,n,p){var y;typeof n=="string"&&u(n,"not ")?(y="must not be",n=n.replace(/^not /,"")):y="must be";var l;if(f(i," argument"))l="The ".concat(i," ").concat(y," ").concat(b(n,"type"));else{var m=s(i,".")?"property":"argument";l='The "'.concat(i,'" ').concat(m," ").concat(y," ").concat(b(n,"type"))}return l+=". Received type ".concat(typeof p),l},TypeError),g("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF"),g("ERR_METHOD_NOT_IMPLEMENTED",function(i){return"The "+i+" method is not implemented"}),g("ERR_STREAM_PREMATURE_CLOSE","Premature close"),g("ERR_STREAM_DESTROYED",function(i){return"Cannot call "+i+" after a stream was destroyed"}),g("ERR_MULTIPLE_CALLBACK","Callback called multiple times"),g("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable"),g("ERR_STREAM_WRITE_AFTER_END","write after end"),g("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError),g("ERR_UNKNOWN_ENCODING",function(i){return"Unknown encoding: "+i},TypeError),g("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event"),d.exports.codes=h},{}],161:[function(t,d,o){(function(v){var h=new Set;function g(u){if(!h.has(u)){var f=u+" is an experimental feature. This feature could change at any time";h.add(u),v.emitWarning(f,"ExperimentalWarning")}}function b(){}d.exports.emitExperimentalWarning=v.emitWarning?g:b}).call(this,t("_process"))},{_process:133}],162:[function(t,d,o){(function(v){var h=Object.keys||function(y){var l=[];for(var m in y)l.push(m);return l};d.exports=i;var g=t("./_stream_readable"),b=t("./_stream_writable");t("inherits")(i,g);for(var u=h(b.prototype),f=0;f<u.length;f++){var s=u[f];i.prototype[s]||(i.prototype[s]=b.prototype[s])}function i(y){if(!(this instanceof i))return new i(y);g.call(this,y),b.call(this,y),this.allowHalfOpen=!0,y&&(y.readable===!1&&(this.readable=!1),y.writable===!1&&(this.writable=!1),y.allowHalfOpen===!1&&(this.allowHalfOpen=!1,this.once("end",n)))}Object.defineProperty(i.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(i.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(i.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}});function n(){this._writableState.ended||v.nextTick(p,this)}function p(y){y.end()}Object.defineProperty(i.prototype,"destroyed",{enumerable:!1,get:function(){return this._readableState===void 0||this._writableState===void 0?!1:this._readableState.destroyed&&this._writableState.destroyed},set:function(l){this._readableState===void 0||this._writableState===void 0||(this._readableState.destroyed=l,this._writableState.destroyed=l)}})}).call(this,t("_process"))},{"./_stream_readable":164,"./_stream_writable":166,_process:133,inherits:75}],163:[function(t,d,o){d.exports=h;var v=t("./_stream_transform");t("inherits")(h,v);function h(g){if(!(this instanceof h))return new h(g);v.call(this,g)}h.prototype._transform=function(g,b,u){u(null,g)}},{"./_stream_transform":165,inherits:75}],164:[function(t,d,o){(function(v,h){d.exports=D;var g;D.ReadableState=J,t("events").EventEmitter;var b=function(F,q){return F.listeners(q).length},u=t("./internal/streams/stream"),f=t("buffer").Buffer,s=h.Uint8Array||function(){};function i(z){return f.from(z)}function n(z){return f.isBuffer(z)||z instanceof s}var p=t("util"),y;p&&p.debuglog?y=p.debuglog("stream"):y=function(){};var l=t("./internal/streams/buffer_list"),m=t("./internal/streams/destroy"),c=t("./internal/streams/state"),w=c.getHighWaterMark,x=t("../errors").codes,A=x.ERR_INVALID_ARG_TYPE,N=x.ERR_STREAM_PUSH_AFTER_EOF,E=x.ERR_METHOD_NOT_IMPLEMENTED,k=x.ERR_STREAM_UNSHIFT_AFTER_END_EVENT,S=t("../experimentalWarning"),R=S.emitExperimentalWarning,M,B;t("inherits")(D,u);var I=["error","close","destroy","pause","resume"];function Y(z,F,q){if(typeof z.prependListener=="function")return z.prependListener(F,q);!z._events||!z._events[F]?z.on(F,q):Array.isArray(z._events[F])?z._events[F].unshift(q):z._events[F]=[q,z._events[F]]}function J(z,F,q){g=g||t("./_stream_duplex"),z=z||{},typeof q!="boolean"&&(q=F instanceof g),this.objectMode=!!z.objectMode,q&&(this.objectMode=this.objectMode||!!z.readableObjectMode),this.highWaterMark=w(this,z,"readableHighWaterMark",q),this.buffer=new l,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=z.emitClose!==!1,this.destroyed=!1,this.defaultEncoding=z.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,z.encoding&&(M||(M=t("string_decoder/").StringDecoder),this.decoder=new M(z.encoding),this.encoding=z.encoding)}function D(z){if(g=g||t("./_stream_duplex"),!(this instanceof D))return new D(z);var F=this instanceof g;this._readableState=new J(z,this,F),this.readable=!0,z&&(typeof z.read=="function"&&(this._read=z.read),typeof z.destroy=="function"&&(this._destroy=z.destroy)),u.call(this)}Object.defineProperty(D.prototype,"destroyed",{enumerable:!1,get:function(){return this._readableState===void 0?!1:this._readableState.destroyed},set:function(F){!this._readableState||(this._readableState.destroyed=F)}}),D.prototype.destroy=m.destroy,D.prototype._undestroy=m.undestroy,D.prototype._destroy=function(z,F){F(z)},D.prototype.push=function(z,F){var q=this._readableState,H;return q.objectMode?H=!0:typeof z=="string"&&(F=F||q.defaultEncoding,F!==q.encoding&&(z=f.from(z,F),F=""),H=!0),T(this,z,F,!1,H)},D.prototype.unshift=function(z){return T(this,z,null,!0,!1)};function T(z,F,q,H,O){y("readableAddChunk",F);var C=z._readableState;if(F===null)C.reading=!1,W(z,C);else{var Q;if(O||(Q=U(C,F)),Q)z.emit("error",Q);else if(C.objectMode||F&&F.length>0)if(typeof F!="string"&&!C.objectMode&&Object.getPrototypeOf(F)!==f.prototype&&(F=i(F)),H)C.endEmitted?z.emit("error",new k):G(z,C,F,!0);else if(C.ended)z.emit("error",new N);else{if(C.destroyed)return!1;C.reading=!1,C.decoder&&!q?(F=C.decoder.write(F),C.objectMode||F.length!==0?G(z,C,F,!1):re(z,C)):G(z,C,F,!1)}else H||(C.reading=!1,re(z,C))}return!C.ended&&(C.length<C.highWaterMark||C.length===0)}function G(z,F,q,H){F.flowing&&F.length===0&&!F.sync?(F.awaitDrain=0,z.emit("data",q)):(F.length+=F.objectMode?1:q.length,H?F.buffer.unshift(q):F.buffer.push(q),F.needReadable&&ee(z)),re(z,F)}function U(z,F){var q;return!n(F)&&typeof F!="string"&&F!==void 0&&!z.objectMode&&(q=new A("chunk",["string","Buffer","Uint8Array"],F)),q}D.prototype.isPaused=function(){return this._readableState.flowing===!1},D.prototype.setEncoding=function(z){return M||(M=t("string_decoder/").StringDecoder),this._readableState.decoder=new M(z),this._readableState.encoding=this._readableState.decoder.encoding,this};var ie=8388608;function se(z){return z>=ie?z=ie:(z--,z|=z>>>1,z|=z>>>2,z|=z>>>4,z|=z>>>8,z|=z>>>16,z++),z}function ae(z,F){return z<=0||F.length===0&&F.ended?0:F.objectMode?1:z!==z?F.flowing&&F.length?F.buffer.head.data.length:F.length:(z>F.highWaterMark&&(F.highWaterMark=se(z)),z<=F.length?z:F.ended?F.length:(F.needReadable=!0,0))}D.prototype.read=function(z){y("read",z),z=parseInt(z,10);var F=this._readableState,q=z;if(z!==0&&(F.emittedReadable=!1),z===0&&F.needReadable&&((F.highWaterMark!==0?F.length>=F.highWaterMark:F.length>0)||F.ended))return y("read: emitReadable",F.length,F.ended),F.length===0&&F.ended?$(this):ee(this),null;if(z=ae(z,F),z===0&&F.ended)return F.length===0&&$(this),null;var H=F.needReadable;y("need readable",H),(F.length===0||F.length-z<F.highWaterMark)&&(H=!0,y("length less than watermark",H)),F.ended||F.reading?(H=!1,y("reading or ended",H)):H&&(y("do read"),F.reading=!0,F.sync=!0,F.length===0&&(F.needReadable=!0),this._read(F.highWaterMark),F.sync=!1,F.reading||(z=ae(q,F)));var O;return z>0?O=L(z,F):O=null,O===null?(F.needReadable=!0,z=0):(F.length-=z,F.awaitDrain=0),F.length===0&&(F.ended||(F.needReadable=!0),q!==z&&F.ended&&$(this)),O!==null&&this.emit("data",O),O};function W(z,F){if(!F.ended){if(F.decoder){var q=F.decoder.end();q&&q.length&&(F.buffer.push(q),F.length+=F.objectMode?1:q.length)}F.ended=!0,F.sync?ee(z):(F.needReadable=!1,F.emittedReadable||(F.emittedReadable=!0,_(z)))}}function ee(z){var F=z._readableState;F.needReadable=!1,F.emittedReadable||(y("emitReadable",F.flowing),F.emittedReadable=!0,v.nextTick(_,z))}function _(z){var F=z._readableState;y("emitReadable_",F.destroyed,F.length,F.ended),!F.destroyed&&(F.length||F.ended)&&z.emit("readable"),F.needReadable=!F.flowing&&!F.ended&&F.length<=F.highWaterMark,K(z)}function re(z,F){F.readingMore||(F.readingMore=!0,v.nextTick(fe,z,F))}function fe(z,F){for(;!F.reading&&!F.ended&&(F.length<F.highWaterMark||F.flowing&&F.length===0);){var q=F.length;if(y("maybeReadMore read 0"),z.read(0),q===F.length)break}F.readingMore=!1}D.prototype._read=function(z){this.emit("error",new E("_read()"))},D.prototype.pipe=function(z,F){var q=this,H=this._readableState;switch(H.pipesCount){case 0:H.pipes=z;break;case 1:H.pipes=[H.pipes,z];break;default:H.pipes.push(z);break}H.pipesCount+=1,y("pipe count=%d opts=%j",H.pipesCount,F);var O=(!F||F.end!==!1)&&z!==v.stdout&&z!==v.stderr,C=O?le:ke;H.endEmitted?v.nextTick(C):q.once("end",C),z.on("unpipe",Q);function Q(He,Me){y("onunpipe"),He===q&&Me&&Me.hasUnpiped===!1&&(Me.hasUnpiped=!0,Ee())}function le(){y("onend"),z.end()}var ge=pe(q);z.on("drain",ge);var ye=!1;function Ee(){y("cleanup"),z.removeListener("close",Oe),z.removeListener("finish",Fe),z.removeListener("drain",ge),z.removeListener("error",Ie),z.removeListener("unpipe",Q),q.removeListener("end",le),q.removeListener("end",ke),q.removeListener("data",Se),ye=!0,H.awaitDrain&&(!z._writableState||z._writableState.needDrain)&&ge()}q.on("data",Se);function Se(He){y("ondata");var Me=z.write(He);y("dest.write",Me),Me===!1&&((H.pipesCount===1&&H.pipes===z||H.pipesCount>1&&V(H.pipes,z)!==-1)&&!ye&&(y("false write response, pause",H.awaitDrain),H.awaitDrain++),q.pause())}function Ie(He){y("onerror",He),ke(),z.removeListener("error",Ie),b(z,"error")===0&&z.emit("error",He)}Y(z,"error",Ie);function Oe(){z.removeListener("finish",Fe),ke()}z.once("close",Oe);function Fe(){y("onfinish"),z.removeListener("close",Oe),ke()}z.once("finish",Fe);function ke(){y("unpipe"),q.unpipe(z)}return z.emit("pipe",q),H.flowing||(y("pipe resume"),q.resume()),z};function pe(z){return function(){var q=z._readableState;y("pipeOnDrain",q.awaitDrain),q.awaitDrain&&q.awaitDrain--,q.awaitDrain===0&&b(z,"data")&&(q.flowing=!0,K(z))}}D.prototype.unpipe=function(z){var F=this._readableState,q={hasUnpiped:!1};if(F.pipesCount===0)return this;if(F.pipesCount===1)return z&&z!==F.pipes?this:(z||(z=F.pipes),F.pipes=null,F.pipesCount=0,F.flowing=!1,z&&z.emit("unpipe",this,q),this);if(!z){var H=F.pipes,O=F.pipesCount;F.pipes=null,F.pipesCount=0,F.flowing=!1;for(var C=0;C<O;C++)H[C].emit("unpipe",this,{hasUnpiped:!1});return this}var Q=V(F.pipes,z);return Q===-1?this:(F.pipes.splice(Q,1),F.pipesCount-=1,F.pipesCount===1&&(F.pipes=F.pipes[0]),z.emit("unpipe",this,q),this)},D.prototype.on=function(z,F){var q=u.prototype.on.call(this,z,F),H=this._readableState;return z==="data"?(H.readableListening=this.listenerCount("readable")>0,H.flowing!==!1&&this.resume()):z==="readable"&&!H.endEmitted&&!H.readableListening&&(H.readableListening=H.needReadable=!0,H.flowing=!1,H.emittedReadable=!1,y("on readable",H.length,H.reading),H.length?ee(this):H.reading||v.nextTick(oe,this)),q},D.prototype.addListener=D.prototype.on,D.prototype.removeListener=function(z,F){var q=u.prototype.removeListener.call(this,z,F);return z==="readable"&&v.nextTick(he,this),q},D.prototype.removeAllListeners=function(z){var F=u.prototype.removeAllListeners.apply(this,arguments);return(z==="readable"||z===void 0)&&v.nextTick(he,this),F};function he(z){var F=z._readableState;F.readableListening=z.listenerCount("readable")>0,F.resumeScheduled&&!F.paused?F.flowing=!0:z.listenerCount("data")>0&&z.resume()}function oe(z){y("readable nexttick read 0"),z.read(0)}D.prototype.resume=function(){var z=this._readableState;return z.flowing||(y("resume"),z.flowing=!z.readableListening,ce(this,z)),z.paused=!1,this};function ce(z,F){F.resumeScheduled||(F.resumeScheduled=!0,v.nextTick(X,z,F))}function X(z,F){y("resume",F.reading),F.reading||z.read(0),F.resumeScheduled=!1,z.emit("resume"),K(z),F.flowing&&!F.reading&&z.read(0)}D.prototype.pause=function(){return y("call pause flowing=%j",this._readableState.flowing),this._readableState.flowing!==!1&&(y("pause"),this._readableState.flowing=!1,this.emit("pause")),this._readableState.paused=!0,this};function K(z){var F=z._readableState;for(y("flow",F.flowing);F.flowing&&z.read()!==null;);}D.prototype.wrap=function(z){var F=this,q=this._readableState,H=!1;z.on("end",function(){if(y("wrapped end"),q.decoder&&!q.ended){var Q=q.decoder.end();Q&&Q.length&&F.push(Q)}F.push(null)}),z.on("data",function(Q){if(y("wrapped data"),q.decoder&&(Q=q.decoder.write(Q)),!(q.objectMode&&Q==null)&&!(!q.objectMode&&(!Q||!Q.length))){var le=F.push(Q);le||(H=!0,z.pause())}});for(var O in z)this[O]===void 0&&typeof z[O]=="function"&&(this[O]=function(le){return function(){return z[le].apply(z,arguments)}}(O));for(var C=0;C<I.length;C++)z.on(I[C],this.emit.bind(this,I[C]));return this._read=function(Q){y("wrapped _read",Q),H&&(H=!1,z.resume())},this},typeof Symbol=="function"&&(D.prototype[Symbol.asyncIterator]=function(){return R("Readable[Symbol.asyncIterator]"),B===void 0&&(B=t("./internal/streams/async_iterator")),B(this)}),Object.defineProperty(D.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(D.prototype,"readableBuffer",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(D.prototype,"readableFlowing",{enumerable:!1,get:function(){return this._readableState.flowing},set:function(F){this._readableState&&(this._readableState.flowing=F)}}),D._fromList=L,Object.defineProperty(D.prototype,"readableLength",{enumerable:!1,get:function(){return this._readableState.length}});function L(z,F){if(F.length===0)return null;var q;return F.objectMode?q=F.buffer.shift():!z||z>=F.length?(F.decoder?q=F.buffer.join(""):F.buffer.length===1?q=F.buffer.first():q=F.buffer.concat(F.length),F.buffer.clear()):q=F.buffer.consume(z,F.decoder),q}function $(z){var F=z._readableState;y("endReadable",F.endEmitted),F.endEmitted||(F.ended=!0,v.nextTick(te,F,z))}function te(z,F){y("endReadableNT",z.endEmitted,z.length),!z.endEmitted&&z.length===0&&(z.endEmitted=!0,F.readable=!1,F.emit("end"))}function V(z,F){for(var q=0,H=z.length;q<H;q++)if(z[q]===F)return q;return-1}}).call(this,t("_process"),typeof nt!="undefined"?nt:typeof self!="undefined"?self:typeof a!="undefined"?a:{})},{"../errors":160,"../experimentalWarning":161,"./_stream_duplex":162,"./internal/streams/async_iterator":167,"./internal/streams/buffer_list":168,"./internal/streams/destroy":169,"./internal/streams/state":172,"./internal/streams/stream":173,_process:133,buffer:48,events:52,inherits:75,"string_decoder/":175,util:33}],165:[function(t,d,o){d.exports=i;var v=t("../errors").codes,h=v.ERR_METHOD_NOT_IMPLEMENTED,g=v.ERR_MULTIPLE_CALLBACK,b=v.ERR_TRANSFORM_ALREADY_TRANSFORMING,u=v.ERR_TRANSFORM_WITH_LENGTH_0,f=t("./_stream_duplex");t("inherits")(i,f);function s(y,l){var m=this._transformState;m.transforming=!1;var c=m.writecb;if(c===null)return this.emit("error",new g);m.writechunk=null,m.writecb=null,l!=null&&this.push(l),c(y);var w=this._readableState;w.reading=!1,(w.needReadable||w.length<w.highWaterMark)&&this._read(w.highWaterMark)}function i(y){if(!(this instanceof i))return new i(y);f.call(this,y),this._transformState={afterTransform:s.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,y&&(typeof y.transform=="function"&&(this._transform=y.transform),typeof y.flush=="function"&&(this._flush=y.flush)),this.on("prefinish",n)}function n(){var y=this;typeof this._flush=="function"&&!this._readableState.destroyed?this._flush(function(l,m){p(y,l,m)}):p(this,null,null)}i.prototype.push=function(y,l){return this._transformState.needTransform=!1,f.prototype.push.call(this,y,l)},i.prototype._transform=function(y,l,m){m(new h("_transform()"))},i.prototype._write=function(y,l,m){var c=this._transformState;if(c.writecb=m,c.writechunk=y,c.writeencoding=l,!c.transforming){var w=this._readableState;(c.needTransform||w.needReadable||w.length<w.highWaterMark)&&this._read(w.highWaterMark)}},i.prototype._read=function(y){var l=this._transformState;l.writechunk!==null&&!l.transforming?(l.transforming=!0,this._transform(l.writechunk,l.writeencoding,l.afterTransform)):l.needTransform=!0},i.prototype._destroy=function(y,l){f.prototype._destroy.call(this,y,function(m){l(m)})};function p(y,l,m){if(l)return y.emit("error",l);if(m!=null&&y.push(m),y._writableState.length)throw new u;if(y._transformState.transforming)throw new b;return y.push(null)}},{"../errors":160,"./_stream_duplex":162,inherits:75}],166:[function(t,d,o){(function(v,h){d.exports=Y;function g(X){var K=this;this.next=null,this.entry=null,this.finish=function(){ce(K,X)}}var b;Y.WritableState=B;var u={deprecate:t("util-deprecate")},f=t("./internal/streams/stream"),s=t("buffer").Buffer,i=h.Uint8Array||function(){};function n(X){return s.from(X)}function p(X){return s.isBuffer(X)||X instanceof i}var y=t("./internal/streams/destroy"),l=t("./internal/streams/state"),m=l.getHighWaterMark,c=t("../errors").codes,w=c.ERR_INVALID_ARG_TYPE,x=c.ERR_METHOD_NOT_IMPLEMENTED,A=c.ERR_MULTIPLE_CALLBACK,N=c.ERR_STREAM_CANNOT_PIPE,E=c.ERR_STREAM_DESTROYED,k=c.ERR_STREAM_NULL_VALUES,S=c.ERR_STREAM_WRITE_AFTER_END,R=c.ERR_UNKNOWN_ENCODING;t("inherits")(Y,f);function M(){}function B(X,K,L){b=b||t("./_stream_duplex"),X=X||{},typeof L!="boolean"&&(L=K instanceof b),this.objectMode=!!X.objectMode,L&&(this.objectMode=this.objectMode||!!X.writableObjectMode),this.highWaterMark=m(this,X,"writableHighWaterMark",L),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var $=X.decodeStrings===!1;this.decodeStrings=!$,this.defaultEncoding=X.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(te){ae(K,te)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=X.emitClose!==!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new g(this)}B.prototype.getBuffer=function(){for(var K=this.bufferedRequest,L=[];K;)L.push(K),K=K.next;return L},function(){try{Object.defineProperty(B.prototype,"buffer",{get:u.deprecate(function(){return this.getBuffer()},"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch{}}();var I;typeof Symbol=="function"&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]=="function"?(I=Function.prototype[Symbol.hasInstance],Object.defineProperty(Y,Symbol.hasInstance,{value:function(K){return I.call(this,K)?!0:this!==Y?!1:K&&K._writableState instanceof B}})):I=function(K){return K instanceof this};function Y(X){b=b||t("./_stream_duplex");var K=this instanceof b;if(!K&&!I.call(Y,this))return new Y(X);this._writableState=new B(X,this,K),this.writable=!0,X&&(typeof X.write=="function"&&(this._write=X.write),typeof X.writev=="function"&&(this._writev=X.writev),typeof X.destroy=="function"&&(this._destroy=X.destroy),typeof X.final=="function"&&(this._final=X.final)),f.call(this)}Y.prototype.pipe=function(){this.emit("error",new N)};function J(X,K){var L=new S;X.emit("error",L),v.nextTick(K,L)}function D(X,K,L,$){var te;return L===null?te=new k:typeof L!="string"&&!K.objectMode&&(te=new w("chunk",["string","Buffer"],L)),te?(X.emit("error",te),v.nextTick($,te),!1):!0}Y.prototype.write=function(X,K,L){var $=this._writableState,te=!1,V=!$.objectMode&&p(X);return V&&!s.isBuffer(X)&&(X=n(X)),typeof K=="function"&&(L=K,K=null),V?K="buffer":K||(K=$.defaultEncoding),typeof L!="function"&&(L=M),$.ending?J(this,L):(V||D(this,$,X,L))&&($.pendingcb++,te=G(this,$,V,X,K,L)),te},Y.prototype.cork=function(){this._writableState.corked++},Y.prototype.uncork=function(){var X=this._writableState;X.corked&&(X.corked--,!X.writing&&!X.corked&&!X.bufferProcessing&&X.bufferedRequest&&_(this,X))},Y.prototype.setDefaultEncoding=function(K){if(typeof K=="string"&&(K=K.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((K+"").toLowerCase())>-1))throw new R(K);return this._writableState.defaultEncoding=K,this},Object.defineProperty(Y.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}});function T(X,K,L){return!X.objectMode&&X.decodeStrings!==!1&&typeof K=="string"&&(K=s.from(K,L)),K}Object.defineProperty(Y.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}});function G(X,K,L,$,te,V){if(!L){var z=T(K,$,te);$!==z&&(L=!0,te="buffer",$=z)}var F=K.objectMode?1:$.length;K.length+=F;var q=K.length<K.highWaterMark;if(q||(K.needDrain=!0),K.writing||K.corked){var H=K.lastBufferedRequest;K.lastBufferedRequest={chunk:$,encoding:te,isBuf:L,callback:V,next:null},H?H.next=K.lastBufferedRequest:K.bufferedRequest=K.lastBufferedRequest,K.bufferedRequestCount+=1}else U(X,K,!1,F,$,te,V);return q}function U(X,K,L,$,te,V,z){K.writelen=$,K.writecb=z,K.writing=!0,K.sync=!0,K.destroyed?K.onwrite(new E("write")):L?X._writev(te,K.onwrite):X._write(te,V,K.onwrite),K.sync=!1}function ie(X,K,L,$,te){--K.pendingcb,L?(v.nextTick(te,$),v.nextTick(he,X,K),X._writableState.errorEmitted=!0,X.emit("error",$)):(te($),X._writableState.errorEmitted=!0,X.emit("error",$),he(X,K))}function se(X){X.writing=!1,X.writecb=null,X.length-=X.writelen,X.writelen=0}function ae(X,K){var L=X._writableState,$=L.sync,te=L.writecb;if(typeof te!="function")throw new A;if(se(L),K)ie(X,L,$,K,te);else{var V=re(L)||X.destroyed;!V&&!L.corked&&!L.bufferProcessing&&L.bufferedRequest&&_(X,L),$?v.nextTick(W,X,L,V,te):W(X,L,V,te)}}function W(X,K,L,$){L||ee(X,K),K.pendingcb--,$(),he(X,K)}function ee(X,K){K.length===0&&K.needDrain&&(K.needDrain=!1,X.emit("drain"))}function _(X,K){K.bufferProcessing=!0;var L=K.bufferedRequest;if(X._writev&&L&&L.next){var $=K.bufferedRequestCount,te=new Array($),V=K.corkedRequestsFree;V.entry=L;for(var z=0,F=!0;L;)te[z]=L,L.isBuf||(F=!1),L=L.next,z+=1;te.allBuffers=F,U(X,K,!0,K.length,te,"",V.finish),K.pendingcb++,K.lastBufferedRequest=null,V.next?(K.corkedRequestsFree=V.next,V.next=null):K.corkedRequestsFree=new g(K),K.bufferedRequestCount=0}else{for(;L;){var q=L.chunk,H=L.encoding,O=L.callback,C=K.objectMode?1:q.length;if(U(X,K,!1,C,q,H,O),L=L.next,K.bufferedRequestCount--,K.writing)break}L===null&&(K.lastBufferedRequest=null)}K.bufferedRequest=L,K.bufferProcessing=!1}Y.prototype._write=function(X,K,L){L(new x("_write()"))},Y.prototype._writev=null,Y.prototype.end=function(X,K,L){var $=this._writableState;return typeof X=="function"?(L=X,X=null,K=null):typeof K=="function"&&(L=K,K=null),X!=null&&this.write(X,K),$.corked&&($.corked=1,this.uncork()),$.ending||oe(this,$,L),this},Object.defineProperty(Y.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}});function re(X){return X.ending&&X.length===0&&X.bufferedRequest===null&&!X.finished&&!X.writing}function fe(X,K){X._final(function(L){K.pendingcb--,L&&X.emit("error",L),K.prefinished=!0,X.emit("prefinish"),he(X,K)})}function pe(X,K){!K.prefinished&&!K.finalCalled&&(typeof X._final=="function"&&!K.destroyed?(K.pendingcb++,K.finalCalled=!0,v.nextTick(fe,X,K)):(K.prefinished=!0,X.emit("prefinish")))}function he(X,K){var L=re(K);return L&&(pe(X,K),K.pendingcb===0&&(K.finished=!0,X.emit("finish"))),L}function oe(X,K,L){K.ending=!0,he(X,K),L&&(K.finished?v.nextTick(L):X.once("finish",L)),K.ended=!0,X.writable=!1}function ce(X,K,L){var $=X.entry;for(X.entry=null;$;){var te=$.callback;K.pendingcb--,te(L),$=$.next}K.corkedRequestsFree.next=X}Object.defineProperty(Y.prototype,"destroyed",{enumerable:!1,get:function(){return this._writableState===void 0?!1:this._writableState.destroyed},set:function(K){!this._writableState||(this._writableState.destroyed=K)}}),Y.prototype.destroy=y.destroy,Y.prototype._undestroy=y.undestroy,Y.prototype._destroy=function(X,K){K(X)}}).call(this,t("_process"),typeof nt!="undefined"?nt:typeof self!="undefined"?self:typeof a!="undefined"?a:{})},{"../errors":160,"./_stream_duplex":162,"./internal/streams/destroy":169,"./internal/streams/state":172,"./internal/streams/stream":173,_process:133,buffer:48,inherits:75,"util-deprecate":183}],167:[function(t,d,o){(function(v){var h;function g(E,k,S){return k in E?Object.defineProperty(E,k,{value:S,enumerable:!0,configurable:!0,writable:!0}):E[k]=S,E}var b=t("./end-of-stream"),u=Symbol("lastResolve"),f=Symbol("lastReject"),s=Symbol("error"),i=Symbol("ended"),n=Symbol("lastPromise"),p=Symbol("handlePromise"),y=Symbol("stream");function l(E,k){return{value:E,done:k}}function m(E){var k=E[u];if(k!==null){var S=E[y].read();S!==null&&(E[n]=null,E[u]=null,E[f]=null,k(l(S,!1)))}}function c(E){v.nextTick(m,E)}function w(E,k){return function(S,R){E.then(function(){if(k[i]){S(l(void 0,!0));return}k[p](S,R)},R)}}var x=Object.getPrototypeOf(function(){}),A=Object.setPrototypeOf((h={get stream(){return this[y]},next:function(){var k=this,S=this[s];if(S!==null)return Promise.reject(S);if(this[i])return Promise.resolve(l(void 0,!0));if(this[y].destroyed)return new Promise(function(I,Y){v.nextTick(function(){k[s]?Y(k[s]):I(l(void 0,!0))})});var R=this[n],M;if(R)M=new Promise(w(R,this));else{var B=this[y].read();if(B!==null)return Promise.resolve(l(B,!1));M=new Promise(this[p])}return this[n]=M,M}},g(h,Symbol.asyncIterator,function(){return this}),g(h,"return",function(){var k=this;return new Promise(function(S,R){k[y].destroy(null,function(M){if(M){R(M);return}S(l(void 0,!0))})})}),h),x),N=function(k){var S,R=Object.create(A,(S={},g(S,y,{value:k,writable:!0}),g(S,u,{value:null,writable:!0}),g(S,f,{value:null,writable:!0}),g(S,s,{value:null,writable:!0}),g(S,i,{value:k._readableState.endEmitted,writable:!0}),g(S,p,{value:function(B,I){var Y=R[y].read();Y?(R[n]=null,R[u]=null,R[f]=null,B(l(Y,!1))):(R[u]=B,R[f]=I)},writable:!0}),S));return R[n]=null,b(k,function(M){if(M&&M.code!=="ERR_STREAM_PREMATURE_CLOSE"){var B=R[f];B!==null&&(R[n]=null,R[u]=null,R[f]=null,B(M)),R[s]=M;return}var I=R[u];I!==null&&(R[n]=null,R[u]=null,R[f]=null,I(l(void 0,!0))),R[i]=!0}),k.on("readable",c.bind(null,R)),R};d.exports=N}).call(this,t("_process"))},{"./end-of-stream":170,_process:133}],168:[function(t,d,o){function v(n){for(var p=1;p<arguments.length;p++){var y=arguments[p]!=null?arguments[p]:{},l=Object.keys(y);typeof Object.getOwnPropertySymbols=="function"&&(l=l.concat(Object.getOwnPropertySymbols(y).filter(function(m){return Object.getOwnPropertyDescriptor(y,m).enumerable}))),l.forEach(function(m){h(n,m,y[m])})}return n}function h(n,p,y){return p in n?Object.defineProperty(n,p,{value:y,enumerable:!0,configurable:!0,writable:!0}):n[p]=y,n}var g=t("buffer"),b=g.Buffer,u=t("util"),f=u.inspect,s=f&&f.custom||"inspect";function i(n,p,y){b.prototype.copy.call(n,p,y)}d.exports=function(){function n(){this.head=null,this.tail=null,this.length=0}var p=n.prototype;return p.push=function(l){var m={data:l,next:null};this.length>0?this.tail.next=m:this.head=m,this.tail=m,++this.length},p.unshift=function(l){var m={data:l,next:this.head};this.length===0&&(this.tail=m),this.head=m,++this.length},p.shift=function(){if(this.length!==0){var l=this.head.data;return this.length===1?this.head=this.tail=null:this.head=this.head.next,--this.length,l}},p.clear=function(){this.head=this.tail=null,this.length=0},p.join=function(l){if(this.length===0)return"";for(var m=this.head,c=""+m.data;m=m.next;)c+=l+m.data;return c},p.concat=function(l){if(this.length===0)return b.alloc(0);for(var m=b.allocUnsafe(l>>>0),c=this.head,w=0;c;)i(c.data,m,w),w+=c.data.length,c=c.next;return m},p.consume=function(l,m){var c;return l<this.head.data.length?(c=this.head.data.slice(0,l),this.head.data=this.head.data.slice(l)):l===this.head.data.length?c=this.shift():c=m?this._getString(l):this._getBuffer(l),c},p.first=function(){return this.head.data},p._getString=function(l){var m=this.head,c=1,w=m.data;for(l-=w.length;m=m.next;){var x=m.data,A=l>x.length?x.length:l;if(A===x.length?w+=x:w+=x.slice(0,l),l-=A,l===0){A===x.length?(++c,m.next?this.head=m.next:this.head=this.tail=null):(this.head=m,m.data=x.slice(A));break}++c}return this.length-=c,w},p._getBuffer=function(l){var m=b.allocUnsafe(l),c=this.head,w=1;for(c.data.copy(m),l-=c.data.length;c=c.next;){var x=c.data,A=l>x.length?x.length:l;if(x.copy(m,m.length-l,0,A),l-=A,l===0){A===x.length?(++w,c.next?this.head=c.next:this.head=this.tail=null):(this.head=c,c.data=x.slice(A));break}++w}return this.length-=w,m},p[s]=function(y,l){return f(this,v({},l,{depth:0,customInspect:!1}))},n}()},{buffer:48,util:33}],169:[function(t,d,o){(function(v){function h(s,i){var n=this,p=this._readableState&&this._readableState.destroyed,y=this._writableState&&this._writableState.destroyed;return p||y?(i?i(s):s&&(!this._writableState||!this._writableState.errorEmitted)&&v.nextTick(f,this,s),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(s||null,function(l){!i&&l?(v.nextTick(g,n,l),n._writableState&&(n._writableState.errorEmitted=!0)):i?(v.nextTick(b,n),i(l)):v.nextTick(b,n)}),this)}function g(s,i){f(s,i),b(s)}function b(s){s._writableState&&!s._writableState.emitClose||s._readableState&&!s._readableState.emitClose||s.emit("close")}function u(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)}function f(s,i){s.emit("error",i)}d.exports={destroy:h,undestroy:u}}).call(this,t("_process"))},{_process:133}],170:[function(t,d,o){var v=t("../../../errors").codes.ERR_STREAM_PREMATURE_CLOSE;function h(f){var s=!1;return function(){if(!s){s=!0;for(var i=arguments.length,n=new Array(i),p=0;p<i;p++)n[p]=arguments[p];f.apply(this,n)}}}function g(){}function b(f){return f.setHeader&&typeof f.abort=="function"}function u(f,s,i){if(typeof s=="function")return u(f,null,s);s||(s={}),i=h(i||g);var n=s.readable||s.readable!==!1&&f.readable,p=s.writable||s.writable!==!1&&f.writable,y=function(){f.writable||m()},l=f._writableState&&f._writableState.finished,m=function(){p=!1,l=!0,n||i.call(f)},c=f._readableState&&f._readableState.endEmitted,w=function(){n=!1,c=!0,p||i.call(f)},x=function(k){i.call(f,k)},A=function(){var k;if(n&&!c)return(!f._readableState||!f._readableState.ended)&&(k=new v),i.call(f,k);if(p&&!l)return(!f._writableState||!f._writableState.ended)&&(k=new v),i.call(f,k)},N=function(){f.req.on("finish",m)};return b(f)?(f.on("complete",m),f.on("abort",A),f.req?N():f.on("request",N)):p&&!f._writableState&&(f.on("end",y),f.on("close",y)),f.on("end",w),f.on("finish",m),s.error!==!1&&f.on("error",x),f.on("close",A),function(){f.removeListener("complete",m),f.removeListener("abort",A),f.removeListener("request",N),f.req&&f.req.removeListener("finish",m),f.removeListener("end",y),f.removeListener("close",y),f.removeListener("finish",m),f.removeListener("end",w),f.removeListener("error",x),f.removeListener("close",A)}}d.exports=u},{"../../../errors":160}],171:[function(t,d,o){var v;function h(m){var c=!1;return function(){c||(c=!0,m.apply(void 0,arguments))}}var g=t("../../../errors").codes,b=g.ERR_MISSING_ARGS,u=g.ERR_STREAM_DESTROYED;function f(m){if(m)throw m}function s(m){return m.setHeader&&typeof m.abort=="function"}function i(m,c,w,x){x=h(x);var A=!1;m.on("close",function(){A=!0}),v===void 0&&(v=t("./end-of-stream")),v(m,{readable:c,writable:w},function(E){if(E)return x(E);A=!0,x()});var N=!1;return function(E){if(!A&&!N){if(N=!0,s(m))return m.abort();if(typeof m.destroy=="function")return m.destroy();x(E||new u("pipe"))}}}function n(m){m()}function p(m,c){return m.pipe(c)}function y(m){return!m.length||typeof m[m.length-1]!="function"?f:m.pop()}function l(){for(var m=arguments.length,c=new Array(m),w=0;w<m;w++)c[w]=arguments[w];var x=y(c);if(Array.isArray(c[0])&&(c=c[0]),c.length<2)throw new b("streams");var A,N=c.map(function(E,k){var S=k<c.length-1,R=k>0;return i(E,S,R,function(M){A||(A=M),M&&N.forEach(n),!S&&(N.forEach(n),x(A))})});return c.reduce(p)}d.exports=l},{"../../../errors":160,"./end-of-stream":170}],172:[function(t,d,o){var v=t("../../../errors").codes.ERR_INVALID_OPT_VALUE;function h(b,u,f){return b.highWaterMark!=null?b.highWaterMark:u?b[f]:null}function g(b,u,f,s){var i=h(u,s,f);if(i!=null){if(!(isFinite(i)&&Math.floor(i)===i)||i<0){var n=s?f:"highWaterMark";throw new v(n,i)}return Math.floor(i)}return b.objectMode?16:16*1024}d.exports={getHighWaterMark:g}},{"../../../errors":160}],173:[function(t,d,o){arguments[4][146][0].apply(o,arguments)},{dup:146,events:52}],174:[function(t,d,o){o=d.exports=t("./lib/_stream_readable.js"),o.Stream=o,o.Readable=o,o.Writable=t("./lib/_stream_writable.js"),o.Duplex=t("./lib/_stream_duplex.js"),o.Transform=t("./lib/_stream_transform.js"),o.PassThrough=t("./lib/_stream_passthrough.js"),o.finished=t("./lib/internal/streams/end-of-stream.js"),o.pipeline=t("./lib/internal/streams/pipeline.js")},{"./lib/_stream_duplex.js":162,"./lib/_stream_passthrough.js":163,"./lib/_stream_readable.js":164,"./lib/_stream_transform.js":165,"./lib/_stream_writable.js":166,"./lib/internal/streams/end-of-stream.js":170,"./lib/internal/streams/pipeline.js":171}],175:[function(t,d,o){arguments[4][148][0].apply(o,arguments)},{dup:148,"safe-buffer":154}],176:[function(t,d,o){(function(v,h){var g=t("process/browser.js").nextTick,b=Function.prototype.apply,u=Array.prototype.slice,f={},s=0;o.setTimeout=function(){return new i(b.call(setTimeout,a,arguments),clearTimeout)},o.setInterval=function(){return new i(b.call(setInterval,a,arguments),clearInterval)},o.clearTimeout=o.clearInterval=function(n){n.close()};function i(n,p){this._id=n,this._clearFn=p}i.prototype.unref=i.prototype.ref=function(){},i.prototype.close=function(){this._clearFn.call(a,this._id)},o.enroll=function(n,p){clearTimeout(n._idleTimeoutId),n._idleTimeout=p},o.unenroll=function(n){clearTimeout(n._idleTimeoutId),n._idleTimeout=-1},o._unrefActive=o.active=function(n){clearTimeout(n._idleTimeoutId);var p=n._idleTimeout;p>=0&&(n._idleTimeoutId=setTimeout(function(){n._onTimeout&&n._onTimeout()},p))},o.setImmediate=typeof v=="function"?v:function(n){var p=s++,y=arguments.length<2?!1:u.call(arguments,1);return f[p]=!0,g(function(){f[p]&&(y?n.apply(null,y):n.call(null),o.clearImmediate(p))}),p},o.clearImmediate=typeof h=="function"?h:function(n){delete f[n]}}).call(this,t("timers").setImmediate,t("timers").clearImmediate)},{"process/browser.js":133,timers:176}],177:[function(t,d,o){(function(v){Object.defineProperty(o,"__esModule",{value:!0});var h=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(T){return typeof T}:function(T){return T&&typeof Symbol=="function"&&T.constructor===Symbol&&T!==Symbol.prototype?"symbol":typeof T};o.clone=s,o.addLast=p,o.addFirst=y,o.removeLast=l,o.removeFirst=m,o.insert=c,o.removeAt=w,o.replaceAt=x,o.getIn=A,o.set=N,o.setIn=k,o.update=S,o.updateIn=R,o.merge=M,o.mergeDeep=B,o.mergeIn=I,o.omit=Y,o.addDefaults=J;/*!
 * Timm
 *
 * Immutability helpers with fast reads and acceptable writes.
 *
 * @copyright Guillermo Grau Panea 2016
 * @license MIT
 */var g="INVALID_ARGS";function b(T){throw new Error(T)}function u(T){var G=Object.keys(T);return Object.getOwnPropertySymbols?G.concat(Object.getOwnPropertySymbols(T)):G}var f={}.hasOwnProperty;function s(T){if(Array.isArray(T))return T.slice();for(var G=u(T),U={},ie=0;ie<G.length;ie++){var se=G[ie];U[se]=T[se]}return U}function i(T,G,U){var ie=U;ie==null&&b(g);for(var se=!1,ae=arguments.length,W=Array(ae>3?ae-3:0),ee=3;ee<ae;ee++)W[ee-3]=arguments[ee];for(var _=0;_<W.length;_++){var re=W[_];if(re!=null){var fe=u(re);if(!!fe.length)for(var pe=0;pe<=fe.length;pe++){var he=fe[pe];if(!(T&&ie[he]!==void 0)){var oe=re[he];G&&n(ie[he])&&n(oe)&&(oe=i(T,G,ie[he],oe)),!(oe===void 0||oe===ie[he])&&(se||(se=!0,ie=s(ie)),ie[he]=oe)}}}}return ie}function n(T){var G=typeof T=="undefined"?"undefined":h(T);return T!=null&&G==="object"}function p(T,G){return Array.isArray(G)?T.concat(G):T.concat([G])}function y(T,G){return Array.isArray(G)?G.concat(T):[G].concat(T)}function l(T){return T.length?T.slice(0,T.length-1):T}function m(T){return T.length?T.slice(1):T}function c(T,G,U){return T.slice(0,G).concat(Array.isArray(U)?U:[U]).concat(T.slice(G))}function w(T,G){return G>=T.length||G<0?T:T.slice(0,G).concat(T.slice(G+1))}function x(T,G,U){if(T[G]===U)return T;for(var ie=T.length,se=Array(ie),ae=0;ae<ie;ae++)se[ae]=T[ae];return se[G]=U,se}function A(T,G){if(!Array.isArray(G)&&b(g),T!=null){for(var U=T,ie=0;ie<G.length;ie++){var se=G[ie];if(U=U!=null?U[se]:void 0,U===void 0)return U}return U}}function N(T,G,U){var ie=typeof G=="number"?[]:{},se=T==null?ie:T;if(se[G]===U)return se;var ae=s(se);return ae[G]=U,ae}function E(T,G,U,ie){var se=void 0,ae=G[ie];if(ie===G.length-1)se=U;else{var W=n(T)&&n(T[ae])?T[ae]:typeof G[ie+1]=="number"?[]:{};se=E(W,G,U,ie+1)}return N(T,ae,se)}function k(T,G,U){return G.length?E(T,G,U,0):U}function S(T,G,U){var ie=T==null?void 0:T[G],se=U(ie);return N(T,G,se)}function R(T,G,U){var ie=A(T,G),se=U(ie);return k(T,G,se)}function M(T,G,U,ie,se,ae){for(var W=arguments.length,ee=Array(W>6?W-6:0),_=6;_<W;_++)ee[_-6]=arguments[_];return ee.length?i.call.apply(i,[null,!1,!1,T,G,U,ie,se,ae].concat(ee)):i(!1,!1,T,G,U,ie,se,ae)}function B(T,G,U,ie,se,ae){for(var W=arguments.length,ee=Array(W>6?W-6:0),_=6;_<W;_++)ee[_-6]=arguments[_];return ee.length?i.call.apply(i,[null,!1,!0,T,G,U,ie,se,ae].concat(ee)):i(!1,!0,T,G,U,ie,se,ae)}function I(T,G,U,ie,se,ae,W){var ee=A(T,G);ee==null&&(ee={});for(var _=void 0,re=arguments.length,fe=Array(re>7?re-7:0),pe=7;pe<re;pe++)fe[pe-7]=arguments[pe];return fe.length?_=i.call.apply(i,[null,!1,!1,ee,U,ie,se,ae,W].concat(fe)):_=i(!1,!1,ee,U,ie,se,ae,W),k(T,G,_)}function Y(T,G){for(var U=Array.isArray(G)?G:[G],ie=!1,se=0;se<U.length;se++)if(f.call(T,U[se])){ie=!0;break}if(!ie)return T;for(var ae={},W=u(T),ee=0;ee<W.length;ee++){var _=W[ee];U.indexOf(_)>=0||(ae[_]=T[_])}return ae}function J(T,G,U,ie,se,ae){for(var W=arguments.length,ee=Array(W>6?W-6:0),_=6;_<W;_++)ee[_-6]=arguments[_];return ee.length?i.call.apply(i,[null,!0,!1,T,G,U,ie,se,ae].concat(ee)):i(!0,!1,T,G,U,ie,se,ae)}var D={clone:s,addLast:p,addFirst:y,removeLast:l,removeFirst:m,insert:c,removeAt:w,replaceAt:x,getIn:A,set:N,setIn:k,update:S,updateIn:R,merge:M,mergeDeep:B,mergeIn:I,omit:Y,addDefaults:J};o.default=D}).call(this,t("_process"))},{_process:133}],178:[function(t,d,o){(function(v){var h=/^\s+/,g=/\s+$/,b=0,u=v.round,f=v.min,s=v.max,i=v.random;function n(V,z){if(V=V||"",z=z||{},V instanceof n)return V;if(!(this instanceof n))return new n(V,z);var F=p(V);this._originalInput=V,this._r=F.r,this._g=F.g,this._b=F.b,this._a=F.a,this._roundA=u(100*this._a)/100,this._format=z.format||F.format,this._gradientType=z.gradientType,this._r<1&&(this._r=u(this._r)),this._g<1&&(this._g=u(this._g)),this._b<1&&(this._b=u(this._b)),this._ok=F.ok,this._tc_id=b++}n.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var V=this.toRgb();return(V.r*299+V.g*587+V.b*114)/1e3},getLuminance:function(){var V=this.toRgb(),z,F,q,H,O,C;return z=V.r/255,F=V.g/255,q=V.b/255,z<=.03928?H=z/12.92:H=v.pow((z+.055)/1.055,2.4),F<=.03928?O=F/12.92:O=v.pow((F+.055)/1.055,2.4),q<=.03928?C=q/12.92:C=v.pow((q+.055)/1.055,2.4),.2126*H+.7152*O+.0722*C},setAlpha:function(V){return this._a=W(V),this._roundA=u(100*this._a)/100,this},toHsv:function(){var V=c(this._r,this._g,this._b);return{h:V.h*360,s:V.s,v:V.v,a:this._a}},toHsvString:function(){var V=c(this._r,this._g,this._b),z=u(V.h*360),F=u(V.s*100),q=u(V.v*100);return this._a==1?"hsv("+z+", "+F+"%, "+q+"%)":"hsva("+z+", "+F+"%, "+q+"%, "+this._roundA+")"},toHsl:function(){var V=l(this._r,this._g,this._b);return{h:V.h*360,s:V.s,l:V.l,a:this._a}},toHslString:function(){var V=l(this._r,this._g,this._b),z=u(V.h*360),F=u(V.s*100),q=u(V.l*100);return this._a==1?"hsl("+z+", "+F+"%, "+q+"%)":"hsla("+z+", "+F+"%, "+q+"%, "+this._roundA+")"},toHex:function(V){return x(this._r,this._g,this._b,V)},toHexString:function(V){return"#"+this.toHex(V)},toHex8:function(V){return A(this._r,this._g,this._b,this._a,V)},toHex8String:function(V){return"#"+this.toHex8(V)},toRgb:function(){return{r:u(this._r),g:u(this._g),b:u(this._b),a:this._a}},toRgbString:function(){return this._a==1?"rgb("+u(this._r)+", "+u(this._g)+", "+u(this._b)+")":"rgba("+u(this._r)+", "+u(this._g)+", "+u(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:u(ee(this._r,255)*100)+"%",g:u(ee(this._g,255)*100)+"%",b:u(ee(this._b,255)*100)+"%",a:this._a}},toPercentageRgbString:function(){return this._a==1?"rgb("+u(ee(this._r,255)*100)+"%, "+u(ee(this._g,255)*100)+"%, "+u(ee(this._b,255)*100)+"%)":"rgba("+u(ee(this._r,255)*100)+"%, "+u(ee(this._g,255)*100)+"%, "+u(ee(this._b,255)*100)+"%, "+this._roundA+")"},toName:function(){return this._a===0?"transparent":this._a<1?!1:se[x(this._r,this._g,this._b,!0)]||!1},toFilter:function(V){var z="#"+N(this._r,this._g,this._b,this._a),F=z,q=this._gradientType?"GradientType = 1, ":"";if(V){var H=n(V);F="#"+N(H._r,H._g,H._b,H._a)}return"progid:DXImageTransform.Microsoft.gradient("+q+"startColorstr="+z+",endColorstr="+F+")"},toString:function(V){var z=!!V;V=V||this._format;var F=!1,q=this._a<1&&this._a>=0,H=!z&&q&&(V==="hex"||V==="hex6"||V==="hex3"||V==="hex4"||V==="hex8"||V==="name");return H?V==="name"&&this._a===0?this.toName():this.toRgbString():(V==="rgb"&&(F=this.toRgbString()),V==="prgb"&&(F=this.toPercentageRgbString()),(V==="hex"||V==="hex6")&&(F=this.toHexString()),V==="hex3"&&(F=this.toHexString(!0)),V==="hex4"&&(F=this.toHex8String(!0)),V==="hex8"&&(F=this.toHex8String()),V==="name"&&(F=this.toName()),V==="hsl"&&(F=this.toHslString()),V==="hsv"&&(F=this.toHsvString()),F||this.toHexString())},clone:function(){return n(this.toString())},_applyModification:function(V,z){var F=V.apply(null,[this].concat([].slice.call(z)));return this._r=F._r,this._g=F._g,this._b=F._b,this.setAlpha(F._a),this},lighten:function(){return this._applyModification(R,arguments)},brighten:function(){return this._applyModification(M,arguments)},darken:function(){return this._applyModification(B,arguments)},desaturate:function(){return this._applyModification(E,arguments)},saturate:function(){return this._applyModification(k,arguments)},greyscale:function(){return this._applyModification(S,arguments)},spin:function(){return this._applyModification(I,arguments)},_applyCombination:function(V,z){return V.apply(null,[this].concat([].slice.call(z)))},analogous:function(){return this._applyCombination(G,arguments)},complement:function(){return this._applyCombination(Y,arguments)},monochromatic:function(){return this._applyCombination(U,arguments)},splitcomplement:function(){return this._applyCombination(T,arguments)},triad:function(){return this._applyCombination(J,arguments)},tetrad:function(){return this._applyCombination(D,arguments)}},n.fromRatio=function(V,z){if(typeof V=="object"){var F={};for(var q in V)V.hasOwnProperty(q)&&(q==="a"?F[q]=V[q]:F[q]=oe(V[q]));V=F}return n(V,z)};function p(V){var z={r:0,g:0,b:0},F=1,q=null,H=null,O=null,C=!1,Q=!1;return typeof V=="string"&&(V=$(V)),typeof V=="object"&&(L(V.r)&&L(V.g)&&L(V.b)?(z=y(V.r,V.g,V.b),C=!0,Q=String(V.r).substr(-1)==="%"?"prgb":"rgb"):L(V.h)&&L(V.s)&&L(V.v)?(q=oe(V.s),H=oe(V.v),z=w(V.h,q,H),C=!0,Q="hsv"):L(V.h)&&L(V.s)&&L(V.l)&&(q=oe(V.s),O=oe(V.l),z=m(V.h,q,O),C=!0,Q="hsl"),V.hasOwnProperty("a")&&(F=V.a)),F=W(F),{ok:C,format:V.format||Q,r:f(255,s(z.r,0)),g:f(255,s(z.g,0)),b:f(255,s(z.b,0)),a:F}}function y(V,z,F){return{r:ee(V,255)*255,g:ee(z,255)*255,b:ee(F,255)*255}}function l(V,z,F){V=ee(V,255),z=ee(z,255),F=ee(F,255);var q=s(V,z,F),H=f(V,z,F),O,C,Q=(q+H)/2;if(q==H)O=C=0;else{var le=q-H;switch(C=Q>.5?le/(2-q-H):le/(q+H),q){case V:O=(z-F)/le+(z<F?6:0);break;case z:O=(F-V)/le+2;break;case F:O=(V-z)/le+4;break}O/=6}return{h:O,s:C,l:Q}}function m(V,z,F){var q,H,O;V=ee(V,360),z=ee(z,100),F=ee(F,100);function C(ge,ye,Ee){return Ee<0&&(Ee+=1),Ee>1&&(Ee-=1),Ee<1/6?ge+(ye-ge)*6*Ee:Ee<1/2?ye:Ee<2/3?ge+(ye-ge)*(2/3-Ee)*6:ge}if(z===0)q=H=O=F;else{var Q=F<.5?F*(1+z):F+z-F*z,le=2*F-Q;q=C(le,Q,V+1/3),H=C(le,Q,V),O=C(le,Q,V-1/3)}return{r:q*255,g:H*255,b:O*255}}function c(V,z,F){V=ee(V,255),z=ee(z,255),F=ee(F,255);var q=s(V,z,F),H=f(V,z,F),O,C,Q=q,le=q-H;if(C=q===0?0:le/q,q==H)O=0;else{switch(q){case V:O=(z-F)/le+(z<F?6:0);break;case z:O=(F-V)/le+2;break;case F:O=(V-z)/le+4;break}O/=6}return{h:O,s:C,v:Q}}function w(V,z,F){V=ee(V,360)*6,z=ee(z,100),F=ee(F,100);var q=v.floor(V),H=V-q,O=F*(1-z),C=F*(1-H*z),Q=F*(1-(1-H)*z),le=q%6,ge=[F,C,O,O,Q,F][le],ye=[Q,F,F,C,O,O][le],Ee=[O,O,Q,F,F,C][le];return{r:ge*255,g:ye*255,b:Ee*255}}function x(V,z,F,q){var H=[he(u(V).toString(16)),he(u(z).toString(16)),he(u(F).toString(16))];return q&&H[0].charAt(0)==H[0].charAt(1)&&H[1].charAt(0)==H[1].charAt(1)&&H[2].charAt(0)==H[2].charAt(1)?H[0].charAt(0)+H[1].charAt(0)+H[2].charAt(0):H.join("")}function A(V,z,F,q,H){var O=[he(u(V).toString(16)),he(u(z).toString(16)),he(u(F).toString(16)),he(ce(q))];return H&&O[0].charAt(0)==O[0].charAt(1)&&O[1].charAt(0)==O[1].charAt(1)&&O[2].charAt(0)==O[2].charAt(1)&&O[3].charAt(0)==O[3].charAt(1)?O[0].charAt(0)+O[1].charAt(0)+O[2].charAt(0)+O[3].charAt(0):O.join("")}function N(V,z,F,q){var H=[he(ce(q)),he(u(V).toString(16)),he(u(z).toString(16)),he(u(F).toString(16))];return H.join("")}n.equals=function(V,z){return!V||!z?!1:n(V).toRgbString()==n(z).toRgbString()},n.random=function(){return n.fromRatio({r:i(),g:i(),b:i()})};function E(V,z){z=z===0?0:z||10;var F=n(V).toHsl();return F.s-=z/100,F.s=_(F.s),n(F)}function k(V,z){z=z===0?0:z||10;var F=n(V).toHsl();return F.s+=z/100,F.s=_(F.s),n(F)}function S(V){return n(V).desaturate(100)}function R(V,z){z=z===0?0:z||10;var F=n(V).toHsl();return F.l+=z/100,F.l=_(F.l),n(F)}function M(V,z){z=z===0?0:z||10;var F=n(V).toRgb();return F.r=s(0,f(255,F.r-u(255*-(z/100)))),F.g=s(0,f(255,F.g-u(255*-(z/100)))),F.b=s(0,f(255,F.b-u(255*-(z/100)))),n(F)}function B(V,z){z=z===0?0:z||10;var F=n(V).toHsl();return F.l-=z/100,F.l=_(F.l),n(F)}function I(V,z){var F=n(V).toHsl(),q=(F.h+z)%360;return F.h=q<0?360+q:q,n(F)}function Y(V){var z=n(V).toHsl();return z.h=(z.h+180)%360,n(z)}function J(V){var z=n(V).toHsl(),F=z.h;return[n(V),n({h:(F+120)%360,s:z.s,l:z.l}),n({h:(F+240)%360,s:z.s,l:z.l})]}function D(V){var z=n(V).toHsl(),F=z.h;return[n(V),n({h:(F+90)%360,s:z.s,l:z.l}),n({h:(F+180)%360,s:z.s,l:z.l}),n({h:(F+270)%360,s:z.s,l:z.l})]}function T(V){var z=n(V).toHsl(),F=z.h;return[n(V),n({h:(F+72)%360,s:z.s,l:z.l}),n({h:(F+216)%360,s:z.s,l:z.l})]}function G(V,z,F){z=z||6,F=F||30;var q=n(V).toHsl(),H=360/F,O=[n(V)];for(q.h=(q.h-(H*z>>1)+720)%360;--z;)q.h=(q.h+H)%360,O.push(n(q));return O}function U(V,z){z=z||6;for(var F=n(V).toHsv(),q=F.h,H=F.s,O=F.v,C=[],Q=1/z;z--;)C.push(n({h:q,s:H,v:O})),O=(O+Q)%1;return C}n.mix=function(V,z,F){F=F===0?0:F||50;var q=n(V).toRgb(),H=n(z).toRgb(),O=F/100,C={r:(H.r-q.r)*O+q.r,g:(H.g-q.g)*O+q.g,b:(H.b-q.b)*O+q.b,a:(H.a-q.a)*O+q.a};return n(C)},n.readability=function(V,z){var F=n(V),q=n(z);return(v.max(F.getLuminance(),q.getLuminance())+.05)/(v.min(F.getLuminance(),q.getLuminance())+.05)},n.isReadable=function(V,z,F){var q=n.readability(V,z),H,O;switch(O=!1,H=te(F),H.level+H.size){case"AAsmall":case"AAAlarge":O=q>=4.5;break;case"AAlarge":O=q>=3;break;case"AAAsmall":O=q>=7;break}return O},n.mostReadable=function(V,z,F){var q=null,H=0,O,C,Q,le;F=F||{},C=F.includeFallbackColors,Q=F.level,le=F.size;for(var ge=0;ge<z.length;ge++)O=n.readability(V,z[ge]),O>H&&(H=O,q=n(z[ge]));return n.isReadable(V,q,{level:Q,size:le})||!C?q:(F.includeFallbackColors=!1,n.mostReadable(V,["#fff","#000"],F))};var ie=n.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},se=n.hexNames=ae(ie);function ae(V){var z={};for(var F in V)V.hasOwnProperty(F)&&(z[V[F]]=F);return z}function W(V){return V=parseFloat(V),(isNaN(V)||V<0||V>1)&&(V=1),V}function ee(V,z){fe(V)&&(V="100%");var F=pe(V);return V=f(z,s(0,parseFloat(V))),F&&(V=parseInt(V*z,10)/100),v.abs(V-z)<1e-6?1:V%z/parseFloat(z)}function _(V){return f(1,s(0,V))}function re(V){return parseInt(V,16)}function fe(V){return typeof V=="string"&&V.indexOf(".")!=-1&&parseFloat(V)===1}function pe(V){return typeof V=="string"&&V.indexOf("%")!=-1}function he(V){return V.length==1?"0"+V:""+V}function oe(V){return V<=1&&(V=V*100+"%"),V}function ce(V){return v.round(parseFloat(V)*255).toString(16)}function X(V){return re(V)/255}var K=function(){var V="[-\\+]?\\d+%?",z="[-\\+]?\\d*\\.\\d+%?",F="(?:"+z+")|(?:"+V+")",q="[\\s|\\(]+("+F+")[,|\\s]+("+F+")[,|\\s]+("+F+")\\s*\\)?",H="[\\s|\\(]+("+F+")[,|\\s]+("+F+")[,|\\s]+("+F+")[,|\\s]+("+F+")\\s*\\)?";return{CSS_UNIT:new RegExp(F),rgb:new RegExp("rgb"+q),rgba:new RegExp("rgba"+H),hsl:new RegExp("hsl"+q),hsla:new RegExp("hsla"+H),hsv:new RegExp("hsv"+q),hsva:new RegExp("hsva"+H),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();function L(V){return!!K.CSS_UNIT.exec(V)}function $(V){V=V.replace(h,"").replace(g,"").toLowerCase();var z=!1;if(ie[V])V=ie[V],z=!0;else if(V=="transparent")return{r:0,g:0,b:0,a:0,format:"name"};var F;return(F=K.rgb.exec(V))?{r:F[1],g:F[2],b:F[3]}:(F=K.rgba.exec(V))?{r:F[1],g:F[2],b:F[3],a:F[4]}:(F=K.hsl.exec(V))?{h:F[1],s:F[2],l:F[3]}:(F=K.hsla.exec(V))?{h:F[1],s:F[2],l:F[3],a:F[4]}:(F=K.hsv.exec(V))?{h:F[1],s:F[2],v:F[3]}:(F=K.hsva.exec(V))?{h:F[1],s:F[2],v:F[3],a:F[4]}:(F=K.hex8.exec(V))?{r:re(F[1]),g:re(F[2]),b:re(F[3]),a:X(F[4]),format:z?"name":"hex8"}:(F=K.hex6.exec(V))?{r:re(F[1]),g:re(F[2]),b:re(F[3]),format:z?"name":"hex"}:(F=K.hex4.exec(V))?{r:re(F[1]+""+F[1]),g:re(F[2]+""+F[2]),b:re(F[3]+""+F[3]),a:X(F[4]+""+F[4]),format:z?"name":"hex8"}:(F=K.hex3.exec(V))?{r:re(F[1]+""+F[1]),g:re(F[2]+""+F[2]),b:re(F[3]+""+F[3]),format:z?"name":"hex"}:!1}function te(V){var z,F;return V=V||{level:"AA",size:"small"},z=(V.level||"AA").toUpperCase(),F=(V.size||"small").toLowerCase(),z!=="AA"&&z!=="AAA"&&(z="AA"),F!=="small"&&F!=="large"&&(F="small"),{level:z,size:F}}typeof d!="undefined"&&d.exports?d.exports=n:a.tinycolor=n})(Math)},{}],179:[function(t,d,o){o=d.exports=v;function v(h){return h.replace(/^\s*|\s*$/g,"")}o.left=function(h){return h.replace(/^\s*/,"")},o.right=function(h){return h.replace(/\s*$/,"")}},{}],180:[function(t,d,o){var v=t("punycode"),h=t("./util");o.parse=E,o.resolve=S,o.resolveObject=R,o.format=k,o.Url=g;function g(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}var b=/^([a-z0-9.+-]+:)/i,u=/:[0-9]*$/,f=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,s=["<",">",'"',"`"," ","\r",`
`,"	"],i=["{","}","|","\\","^","`"].concat(s),n=["'"].concat(i),p=["%","/","?",";","#"].concat(n),y=["/","?","#"],l=255,m=/^[+a-z0-9A-Z_-]{0,63}$/,c=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,w={javascript:!0,"javascript:":!0},x={javascript:!0,"javascript:":!0},A={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},N=t("querystring");function E(M,B,I){if(M&&h.isObject(M)&&M instanceof g)return M;var Y=new g;return Y.parse(M,B,I),Y}g.prototype.parse=function(M,B,I){if(!h.isString(M))throw new TypeError("Parameter 'url' must be a string, not "+typeof M);var Y=M.indexOf("?"),J=Y!==-1&&Y<M.indexOf("#")?"?":"#",D=M.split(J),T=/\\/g;D[0]=D[0].replace(T,"/"),M=D.join(J);var G=M;if(G=G.trim(),!I&&M.split("#").length===1){var U=f.exec(G);if(U)return this.path=G,this.href=G,this.pathname=U[1],U[2]?(this.search=U[2],B?this.query=N.parse(this.search.substr(1)):this.query=this.search.substr(1)):B&&(this.search="",this.query={}),this}var ie=b.exec(G);if(ie){ie=ie[0];var se=ie.toLowerCase();this.protocol=se,G=G.substr(ie.length)}if(I||ie||G.match(/^\/\/[^@\/]+@[^@\/]+/)){var ae=G.substr(0,2)==="//";ae&&!(ie&&x[ie])&&(G=G.substr(2),this.slashes=!0)}if(!x[ie]&&(ae||ie&&!A[ie])){for(var W=-1,ee=0;ee<y.length;ee++){var _=G.indexOf(y[ee]);_!==-1&&(W===-1||_<W)&&(W=_)}var re,fe;W===-1?fe=G.lastIndexOf("@"):fe=G.lastIndexOf("@",W),fe!==-1&&(re=G.slice(0,fe),G=G.slice(fe+1),this.auth=decodeURIComponent(re)),W=-1;for(var ee=0;ee<p.length;ee++){var _=G.indexOf(p[ee]);_!==-1&&(W===-1||_<W)&&(W=_)}W===-1&&(W=G.length),this.host=G.slice(0,W),G=G.slice(W),this.parseHost(),this.hostname=this.hostname||"";var pe=this.hostname[0]==="["&&this.hostname[this.hostname.length-1]==="]";if(!pe)for(var he=this.hostname.split(/\./),ee=0,oe=he.length;ee<oe;ee++){var ce=he[ee];if(!!ce&&!ce.match(m)){for(var X="",K=0,L=ce.length;K<L;K++)ce.charCodeAt(K)>127?X+="x":X+=ce[K];if(!X.match(m)){var $=he.slice(0,ee),te=he.slice(ee+1),V=ce.match(c);V&&($.push(V[1]),te.unshift(V[2])),te.length&&(G="/"+te.join(".")+G),this.hostname=$.join(".");break}}}this.hostname.length>l?this.hostname="":this.hostname=this.hostname.toLowerCase(),pe||(this.hostname=v.toASCII(this.hostname));var z=this.port?":"+this.port:"",F=this.hostname||"";this.host=F+z,this.href+=this.host,pe&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),G[0]!=="/"&&(G="/"+G))}if(!w[se])for(var ee=0,oe=n.length;ee<oe;ee++){var q=n[ee];if(G.indexOf(q)!==-1){var H=encodeURIComponent(q);H===q&&(H=escape(q)),G=G.split(q).join(H)}}var O=G.indexOf("#");O!==-1&&(this.hash=G.substr(O),G=G.slice(0,O));var C=G.indexOf("?");if(C!==-1?(this.search=G.substr(C),this.query=G.substr(C+1),B&&(this.query=N.parse(this.query)),G=G.slice(0,C)):B&&(this.search="",this.query={}),G&&(this.pathname=G),A[se]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){var z=this.pathname||"",Q=this.search||"";this.path=z+Q}return this.href=this.format(),this};function k(M){return h.isString(M)&&(M=E(M)),M instanceof g?M.format():g.prototype.format.call(M)}g.prototype.format=function(){var M=this.auth||"";M&&(M=encodeURIComponent(M),M=M.replace(/%3A/i,":"),M+="@");var B=this.protocol||"",I=this.pathname||"",Y=this.hash||"",J=!1,D="";this.host?J=M+this.host:this.hostname&&(J=M+(this.hostname.indexOf(":")===-1?this.hostname:"["+this.hostname+"]"),this.port&&(J+=":"+this.port)),this.query&&h.isObject(this.query)&&Object.keys(this.query).length&&(D=N.stringify(this.query));var T=this.search||D&&"?"+D||"";return B&&B.substr(-1)!==":"&&(B+=":"),this.slashes||(!B||A[B])&&J!==!1?(J="//"+(J||""),I&&I.charAt(0)!=="/"&&(I="/"+I)):J||(J=""),Y&&Y.charAt(0)!=="#"&&(Y="#"+Y),T&&T.charAt(0)!=="?"&&(T="?"+T),I=I.replace(/[?#]/g,function(G){return encodeURIComponent(G)}),T=T.replace("#","%23"),B+J+I+T+Y};function S(M,B){return E(M,!1,!0).resolve(B)}g.prototype.resolve=function(M){return this.resolveObject(E(M,!1,!0)).format()};function R(M,B){return M?E(M,!1,!0).resolveObject(B):B}g.prototype.resolveObject=function(M){if(h.isString(M)){var B=new g;B.parse(M,!1,!0),M=B}for(var I=new g,Y=Object.keys(this),J=0;J<Y.length;J++){var D=Y[J];I[D]=this[D]}if(I.hash=M.hash,M.href==="")return I.href=I.format(),I;if(M.slashes&&!M.protocol){for(var T=Object.keys(M),G=0;G<T.length;G++){var U=T[G];U!=="protocol"&&(I[U]=M[U])}return A[I.protocol]&&I.hostname&&!I.pathname&&(I.path=I.pathname="/"),I.href=I.format(),I}if(M.protocol&&M.protocol!==I.protocol){if(!A[M.protocol]){for(var ie=Object.keys(M),se=0;se<ie.length;se++){var ae=ie[se];I[ae]=M[ae]}return I.href=I.format(),I}if(I.protocol=M.protocol,!M.host&&!x[M.protocol]){for(var oe=(M.pathname||"").split("/");oe.length&&!(M.host=oe.shift()););M.host||(M.host=""),M.hostname||(M.hostname=""),oe[0]!==""&&oe.unshift(""),oe.length<2&&oe.unshift(""),I.pathname=oe.join("/")}else I.pathname=M.pathname;if(I.search=M.search,I.query=M.query,I.host=M.host||"",I.auth=M.auth,I.hostname=M.hostname||M.host,I.port=M.port,I.pathname||I.search){var W=I.pathname||"",ee=I.search||"";I.path=W+ee}return I.slashes=I.slashes||M.slashes,I.href=I.format(),I}var _=I.pathname&&I.pathname.charAt(0)==="/",re=M.host||M.pathname&&M.pathname.charAt(0)==="/",fe=re||_||I.host&&M.pathname,pe=fe,he=I.pathname&&I.pathname.split("/")||[],oe=M.pathname&&M.pathname.split("/")||[],ce=I.protocol&&!A[I.protocol];if(ce&&(I.hostname="",I.port=null,I.host&&(he[0]===""?he[0]=I.host:he.unshift(I.host)),I.host="",M.protocol&&(M.hostname=null,M.port=null,M.host&&(oe[0]===""?oe[0]=M.host:oe.unshift(M.host)),M.host=null),fe=fe&&(oe[0]===""||he[0]==="")),re)I.host=M.host||M.host===""?M.host:I.host,I.hostname=M.hostname||M.hostname===""?M.hostname:I.hostname,I.search=M.search,I.query=M.query,he=oe;else if(oe.length)he||(he=[]),he.pop(),he=he.concat(oe),I.search=M.search,I.query=M.query;else if(!h.isNullOrUndefined(M.search)){if(ce){I.hostname=I.host=he.shift();var X=I.host&&I.host.indexOf("@")>0?I.host.split("@"):!1;X&&(I.auth=X.shift(),I.host=I.hostname=X.shift())}return I.search=M.search,I.query=M.query,(!h.isNull(I.pathname)||!h.isNull(I.search))&&(I.path=(I.pathname?I.pathname:"")+(I.search?I.search:"")),I.href=I.format(),I}if(!he.length)return I.pathname=null,I.search?I.path="/"+I.search:I.path=null,I.href=I.format(),I;for(var K=he.slice(-1)[0],L=(I.host||M.host||he.length>1)&&(K==="."||K==="..")||K==="",$=0,te=he.length;te>=0;te--)K=he[te],K==="."?he.splice(te,1):K===".."?(he.splice(te,1),$++):$&&(he.splice(te,1),$--);if(!fe&&!pe)for(;$--;$)he.unshift("..");fe&&he[0]!==""&&(!he[0]||he[0].charAt(0)!=="/")&&he.unshift(""),L&&he.join("/").substr(-1)!=="/"&&he.push("");var V=he[0]===""||he[0]&&he[0].charAt(0)==="/";if(ce){I.hostname=I.host=V?"":he.length?he.shift():"";var X=I.host&&I.host.indexOf("@")>0?I.host.split("@"):!1;X&&(I.auth=X.shift(),I.host=I.hostname=X.shift())}return fe=fe||I.host&&he.length,fe&&!V&&he.unshift(""),he.length?I.pathname=he.join("/"):(I.pathname=null,I.path=null),(!h.isNull(I.pathname)||!h.isNull(I.search))&&(I.path=(I.pathname?I.pathname:"")+(I.search?I.search:"")),I.auth=M.auth||I.auth,I.slashes=I.slashes||M.slashes,I.href=I.format(),I},g.prototype.parseHost=function(){var M=this.host,B=u.exec(M);B&&(B=B[0],B!==":"&&(this.port=B.substr(1)),M=M.substr(0,M.length-B.length)),M&&(this.hostname=M)}},{"./util":181,punycode:134,querystring:137}],181:[function(t,d,o){d.exports={isString:function(v){return typeof v=="string"},isObject:function(v){return typeof v=="object"&&v!==null},isNull:function(v){return v===null},isNullOrUndefined:function(v){return v==null}}},{}],182:[function(t,d,o){(function(v){(function(){var h={};typeof d=="object"?d.exports=h:self.UTIF=h;var g;typeof t=="function"?g=t("pako"):g=self.pako;function b(){typeof v=="undefined"&&console.log.apply(console,arguments)}(function(u,f){(function(){var s=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(p){return typeof p}:function(p){return p&&typeof Symbol=="function"&&p.constructor===Symbol&&p!==Symbol.prototype?"symbol":typeof p},i=function(){function p(y){this.message="JPEG error: "+y}return p.prototype=Error(),p.prototype.name="JpegError",p.constructor=p}(),n=function(){function p(y,l){this.message=y,this.g=l}return p.prototype=Error(),p.prototype.name="DNLMarkerError",p.constructor=p}();(function(){function p(){this.M=null,this.B=-1}function y(x,A){for(var N=0,E=[],k,S,R=16;0<R&&!x[R-1];)R--;E.push({children:[],index:0});var M=E[0],B;for(k=0;k<R;k++){for(S=0;S<x[k];S++){for(M=E.pop(),M.children[M.index]=A[N];0<M.index;)M=E.pop();for(M.index++,E.push(M);E.length<=k;)E.push(B={children:[],index:0}),M.children[M.index]=B.children,M=B;N++}k+1<R&&(E.push(B={children:[],index:0}),M.children[M.index]=B.children,M=B)}return E[0].children}function l(x,A,N,E,k,S,R,M,B){function I(){if(0<re)return re--,_>>re&1;if(_=x[A++],_===255){var O=x[A++];if(O){if(O===220&&ae){A+=2;var C=x[A++]<<8|x[A++];if(0<C&&C!==N.g)throw new n("Found DNL marker (0xFFDC) while parsing scan data",C)}throw new i("unexpected marker "+(_<<8|O).toString(16))}}return re=7,_>>>7}function Y(O){for(;;){if(O=O[I()],typeof O=="number")return O;if((typeof O=="undefined"?"undefined":s(O))!=="object")throw new i("invalid huffman sequence")}}function J(O){for(var C=0;0<O;)C=C<<1|I(),O--;return C}function D(O){if(O===1)return I()===1?1:-1;var C=J(O);return C>=1<<O-1?C:C+(-1<<O)+1}function T(O,C){var Q=Y(O.D);for(Q=Q===0?0:D(Q),O.a[C]=O.m+=Q,Q=1;64>Q;){var le=Y(O.o),ge=le&15;if(le>>=4,ge===0){if(15>le)break;Q+=16}else Q+=le,O.a[C+w[Q]]=D(ge),Q++}}function G(O,C){var Q=Y(O.D);Q=Q===0?0:D(Q)<<B,O.a[C]=O.m+=Q}function U(O,C){O.a[C]|=I()<<B}function ie(O,C){if(0<fe)fe--;else for(var Q=S;Q<=R;){var le=Y(O.o),ge=le&15;if(le>>=4,ge===0){if(15>le){fe=J(le)+(1<<le)-1;break}Q+=16}else Q+=le,O.a[C+w[Q]]=D(ge)*(1<<B),Q++}}function se(O,C){for(var Q=S,le=0,ge;Q<=R;){ge=C+w[Q];var ye=0>O.a[ge]?-1:1;switch(pe){case 0:if(le=Y(O.o),ge=le&15,le>>=4,ge===0)15>le?(fe=J(le)+(1<<le),pe=4):(le=16,pe=1);else{if(ge!==1)throw new i("invalid ACn encoding");he=D(ge),pe=le?2:3}continue;case 1:case 2:O.a[ge]?O.a[ge]+=ye*(I()<<B):(le--,le===0&&(pe=pe===2?3:0));break;case 3:O.a[ge]?O.a[ge]+=ye*(I()<<B):(O.a[ge]=he<<B,pe=0);break;case 4:O.a[ge]&&(O.a[ge]+=ye*(I()<<B))}Q++}pe===4&&(fe--,fe===0&&(pe=0))}for(var ae=9<arguments.length&&arguments[9]!==void 0?arguments[9]:!1,W=N.P,ee=A,_=0,re=0,fe=0,pe=0,he,oe=E.length,ce,X,K,L,$=N.S?S===0?M===0?G:U:M===0?ie:se:T,te=0,V=oe===1?E[0].c*E[0].l:W*N.O,z,F;te<V;){var q=k?Math.min(V-te,k):V;for(ce=0;ce<oe;ce++)E[ce].m=0;if(fe=0,oe===1){var H=E[0];for(L=0;L<q;L++)$(H,64*((H.c+1)*(te/H.c|0)+te%H.c)),te++}else for(L=0;L<q;L++){for(ce=0;ce<oe;ce++)for(H=E[ce],z=H.h,F=H.j,X=0;X<F;X++)for(K=0;K<z;K++)$(H,64*((H.c+1)*((te/W|0)*H.j+X)+(te%W*H.h+K)));te++}if(re=0,(H=c(x,A))&&H.f&&((0,_util.warn)("decodeScan - unexpected MCU data, current marker is: "+H.f),A=H.offset),H=H&&H.F,!H||65280>=H)throw new i("marker was not found");if(65488<=H&&65495>=H)A+=2;else break}return(H=c(x,A))&&H.f&&((0,_util.warn)("decodeScan - unexpected Scan data, current marker is: "+H.f),A=H.offset),A-ee}function m(x,A){for(var N=A.c,E=A.l,k=new Int16Array(64),S=0;S<E;S++)for(var R=0;R<N;R++){var M=64*((A.c+1)*S+R),B=k,I=A.G,Y=A.a;if(!I)throw new i("missing required Quantization Table.");for(var J=0;64>J;J+=8){var D=Y[M+J],T=Y[M+J+1],G=Y[M+J+2],U=Y[M+J+3],ie=Y[M+J+4],se=Y[M+J+5],ae=Y[M+J+6],W=Y[M+J+7];if(D*=I[J],(T|G|U|ie|se|ae|W)===0)D=5793*D+512>>10,B[J]=D,B[J+1]=D,B[J+2]=D,B[J+3]=D,B[J+4]=D,B[J+5]=D,B[J+6]=D,B[J+7]=D;else{T*=I[J+1],G*=I[J+2],U*=I[J+3],ie*=I[J+4],se*=I[J+5],ae*=I[J+6],W*=I[J+7];var ee=5793*D+128>>8,_=5793*ie+128>>8,re=G,fe=ae;ie=2896*(T-W)+128>>8,W=2896*(T+W)+128>>8,U<<=4,se<<=4,ee=ee+_+1>>1,_=ee-_,D=3784*re+1567*fe+128>>8,re=1567*re-3784*fe+128>>8,fe=D,ie=ie+se+1>>1,se=ie-se,W=W+U+1>>1,U=W-U,ee=ee+fe+1>>1,fe=ee-fe,_=_+re+1>>1,re=_-re,D=2276*ie+3406*W+2048>>12,ie=3406*ie-2276*W+2048>>12,W=D,D=799*U+4017*se+2048>>12,U=4017*U-799*se+2048>>12,se=D,B[J]=ee+W,B[J+7]=ee-W,B[J+1]=_+se,B[J+6]=_-se,B[J+2]=re+U,B[J+5]=re-U,B[J+3]=fe+ie,B[J+4]=fe-ie}}for(I=0;8>I;++I)D=B[I],T=B[I+8],G=B[I+16],U=B[I+24],ie=B[I+32],se=B[I+40],ae=B[I+48],W=B[I+56],(T|G|U|ie|se|ae|W)===0?(D=5793*D+8192>>14,D=-2040>D?0:2024<=D?255:D+2056>>4,Y[M+I]=D,Y[M+I+8]=D,Y[M+I+16]=D,Y[M+I+24]=D,Y[M+I+32]=D,Y[M+I+40]=D,Y[M+I+48]=D,Y[M+I+56]=D):(ee=5793*D+2048>>12,_=5793*ie+2048>>12,re=G,fe=ae,ie=2896*(T-W)+2048>>12,W=2896*(T+W)+2048>>12,ee=(ee+_+1>>1)+4112,_=ee-_,D=3784*re+1567*fe+2048>>12,re=1567*re-3784*fe+2048>>12,fe=D,ie=ie+se+1>>1,se=ie-se,W=W+U+1>>1,U=W-U,ee=ee+fe+1>>1,fe=ee-fe,_=_+re+1>>1,re=_-re,D=2276*ie+3406*W+2048>>12,ie=3406*ie-2276*W+2048>>12,W=D,D=799*U+4017*se+2048>>12,U=4017*U-799*se+2048>>12,se=D,D=ee+W,W=ee-W,T=_+se,ae=_-se,G=re+U,se=re-U,U=fe+ie,ie=fe-ie,D=16>D?0:4080<=D?255:D>>4,T=16>T?0:4080<=T?255:T>>4,G=16>G?0:4080<=G?255:G>>4,U=16>U?0:4080<=U?255:U>>4,ie=16>ie?0:4080<=ie?255:ie>>4,se=16>se?0:4080<=se?255:se>>4,ae=16>ae?0:4080<=ae?255:ae>>4,W=16>W?0:4080<=W?255:W>>4,Y[M+I]=D,Y[M+I+8]=T,Y[M+I+16]=G,Y[M+I+24]=U,Y[M+I+32]=ie,Y[M+I+40]=se,Y[M+I+48]=ae,Y[M+I+56]=W)}return A.a}function c(x,A){var N=2<arguments.length&&arguments[2]!==void 0?arguments[2]:A,E=x.length-1;if(N=N<A?N:A,A>=E)return null;var k=x[A]<<8|x[A+1];if(65472<=k&&65534>=k)return{f:null,F:k,offset:A};for(var S=x[N]<<8|x[N+1];!(65472<=S&&65534>=S);){if(++N>=E)return null;S=x[N]<<8|x[N+1]}return{f:k.toString(16),F:S,offset:N}}var w=new Uint8Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]);p.prototype={parse:function(x){function A(){var re=x[R]<<8|x[R+1];return R+=2,re}function N(){var re=A();re=R+re-2;var fe=c(x,re,R);return fe&&fe.f&&((0,_util.warn)("readDataBlock - incorrect length, current marker is: "+fe.f),re=fe.offset),re=x.subarray(R,re),R+=re.length,re}function E(re){for(var fe=Math.ceil(re.v/8/re.s),pe=Math.ceil(re.g/8/re.u),he=0;he<re.b.length;he++){ee=re.b[he];var oe=Math.ceil(Math.ceil(re.v/8)*ee.h/re.s),ce=Math.ceil(Math.ceil(re.g/8)*ee.j/re.u);ee.a=new Int16Array(64*pe*ee.j*(fe*ee.h+1)),ee.c=oe,ee.l=ce}re.P=fe,re.O=pe}var k=(1<arguments.length&&arguments[1]!==void 0?arguments[1]:{}).N,S=k===void 0?null:k,R=0,M=null,B=0;k=[];var I=[],Y=[],J=A();if(J!==65496)throw new i("SOI not found");for(J=A();J!==65497;){switch(J){case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:var D=N();J===65518&&D[0]===65&&D[1]===100&&D[2]===111&&D[3]===98&&D[4]===101&&(M={version:D[5]<<8|D[6],Y:D[7]<<8|D[8],Z:D[9]<<8|D[10],W:D[11]});break;case 65499:J=A()+R-2;for(var T;R<J;){var G=x[R++],U=new Uint16Array(64);if(G>>4===0)for(D=0;64>D;D++)T=w[D],U[T]=x[R++];else if(G>>4===1)for(D=0;64>D;D++)T=w[D],U[T]=A();else throw new i("DQT - invalid table spec");k[G&15]=U}break;case 65472:case 65473:case 65474:if(ie)throw new i("Only single frame JPEGs supported");A();var ie={};for(ie.X=J===65473,ie.S=J===65474,ie.precision=x[R++],J=A(),ie.g=S||J,ie.v=A(),ie.b=[],ie.C={},D=x[R++],J=U=G=0;J<D;J++){T=x[R];var se=x[R+1]>>4,ae=x[R+1]&15;G<se&&(G=se),U<ae&&(U=ae),se=ie.b.push({h:se,j:ae,T:x[R+2],G:null}),ie.C[T]=se-1,R+=3}ie.s=G,ie.u=U,E(ie);break;case 65476:for(T=A(),J=2;J<T;){for(G=x[R++],U=new Uint8Array(16),D=se=0;16>D;D++,R++)se+=U[D]=x[R];for(ae=new Uint8Array(se),D=0;D<se;D++,R++)ae[D]=x[R];J+=17+se,(G>>4===0?Y:I)[G&15]=y(U,ae)}break;case 65501:A();var W=A();break;case 65498:for(D=++B===1&&!S,A(),G=x[R++],T=[],J=0;J<G;J++){U=ie.C[x[R++]];var ee=ie.b[U];U=x[R++],ee.D=Y[U>>4],ee.o=I[U&15],T.push(ee)}J=x[R++],G=x[R++],U=x[R++];try{var _=l(x,R,ie,T,W,J,G,U>>4,U&15,D);R+=_}catch(re){if(re instanceof n)return(0,_util.warn)('Attempting to re-parse JPEG image using "scanLines" parameter found in DNL marker (0xFFDC) segment.'),this.parse(x,{N:re.g});throw re}break;case 65500:R+=4;break;case 65535:x[R]!==255&&R--;break;default:if(x[R-3]===255&&192<=x[R-2]&&254>=x[R-2])R-=3;else if((D=c(x,R-2))&&D.f)(0,_util.warn)("JpegImage.parse - unexpected data, current marker is: "+D.f),R=D.offset;else throw new i("unknown marker "+J.toString(16))}J=A()}for(this.width=ie.v,this.height=ie.g,this.A=M,this.b=[],J=0;J<ie.b.length;J++)ee=ie.b[J],(W=k[ee.T])&&(ee.G=W),this.b.push({R:m(ie,ee),U:ee.h/ie.s,V:ee.j/ie.u,c:ee.c,l:ee.l});this.i=this.b.length},L:function(x,A){var N=this.width/x,E=this.height/A,k,S,R=this.b.length,M=x*A*R,B=new Uint8ClampedArray(M),I=new Uint32Array(x);for(S=0;S<R;S++){var Y=this.b[S],J=Y.U*N,D=Y.V*E,T=S,G=Y.R,U=Y.c+1<<3;for(k=0;k<x;k++)Y=0|k*J,I[k]=(Y&4294967288)<<3|Y&7;for(J=0;J<A;J++)for(Y=0|J*D,Y=U*(Y&4294967288)|(Y&7)<<3,k=0;k<x;k++)B[T]=G[Y+I[k]],T+=R}if(E=this.M)for(S=0;S<M;)for(N=Y=0;Y<R;Y++,S++,N+=2)B[S]=(B[S]*E[N]>>8)+E[N+1];return B},w:function(){return this.A?!!this.A.W:this.i===3?this.B!==0:this.B===1},I:function(x){for(var A,N,E,k=0,S=x.length;k<S;k+=3)A=x[k],N=x[k+1],E=x[k+2],x[k]=A-179.456+1.402*E,x[k+1]=A+135.459-.344*N-.714*E,x[k+2]=A-226.816+1.772*N;return x},K:function(x){for(var A,N,E,k,S=0,R=0,M=x.length;R<M;R+=4)A=x[R],N=x[R+1],E=x[R+2],k=x[R+3],x[S++]=-122.67195406894+N*(-660635669420364e-19*N+.000437130475926232*E-54080610064599e-18*A+.00048449797120281*k-.154362151871126)+E*(-.000957964378445773*E+.000817076911346625*A-.00477271405408747*k+1.53380253221734)+A*(.000961250184130688*A-.00266257332283933*k+.48357088451265)+k*(-.000336197177618394*k+.484791561490776),x[S++]=107.268039397724+N*(219927104525741e-19*N-.000640992018297945*E+.000659397001245577*A+.000426105652938837*k-.176491792462875)+E*(-.000778269941513683*E+.00130872261408275*A+.000770482631801132*k-.151051492775562)+A*(.00126935368114843*A-.00265090189010898*k+.25802910206845)+k*(-.000318913117588328*k-.213742400323665),x[S++]=-20.810012546947+N*(-.000570115196973677*N-263409051004589e-19*E+.0020741088115012*A-.00288260236853442*k+.814272968359295)+E*(-153496057440975e-19*E-.000132689043961446*A+.000560833691242812*k-.195152027534049)+A*(.00174418132927582*A-.00255243321439347*k+.116935020465145)+k*(-.000343531996510555*k+.24165260232407);return x.subarray(0,S)},J:function(x){for(var A,N,E,k=0,S=x.length;k<S;k+=4)A=x[k],N=x[k+1],E=x[k+2],x[k]=434.456-A-1.402*E,x[k+1]=119.541-A+.344*N+.714*E,x[k+2]=481.816-A-1.772*N;return x},H:function(x){for(var A,N,E,k,S=0,R=1/255,M=0,B=x.length;M<B;M+=4)A=x[M]*R,N=x[M+1]*R,E=x[M+2]*R,k=x[M+3]*R,x[S++]=255+A*(-4.387332384609988*A+54.48615194189176*N+18.82290502165302*E+212.25662451639585*k-285.2331026137004)+N*(1.7149763477362134*N-5.6096736904047315*E-17.873870861415444*k-5.497006427196366)+E*(-2.5217340131683033*E-21.248923337353073*k+17.5119270841813)-k*(21.86122147463605*k+189.48180835922747),x[S++]=255+A*(8.841041422036149*A+60.118027045597366*N+6.871425592049007*E+31.159100130055922*k-79.2970844816548)+N*(-15.310361306967817*N+17.575251261109482*E+131.35250912493976*k-190.9453302588951)+E*(4.444339102852739*E+9.8632861493405*k-24.86741582555878)-k*(20.737325471181034*k+187.80453709719578),x[S++]=255+A*(.8842522430003296*A+8.078677503112928*N+30.89978309703729*E-.23883238689178934*k-14.183576799673286)+N*(10.49593273432072*N+63.02378494754052*E+50.606957656360734*k-112.23884253719248)+E*(.03296041114873217*E+115.60384449646641*k-193.58209356861505)-k*(22.33816807309886*k+180.12613974708367);return x.subarray(0,S)},getData:function(x,A,N){if(4<this.i)throw new i("Unsupported color mode");if(x=this.L(x,A),this.i===1&&N){N=x.length,A=new Uint8ClampedArray(3*N);for(var E=0,k=0;k<N;k++){var S=x[k];A[E++]=S,A[E++]=S,A[E++]=S}return A}if(this.i===3&&this.w())return this.I(x);if(this.i===4){if(this.w())return N?this.K(x):this.J(x);if(N)return this.H(x)}return x}},u.JpegDecoder=p})()})(),u.encodeImage=function(s,i,n,p){var y={t256:[i],t257:[n],t258:[8,8,8,8],t259:[1],t262:[2],t273:[1e3],t277:[4],t278:[n],t279:[i*n*4],t282:[1],t283:[1],t284:[1],t286:[0],t287:[0],t296:[1],t305:["Photopea (UTIF.js)"],t338:[1]};if(p)for(var l in p)y[l]=p[l];for(var m=new Uint8Array(u.encode([y])),c=new Uint8Array(s),w=new Uint8Array(1e3+i*n*4),l=0;l<m.length;l++)w[l]=m[l];for(var l=0;l<c.length;l++)w[1e3+l]=c[l];return w.buffer},u.encode=function(s){var i=new Uint8Array(2e4),n=4,p=u._binBE;i[0]=77,i[1]=77,i[3]=42;var y=8;p.writeUint(i,n,y),n+=4;for(var l=0;l<s.length;l++){var m=u._writeIFD(p,i,y,s[l]);y=m[1],l<s.length-1&&p.writeUint(i,m[0],y)}return i.slice(0,y).buffer},u.decode=function(s){u.decode._decodeG3.allow2D=null;var i=new Uint8Array(s),n=0,p=u._binBE.readASCII(i,n,2);n+=2;var y=p=="II"?u._binLE:u._binBE;y.readUshort(i,n),n+=2;var l=y.readUint(i,n);n+=4;for(var m=[];;){var c=u._readIFD(y,i,l,m);if(l=y.readUint(i,c),l==0)break}return m},u.decodeImages=function(s,i){for(var n=new Uint8Array(s),p=u._binBE.readASCII(n,0,2),y=0;y<i.length;y++){var l=i[y];if(l.t256!=null){l.isLE=p=="II",l.width=l.t256[0],l.height=l.t257[0];var m=l.t259?l.t259[0]:1,c=l.t266?l.t266[0]:1;l.t284&&l.t284[0]==2&&b("PlanarConfiguration 2 should not be used!");var w=(l.t258?Math.min(32,l.t258[0]):1)*(l.t277?l.t277[0]:1),x=Math.ceil(l.width*w/8)*8,A=l.t273;A==null&&(A=l.t324);var N=l.t279;m==1&&A.length==1&&(N=[l.height*(x>>>3)]),N==null&&(N=l.t325);var E=new Uint8Array(l.height*(x>>>3)),k=0;if(l.t322!=null){for(var S=l.t322[0],R=l.t323[0],M=Math.floor((l.width+S-1)/S),B=Math.floor((l.height+R-1)/R),I=new Uint8Array(Math.ceil(S*R*w/8)|0),Y=0;Y<B;Y++)for(var J=0;J<M;J++){for(var D=Y*M+J,T=0;T<I.length;T++)I[T]=0;u.decode._decompress(l,n,A[D],N[D],m,I,0,c),m==6?E=I:u._copyTile(I,Math.ceil(S*w/8)|0,R,E,Math.ceil(l.width*w/8)|0,l.height,Math.ceil(J*S*w/8)|0,Y*R)}k=E.length*8}else{var G=l.t278?l.t278[0]:l.height;G=Math.min(G,l.height);for(var D=0;D<A.length;D++)u.decode._decompress(l,n,A[D],N[D],m,E,Math.ceil(k/8)|0,c),k+=x*G;k=Math.min(k,E.length*8)}l.data=new Uint8Array(E.buffer,0,Math.ceil(k/8)|0)}}},u.decode._decompress=function(s,i,n,p,y,l,m,c){if(y==1)for(var w=0;w<p;w++)l[m+w]=i[n+w];else if(y==3)u.decode._decodeG3(i,n,p,l,m,s.width,c);else if(y==4)u.decode._decodeG4(i,n,p,l,m,s.width,c);else if(y==5)u.decode._decodeLZW(i,n,l,m);else if(y==6)u.decode._decodeOldJPEG(s,i,n,p,l,m);else if(y==7)u.decode._decodeNewJPEG(s,i,n,p,l,m);else if(y==8)for(var x=new Uint8Array(i.buffer,n,p),A=f.inflate(x),N=0;N<A.length;N++)l[m+N]=A[N];else y==32773?u.decode._decodePackBits(i,n,p,l,m):y==32809?u.decode._decodeThunder(i,n,p,l,m):b("Unknown compression",y);if(s.t317&&s.t317[0]==2)for(var E=s.t277?s.t277[0]:1,k=s.t278?s.t278[0]:s.height,S=s.width*E,R=0;R<k;R++){var M=m+R*S;if(E==3)for(var w=3;w<S;w+=3)l[M+w]=l[M+w]+l[M+w-3]&255,l[M+w+1]=l[M+w+1]+l[M+w-2]&255,l[M+w+2]=l[M+w+2]+l[M+w-1]&255;else for(var w=E;w<S;w++)l[M+w]=l[M+w]+l[M+w-E]&255}},u.decode._decodeNikon=function(s,i,c,p,y){var l,m,c;b(s.slice(i,i+100)),l=s[i],i++,m=s[i],i++,b(l.toString(16),m.toString(16),c)},u.decode._decodeNewJPEG=function(s,i,n,p,y,l){var m=s.t347,c=m?m.length:0,w=new Uint8Array(c+p);if(m){for(var x=216,A=217,N=0,E=0;E<c-1&&!(m[E]==255&&m[E+1]==A);E++)w[N++]=m[E];var k=i[n],S=i[n+1];(k!=255||S!=x)&&(w[N++]=k,w[N++]=S);for(var E=2;E<p;E++)w[N++]=i[n+E]}else for(var E=0;E<p;E++)w[E]=i[n+E];if(s.t262==32803){var R=s.t258[0],M=new LosslessJpegDecoder,B=M.decode(w),I=B.length;if(R==16)for(var E=0;E<I;E++)y[l++]=B[E]&255,y[l++]=B[E]>>>8;else if(R==12)for(var E=0;E<I;E+=2)y[l++]=B[E]>>>4,y[l++]=(B[E]<<4|B[E+1]>>>8)&255,y[l++]=B[E+1]&255;else throw new Error("unsupported bit depth "+R)}else{var Y=new u.JpegDecoder;Y.parse(w);for(var J=Y.getData(Y.width,Y.height),E=0;E<J.length;E++)y[l+E]=J[E]}s.t262[0]==6&&(s.t262[0]=2)},u.decode._decodeOldJPEGInit=function(s,i,n,p){var y=216,l=219,m=196,c=221,w=192,x=218,A=0,N=0,E,k,S=!1,R,M,B,I=s.t513,Y=I?I[0]:0,J=s.t514,D=J?J[0]:0,T=s.t324||s.t273||I,G=s.t530,U=0,ie=0,se=s.t277?s.t277[0]:1,ae=s.t515;if(T&&(N=T[0],S=T.length>1),!S){if(i[n]==255&&i[n+1]==y)return{jpegOffset:n};if(I!=null&&(i[n+Y]==255&&i[n+Y+1]==y?A=n+Y:b("JPEGInterchangeFormat does not point to SOI"),J==null?b("JPEGInterchangeFormatLength field is missing"):(Y>=N||Y+D<=N)&&b("JPEGInterchangeFormatLength field value is invalid"),A!=null))return{jpegOffset:A}}if(G!=null&&(U=G[0],ie=G[1]),I!=null&&J!=null)if(D>=2&&Y+D<=N){for(i[n+Y+D-2]==255&&i[n+Y+D-1]==y?E=new Uint8Array(D-2):E=new Uint8Array(D),R=0;R<E.length;R++)E[R]=i[n+Y+R];b("Incorrect JPEG interchange format: using JPEGInterchangeFormat offset to derive tables")}else b("JPEGInterchangeFormat+JPEGInterchangeFormatLength > offset to first strip or tile");if(E==null){var W=0,ee=[];ee[W++]=255,ee[W++]=y;var _=s.t519;if(_==null)throw new Error("JPEGQTables tag is missing");for(R=0;R<_.length;R++)for(ee[W++]=255,ee[W++]=l,ee[W++]=0,ee[W++]=67,ee[W++]=R,M=0;M<64;M++)ee[W++]=i[n+_[R]+M];for(B=0;B<2;B++){var re=s[B==0?"t520":"t521"];if(re==null)throw new Error((B==0?"JPEGDCTables":"JPEGACTables")+" tag is missing");for(R=0;R<re.length;R++){ee[W++]=255,ee[W++]=m;var fe=19;for(M=0;M<16;M++)fe+=i[n+re[R]+M];for(ee[W++]=fe>>>8,ee[W++]=fe&255,ee[W++]=R|B<<4,M=0;M<16;M++)ee[W++]=i[n+re[R]+M];for(M=0;M<fe;M++)ee[W++]=i[n+re[R]+16+M]}}if(ee[W++]=255,ee[W++]=w,ee[W++]=0,ee[W++]=8+3*se,ee[W++]=8,ee[W++]=s.height>>>8&255,ee[W++]=s.height&255,ee[W++]=s.width>>>8&255,ee[W++]=s.width&255,ee[W++]=se,se==1)ee[W++]=1,ee[W++]=17,ee[W++]=0;else for(R=0;R<3;R++)ee[W++]=R+1,ee[W++]=R!=0?17:(U&15)<<4|ie&15,ee[W++]=R;ae!=null&&ae[0]!=0&&(ee[W++]=255,ee[W++]=c,ee[W++]=0,ee[W++]=4,ee[W++]=ae[0]>>>8&255,ee[W++]=ae[0]&255),E=new Uint8Array(ee)}var pe=-1;for(R=0;R<E.length-1;){if(E[R]==255&&E[R+1]==w){pe=R;break}R++}if(pe==-1){var he=new Uint8Array(E.length+10+3*se);he.set(E);var oe=E.length;if(pe=E.length,E=he,E[oe++]=255,E[oe++]=w,E[oe++]=0,E[oe++]=8+3*se,E[oe++]=8,E[oe++]=s.height>>>8&255,E[oe++]=s.height&255,E[oe++]=s.width>>>8&255,E[oe++]=s.width&255,E[oe++]=se,se==1)E[oe++]=1,E[oe++]=17,E[oe++]=0;else for(R=0;R<3;R++)E[oe++]=R+1,E[oe++]=R!=0?17:(U&15)<<4|ie&15,E[oe++]=R}if(i[N]==255&&i[N+1]==x){var ce=i[N+2]<<8|i[N+3];for(k=new Uint8Array(ce+2),k[0]=i[N],k[1]=i[N+1],k[2]=i[N+2],k[3]=i[N+3],R=0;R<ce-2;R++)k[R+4]=i[N+R+4]}else{k=new Uint8Array(2+6+2*se);var X=0;if(k[X++]=255,k[X++]=x,k[X++]=0,k[X++]=6+2*se,k[X++]=se,se==1)k[X++]=1,k[X++]=0;else for(R=0;R<3;R++)k[X++]=R+1,k[X++]=R<<4|R;k[X++]=0,k[X++]=63,k[X++]=0}return{jpegOffset:n,tables:E,sosMarker:k,sofPosition:pe}},u.decode._decodeOldJPEG=function(s,i,n,p,y,l){var m,c,w,x,A=u.decode._decodeOldJPEGInit(s,i,n,p);if(A.jpegOffset!=null)for(c=n+p-A.jpegOffset,x=new Uint8Array(c),m=0;m<c;m++)x[m]=i[A.jpegOffset+m];else{for(w=A.tables.length,x=new Uint8Array(w+A.sosMarker.length+p+2),x.set(A.tables),x[A.sofPosition+5]=s.height>>>8&255,x[A.sofPosition+6]=s.height&255,x[A.sofPosition+7]=s.width>>>8&255,x[A.sofPosition+8]=s.width&255,(i[n]!=255||i[n+1]!=SOS)&&(x.set(A.sosMarker,bufoff),bufoff+=sosMarker.length),m=0;m<p;m++)x[bufoff++]=i[n+m];x[bufoff++]=255,x[bufoff++]=EOI}var N=new u.JpegDecoder;N.parse(x);for(var E=N.getData(N.width,N.height),m=0;m<E.length;m++)y[l+m]=E[m];s.t262[0]==6&&(s.t262[0]=2)},u.decode._decodePackBits=function(s,i,n,p,y){for(var l=new Int8Array(s.buffer),m=new Int8Array(p.buffer),c=i+n;i<c;){var w=l[i];if(i++,w>=0&&w<128)for(var x=0;x<w+1;x++)m[y]=l[i],y++,i++;if(w>=-127&&w<0){for(var x=0;x<-w+1;x++)m[y]=l[i],y++;i++}}},u.decode._decodeThunder=function(s,i,n,p,y){for(var l=[0,1,0,-1],m=[0,1,2,3,0,-3,-2,-1],c=i+n,w=y*2,x=0;i<c;){var A=s[i],N=A>>>6,E=A&63;if(i++,N==3&&(x=E&15,p[w>>>1]|=x<<4*(1-w&1),w++),N==0)for(var k=0;k<E;k++)p[w>>>1]|=x<<4*(1-w&1),w++;if(N==2)for(var k=0;k<2;k++){var S=E>>>3*(1-k)&7;S!=4&&(x+=m[S],p[w>>>1]|=x<<4*(1-w&1),w++)}if(N==1)for(var k=0;k<3;k++){var S=E>>>2*(2-k)&3;S!=2&&(x+=l[S],p[w>>>1]|=x<<4*(1-w&1),w++)}}},u.decode._dmap={"1":0,"011":1,"000011":2,"0000011":3,"010":-1,"000010":-2,"0000010":-3},u.decode._lens=function(){var s=function(w,x,A,N){for(var E=0;E<x.length;E++)w[x[E]]=A+E*N},i="00110101,000111,0111,1000,1011,1100,1110,1111,10011,10100,00111,01000,001000,000011,110100,110101,101010,101011,0100111,0001100,0001000,0010111,0000011,0000100,0101000,0101011,0010011,0100100,0011000,00000010,00000011,00011010,00011011,00010010,00010011,00010100,00010101,00010110,00010111,00101000,00101001,00101010,00101011,00101100,00101101,00000100,00000101,00001010,00001011,01010010,01010011,01010100,01010101,00100100,00100101,01011000,01011001,01011010,01011011,01001010,01001011,00110010,00110011,00110100",n="0000110111,010,11,10,011,0011,0010,00011,000101,000100,0000100,0000101,0000111,00000100,00000111,000011000,0000010111,0000011000,0000001000,00001100111,00001101000,00001101100,00000110111,00000101000,00000010111,00000011000,000011001010,000011001011,000011001100,000011001101,000001101000,000001101001,000001101010,000001101011,000011010010,000011010011,000011010100,000011010101,000011010110,000011010111,000001101100,000001101101,000011011010,000011011011,000001010100,000001010101,000001010110,000001010111,000001100100,000001100101,000001010010,000001010011,000000100100,000000110111,000000111000,000000100111,000000101000,000001011000,000001011001,000000101011,000000101100,000001011010,000001100110,000001100111",p="11011,10010,010111,0110111,00110110,00110111,01100100,01100101,01101000,01100111,011001100,011001101,011010010,011010011,011010100,011010101,011010110,011010111,011011000,011011001,011011010,011011011,010011000,010011001,010011010,011000,010011011",y="0000001111,000011001000,000011001001,000001011011,000000110011,000000110100,000000110101,0000001101100,0000001101101,0000001001010,0000001001011,0000001001100,0000001001101,0000001110010,0000001110011,0000001110100,0000001110101,0000001110110,0000001110111,0000001010010,0000001010011,0000001010100,0000001010101,0000001011010,0000001011011,0000001100100,0000001100101",l="00000001000,00000001100,00000001101,000000010010,000000010011,000000010100,000000010101,000000010110,000000010111,000000011100,000000011101,000000011110,000000011111";i=i.split(","),n=n.split(","),p=p.split(","),y=y.split(","),l=l.split(",");var m={},c={};return s(m,i,0,1),s(m,p,64,64),s(m,l,1792,64),s(c,n,0,1),s(c,y,64,64),s(c,l,1792,64),[m,c]}(),u.decode._decodeG4=function(s,i,n,p,y,l,m){for(var c=u.decode,w=i<<3,x=0,A="",N=[],E=[],k=0;k<l;k++)E.push(0);E=c._makeDiff(E);for(var S=0,R=0,M=0,B=0,I=0,Y=0,J="",D=0,T=Math.ceil(l/8)*8;w>>>3<i+n;){M=c._findDiff(E,S+(S==0?0:1),1-I),B=c._findDiff(E,M,I);var G=0;if(m==1&&(G=s[w>>>3]>>>7-(w&7)&1),m==2&&(G=s[w>>>3]>>>(w&7)&1),w++,A+=G,J=="H"){if(c._lens[I][A]!=null){var U=c._lens[I][A];A="",x+=U,U<64&&(c._addNtimes(N,x,I),S+=x,I=1-I,x=0,D--,D==0&&(J=""))}}else A=="0001"&&(A="",c._addNtimes(N,B-S,I),S=B),A=="001"&&(A="",J="H",D=2),c._dmap[A]!=null&&(R=M+c._dmap[A],c._addNtimes(N,R-S,I),S=R,A="",I=1-I);N.length==l&&J==""&&(c._writeBits(N,p,y*8+Y*T),I=0,Y++,S=0,E=c._makeDiff(N),N=[])}},u.decode._findDiff=function(s,i,n){for(var p=0;p<s.length;p+=2)if(s[p]>=i&&s[p+1]==n)return s[p]},u.decode._makeDiff=function(s){var i=[];s[0]==1&&i.push(0,1);for(var n=1;n<s.length;n++)s[n-1]!=s[n]&&i.push(n,s[n]);return i.push(s.length,0,s.length,1),i},u.decode._decodeG3=function(s,i,n,p,y,l,m){for(var c=u.decode,w=i<<3,x=0,A="",N=[],E=[],k=0;k<l;k++)N.push(0);for(var S=0,R=0,M=0,B=0,I=0,Y=-1,J="",D=0,T=!1,G=Math.ceil(l/8)*8;w>>>3<i+n;){M=c._findDiff(E,S+(S==0?0:1),1-I),B=c._findDiff(E,M,I);var U=0;if(m==1&&(U=s[w>>>3]>>>7-(w&7)&1),m==2&&(U=s[w>>>3]>>>(w&7)&1),w++,A+=U,T){if(c._lens[I][A]!=null){var ie=c._lens[I][A];A="",x+=ie,ie<64&&(c._addNtimes(N,x,I),I=1-I,x=0)}}else if(J=="H"){if(c._lens[I][A]!=null){var ie=c._lens[I][A];A="",x+=ie,ie<64&&(c._addNtimes(N,x,I),S+=x,I=1-I,x=0,D--,D==0&&(J=""))}}else A=="0001"&&(A="",c._addNtimes(N,B-S,I),S=B),A=="001"&&(A="",J="H",D=2),c._dmap[A]!=null&&(R=M+c._dmap[A],c._addNtimes(N,R-S,I),S=R,A="",I=1-I);A.endsWith("000000000001")&&(Y>=0&&c._writeBits(N,p,y*8+Y*G),m==1&&(T=(s[w>>>3]>>>7-(w&7)&1)==1),m==2&&(T=(s[w>>>3]>>>(w&7)&1)==1),w++,c._decodeG3.allow2D==null&&(c._decodeG3.allow2D=T),c._decodeG3.allow2D||(T=!0,w--),A="",I=0,Y++,S=0,E=c._makeDiff(N),N=[])}N.length==l&&c._writeBits(N,p,y*8+Y*G)},u.decode._addNtimes=function(s,i,n){for(var p=0;p<i;p++)s.push(n)},u.decode._writeBits=function(s,i,n){for(var p=0;p<s.length;p++)i[n+p>>>3]|=s[p]<<7-(n+p&7)},u.decode._decodeLZW=function(s,i,n,p){if(u.decode._lzwTab==null){for(var y=new Uint32Array(65535),l=new Uint16Array(65535),A=new Uint8Array(2e6),m=0;m<256;m++)A[m<<2]=m,y[m]=m<<2,l[m]=1;u.decode._lzwTab=[y,l,A]}for(var c=u.decode._copyData,w=u.decode._lzwTab[0],x=u.decode._lzwTab[1],A=u.decode._lzwTab[2],N=258,E=258<<2,k=9,S=i<<3,R=256,M=257,B=0,I=0,Y=0;B=s[S>>>3]<<16|s[S+8>>>3]<<8|s[S+16>>>3],I=B>>24-(S&7)-k&(1<<k)-1,S+=k,I!=M;){if(I==R){if(k=9,N=258,E=258<<2,B=s[S>>>3]<<16|s[S+8>>>3]<<8|s[S+16>>>3],I=B>>24-(S&7)-k&(1<<k)-1,S+=k,I==M)break;n[p]=I,p++}else if(I<N){var J=w[I],D=x[I];if(c(A,J,n,p,D),p+=D,Y>=N)w[N]=E,A[w[N]]=J[0],x[N]=1,E=E+1+3&-4,N++;else{w[N]=E;var T=w[Y],G=x[Y];c(A,T,A,E,G),A[E+G]=A[J],G++,x[N]=G,N++,E=E+G+3&-4}N+1==1<<k&&k++}else{if(Y>=N)w[N]=E,x[N]=0,N++;else{w[N]=E;var T=w[Y],G=x[Y];c(A,T,A,E,G),A[E+G]=A[E],G++,x[N]=G,N++,c(A,E,n,p,G),p+=G,E=E+G+3&-4}N+1==1<<k&&k++}Y=I}},u.decode._copyData=function(s,i,n,p,y){for(var l=0;l<y;l+=4)n[p+l]=s[i+l],n[p+l+1]=s[i+l+1],n[p+l+2]=s[i+l+2],n[p+l+3]=s[i+l+3]},u.tags={254:"NewSubfileType",255:"SubfileType",256:"ImageWidth",257:"ImageLength",258:"BitsPerSample",259:"Compression",262:"PhotometricInterpretation",266:"FillOrder",269:"DocumentName",270:"ImageDescription",271:"Make",272:"Model",273:"StripOffset",274:"Orientation",277:"SamplesPerPixel",278:"RowsPerStrip",279:"StripByteCounts",280:"MinSampleValue",281:"MaxSampleValue",282:"XResolution",283:"YResolution",284:"PlanarConfiguration",285:"PageName",286:"XPosition",287:"YPosition",292:"T4Options",296:"ResolutionUnit",297:"PageNumber",305:"Software",306:"DateTime",315:"Artist",316:"HostComputer",317:"Predictor",318:"WhitePoint",319:"PrimaryChromaticities",320:"ColorMap",321:"HalftoneHints",322:"TileWidth",323:"TileLength",324:"TileOffset",325:"TileByteCounts",330:"SubIFDs",336:"DotRange",338:"ExtraSample",339:"SampleFormat",347:"JPEGTables",512:"JPEGProc",513:"JPEGInterchangeFormat",514:"JPEGInterchangeFormatLength",519:"JPEGQTables",520:"JPEGDCTables",521:"JPEGACTables",529:"YCbCrCoefficients",530:"YCbCrSubSampling",531:"YCbCrPositioning",532:"ReferenceBlackWhite",700:"XMP",33421:"CFARepeatPatternDim",33422:"CFAPattern",33432:"Copyright",33434:"ExposureTime",33437:"FNumber",33723:"IPTC/NAA",34377:"Photoshop",34665:"ExifIFD",34675:"ICC Profile",34850:"ExposureProgram",34853:"GPSInfo",34855:"ISOSpeedRatings",34858:"TimeZoneOffset",34859:"SelfTimeMode",36867:"DateTimeOriginal",36868:"DateTimeDigitized",37377:"ShutterSpeedValue",37378:"ApertureValue",37380:"ExposureBiasValue",37383:"MeteringMode",37385:"Flash",37386:"FocalLength",37390:"FocalPlaneXResolution",37391:"FocalPlaneYResolution",37392:"FocalPlaneResolutionUnit",37393:"ImageNumber",37398:"TIFF/EPStandardID",37399:"SensingMethod",37500:"MakerNote",37510:"UserComment",37724:"ImageSourceData",40092:"XPComment",40094:"XPKeywords",40961:"ColorSpace",40962:"PixelXDimension",40963:"PixelXDimension",41486:"FocalPlaneXResolution",41487:"FocalPlaneYResolution",41488:"FocalPlaneResolutionUnit",41985:"CustomRendered",41986:"ExposureMode",41987:"WhiteBalance",41990:"SceneCaptureType",50706:"DNGVersion",50707:"DNGBackwardVersion",50708:"UniqueCameraModel",50709:"LocalizedCameraModel",50710:"CFAPlaneColor",50711:"CFALayout",50712:"LinearizationTable",50713:"BlackLevelRepeatDim",50714:"BlackLevel",50716:"BlackLevelDeltaV",50717:"WhiteLevel",50718:"DefaultScale",50719:"DefaultCropOrigin",50720:"DefaultCropSize",50733:"BayerGreenSplit",50738:"AntiAliasStrength",50721:"ColorMatrix1",50722:"ColorMatrix2",50723:"CameraCalibration1",50724:"CameraCalibration2",50727:"AnalogBalance",50728:"AsShotNeutral",50730:"BaselineExposure",50731:"BaselineNoise",50732:"BaselineSharpness",50734:"LinearResponseLimit",50735:"CameraSerialNumber",50736:"LensInfo",50739:"ShadowScale",50740:"DNGPrivateData",50741:"MakerNoteSafety",50778:"CalibrationIlluminant1",50779:"CalibrationIlluminant2",50780:"BestQualityScale",50781:"RawDataUniqueID",50827:"OriginalRawFileName",50829:"ActiveArea",50830:"MaskedAreas",50931:"CameraCalibrationSignature",50932:"ProfileCalibrationSignature",50935:"NoiseReductionApplied",50936:"ProfileName",50937:"ProfileHueSatMapDims",50938:"ProfileHueSatMapData1",50939:"ProfileHueSatMapData2",50940:"ProfileToneCurve",50941:"ProfileEmbedPolicy",50942:"ProfileCopyright",50964:"ForwardMatrix1",50965:"ForwardMatrix2",50966:"PreviewApplicationName",50967:"PreviewApplicationVersion",50969:"PreviewSettingsDigest",50970:"PreviewColorSpace",50971:"PreviewDateTime",50972:"RawImageDigest",51008:"OpcodeList1",51009:"OpcodeList2",51022:"OpcodeList3",51041:"NoiseProfile",51089:"OriginalDefaultFinalSize",51090:"OriginalBestQualityFinalSize",51091:"OriginalDefaultCropSize",51125:"DefaultUserCrop"},u.ttypes={256:3,257:3,258:3,259:3,262:3,273:4,274:3,277:3,278:4,279:4,282:5,283:5,284:3,286:5,287:5,296:3,305:2,306:2,338:3,513:4,514:4,34665:4},u._readIFD=function(s,i,n,p){var y=s.readUshort(i,n);n+=2;var l={};p.push(l);for(var m=0;m<y;m++){var c=s.readUshort(i,n);n+=2;var w=s.readUshort(i,n);n+=2;var x=s.readUint(i,n);n+=4;var A=s.readUint(i,n);n+=4;var N=[];if(l["t"+c]=N,w==1||w==7)for(var E=0;E<x;E++)N.push(i[(x<5?n-4:A)+E]);if(w==2&&N.push(s.readASCII(i,x<5?n-4:A,x-1)),w==3)for(var E=0;E<x;E++)N.push(s.readUshort(i,(x<3?n-4:A)+2*E));if(w==4)for(var E=0;E<x;E++)N.push(s.readUint(i,(x<2?n-4:A)+4*E));if(w==5)for(var E=0;E<x;E++)N.push(s.readUint(i,A+E*8)/s.readUint(i,A+E*8+4));if(w==8)for(var E=0;E<x;E++)N.push(s.readShort(i,(x<3?n-4:A)+2*E));if(w==9)for(var E=0;E<x;E++)N.push(s.readInt(i,(x<2?n-4:A)+4*E));if(w==10)for(var E=0;E<x;E++)N.push(s.readInt(i,A+E*8)/s.readInt(i,A+E*8+4));if(w==11)for(var E=0;E<x;E++)N.push(s.readFloat(i,A+E*4));if(w==12)for(var E=0;E<x;E++)N.push(s.readDouble(i,A+E*8));if(x!=0&&N.length==0&&b("unknown TIFF tag type: ",w,"num:",x),c==330)for(var E=0;E<x;E++)u._readIFD(s,i,N[E],p)}return n},u._writeIFD=function(s,i,n,p){var y=Object.keys(p);s.writeUshort(i,n,y.length),n+=2;for(var l=n+y.length*12+4,m=0;m<y.length;m++){var c=y[m],w=parseInt(c.slice(1)),x=u.ttypes[w];if(x==null)throw new Error("unknown type of tag: "+w);var A=p[c];x==2&&(A=A[0]+"\0");var N=A.length;s.writeUshort(i,n,w),n+=2,s.writeUshort(i,n,x),n+=2,s.writeUint(i,n,N),n+=4;var E=[-1,1,1,2,4,8,0,0,0,0,0,0,8][x]*N,k=n;if(E>4&&(s.writeUint(i,n,l),k=l),x==2&&s.writeASCII(i,k,A),x==3)for(var S=0;S<N;S++)s.writeUshort(i,k+2*S,A[S]);if(x==4)for(var S=0;S<N;S++)s.writeUint(i,k+4*S,A[S]);if(x==5)for(var S=0;S<N;S++)s.writeUint(i,k+8*S,Math.round(A[S]*1e4)),s.writeUint(i,k+8*S+4,1e4);if(x==12)for(var S=0;S<N;S++)s.writeDouble(i,k+8*S,A[S]);E>4&&(E+=E&1,l+=E),n+=4}return[n,l]},u.toRGBA8=function(s){var i=s.width,n=s.height,p=i*n,y=p*4,l=s.data,m=new Uint8Array(p*4),c=s.t262[0],w=s.t258?Math.min(32,s.t258[0]):1,x=s.isLE?1:0;if(c==0)for(var A=Math.ceil(w*i/8),N=0;N<n;N++){var E=N*A,k=N*i;if(w==1)for(var S=0;S<i;S++){var R=k+S<<2,M=l[E+(S>>3)]>>7-(S&7)&1;m[R]=m[R+1]=m[R+2]=(1-M)*255,m[R+3]=255}if(w==4)for(var S=0;S<i;S++){var R=k+S<<2,M=l[E+(S>>1)]>>4-4*(S&1)&15;m[R]=m[R+1]=m[R+2]=(15-M)*17,m[R+3]=255}if(w==8)for(var S=0;S<i;S++){var R=k+S<<2,M=l[E+S];m[R]=m[R+1]=m[R+2]=255-M,m[R+3]=255}}else if(c==1)for(var A=Math.ceil(w*i/8),N=0;N<n;N++){var E=N*A,k=N*i;if(w==1)for(var S=0;S<i;S++){var R=k+S<<2,M=l[E+(S>>3)]>>7-(S&7)&1;m[R]=m[R+1]=m[R+2]=M*255,m[R+3]=255}if(w==2)for(var S=0;S<i;S++){var R=k+S<<2,M=l[E+(S>>2)]>>6-2*(S&3)&3;m[R]=m[R+1]=m[R+2]=M*85,m[R+3]=255}if(w==8)for(var S=0;S<i;S++){var R=k+S<<2,M=l[E+S];m[R]=m[R+1]=m[R+2]=M,m[R+3]=255}if(w==16)for(var S=0;S<i;S++){var R=k+S<<2,M=l[E+(2*S+x)];m[R]=m[R+1]=m[R+2]=Math.min(255,M),m[R+3]=255}}else if(c==2)if(w==8)if(s.t338)if(s.t338[0]>0)for(var S=0;S<y;S++)m[S]=l[S];else for(var S=0;S<y;S+=4)m[S]=l[S],m[S+1]=l[S+1],m[S+2]=l[S+2],m[S+3]=255;else{var B=s.t258?s.t258.length:3;if(B==4)for(var S=0;S<y;S++)m[S]=l[S];if(B==3)for(var S=0;S<p;S++){var R=S<<2,I=S*3;m[R]=l[I],m[R+1]=l[I+1],m[R+2]=l[I+2],m[R+3]=255}}else for(var S=0;S<p;S++){var R=S<<2,I=S*6;m[R]=l[I],m[R+1]=l[I+2],m[R+2]=l[I+4],m[R+3]=255}else if(c==3)for(var Y=s.t320,S=0;S<p;S++){var R=S<<2,J=l[S];m[R]=Y[J]>>8,m[R+1]=Y[256+J]>>8,m[R+2]=Y[512+J]>>8,m[R+3]=255}else if(c==5)for(var B=s.t258?s.t258.length:4,D=B>4?1:0,S=0;S<p;S++){var R=S<<2,T=S*B,G=255-l[T],U=255-l[T+1],ie=255-l[T+2],se=(255-l[T+3])*(1/255);m[R]=~~(G*se+.5),m[R+1]=~~(U*se+.5),m[R+2]=~~(ie*se+.5),m[R+3]=255*(1-D)+l[T+4]*D}else b("Unknown Photometric interpretation: "+c);return m},u.replaceIMG=function(){for(var s=document.getElementsByTagName("img"),i=0;i<s.length;i++){var n=s[i],p=n.getAttribute("src");if(p!=null){var y=p.split(".").pop().toLowerCase();if(!(y!="tif"&&y!="tiff")){var l=new XMLHttpRequest;u._xhrs.push(l),u._imgs.push(n),l.open("GET",p),l.responseType="arraybuffer",l.onload=u._imgLoaded,l.send()}}}},u._xhrs=[],u._imgs=[],u._imgLoaded=function(s){var i=s.target.response,n=u.decode(i),p=n[0];u.decodeImages(i,n);var y=u.toRGBA8(p),l=p.width,m=p.height,c=u._xhrs.indexOf(s.target),w=u._imgs[c];u._xhrs.splice(c,1),u._imgs.splice(c,1);var x=document.createElement("canvas");x.width=l,x.height=m;for(var A=x.getContext("2d"),N=A.createImageData(l,m),E=0;E<y.length;E++)N.data[E]=y[E];A.putImageData(N,0,0);for(var k=["style","class","id"],E=0;E<k.length;E++)x.setAttribute(k[E],w.getAttribute(k[E]));w.parentNode.replaceChild(x,w)},u._binBE={nextZero:function(s,i){for(;s[i]!=0;)i++;return i},readUshort:function(s,i){return s[i]<<8|s[i+1]},readShort:function(s,i){var n=u._binBE.ui8;return n[0]=s[i+1],n[1]=s[i+0],u._binBE.i16[0]},readInt:function(s,i){var n=u._binBE.ui8;return n[0]=s[i+3],n[1]=s[i+2],n[2]=s[i+1],n[3]=s[i+0],u._binBE.i32[0]},readUint:function(s,i){var n=u._binBE.ui8;return n[0]=s[i+3],n[1]=s[i+2],n[2]=s[i+1],n[3]=s[i+0],u._binBE.ui32[0]},readASCII:function(s,i,n){for(var p="",y=0;y<n;y++)p+=String.fromCharCode(s[i+y]);return p},readFloat:function(s,i){for(var n=u._binBE.ui8,p=0;p<4;p++)n[p]=s[i+3-p];return u._binBE.fl32[0]},readDouble:function(s,i){for(var n=u._binBE.ui8,p=0;p<8;p++)n[p]=s[i+7-p];return u._binBE.fl64[0]},writeUshort:function(s,i,n){s[i]=n>>8&255,s[i+1]=n&255},writeUint:function(s,i,n){s[i]=n>>24&255,s[i+1]=n>>16&255,s[i+2]=n>>8&255,s[i+3]=n>>0&255},writeASCII:function(s,i,n){for(var p=0;p<n.length;p++)s[i+p]=n.charCodeAt(p)},writeDouble:function(s,i,n){u._binBE.fl64[0]=n;for(var p=0;p<8;p++)s[i+p]=u._binBE.ui8[7-p]}},u._binBE.ui8=new Uint8Array(8),u._binBE.i16=new Int16Array(u._binBE.ui8.buffer),u._binBE.i32=new Int32Array(u._binBE.ui8.buffer),u._binBE.ui32=new Uint32Array(u._binBE.ui8.buffer),u._binBE.fl32=new Float32Array(u._binBE.ui8.buffer),u._binBE.fl64=new Float64Array(u._binBE.ui8.buffer),u._binLE={nextZero:u._binBE.nextZero,readUshort:function(s,i){return s[i+1]<<8|s[i]},readShort:function(s,i){var n=u._binBE.ui8;return n[0]=s[i+0],n[1]=s[i+1],u._binBE.i16[0]},readInt:function(s,i){var n=u._binBE.ui8;return n[0]=s[i+0],n[1]=s[i+1],n[2]=s[i+2],n[3]=s[i+3],u._binBE.i32[0]},readUint:function(s,i){var n=u._binBE.ui8;return n[0]=s[i+0],n[1]=s[i+1],n[2]=s[i+2],n[3]=s[i+3],u._binBE.ui32[0]},readASCII:u._binBE.readASCII,readFloat:function(s,i){for(var n=u._binBE.ui8,p=0;p<4;p++)n[p]=s[i+p];return u._binBE.fl32[0]},readDouble:function(s,i){for(var n=u._binBE.ui8,p=0;p<8;p++)n[p]=s[i+p];return u._binBE.fl64[0]}},u._copyTile=function(s,i,n,p,y,l,m,c){for(var w=Math.min(i,y-m),x=Math.min(n,l-c),A=0;A<x;A++)for(var N=(c+A)*y+m,E=A*i,k=0;k<w;k++)p[N+k]=s[E+k]}})(h,g)})()}).call(this,t("_process"))},{_process:133,pako:86}],183:[function(t,d,o){(function(v){d.exports=h;function h(b,u){if(g("noDeprecation"))return b;var f=!1;function s(){if(!f){if(g("throwDeprecation"))throw new Error(u);g("traceDeprecation")?console.trace(u):console.warn(u),f=!0}return b.apply(this,arguments)}return s}function g(b){try{if(!v.localStorage)return!1}catch{return!1}var u=v.localStorage[b];return u==null?!1:String(u).toLowerCase()==="true"}}).call(this,typeof nt!="undefined"?nt:typeof self!="undefined"?self:typeof a!="undefined"?a:{})},{}],184:[function(t,d,o){arguments[4][26][0].apply(o,arguments)},{dup:26}],185:[function(t,d,o){arguments[4][27][0].apply(o,arguments)},{dup:27}],186:[function(t,d,o){arguments[4][28][0].apply(o,arguments)},{"./support/isBuffer":185,_process:133,dup:28,inherits:184}],187:[function(t,d,o){var v=t("global/window"),h=t("is-function"),g=t("parse-headers"),b=t("xtend");d.exports=i,d.exports.default=i,i.XMLHttpRequest=v.XMLHttpRequest||y,i.XDomainRequest="withCredentials"in new i.XMLHttpRequest?i.XMLHttpRequest:v.XDomainRequest,u(["get","put","post","patch","head","delete"],function(l){i[l==="delete"?"del":l]=function(m,c,w){return c=s(m,c,w),c.method=l.toUpperCase(),n(c)}});function u(l,m){for(var c=0;c<l.length;c++)m(l[c])}function f(l){for(var m in l)if(l.hasOwnProperty(m))return!1;return!0}function s(l,m,c){var w=l;return h(m)?(c=m,typeof l=="string"&&(w={uri:l})):w=b(m,{uri:l}),w.callback=c,w}function i(l,m,c){return m=s(l,m,c),n(m)}function n(l){if(typeof l.callback=="undefined")throw new Error("callback argument missing");var m=!1,c=function(U,ie,se){m||(m=!0,l.callback(U,ie,se))};function w(){E.readyState===4&&setTimeout(N,0)}function x(){var G=void 0;if(E.response?G=E.response:G=E.responseText||p(E),J)try{G=JSON.parse(G)}catch{}return G}function A(G){return clearTimeout(D),G instanceof Error||(G=new Error(""+(G||"Unknown XMLHttpRequest Error"))),G.statusCode=0,c(G,T)}function N(){if(!S){var G;clearTimeout(D),l.useXDR&&E.status===void 0?G=200:G=E.status===1223?204:E.status;var U=T,ie=null;return G!==0?(U={body:x(),statusCode:G,method:M,headers:{},url:R,rawRequest:E},E.getAllResponseHeaders&&(U.headers=g(E.getAllResponseHeaders()))):ie=new Error("Internal XMLHttpRequest Error"),c(ie,U,U.body)}}var E=l.xhr||null;E||(l.cors||l.useXDR?E=new i.XDomainRequest:E=new i.XMLHttpRequest);var k,S,R=E.url=l.uri||l.url,M=E.method=l.method||"GET",B=l.body||l.data,I=E.headers=l.headers||{},Y=!!l.sync,J=!1,D,T={body:void 0,headers:{},statusCode:0,method:M,url:R,rawRequest:E};if("json"in l&&l.json!==!1&&(J=!0,I.accept||I.Accept||(I.Accept="application/json"),M!=="GET"&&M!=="HEAD"&&(I["content-type"]||I["Content-Type"]||(I["Content-Type"]="application/json"),B=JSON.stringify(l.json===!0?B:l.json))),E.onreadystatechange=w,E.onload=N,E.onerror=A,E.onprogress=function(){},E.onabort=function(){S=!0},E.ontimeout=A,E.open(M,R,!Y,l.username,l.password),Y||(E.withCredentials=!!l.withCredentials),!Y&&l.timeout>0&&(D=setTimeout(function(){if(!S){S=!0,E.abort("timeout");var G=new Error("XMLHttpRequest timeout");G.code="ETIMEDOUT",A(G)}},l.timeout)),E.setRequestHeader)for(k in I)I.hasOwnProperty(k)&&E.setRequestHeader(k,I[k]);else if(l.headers&&!f(l.headers))throw new Error("Headers cannot be set on an XDomainRequest object");return"responseType"in l&&(E.responseType=l.responseType),"beforeSend"in l&&typeof l.beforeSend=="function"&&l.beforeSend(E),E.send(B||null),E}function p(l){try{if(l.responseType==="document")return l.responseXML;var m=l.responseXML&&l.responseXML.documentElement.nodeName==="parsererror";if(l.responseType===""&&!m)return l.responseXML}catch{}return null}function y(){}},{"global/window":71,"is-function":78,"parse-headers":106,xtend:189}],188:[function(t,d,o){d.exports=function(){return typeof self.DOMParser!="undefined"?function(h){var g=new self.DOMParser;return g.parseFromString(h,"application/xml")}:typeof self.ActiveXObject!="undefined"&&new self.ActiveXObject("Microsoft.XMLDOM")?function(h){var g=new self.ActiveXObject("Microsoft.XMLDOM");return g.async="false",g.loadXML(h),g}:function(h){var g=document.createElement("div");return g.innerHTML=h,g}}()},{}],189:[function(t,d,o){d.exports=h;var v=Object.prototype.hasOwnProperty;function h(){for(var g={},b=0;b<arguments.length;b++){var u=arguments[b];for(var f in u)v.call(u,f)&&(g[f]=u[f])}return g}},{}],190:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.srcOver=v,o.dstOver=h,o.multiply=g,o.add=b,o.screen=u,o.overlay=f,o.darken=s,o.lighten=i,o.hardLight=n,o.difference=p,o.exclusion=y;function v(l,m){var c=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;l.a*=c;var w=m.a+l.a-m.a*l.a,x=(l.r*l.a+m.r*m.a*(1-l.a))/w,A=(l.g*l.a+m.g*m.a*(1-l.a))/w,N=(l.b*l.a+m.b*m.a*(1-l.a))/w;return{r:x,g:A,b:N,a:w}}function h(l,m){var c=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;l.a*=c;var w=m.a+l.a-m.a*l.a,x=(m.r*m.a+l.r*l.a*(1-m.a))/w,A=(m.g*m.a+l.g*l.a*(1-m.a))/w,N=(m.b*m.a+l.b*l.a*(1-m.a))/w;return{r:x,g:A,b:N,a:w}}function g(l,m){var c=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;l.a*=c;var w=m.a+l.a-m.a*l.a,x=l.r*l.a,A=l.g*l.a,N=l.b*l.a,E=m.r*m.a,k=m.g*m.a,S=m.b*m.a,R=(x*E+x*(1-m.a)+E*(1-l.a))/w,M=(A*k+A*(1-m.a)+k*(1-l.a))/w,B=(N*S+N*(1-m.a)+S*(1-l.a))/w;return{r:R,g:M,b:B,a:w}}function b(l,m){var c=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;l.a*=c;var w=m.a+l.a-m.a*l.a,x=l.r*l.a,A=l.g*l.a,N=l.b*l.a,E=m.r*m.a,k=m.g*m.a,S=m.b*m.a,R=(x+E)/w,M=(A+k)/w,B=(N+S)/w;return{r:R,g:M,b:B,a:w}}function u(l,m){var c=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;l.a*=c;var w=m.a+l.a-m.a*l.a,x=l.r*l.a,A=l.g*l.a,N=l.b*l.a,E=m.r*m.a,k=m.g*m.a,S=m.b*m.a,R=(x*m.a+E*l.a-x*E+x*(1-m.a)+E*(1-l.a))/w,M=(A*m.a+k*l.a-A*k+A*(1-m.a)+k*(1-l.a))/w,B=(N*m.a+S*l.a-N*S+N*(1-m.a)+S*(1-l.a))/w;return{r:R,g:M,b:B,a:w}}function f(l,m){var c=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;l.a*=c;var w=m.a+l.a-m.a*l.a,x=l.r*l.a,A=l.g*l.a,N=l.b*l.a,E=m.r*m.a,k=m.g*m.a,S=m.b*m.a,R=(2*E<=m.a?2*x*E+x*(1-m.a)+E*(1-l.a):x*(1+m.a)+E*(1+l.a)-2*E*x-m.a*l.a)/w,M=(2*k<=m.a?2*A*k+A*(1-m.a)+k*(1-l.a):A*(1+m.a)+k*(1+l.a)-2*k*A-m.a*l.a)/w,B=(2*S<=m.a?2*N*S+N*(1-m.a)+S*(1-l.a):N*(1+m.a)+S*(1+l.a)-2*S*N-m.a*l.a)/w;return{r:R,g:M,b:B,a:w}}function s(l,m){var c=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;l.a*=c;var w=m.a+l.a-m.a*l.a,x=l.r*l.a,A=l.g*l.a,N=l.b*l.a,E=m.r*m.a,k=m.g*m.a,S=m.b*m.a,R=(Math.min(x*m.a,E*l.a)+x*(1-m.a)+E*(1-l.a))/w,M=(Math.min(A*m.a,k*l.a)+A*(1-m.a)+k*(1-l.a))/w,B=(Math.min(N*m.a,S*l.a)+N*(1-m.a)+S*(1-l.a))/w;return{r:R,g:M,b:B,a:w}}function i(l,m){var c=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;l.a*=c;var w=m.a+l.a-m.a*l.a,x=l.r*l.a,A=l.g*l.a,N=l.b*l.a,E=m.r*m.a,k=m.g*m.a,S=m.b*m.a,R=(Math.max(x*m.a,E*l.a)+x*(1-m.a)+E*(1-l.a))/w,M=(Math.max(A*m.a,k*l.a)+A*(1-m.a)+k*(1-l.a))/w,B=(Math.max(N*m.a,S*l.a)+N*(1-m.a)+S*(1-l.a))/w;return{r:R,g:M,b:B,a:w}}function n(l,m){var c=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;l.a*=c;var w=m.a+l.a-m.a*l.a,x=l.r*l.a,A=l.g*l.a,N=l.b*l.a,E=m.r*m.a,k=m.g*m.a,S=m.b*m.a,R=(2*x<=l.a?2*x*E+x*(1-m.a)+E*(1-l.a):x*(1+m.a)+E*(1+l.a)-2*E*x-m.a*l.a)/w,M=(2*A<=l.a?2*A*k+A*(1-m.a)+k*(1-l.a):A*(1+m.a)+k*(1+l.a)-2*k*A-m.a*l.a)/w,B=(2*N<=l.a?2*N*S+N*(1-m.a)+S*(1-l.a):N*(1+m.a)+S*(1+l.a)-2*S*N-m.a*l.a)/w;return{r:R,g:M,b:B,a:w}}function p(l,m){var c=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;l.a*=c;var w=m.a+l.a-m.a*l.a,x=l.r*l.a,A=l.g*l.a,N=l.b*l.a,E=m.r*m.a,k=m.g*m.a,S=m.b*m.a,R=(x+E-2*Math.min(x*m.a,E*l.a))/w,M=(A+k-2*Math.min(A*m.a,k*l.a))/w,B=(N+S-2*Math.min(N*m.a,S*l.a))/w;return{r:R,g:M,b:B,a:w}}function y(l,m){var c=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1;l.a*=c;var w=m.a+l.a-m.a*l.a,x=l.r*l.a,A=l.g*l.a,N=l.b*l.a,E=m.r*m.a,k=m.g*m.a,S=m.b*m.a,R=(x*m.a+E*l.a-2*x*E+x*(1-m.a)+E*(1-l.a))/w,M=(A*m.a+k*l.a-2*A*k+A*(1-m.a)+k*(1-l.a))/w,B=(N*m.a+S*l.a-2*N*S+N*(1-m.a)+S*(1-l.a))/w;return{r:R,g:M,b:B,a:w}}},{}],191:[function(t,d,o){var v=t("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(o,"__esModule",{value:!0}),o.default=u;var h=t("@jimp/utils"),g=v(t("../constants")),b=v(t("./composite-modes"));function u(f,s,i){var n=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},p=arguments.length>4?arguments[4]:void 0;if(typeof n=="function"&&(p=n,n={}),!(f instanceof this.constructor))return h.throwError.call(this,"The source must be a Jimp image",p);if(typeof s!="number"||typeof i!="number")return h.throwError.call(this,"x and y must be numbers",p);var y=n,l=y.mode,m=y.opacitySource,c=y.opacityDest;l||(l=g.BLEND_SOURCE_OVER),(typeof m!="number"||m<0||m>1)&&(m=1),(typeof c!="number"||c<0||c>1)&&(c=1);var w=b[l];s=Math.round(s),i=Math.round(i);var x=this;return c!==1&&x.opacity(c),f.scanQuiet(0,0,f.bitmap.width,f.bitmap.height,function(A,N,E){var k=x.getPixelIndex(s+A,i+N,g.EDGE_CROP),S=w({r:this.bitmap.data[E+0]/255,g:this.bitmap.data[E+1]/255,b:this.bitmap.data[E+2]/255,a:this.bitmap.data[E+3]/255},{r:x.bitmap.data[k+0]/255,g:x.bitmap.data[k+1]/255,b:x.bitmap.data[k+2]/255,a:x.bitmap.data[k+3]/255},m);x.bitmap.data[k+0]=this.constructor.limit255(S.r*255),x.bitmap.data[k+1]=this.constructor.limit255(S.g*255),x.bitmap.data[k+2]=this.constructor.limit255(S.b*255),x.bitmap.data[k+3]=this.constructor.limit255(S.a*255)}),(0,h.isNodePattern)(p)&&p.call(this,null,this),this}d.exports=o.default},{"../constants":192,"./composite-modes":190,"@babel/runtime/helpers/interopRequireWildcard":12,"@jimp/utils":235}],192:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.EDGE_CROP=o.EDGE_WRAP=o.EDGE_EXTEND=o.BLEND_EXCLUSION=o.BLEND_DIFFERENCE=o.BLEND_HARDLIGHT=o.BLEND_LIGHTEN=o.BLEND_DARKEN=o.BLEND_OVERLAY=o.BLEND_SCREEN=o.BLEND_ADD=o.BLEND_MULTIPLY=o.BLEND_DESTINATION_OVER=o.BLEND_SOURCE_OVER=o.VERTICAL_ALIGN_BOTTOM=o.VERTICAL_ALIGN_MIDDLE=o.VERTICAL_ALIGN_TOP=o.HORIZONTAL_ALIGN_RIGHT=o.HORIZONTAL_ALIGN_CENTER=o.HORIZONTAL_ALIGN_LEFT=o.AUTO=void 0;var v=-1;o.AUTO=v;var h=1;o.HORIZONTAL_ALIGN_LEFT=h;var g=2;o.HORIZONTAL_ALIGN_CENTER=g;var b=4;o.HORIZONTAL_ALIGN_RIGHT=b;var u=8;o.VERTICAL_ALIGN_TOP=u;var f=16;o.VERTICAL_ALIGN_MIDDLE=f;var s=32;o.VERTICAL_ALIGN_BOTTOM=s;var i="srcOver";o.BLEND_SOURCE_OVER=i;var n="dstOver";o.BLEND_DESTINATION_OVER=n;var p="multiply";o.BLEND_MULTIPLY=p;var y="add";o.BLEND_ADD=y;var l="screen";o.BLEND_SCREEN=l;var m="overlay";o.BLEND_OVERLAY=m;var c="darken";o.BLEND_DARKEN=c;var w="lighten";o.BLEND_LIGHTEN=w;var x="hardLight";o.BLEND_HARDLIGHT=x;var A="difference";o.BLEND_DIFFERENCE=A;var N="exclusion";o.BLEND_EXCLUSION=N;var E=1;o.EDGE_EXTEND=E;var k=2;o.EDGE_WRAP=k;var S=3;o.EDGE_CROP=S},{}],193:[function(t,d,o){(function(v){var h=t("@babel/runtime/helpers/interopRequireWildcard"),g=t("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(o,"__esModule",{value:!0}),o.addConstants=oe,o.addJimpMethods=ce,o.jimpEvMethod=X,o.jimpEvChange=K,Object.defineProperty(o,"addType",{enumerable:!0,get:function(){return Y.addType}}),o.default=void 0;for(var b=g(t("@babel/runtime/helpers/construct")),u=g(t("@babel/runtime/helpers/slicedToArray")),f=g(t("@babel/runtime/helpers/classCallCheck")),s=g(t("@babel/runtime/helpers/createClass")),i=g(t("@babel/runtime/helpers/possibleConstructorReturn")),n=g(t("@babel/runtime/helpers/getPrototypeOf")),p=g(t("@babel/runtime/helpers/assertThisInitialized")),y=g(t("@babel/runtime/helpers/inherits")),l=g(t("@babel/runtime/helpers/defineProperty")),m=g(t("@babel/runtime/helpers/typeof")),c=g(t("fs")),w=g(t("path")),x=g(t("events")),A=t("@jimp/utils"),N=g(t("any-base")),E=g(t("mkdirp")),k=g(t("pixelmatch")),S=g(t("tinycolor2")),R=g(t("./modules/phash")),M=g(t("./request")),B=g(t("./composite")),I=g(t("./utils/promisify")),Y=h(t("./utils/mime")),J=t("./utils/image-bitmap"),D=h(t("./constants")),T="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_",G=[NaN,NaN],U=2;U<65;U++){var ie=(0,N.default)(N.default.BIN,T.slice(0,U))(new Array(65).join("1"));G.push(ie.length)}function se(){}function ae(te){return Object.prototype.toString.call(te).toLowerCase().indexOf("arraybuffer")>-1}function W(te){for(var V=v.alloc(te.byteLength),z=new Uint8Array(te),F=0;F<V.length;++F)V[F]=z[F];return V}function ee(te,V){(0,M.default)(te,function(z,F,q){if(z)return V(z);if("headers"in F&&"location"in F.headers)return te.url=F.headers.location,ee(te,V);if((0,m.default)(q)==="object"&&v.isBuffer(q))return V(null,q);var H="Could not load Buffer from <"+te.url+"> (HTTP: "+F.statusCode+")";return new Error(H)})}function _(te,V){c.default&&typeof c.default.readFile=="function"&&!te.match(/^(http|ftp)s?:\/\/./)?c.default.readFile(te,V):ee({url:te},V)}function re(te){return te&&(0,m.default)(te)==="object"&&typeof te.width=="number"&&typeof te.height=="number"&&(v.isBuffer(te.data)||te.data instanceof Uint8Array||typeof Uint8ClampedArray=="function"&&te.data instanceof Uint8ClampedArray)&&(te.data.length===te.width*te.height*4||te.data.length===te.width*te.height*3)}function fe(te){if(te.length%3!==0)throw new Error("Buffer length is incorrect");for(var V=v.allocUnsafe(te.length/3*4),z=0,F=0;F<te.length;F++)V[z]=te[F],(F+1)%3===0&&(V[++z]=255),z++;return V}var pe={data:null,width:null,height:null},he=function(te){(0,y.default)(V,te);function V(){for(var z,F=arguments.length,q=new Array(F),H=0;H<F;H++)q[H]=arguments[H];(0,f.default)(this,V),z=(0,i.default)(this,(0,n.default)(V).call(this)),(0,l.default)((0,p.default)(z),"bitmap",pe),(0,l.default)((0,p.default)(z),"_background",0),(0,l.default)((0,p.default)(z),"_originalMime",V.MIME_PNG),(0,l.default)((0,p.default)(z),"_exif",null),(0,l.default)((0,p.default)(z),"_rgba",!0),(0,l.default)((0,p.default)(z),"writeAsync",function(Me){return(0,I.default)(z.write,(0,p.default)(z),Me)}),(0,l.default)((0,p.default)(z),"getBase64Async",function(Me){return(0,I.default)(z.getBase64,(0,p.default)(z),Me)}),(0,l.default)((0,p.default)(z),"getBuffer",J.getBuffer),(0,l.default)((0,p.default)(z),"getBufferAsync",J.getBufferAsync),(0,l.default)((0,p.default)(z),"getPixelColour",z.getPixelColor),(0,l.default)((0,p.default)(z),"setPixelColour",z.setPixelColor);var O=(0,p.default)(z),C=se;ae(q[0])&&(q[0]=W(q[0]));function Q(){for(var Me=arguments.length,j=new Array(Me),me=0;me<Me;me++)j[me]=arguments[me];var be=j[0],Pe=be||{};Pe.methodName="constructor",setTimeout(function(){var ve;be&&C===se?O.emitError("constructor",be):be||O.emitMulti("constructor","initialized"),(ve=C).call.apply(ve,[O].concat(j))},1)}if(typeof q[0]=="number"&&typeof q[1]=="number"||parseInt(q[0],10)&&parseInt(q[1],10)){var le=parseInt(q[0],10),ge=parseInt(q[1],10);if(C=q[2],typeof q[2]=="number"&&(z._background=q[2],C=q[3]),typeof q[2]=="string"&&(z._background=V.cssColorToHex(q[2]),C=q[3]),typeof C=="undefined"&&(C=se),typeof C!="function")return(0,i.default)(z,A.throwError.call((0,p.default)(z),"cb must be a function",Q));z.bitmap={data:v.alloc(le*ge*4),width:le,height:ge};for(var ye=0;ye<z.bitmap.data.length;ye+=4)z.bitmap.data.writeUInt32BE(z._background,ye);Q(null,(0,p.default)(z))}else if((0,m.default)(q[0])==="object"&&q[0].url){if(C=q[1]||se,typeof C!="function")return(0,i.default)(z,A.throwError.call((0,p.default)(z),"cb must be a function",Q));ee(q[0],function(Me,j){if(Me)return A.throwError.call((0,p.default)(z),Me,Q);z.parseBitmap(j,q[0].url,Q)})}else if(q[0]instanceof V){var Ee=q[0];if(C=q[1],typeof C=="undefined"&&(C=se),typeof C!="function")return(0,i.default)(z,A.throwError.call((0,p.default)(z),"cb must be a function",Q));z.bitmap={data:v.from(Ee.bitmap.data),width:Ee.bitmap.width,height:Ee.bitmap.height},z._quality=Ee._quality,z._deflateLevel=Ee._deflateLevel,z._deflateStrategy=Ee._deflateStrategy,z._filterType=Ee._filterType,z._rgba=Ee._rgba,z._background=Ee._background,z._originalMime=Ee._originalMime,Q(null,(0,p.default)(z))}else if(re(q[0])){var Se=q[0];C=q[1]||se;var Ie=Se.width*Se.height*4===Se.data.length,Oe=Ie?v.from(Se.data):fe(Se.data);z.bitmap={data:Oe,width:Se.width,height:Se.height},Q(null,(0,p.default)(z))}else if(typeof q[0]=="string"){var Fe=q[0];if(C=q[1],typeof C=="undefined"&&(C=se),typeof C!="function")return(0,i.default)(z,A.throwError.call((0,p.default)(z),"cb must be a function",Q));_(Fe,function(Me,j){if(Me)return A.throwError.call((0,p.default)(z),Me,Q);z.parseBitmap(j,Fe,Q)})}else if((0,m.default)(q[0])==="object"&&v.isBuffer(q[0])){var ke=q[0];if(C=q[1],typeof C!="function")return(0,i.default)(z,A.throwError.call((0,p.default)(z),"cb must be a function",Q));z.parseBitmap(ke,null,Q)}else{C=q[q.length-1],typeof C!="function"&&(C=q[q.length-2],typeof C!="function"&&(C=se));var He=V.__extraConstructors.find(function(Me){return Me.test.apply(Me,q)});if(He)new Promise(function(Me,j){var me;return(me=He.run).call.apply(me,[(0,p.default)(z),Me,j].concat(q))}).then(function(){return Q(null,(0,p.default)(z))}).catch(Q);else return(0,i.default)(z,A.throwError.call((0,p.default)(z),"No matching constructor overloading was found. Please see the docs for how to call the Jimp constructor.",Q))}return z}return(0,s.default)(V,[{key:"parseBitmap",value:function(F,q,H){J.parseBitmap.call(this,F,null,H)}},{key:"rgba",value:function(F,q){return typeof F!="boolean"?A.throwError.call(this,"bool must be a boolean, true for RGBA or false for RGB",q):(this._rgba=F,(0,A.isNodePattern)(q)&&q.call(this,null,this),this)}},{key:"emitMulti",value:function(F,q){var H=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};H=Object.assign(H,{methodName:F,eventName:q}),this.emit("any",H),F&&this.emit(F,H),this.emit(q,H)}},{key:"emitError",value:function(F,q){this.emitMulti(F,"error",q)}},{key:"getHeight",value:function(){return this.bitmap.height}},{key:"getWidth",value:function(){return this.bitmap.width}},{key:"inspect",value:function(){return"<Jimp "+(this.bitmap===pe?"pending...":this.bitmap.width+"x"+this.bitmap.height)+">"}},{key:"toString",value:function(){return"[object Jimp]"}},{key:"getMIME",value:function(){var F=this._originalMime||V.MIME_PNG;return F}},{key:"getExtension",value:function(){var F=this.getMIME();return Y.getExtension(F)}},{key:"write",value:function(F,q){var H=this;if(!c.default||!c.default.createWriteStream)throw new Error("Cant access the filesystem. You can use the getBase64 method.");if(typeof F!="string")return A.throwError.call(this,"path must be a string",q);if(typeof q=="undefined"&&(q=se),typeof q!="function")return A.throwError.call(this,"cb must be a function",q);var O=Y.getType(F)||this.getMIME(),C=w.default.parse(F);return C.dir&&E.default.sync(C.dir),this.getBuffer(O,function(Q,le){if(Q)return A.throwError.call(H,Q,q);var ge=c.default.createWriteStream(F);ge.on("open",function(){ge.write(le),ge.end()}).on("error",function(ye){return A.throwError.call(H,ye,q)}),ge.on("finish",function(){q.call(H,null,H)})}),this}},{key:"getBase64",value:function(F,q){return F===V.AUTO&&(F=this.getMIME()),typeof F!="string"?A.throwError.call(this,"mime must be a string",q):typeof q!="function"?A.throwError.call(this,"cb must be a function",q):(this.getBuffer(F,function(H,O){if(H)return A.throwError.call(this,H,q);var C="data:"+F+";base64,"+O.toString("base64");q.call(this,null,C)}),this)}},{key:"hash",value:function(F,q){if(F=F||64,typeof F=="function"&&(q=F,F=64),typeof F!="number")return A.throwError.call(this,"base must be a number",q);if(F<2||F>64)return A.throwError.call(this,"base must be a number between 2 and 64",q);var H=this.pHash();for(H=(0,N.default)(N.default.BIN,T.slice(0,F))(H);H.length<G[F];)H="0"+H;return(0,A.isNodePattern)(q)&&q.call(this,null,H),H}},{key:"pHash",value:function(){var F=new R.default;return F.getHash(this)}},{key:"distanceFromHash",value:function(F){var q=new R.default,H=q.getHash(this);return q.distance(H,F)}},{key:"getPixelIndex",value:function(F,q,H,O){var C,Q;if(typeof H=="function"&&typeof O=="undefined"&&(O=H,H=null),H||(H=V.EDGE_EXTEND),typeof F!="number"||typeof q!="number")return A.throwError.call(this,"x and y must be numbers",O);F=Math.round(F),q=Math.round(q),C=F,Q=q,H===V.EDGE_EXTEND&&(F<0&&(C=0),F>=this.bitmap.width&&(C=this.bitmap.width-1),q<0&&(Q=0),q>=this.bitmap.height&&(Q=this.bitmap.height-1)),H===V.EDGE_WRAP&&(F<0&&(C=this.bitmap.width+F),F>=this.bitmap.width&&(C=F%this.bitmap.width),q<0&&(C=this.bitmap.height+q),q>=this.bitmap.height&&(Q=q%this.bitmap.height));var le=this.bitmap.width*Q+C<<2;return(C<0||C>=this.bitmap.width)&&(le=-1),(Q<0||Q>=this.bitmap.height)&&(le=-1),(0,A.isNodePattern)(O)&&O.call(this,null,le),le}},{key:"getPixelColor",value:function(F,q,H){if(typeof F!="number"||typeof q!="number")return A.throwError.call(this,"x and y must be numbers",H);F=Math.round(F),q=Math.round(q);var O=this.getPixelIndex(F,q),C=this.bitmap.data.readUInt32BE(O);return(0,A.isNodePattern)(H)&&H.call(this,null,C),C}},{key:"setPixelColor",value:function(F,q,H,O){if(typeof F!="number"||typeof q!="number"||typeof H!="number")return A.throwError.call(this,"hex, x and y must be numbers",O);q=Math.round(q),H=Math.round(H);var C=this.getPixelIndex(q,H);return this.bitmap.data.writeUInt32BE(F,C),(0,A.isNodePattern)(O)&&O.call(this,null,this),this}},{key:"hasAlpha",value:function(){for(var F=0;F<this.bitmap.height;F++)for(var q=0;q<this.bitmap.width;q++){var H=this.bitmap.width*F+q<<2,O=this.bitmap.data[H+3];if(O!==255)return!0}return!1}},{key:"scanIterator",value:function(F,q,H,O){return typeof F!="number"||typeof q!="number"?A.throwError.call(this,"x and y must be numbers"):typeof H!="number"||typeof O!="number"?A.throwError.call(this,"w and h must be numbers"):(0,A.scanIterator)(this,F,q,H,O)}}]),V}(x.default);function oe(te){var V=arguments.length>1&&arguments[1]!==void 0?arguments[1]:he;Object.entries(te).forEach(function(z){var F=(0,u.default)(z,2),q=F[0],H=F[1];V[q]=H})}function ce(te){var V=arguments.length>1&&arguments[1]!==void 0?arguments[1]:he;Object.entries(te).forEach(function(z){var F=(0,u.default)(z,2),q=F[0],H=F[1];V.prototype[q]=H})}oe(D),ce({composite:B.default}),he.__extraConstructors=[],he.appendConstructorOption=function(te,V,z){he.__extraConstructors.push({name:te,test:V,run:z})},he.read=function(){for(var te=arguments.length,V=new Array(te),z=0;z<te;z++)V[z]=arguments[z];return new Promise(function(F,q){(0,b.default)(he,V.concat([function(H,O){H?q(H):F(O)}]))})},he.create=he.read,he.rgbaToInt=function(te,V,z,F,q){if(typeof te!="number"||typeof V!="number"||typeof z!="number"||typeof F!="number")return A.throwError.call(this,"r, g, b and a must be numbers",q);if(te<0||te>255)return A.throwError.call(this,"r must be between 0 and 255",q);if((V<0||V>255)&&A.throwError.call(this,"g must be between 0 and 255",q),z<0||z>255)return A.throwError.call(this,"b must be between 0 and 255",q);if(F<0||F>255)return A.throwError.call(this,"a must be between 0 and 255",q);te=Math.round(te),z=Math.round(z),V=Math.round(V),F=Math.round(F);var H=te*Math.pow(256,3)+V*Math.pow(256,2)+z*Math.pow(256,1)+F*Math.pow(256,0);return(0,A.isNodePattern)(q)&&q.call(this,null,H),H},he.intToRGBA=function(te,V){if(typeof te!="number")return A.throwError.call(this,"i must be a number",V);var z={};return z.r=Math.floor(te/Math.pow(256,3)),z.g=Math.floor((te-z.r*Math.pow(256,3))/Math.pow(256,2)),z.b=Math.floor((te-z.r*Math.pow(256,3)-z.g*Math.pow(256,2))/Math.pow(256,1)),z.a=Math.floor((te-z.r*Math.pow(256,3)-z.g*Math.pow(256,2)-z.b*Math.pow(256,1))/Math.pow(256,0)),(0,A.isNodePattern)(V)&&V.call(this,null,z),z},he.cssColorToHex=function(te){return te=te||0,typeof te=="number"?Number(te):parseInt((0,S.default)(te).toHex8(),16)},he.limit255=function(te){return te=Math.max(te,0),te=Math.min(te,255),te},he.diff=function(te,V){var z=arguments.length>2&&arguments[2]!==void 0?arguments[2]:.1;if(!(te instanceof he)||!(V instanceof he))return A.throwError.call(this,"img1 and img2 must be an Jimp images");var F=te.bitmap,q=V.bitmap;if((F.width!==q.width||F.height!==q.height)&&(F.width*F.height>q.width*q.height?te=te.cloneQuiet().resize(q.width,q.height):V=V.cloneQuiet().resize(F.width,F.height)),typeof z!="number"||z<0||z>1)return A.throwError.call(this,"threshold must be a number between 0 and 1");var H=new he(F.width,F.height,4294967295),O=(0,k.default)(F.data,q.data,H.bitmap.data,H.bitmap.width,H.bitmap.height,{threshold:z});return{percent:O/(H.bitmap.width*H.bitmap.height),image:H}},he.distance=function(te,V){var z=new R.default,F=z.getHash(te),q=z.getHash(V);return z.distance(F,q)},he.compareHashes=function(te,V){var z=new R.default;return z.distance(te,V)},he.colorDiff=function(te,V){var z=function(O){return Math.pow(O,2)},F=Math.max,q=255*255*3;return te.a!==0&&!te.a&&(te.a=255),V.a!==0&&!V.a&&(V.a=255),(F(z(te.r-V.r),z(te.r-V.r-te.a+V.a))+F(z(te.g-V.g),z(te.g-V.g-te.a+V.a))+F(z(te.b-V.b),z(te.b-V.b-te.a+V.a)))/q};function X(te,V,z){var F="before-"+V,q=V.replace(/e$/,"")+"ed";he.prototype[te]=function(){for(var H,O=arguments.length,C=new Array(O),Q=0;Q<O;Q++)C[Q]=arguments[Q];var le=C[z.length-1],ge=this;typeof le=="function"?(H=function(){for(var Se=arguments.length,Ie=new Array(Se),Oe=0;Oe<Se;Oe++)Ie[Oe]=arguments[Oe];var Fe=Ie[0],ke=Ie[1];Fe?ge.emitError(te,Fe):ge.emitMulti(te,q,(0,l.default)({},te,ke)),le.apply(this,Ie)},C[C.length-1]=H):H=!1,this.emitMulti(te,F);var ye;try{ye=z.apply(this,C),H||this.emitMulti(te,q,(0,l.default)({},te,ye))}catch(Ee){Ee.methodName=te,this.emitError(te,Ee)}return ye},he.prototype[te+"Quiet"]=z}X("clone","clone",function(te){var V=new he(this);return(0,A.isNodePattern)(te)&&te.call(V,null,V),V});function K(te,V){X(te,"change",V)}K("background",function(te,V){return typeof te!="number"?A.throwError.call(this,"hex must be a hexadecimal rgba value",V):(this._background=te,(0,A.isNodePattern)(V)&&V.call(this,null,this),this)}),K("scan",function(te,V,z,F,q,H){if(typeof te!="number"||typeof V!="number")return A.throwError.call(this,"x and y must be numbers",H);if(typeof z!="number"||typeof F!="number")return A.throwError.call(this,"w and h must be numbers",H);if(typeof q!="function")return A.throwError.call(this,"f must be a function",H);var O=(0,A.scan)(this,te,V,z,F,q);return(0,A.isNodePattern)(H)&&H.call(this,null,O),O});{var L;typeof a!="undefined"&&(typeof a=="undefined"?"undefined":(0,m.default)(a))==="object"&&(L=a),typeof self!="undefined"&&(typeof self=="undefined"?"undefined":(0,m.default)(self))==="object"&&(L=self),L.Jimp=he,L.Buffer=v}var $=he;o.default=$}).call(this,t("buffer").Buffer)},{"./composite":191,"./constants":192,"./modules/phash":194,"./request":195,"./utils/image-bitmap":196,"./utils/mime":197,"./utils/promisify":198,"@babel/runtime/helpers/assertThisInitialized":3,"@babel/runtime/helpers/classCallCheck":4,"@babel/runtime/helpers/construct":5,"@babel/runtime/helpers/createClass":6,"@babel/runtime/helpers/defineProperty":7,"@babel/runtime/helpers/getPrototypeOf":9,"@babel/runtime/helpers/inherits":10,"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/interopRequireWildcard":12,"@babel/runtime/helpers/possibleConstructorReturn":17,"@babel/runtime/helpers/slicedToArray":19,"@babel/runtime/helpers/typeof":21,"@jimp/utils":235,"any-base":23,buffer:48,events:52,fs:47,mkdirp:83,path:107,pixelmatch:109,tinycolor2:178}],194:[function(t,d,o){function v(f,s){this.size=this.size||f,this.smallerSize=this.smallerSize||s,b(this.size)}v.prototype.size=32,v.prototype.smallerSize=8,v.prototype.distance=function(f,s){for(var i=0,n=0;n<f.length;n++)f[n]!==s[n]&&i++;return i/f.length},v.prototype.getHash=function(f){f=f.clone().resize(this.size,this.size),f.grayscale();for(var s=[],i=0;i<f.bitmap.width;i++){s[i]=[];for(var n=0;n<f.bitmap.height;n++)s[i][n]=h(f.getPixelColor(i,n)).b}for(var p=u(s,this.size),y=0,l=0;l<this.smallerSize;l++)for(var m=0;m<this.smallerSize;m++)y+=p[l][m];for(var c=y/(this.smallerSize*this.smallerSize),w="",x=0;x<this.smallerSize;x++)for(var A=0;A<this.smallerSize;A++)w+=p[x][A]>c?"1":"0";return w};function h(f){var s={};return s.r=Math.floor(f/Math.pow(256,3)),s.g=Math.floor((f-s.r*Math.pow(256,3))/Math.pow(256,2)),s.b=Math.floor((f-s.r*Math.pow(256,3)-s.g*Math.pow(256,2))/Math.pow(256,1)),s.a=Math.floor((f-s.r*Math.pow(256,3)-s.g*Math.pow(256,2)-s.b*Math.pow(256,1))/Math.pow(256,0)),s}var g=[];function b(f){for(var s=1;s<f;s++)g[s]=1;g[0]=1/Math.sqrt(2)}function u(f,s){for(var i=s,n=[],p=0;p<i;p++){n[p]=[];for(var y=0;y<i;y++){for(var l=0,m=0;m<i;m++)for(var c=0;c<i;c++)l+=Math.cos((2*m+1)/(2*i)*p*Math.PI)*Math.cos((2*c+1)/(2*i)*y*Math.PI)*f[m][c];l*=g[p]*g[y]/4,n[p][y]=l}}return n}d.exports=v},{}],195:[function(t,d,o){(function(v,h){var g=t("@babel/runtime/helpers/interopRequireDefault"),b=g(t("@babel/runtime/helpers/defineProperty")),u=g(t("@babel/runtime/helpers/extends"));function f(i,n){var p=Object.keys(i);if(Object.getOwnPropertySymbols){var y=Object.getOwnPropertySymbols(i);n&&(y=y.filter(function(l){return Object.getOwnPropertyDescriptor(i,l).enumerable})),p.push.apply(p,y)}return p}function s(i){for(var n=1;n<arguments.length;n++){var p=arguments[n]!=null?arguments[n]:{};n%2?f(p,!0).forEach(function(y){(0,b.default)(i,y,p[y])}):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(p)):f(p).forEach(function(y){Object.defineProperty(i,y,Object.getOwnPropertyDescriptor(p,y))})}return i}v.browser,d.exports=function(i,n){var p=new XMLHttpRequest;p.open("GET",i.url,!0),p.responseType="arraybuffer",p.addEventListener("load",function(){if(p.status<400)try{var y=h.from(this.response);n(null,p,y)}catch(l){return n(new Error("Response is not a buffer for url "+i.url+". Error: "+l.message))}else n(new Error("HTTP Status "+p.status+" for url "+i.url))}),p.addEventListener("error",function(y){n(y)}),p.send()}}).call(this,t("_process"),t("buffer").Buffer)},{"@babel/runtime/helpers/defineProperty":7,"@babel/runtime/helpers/extends":8,"@babel/runtime/helpers/interopRequireDefault":11,_process:133,buffer:48,phin:108}],196:[function(t,d,o){(function(v){var h=t("@babel/runtime/helpers/interopRequireWildcard"),g=t("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(o,"__esModule",{value:!0}),o.parseBitmap=x,o.getBuffer=N,o.getBufferAsync=E;var b=g(t("@babel/runtime/helpers/slicedToArray")),u=g(t("file-type")),f=g(t("exif-parser")),s=t("@jimp/utils"),i=h(t("../constants")),n=h(t("./mime")),p=g(t("./promisify"));function y(k,S){var R=(0,u.default)(k);return R?R.mime:S?n.getType(S):null}function l(k){return k._exif&&k._exif.tags&&k._exif.tags.Orientation||1}function m(k){var S=k.getWidth(),R=k.getHeight();switch(l(k)){case 1:return null;case 2:return function(M,B){return[S-M-1,B]};case 3:return function(M,B){return[S-M-1,R-B-1]};case 4:return function(M,B){return[M,R-B-1]};case 5:return function(M,B){return[B,M]};case 6:return function(M,B){return[B,R-M-1]};case 7:return function(M,B){return[S-B-1,R-M-1]};case 8:return function(M,B){return[S-B-1,M]};default:return null}}function c(k,S,R,M){for(var B=k.bitmap.data,I=k.bitmap.width,Y=v.alloc(B.length),J=0;J<S;J++)for(var D=0;D<R;D++){var T=M(J,D),G=(0,b.default)(T,2),U=G[0],ie=G[1],se=S*D+J<<2,ae=I*ie+U<<2,W=B.readUInt32BE(ae);Y.writeUInt32BE(W,se)}k.bitmap.data=Y,k.bitmap.width=S,k.bitmap.height=R}function w(k){if(!(l(k)<2)){var S=m(k),R=l(k)>4,M=R?k.bitmap.height:k.bitmap.width,B=R?k.bitmap.width:k.bitmap.height;c(k,M,B,S)}}function x(k,S,R){var M=y(k,S);if(typeof M!="string")return R(new Error("Could not find MIME for Buffer <"+S+">"));this._originalMime=M.toLowerCase();try{var B=this.getMIME();if(this.constructor.decoders[B])this.bitmap=this.constructor.decoders[B](k);else return s.throwError.call(this,"Unsupported MIME type: "+B,R)}catch(I){return R.call(this,I,this)}try{this._exif=f.default.create(k).parse(),w(this)}catch{}return R.call(this,null,this),this}function A(k,S){return new k(S.bitmap.width,S.bitmap.height,S._background).composite(S,0,0).bitmap}function N(k,S){if(k===i.AUTO&&(k=this.getMIME()),typeof k!="string")return s.throwError.call(this,"mime must be a string",S);if(typeof S!="function")return s.throwError.call(this,"cb must be a function",S);if(k=k.toLowerCase(),this._rgba&&this.constructor.hasAlpha[k]?this.bitmap.data=v.from(this.bitmap.data):this.bitmap.data=A(this.constructor,this).data,this.constructor.encoders[k]){var R=this.constructor.encoders[k](this);S.call(this,null,R)}else S.call(this,"Unsupported MIME type: "+k);return this}function E(k){return(0,p.default)(N,this,k)}}).call(this,t("buffer").Buffer)},{"../constants":192,"./mime":197,"./promisify":198,"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/interopRequireWildcard":12,"@babel/runtime/helpers/slicedToArray":19,"@jimp/utils":235,buffer:48,"exif-parser":53,"file-type":62}],197:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.getExtension=o.getType=o.addType=void 0;var v={},h=function(s){return Object.entries(v).find(function(i){return i[1].includes(s)})||[]},g=function(s,i){v[s]=i};o.addType=g;var b=function(s){var i=s.split("/").slice(-1),n=i[i.length-1].split(".").pop(),p=h(n);return p[0]};o.getType=b;var u=function(s){return(v[s.toLowerCase()]||[])[0]};o.getExtension=u},{}],198:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var v=function(b,u){for(var f=arguments.length,s=new Array(f>2?f-2:0),i=2;i<f;i++)s[i-2]=arguments[i];return new Promise(function(n,p){s.push(function(y,l){y&&p(y),n(l)}),b.bind(u).apply(void 0,s)})},h=v;o.default=h,d.exports=o.default},{}],199:[function(t,d,o){var v=t("@babel/runtime/helpers/interopRequireWildcard"),h=t("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(o,"__esModule",{value:!0}),o.default=n;var g=h(t("@babel/runtime/helpers/toConsumableArray")),b=h(t("@babel/runtime/helpers/defineProperty")),u=h(t("@babel/runtime/helpers/slicedToArray")),f=v(t("@jimp/core"));function s(p,y){var l=Object.keys(p);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(p);y&&(m=m.filter(function(c){return Object.getOwnPropertyDescriptor(p,c).enumerable})),l.push.apply(l,m)}return l}function i(p){for(var y=1;y<arguments.length;y++){var l=arguments[y]!=null?arguments[y]:{};y%2?s(l,!0).forEach(function(m){(0,b.default)(p,m,l[m])}):Object.getOwnPropertyDescriptors?Object.defineProperties(p,Object.getOwnPropertyDescriptors(l)):s(l).forEach(function(m){Object.defineProperty(p,m,Object.getOwnPropertyDescriptor(l,m))})}return p}function n(p){var y=arguments.length>1&&arguments[1]!==void 0?arguments[1]:f.default,l={hasAlpha:{},encoders:{},decoders:{},class:{},constants:{}};function m(x){Object.entries(x).forEach(function(A){var N=(0,u.default)(A,2),E=N[0],k=N[1];l[E]=i({},l[E],{},k)})}function c(x){var A=x();Array.isArray(A.mime)?f.addType.apply(void 0,(0,g.default)(A.mime)):Object.entries(A.mime).forEach(function(N){return f.addType.apply(void 0,(0,g.default)(N))}),delete A.mime,m(A)}function w(x){var A=x(f.jimpEvChange)||{};!A.class&&!A.constants?m({class:A}):m(A)}return p.types&&(p.types.forEach(c),y.decoders=i({},y.decoders,{},l.decoders),y.encoders=i({},y.encoders,{},l.encoders),y.hasAlpha=i({},y.hasAlpha,{},l.hasAlpha)),p.plugins&&p.plugins.forEach(w),(0,f.addJimpMethods)(l.class,y),(0,f.addConstants)(l.constants,y),f.default}d.exports=o.default},{"@babel/runtime/helpers/defineProperty":7,"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/interopRequireWildcard":12,"@babel/runtime/helpers/slicedToArray":19,"@babel/runtime/helpers/toConsumableArray":20,"@jimp/core":193}],200:[function(t,d,o){var v=t("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var h=v(t("@jimp/custom")),g=v(t("@jimp/types")),b=v(t("@jimp/plugins")),u=(0,h.default)({types:[g.default],plugins:[b.default]});o.default=u,d.exports=o.default},{"@babel/runtime/helpers/interopRequireDefault":11,"@jimp/custom":199,"@jimp/plugins":228,"@jimp/types":234}],201:[function(t,d,o){var v=t("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var h=v(t("@babel/runtime/helpers/typeof")),g=t("@jimp/utils"),b=function(){return{blit:function(s,i,n,p,y,l,m,c){if(!(s instanceof this.constructor))return g.throwError.call(this,"The source must be a Jimp image",c);if(typeof i!="number"||typeof n!="number")return g.throwError.call(this,"x and y must be numbers",c);if(typeof p=="function")c=p,p=0,y=0,l=s.bitmap.width,m=s.bitmap.height;else if((0,h.default)(p)===(0,h.default)(y)&&(0,h.default)(y)===(0,h.default)(l)&&(0,h.default)(l)===(0,h.default)(m))p=p||0,y=y||0,l=l||s.bitmap.width,m=m||s.bitmap.height;else return g.throwError.call(this,"srcx, srcy, srcw, srch must be numbers",c);i=Math.round(i),n=Math.round(n),p=Math.round(p),y=Math.round(y),l=Math.round(l),m=Math.round(m);var w=this.bitmap.width,x=this.bitmap.height,A=this;return s.scanQuiet(p,y,l,m,function(N,E,k){var S=i+N-p,R=n+E-y;if(S>=0&&R>=0&&w-S>0&&x-R>0){var M=A.getPixelIndex(S,R),B={r:this.bitmap.data[k],g:this.bitmap.data[k+1],b:this.bitmap.data[k+2],a:this.bitmap.data[k+3]},I={r:A.bitmap.data[M],g:A.bitmap.data[M+1],b:A.bitmap.data[M+2],a:A.bitmap.data[M+3]};A.bitmap.data[M]=(B.a*(B.r-I.r)-I.r+255>>8)+I.r,A.bitmap.data[M+1]=(B.a*(B.g-I.g)-I.g+255>>8)+I.g,A.bitmap.data[M+2]=(B.a*(B.b-I.b)-I.b+255>>8)+I.b,A.bitmap.data[M+3]=this.constructor.limit255(I.a+B.a)}}),(0,g.isNodePattern)(c)&&c.call(this,null,this),this}}};o.default=b,d.exports=o.default},{"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/typeof":21,"@jimp/utils":235}],202:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.shgTable=o.mulTable=void 0;var v=[1,57,41,21,203,34,97,73,227,91,149,62,105,45,39,137,241,107,3,173,39,71,65,238,219,101,187,87,81,151,141,133,249,117,221,209,197,187,177,169,5,153,73,139,133,127,243,233,223,107,103,99,191,23,177,171,165,159,77,149,9,139,135,131,253,245,119,231,224,109,211,103,25,195,189,23,45,175,171,83,81,79,155,151,147,9,141,137,67,131,129,251,123,30,235,115,113,221,217,53,13,51,50,49,193,189,185,91,179,175,43,169,83,163,5,79,155,19,75,147,145,143,35,69,17,67,33,65,255,251,247,243,239,59,29,229,113,111,219,27,213,105,207,51,201,199,49,193,191,47,93,183,181,179,11,87,43,85,167,165,163,161,159,157,155,77,19,75,37,73,145,143,141,35,138,137,135,67,33,131,129,255,63,250,247,61,121,239,237,117,29,229,227,225,111,55,109,216,213,211,209,207,205,203,201,199,197,195,193,48,190,47,93,185,183,181,179,178,176,175,173,171,85,21,167,165,41,163,161,5,79,157,78,154,153,19,75,149,74,147,73,144,143,71,141,140,139,137,17,135,134,133,66,131,65,129,1];o.mulTable=v;var h=[0,9,10,10,14,12,14,14,16,15,16,15,16,15,15,17,18,17,12,18,16,17,17,19,19,18,19,18,18,19,19,19,20,19,20,20,20,20,20,20,15,20,19,20,20,20,21,21,21,20,20,20,21,18,21,21,21,21,20,21,17,21,21,21,22,22,21,22,22,21,22,21,19,22,22,19,20,22,22,21,21,21,22,22,22,18,22,22,21,22,22,23,22,20,23,22,22,23,23,21,19,21,21,21,23,23,23,22,23,23,21,23,22,23,18,22,23,20,22,23,23,23,21,22,20,22,21,22,24,24,24,24,24,22,21,24,23,23,24,21,24,23,24,22,24,24,22,24,24,22,23,24,24,24,20,23,22,23,24,24,24,24,24,24,24,23,21,23,22,23,24,24,24,22,24,24,24,23,22,24,24,25,23,25,25,23,24,25,25,24,22,25,25,25,24,23,24,25,25,25,25,25,25,25,25,25,25,25,25,23,25,23,24,25,25,25,25,25,25,25,25,25,24,22,25,25,23,25,25,20,24,25,24,25,25,22,24,25,24,25,24,25,25,24,25,25,25,25,22,25,25,25,24,25,24,25,18];o.shgTable=h},{}],203:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var v=t("@jimp/utils"),h=t("./blur-tables"),g=function(){return{blur:function(f,s){if(typeof f!="number")return v.throwError.call(this,"r must be a number",s);if(f<1)return v.throwError.call(this,"r must be greater than 0",s);for(var i,n,p,y,l,m,c,w,x,A,N,E,k,S,R=this.bitmap.width-1,M=this.bitmap.height-1,B=f+1,I=h.mulTable[f],Y=h.shgTable[f],J=[],D=[],T=[],G=[],U=[],ie=[],se=2;se-- >0;){for(E=0,k=0,m=0;m<this.bitmap.height;m++){for(i=this.bitmap.data[k]*B,n=this.bitmap.data[k+1]*B,p=this.bitmap.data[k+2]*B,y=this.bitmap.data[k+3]*B,c=1;c<=f;c++)w=k+((c>R?R:c)<<2),i+=this.bitmap.data[w++],n+=this.bitmap.data[w++],p+=this.bitmap.data[w++],y+=this.bitmap.data[w];for(l=0;l<this.bitmap.width;l++)J[E]=i,D[E]=n,T[E]=p,G[E]=y,m===0&&(U[l]=((w=l+B)<R?w:R)<<2,ie[l]=(w=l-f)>0?w<<2:0),x=k+U[l],A=k+ie[l],i+=this.bitmap.data[x++]-this.bitmap.data[A++],n+=this.bitmap.data[x++]-this.bitmap.data[A++],p+=this.bitmap.data[x++]-this.bitmap.data[A++],y+=this.bitmap.data[x]-this.bitmap.data[A],E++;k+=this.bitmap.width<<2}for(l=0;l<this.bitmap.width;l++){for(N=l,i=J[N]*B,n=D[N]*B,p=T[N]*B,y=G[N]*B,c=1;c<=f;c++)N+=c>M?0:this.bitmap.width,i+=J[N],n+=D[N],p+=T[N],y+=G[N];for(E=l<<2,m=0;m<this.bitmap.height;m++)S=y*I>>>Y,this.bitmap.data[E+3]=S,S>255&&(this.bitmap.data[E+3]=255),S>0?(S=255/S,this.bitmap.data[E]=(i*I>>>Y)*S,this.bitmap.data[E+1]=(n*I>>>Y)*S,this.bitmap.data[E+2]=(p*I>>>Y)*S):(this.bitmap.data[E+2]=0,this.bitmap.data[E+1]=0,this.bitmap.data[E]=0),l===0&&(U[m]=((w=m+B)<M?w:M)*this.bitmap.width,ie[m]=(w=m-f)>0?w*this.bitmap.width:0),x=l+U[m],A=l+ie[m],i+=J[x]-J[A],n+=D[x]-D[A],p+=T[x]-T[A],y+=G[x]-G[A],E+=this.bitmap.width<<2}}return(0,v.isNodePattern)(s)&&s.call(this,null,this),this}}};o.default=g,d.exports=o.default},{"./blur-tables":202,"@jimp/utils":235}],204:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var v=t("@jimp/utils"),h=function(){return{circle:function(){var u=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},f=arguments.length>1?arguments[1]:void 0;typeof u=="function"&&(f=u,u={});var s=u.radius||(this.bitmap.width>this.bitmap.height?this.bitmap.height:this.bitmap.width)/2,i={x:typeof u.x=="number"?u.x:this.bitmap.width/2,y:typeof u.y=="number"?u.y:this.bitmap.height/2};return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(n,p,y){var l=Math.sqrt(Math.pow(n-i.x,2)+Math.pow(p-i.y,2));s-l<=0?this.bitmap.data[y+3]=0:s-l<1&&(this.bitmap.data[y+3]=255*(s-l))}),(0,v.isNodePattern)(f)&&f.call(this,null,this),this}}};o.default=h,d.exports=o.default},{"@jimp/utils":235}],205:[function(t,d,o){(function(v){var h=t("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var g=h(t("@babel/runtime/helpers/toConsumableArray")),b=h(t("tinycolor2")),u=t("@jimp/utils");function f(l,m,c,w){for(var x=[0,0,0],A=(m.length-1)/2,N=0;N<m.length;N+=1)for(var E=0;E<m[N].length;E+=1){var k=l.getPixelIndex(c+N-A,w+E-A);x[0]+=l.bitmap.data[k]*m[N][E],x[1]+=l.bitmap.data[k+1]*m[N][E],x[2]+=l.bitmap.data[k+2]*m[N][E]}return x}var s=function(m){return typeof m!="undefined"&&m!==null};function i(l){return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(m,c,w){var x=parseInt(.2126*this.bitmap.data[w]+.7152*this.bitmap.data[w+1]+.0722*this.bitmap.data[w+2],10);this.bitmap.data[w]=x,this.bitmap.data[w+1]=x,this.bitmap.data[w+2]=x}),(0,u.isNodePattern)(l)&&l.call(this,null,this),this}function n(l,m){var c=arguments.length>2&&arguments[2]!==void 0?arguments[2]:50;return{r:(m.r-l.r)*(c/100)+l.r,g:(m.g-l.g)*(c/100)+l.g,b:(m.b-l.b)*(c/100)+l.b}}function p(l,m){var c=this;return!l||!Array.isArray(l)?u.throwError.call(this,"actions must be an array",m):(l=l.map(function(w){return(w.apply==="xor"||w.apply==="mix")&&(w.params[0]=(0,b.default)(w.params[0]).toRgb()),w}),this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(w,x,A){var N={r:c.bitmap.data[A],g:c.bitmap.data[A+1],b:c.bitmap.data[A+2]},E=function(S,R){return c.constructor.limit255(N[S]+R)};l.forEach(function(k){if(k.apply==="mix")N=n(N,k.params[0],k.params[1]);else if(k.apply==="tint")N=n(N,{r:255,g:255,b:255},k.params[0]);else if(k.apply==="shade")N=n(N,{r:0,g:0,b:0},k.params[0]);else if(k.apply==="xor")N={r:N.r^k.params[0].r,g:N.g^k.params[0].g,b:N.b^k.params[0].b};else if(k.apply==="red")N.r=E("r",k.params[0]);else if(k.apply==="green")N.g=E("g",k.params[0]);else if(k.apply==="blue")N.b=E("b",k.params[0]);else{var S;if(k.apply==="hue"&&(k.apply="spin"),N=(0,b.default)(N),!N[k.apply])return u.throwError.call(c,"action "+k.apply+" not supported",m);N=(S=N)[k.apply].apply(S,(0,g.default)(k.params)).toRgb()}}),c.bitmap.data[A]=N.r,c.bitmap.data[A+1]=N.g,c.bitmap.data[A+2]=N.b}),(0,u.isNodePattern)(m)&&m.call(this,null,this),this)}var y=function(){return{brightness:function(c,w){return typeof c!="number"?u.throwError.call(this,"val must be numbers",w):c<-1||c>1?u.throwError.call(this,"val must be a number between -1 and +1",w):(this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,A,N){c<0?(this.bitmap.data[N]=this.bitmap.data[N]*(1+c),this.bitmap.data[N+1]=this.bitmap.data[N+1]*(1+c),this.bitmap.data[N+2]=this.bitmap.data[N+2]*(1+c)):(this.bitmap.data[N]=this.bitmap.data[N]+(255-this.bitmap.data[N])*c,this.bitmap.data[N+1]=this.bitmap.data[N+1]+(255-this.bitmap.data[N+1])*c,this.bitmap.data[N+2]=this.bitmap.data[N+2]+(255-this.bitmap.data[N+2])*c)}),(0,u.isNodePattern)(w)&&w.call(this,null,this),this)},contrast:function(c,w){if(typeof c!="number")return u.throwError.call(this,"val must be numbers",w);if(c<-1||c>1)return u.throwError.call(this,"val must be a number between -1 and +1",w);var x=(c+1)/(1-c);function A(N){return N=Math.floor(x*(N-127)+127),N<0?0:N>255?255:N}return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(N,E,k){this.bitmap.data[k]=A(this.bitmap.data[k]),this.bitmap.data[k+1]=A(this.bitmap.data[k+1]),this.bitmap.data[k+2]=A(this.bitmap.data[k+2])}),(0,u.isNodePattern)(w)&&w.call(this,null,this),this},posterize:function(c,w){return typeof c!="number"?u.throwError.call(this,"n must be numbers",w):(c<2&&(c=2),this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,A,N){this.bitmap.data[N]=Math.floor(this.bitmap.data[N]/255*(c-1))/(c-1)*255,this.bitmap.data[N+1]=Math.floor(this.bitmap.data[N+1]/255*(c-1))/(c-1)*255,this.bitmap.data[N+2]=Math.floor(this.bitmap.data[N+2]/255*(c-1))/(c-1)*255}),(0,u.isNodePattern)(w)&&w.call(this,null,this),this)},greyscale:i,grayscale:i,opacity:function(c,w){return typeof c!="number"?u.throwError.call(this,"f must be a number",w):c<0||c>1?u.throwError.call(this,"f must be a number from 0 to 1",w):(this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,A,N){var E=this.bitmap.data[N+3]*c;this.bitmap.data[N+3]=E}),(0,u.isNodePattern)(w)&&w.call(this,null,this),this)},sepia:function(c){return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(w,x,A){var N=this.bitmap.data[A],E=this.bitmap.data[A+1],k=this.bitmap.data[A+2];N=N*.393+E*.769+k*.189,E=N*.349+E*.686+k*.168,k=N*.272+E*.534+k*.131,this.bitmap.data[A]=N<255?N:255,this.bitmap.data[A+1]=E<255?E:255,this.bitmap.data[A+2]=k<255?k:255}),(0,u.isNodePattern)(c)&&c.call(this,null,this),this},fade:function(c,w){return typeof c!="number"?u.throwError.call(this,"f must be a number",w):c<0||c>1?u.throwError.call(this,"f must be a number from 0 to 1",w):(this.opacity(1-c),(0,u.isNodePattern)(w)&&w.call(this,null,this),this)},convolution:function(c,w,x){typeof w=="function"&&typeof x=="undefined"&&(x=w,w=null),w||(w=this.constructor.EDGE_EXTEND);var A=v.from(this.bitmap.data),N=c.length,E=c[0].length,k=Math.floor(N/2),S=Math.floor(E/2),R=-k,M=-S,B,I,Y,J,D,T,G,U,ie,se;return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(ae,W,ee){J=0,Y=0,I=0;for(var _=R;_<=k;_++)for(var re=M;re<=S;re++)U=ae+re,ie=W+_,B=c[_+k][re+S],se=this.getPixelIndex(U,ie,w),se===-1?(G=0,T=0,D=0):(D=this.bitmap.data[se+0],T=this.bitmap.data[se+1],G=this.bitmap.data[se+2]),I+=B*D,Y+=B*T,J+=B*G;I<0&&(I=0),Y<0&&(Y=0),J<0&&(J=0),I>255&&(I=255),Y>255&&(Y=255),J>255&&(J=255),A[ee+0]=I,A[ee+1]=Y,A[ee+2]=J}),this.bitmap.data=A,(0,u.isNodePattern)(x)&&x.call(this,null,this),this},opaque:function(c){return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(w,x,A){this.bitmap.data[A+3]=255}),(0,u.isNodePattern)(c)&&c.call(this,null,this),this},pixelate:function(c,w,x,A,N,E){if(typeof w=="function")E=w,N=null,A=null,x=null,w=null;else{if(typeof c!="number")return u.throwError.call(this,"size must be a number",E);if(s(w)&&typeof w!="number")return u.throwError.call(this,"x must be a number",E);if(s(x)&&typeof x!="number")return u.throwError.call(this,"y must be a number",E);if(s(A)&&typeof A!="number")return u.throwError.call(this,"w must be a number",E);if(s(N)&&typeof N!="number")return u.throwError.call(this,"h must be a number",E)}var k=[[1/16,2/16,1/16],[2/16,4/16,2/16],[1/16,2/16,1/16]];w=w||0,x=x||0,A=s(A)?A:this.bitmap.width-w,N=s(N)?N:this.bitmap.height-x;var S=this.cloneQuiet();return this.scanQuiet(w,x,A,N,function(R,M,B){R=c*Math.floor(R/c),M=c*Math.floor(M/c);var I=f(S,k,R,M);this.bitmap.data[B]=I[0],this.bitmap.data[B+1]=I[1],this.bitmap.data[B+2]=I[2]}),(0,u.isNodePattern)(E)&&E.call(this,null,this),this},convolute:function(c,w,x,A,N,E){if(!Array.isArray(c))return u.throwError.call(this,"the kernel must be an array",E);if(typeof w=="function")E=w,w=null,x=null,A=null,N=null;else{if(s(w)&&typeof w!="number")return u.throwError.call(this,"x must be a number",E);if(s(x)&&typeof x!="number")return u.throwError.call(this,"y must be a number",E);if(s(A)&&typeof A!="number")return u.throwError.call(this,"w must be a number",E);if(s(N)&&typeof N!="number")return u.throwError.call(this,"h must be a number",E)}var k=(c.length-1)/2;w=s(w)?w:k,x=s(x)?x:k,A=s(A)?A:this.bitmap.width-w,N=s(N)?N:this.bitmap.height-x;var S=this.cloneQuiet();return this.scanQuiet(w,x,A,N,function(R,M,B){var I=f(S,c,R,M);this.bitmap.data[B]=this.constructor.limit255(I[0]),this.bitmap.data[B+1]=this.constructor.limit255(I[1]),this.bitmap.data[B+2]=this.constructor.limit255(I[2])}),(0,u.isNodePattern)(E)&&E.call(this,null,this),this},color:p,colour:p}};o.default=y,d.exports=o.default}).call(this,t("buffer").Buffer)},{"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/toConsumableArray":20,"@jimp/utils":235,buffer:48,tinycolor2:178}],206:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var v=t("@jimp/utils"),h=function(){return{contain:function(u,f,s,i,n){if(typeof u!="number"||typeof f!="number")return v.throwError.call(this,"w and h must be numbers",n);typeof s=="string"&&(typeof i=="function"&&typeof n=="undefined"&&(n=i),i=s,s=null),typeof s=="function"&&(typeof n=="undefined"&&(n=s),i=null,s=null),typeof i=="function"&&typeof n=="undefined"&&(n=i,i=null),s=s||this.constructor.HORIZONTAL_ALIGN_CENTER|this.constructor.VERTICAL_ALIGN_MIDDLE;var p=s&(1<<3)-1,y=s>>3;if(!(p!==0&&!(p&p-1)||y!==0&&!(y&y-1)))return v.throwError.call(this,"only use one flag per alignment direction",n);var l=p>>1,m=y>>1,c=u/f>this.bitmap.width/this.bitmap.height?f/this.bitmap.height:u/this.bitmap.width,w=this.cloneQuiet().scale(c,i);return this.resize(u,f,i),this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,A,N){this.bitmap.data.writeUInt32BE(this._background,N)}),this.blit(w,(this.bitmap.width-w.bitmap.width)/2*l,(this.bitmap.height-w.bitmap.height)/2*m),(0,v.isNodePattern)(n)&&n.call(this,null,this),this}}};o.default=h,d.exports=o.default},{"@jimp/utils":235}],207:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var v=t("@jimp/utils"),h=function(){return{cover:function(u,f,s,i,n){if(typeof u!="number"||typeof f!="number")return v.throwError.call(this,"w and h must be numbers",n);s&&typeof s=="function"&&typeof n=="undefined"?(n=s,s=null,i=null):typeof i=="function"&&typeof n=="undefined"&&(n=i,i=null),s=s||this.constructor.HORIZONTAL_ALIGN_CENTER|this.constructor.VERTICAL_ALIGN_MIDDLE;var p=s&(1<<3)-1,y=s>>3;if(!(p!==0&&!(p&p-1)||y!==0&&!(y&y-1)))return v.throwError.call(this,"only use one flag per alignment direction",n);var l=p>>1,m=y>>1,c=u/f>this.bitmap.width/this.bitmap.height?u/this.bitmap.width:f/this.bitmap.height;return this.scale(c,i),this.crop((this.bitmap.width-u)/2*l,(this.bitmap.height-f)/2*m,u,f),(0,v.isNodePattern)(n)&&n.call(this,null,this),this}}};o.default=h,d.exports=o.default},{"@jimp/utils":235}],208:[function(t,d,o){(function(v){var h=t("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(o,"__esModule",{value:!0}),o.default=u;var g=h(t("@babel/runtime/helpers/typeof")),b=t("@jimp/utils");function u(f){return f("crop",function(s,i,n,p,y){if(typeof s!="number"||typeof i!="number")return b.throwError.call(this,"x and y must be numbers",y);if(typeof n!="number"||typeof p!="number")return b.throwError.call(this,"w and h must be numbers",y);if(s=Math.round(s),i=Math.round(i),n=Math.round(n),p=Math.round(p),s===0&&n===this.bitmap.width){var l=n*i+s<<2,m=l+p*n<<2;this.bitmap.data=this.bitmap.data.slice(l,m)}else{var c=v.allocUnsafe(n*p*4),w=0;this.scanQuiet(s,i,n,p,function(x,A,N){var E=this.bitmap.data.readUInt32BE(N,!0);c.writeUInt32BE(E,w,!0),w+=4}),this.bitmap.data=c}return this.bitmap.width=n,this.bitmap.height=p,(0,b.isNodePattern)(y)&&y.call(this,null,this),this}),{class:{autocrop:function(){for(var i=this.bitmap.width,n=this.bitmap.height,p=1,y,l=0,m=2e-4,c=!0,w=!1,x={north:!1,south:!1,east:!1,west:!1},A=arguments.length,N=new Array(A),E=0;E<A;E++)N[E]=arguments[E];for(var k=0,S=N.length;k<S;k++)if(typeof N[k]=="number"&&(m=N[k]),typeof N[k]=="boolean"&&(c=N[k]),typeof N[k]=="function"&&(y=N[k]),(0,g.default)(N[k])==="object"){var R=N[k];typeof R.tolerance!="undefined"&&(m=R.tolerance),typeof R.cropOnlyFrames!="undefined"&&(c=R.cropOnlyFrames),typeof R.cropSymmetric!="undefined"&&(w=R.cropSymmetric),typeof R.leaveBorder!="undefined"&&(l=R.leaveBorder),typeof R.ignoreSides!="undefined"&&(x=R.ignoreSides)}var M=this.getPixelColor(0,0),B=this.constructor.intToRGBA(M),I=0,Y=0,J=0,D=0;if(M=this.getPixelColor(0,0),!x.north){e:for(var T=0;T<n-p;T++){for(var G=0;G<i;G++){var U=this.getPixelColor(G,T),ie=this.constructor.intToRGBA(U);if(this.constructor.colorDiff(B,ie)>m)break e}I++}}if(M=this.getPixelColor(i,0),!x.east){e:for(var se=0;se<i-p;se++){for(var ae=0+I;ae<n;ae++){var W=this.getPixelColor(se,ae),ee=this.constructor.intToRGBA(W);if(this.constructor.colorDiff(B,ee)>m)break e}Y++}}if(M=this.getPixelColor(0,n),!x.south){e:for(var _=n-1;_>=I+p;_--){for(var re=i-Y-1;re>=0;re--){var fe=this.getPixelColor(re,_),pe=this.constructor.intToRGBA(fe);if(this.constructor.colorDiff(B,pe)>m)break e}J++}}if(M=this.getPixelColor(i,n),!x.west){e:for(var he=i-1;he>=0+Y+p;he--){for(var oe=n-1;oe>=0+I;oe--){var ce=this.getPixelColor(he,oe),X=this.constructor.intToRGBA(ce);if(this.constructor.colorDiff(B,X)>m)break e}D++}}var K=!1;if(D-=l,Y-=l,I-=l,J-=l,w){var L=Math.min(Y,D),$=Math.min(I,J);D=L,Y=L,I=$,J=$}D=D>=0?D:0,Y=Y>=0?Y:0,I=I>=0?I:0,J=J>=0?J:0;var te=i-(D+Y),V=n-(J+I);return c?K=Y!==0&&I!==0&&D!==0&&J!==0:K=Y!==0||I!==0||D!==0||J!==0,K&&this.crop(Y,I,te,V),(0,b.isNodePattern)(y)&&y.call(this,null,this),this}}}}d.exports=o.default}).call(this,t("buffer").Buffer)},{"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/typeof":21,"@jimp/utils":235,buffer:48}],209:[function(t,d,o){var v=t("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var h=v(t("@babel/runtime/helpers/typeof")),g=t("@jimp/utils"),b=function(){return{displace:function(s,i,n){if((0,h.default)(s)!=="object"||s.constructor!==this.constructor)return g.throwError.call(this,"The source must be a Jimp image",n);if(typeof i!="number")return g.throwError.call(this,"factor must be a number",n);var p=this.cloneQuiet();return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(y,l,m){var c=s.bitmap.data[m]/256*i;c=Math.round(c);var w=this.getPixelIndex(y+c,l);this.bitmap.data[w]=p.bitmap.data[m],this.bitmap.data[w+1]=p.bitmap.data[m+1],this.bitmap.data[w+2]=p.bitmap.data[m+2]}),(0,g.isNodePattern)(n)&&n.call(this,null,this),this}}};o.default=b,d.exports=o.default},{"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/typeof":21,"@jimp/utils":235}],210:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var v=t("@jimp/utils");function h(b){var u=[1,9,3,11,13,5,15,7,4,12,2,10,16,8,14,6];return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(f,s,i){var n=((s&3)<<2)+f%4,p=u[n];this.bitmap.data[i]=Math.min(this.bitmap.data[i]+p,255),this.bitmap.data[i+1]=Math.min(this.bitmap.data[i+1]+p,255),this.bitmap.data[i+2]=Math.min(this.bitmap.data[i+2]+p,255)}),(0,v.isNodePattern)(b)&&b.call(this,null,this),this}var g=function(){return{dither565:h,dither16:h}};o.default=g,d.exports=o.default},{"@jimp/utils":235}],211:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var v=t("@jimp/utils"),h=function(){return{fisheye:function(){var u=this,f=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{r:2.5},s=arguments.length>1?arguments[1]:void 0;typeof f=="function"&&(s=f,f={r:2.5});var i=this.cloneQuiet(),n=i.bitmap,p=n.width,y=n.height;return i.scanQuiet(0,0,p,y,function(l,m){var c=l/p,w=m/y,x=Math.sqrt(Math.pow(c-.5,2)+Math.pow(w-.5,2)),A=2*Math.pow(x,f.r),N=(c-.5)/x,E=(w-.5)/x,k=Math.round((A*N+.5)*p),S=Math.round((A*E+.5)*y),R=i.getPixelColor(k,S);u.setPixelColor(R,l,m)}),this.setPixelColor(i.getPixelColor(p/2,y/2),p/2,y/2),(0,v.isNodePattern)(s)&&s.call(this,null,this),this}}};o.default=h,d.exports=o.default},{"@jimp/utils":235}],212:[function(t,d,o){(function(v){Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var h=t("@jimp/utils");function g(u,f,s){if(typeof u!="boolean"||typeof f!="boolean")return h.throwError.call(this,"horizontal and vertical must be Booleans",s);var i=v.alloc(this.bitmap.data.length);return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(n,p,y){var l=u?this.bitmap.width-1-n:n,m=f?this.bitmap.height-1-p:p,c=this.bitmap.width*m+l<<2,w=this.bitmap.data.readUInt32BE(y);i.writeUInt32BE(w,c)}),this.bitmap.data=v.from(i),(0,h.isNodePattern)(s)&&s.call(this,null,this),this}var b=function(){return{flip:g,mirror:g}};o.default=b,d.exports=o.default}).call(this,t("buffer").Buffer)},{"@jimp/utils":235,buffer:48}],213:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var v=t("@jimp/utils"),h=function(){return{gaussian:function(u,f){if(typeof u!="number")return v.throwError.call(this,"r must be a number",f);if(u<1)return v.throwError.call(this,"r must be greater than 0",f);for(var s=Math.ceil(u*2.57),i=s*2+1,n=u*u*2,p=n*Math.PI,y=[],l=0;l<i;l++){y[l]=[];for(var m=0;m<i;m++){var c=Math.pow(m-s,2)+Math.pow(l-s,2);y[l][m]=Math.exp(-c/n)/p}}for(var w=0;w<this.bitmap.height;w++)for(var x=0;x<this.bitmap.width;x++)for(var A=0,N=0,E=0,k=0,S=0,R=0;R<i;R++){for(var M=0;M<i;M++){var B=Math.min(this.bitmap.width-1,Math.max(0,M+x-s)),I=Math.min(this.bitmap.height-1,Math.max(0,R+w-s)),Y=y[R][M],J=I*this.bitmap.width+B<<2;A+=this.bitmap.data[J]*Y,N+=this.bitmap.data[J+1]*Y,E+=this.bitmap.data[J+2]*Y,k+=this.bitmap.data[J+3]*Y,S+=Y}var D=w*this.bitmap.width+x<<2;this.bitmap.data[D]=Math.round(A/S),this.bitmap.data[D+1]=Math.round(N/S),this.bitmap.data[D+2]=Math.round(E/S),this.bitmap.data[D+3]=Math.round(k/S)}return(0,v.isNodePattern)(f)&&f.call(this,null,this),this}}};o.default=h,d.exports=o.default},{"@jimp/utils":235}],214:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var v=t("@jimp/utils"),h=function(){return{invert:function(u){return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(f,s,i){this.bitmap.data[i]=255-this.bitmap.data[i],this.bitmap.data[i+1]=255-this.bitmap.data[i+1],this.bitmap.data[i+2]=255-this.bitmap.data[i+2]}),(0,v.isNodePattern)(u)&&u.call(this,null,this),this}}};o.default=h,d.exports=o.default},{"@jimp/utils":235}],215:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var v=t("@jimp/utils"),h=function(){return{mask:function(u){var f=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,i=arguments.length>3?arguments[3]:void 0;if(!(u instanceof this.constructor))return v.throwError.call(this,"The source must be a Jimp image",i);if(typeof f!="number"||typeof s!="number")return v.throwError.call(this,"x and y must be numbers",i);f=Math.round(f),s=Math.round(s);var n=this.bitmap.width,p=this.bitmap.height,y=this;return u.scanQuiet(0,0,u.bitmap.width,u.bitmap.height,function(l,m,c){var w=f+l,x=s+m;if(w>=0&&x>=0&&w<n&&x<p){var A=y.getPixelIndex(w,x),N=this.bitmap.data,E=(N[c+0]+N[c+1]+N[c+2])/3;y.bitmap.data[A+3]*=E/255}}),(0,v.isNodePattern)(i)&&i.call(this,null,this),this}}};o.default=h,d.exports=o.default},{"@jimp/utils":235}],216:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var v=t("@jimp/utils");function h(){var f={r:new Array(256).fill(0),g:new Array(256).fill(0),b:new Array(256).fill(0)};return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(s,i,n){f.r[this.bitmap.data[n+0]]++,f.g[this.bitmap.data[n+1]]++,f.b[this.bitmap.data[n+2]]++}),f}var g=function(s,i,n){return(s-i)*255/(n-i)},b=function(s){return[s.findIndex(function(i){return i>0}),255-s.slice().reverse().findIndex(function(i){return i>0})]},u=function(){return{normalize:function(i){var n=h.call(this),p={r:b(n.r),g:b(n.g),b:b(n.b)};return this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(y,l,m){var c=this.bitmap.data[m+0],w=this.bitmap.data[m+1],x=this.bitmap.data[m+2];this.bitmap.data[m+0]=g(c,p.r[0],p.r[1]),this.bitmap.data[m+1]=g(w,p.g[0],p.g[1]),this.bitmap.data[m+2]=g(x,p.b[0],p.b[1])}),(0,v.isNodePattern)(i)&&i.call(this,null,this),this}}};o.default=u,d.exports=o.default},{"@jimp/utils":235}],217:[function(t,d,o){(function(v){var h=t("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var g=h(t("@babel/runtime/helpers/typeof")),b=h(t("@babel/runtime/helpers/toConsumableArray")),u=h(t("path")),f=h(t("load-bmfont")),s=t("@jimp/utils"),i=t("./measure-text");function n(x,A,N,E,k){return k===x.HORIZONTAL_ALIGN_LEFT?0:k===x.HORIZONTAL_ALIGN_CENTER?(E-(0,i.measureText)(A,N))/2:E-(0,i.measureText)(A,N)}function p(x,A,N,E,k){if(k.width>0&&k.height>0){var S=A.pages[k.page];x.blit(S,N+k.xoffset,E+k.yoffset,k.x,k.y,k.width,k.height)}return x}function y(x,A,N,E,k){for(var S=0;S<E.length;S++){var R=void 0;x.chars[E[S]]?R=E[S]:/\s/.test(E[S])?R="":R="?";var M=x.chars[R]||{},B=x.kernings[R];p(this,x,A,N,M||{});var I=B&&B[E[S+1]]?B[E[S+1]]:0;A+=I+(M.xadvance||k)}}function l(x,A,N){var E=A.split(" "),k=[],S=[],R=0;return E.forEach(function(M){var B=[].concat((0,b.default)(S),[M]).join(" "),I=(0,i.measureText)(x,B);I<=N?(I>R&&(R=I),S.push(M)):(k.push(S),S=[M])}),k.push(S),{lines:k,longestLine:R}}function m(x,A,N){var E=N.map(function(k){return x.read(A+"/"+k)});return Promise.all(E)}var c="browser/lib/",w=function(){return{constants:{measureText:i.measureText,measureTextHeight:i.measureTextHeight,FONT_SANS_8_BLACK:u.default.join(c,"fonts/open-sans/open-sans-8-black/open-sans-8-black.fnt"),FONT_SANS_10_BLACK:u.default.join(c,"fonts/open-sans/open-sans-10-black/open-sans-10-black.fnt"),FONT_SANS_12_BLACK:u.default.join(c,"fonts/open-sans/open-sans-12-black/open-sans-12-black.fnt"),FONT_SANS_14_BLACK:u.default.join(c,"fonts/open-sans/open-sans-14-black/open-sans-14-black.fnt"),FONT_SANS_16_BLACK:u.default.join(c,"fonts/open-sans/open-sans-16-black/open-sans-16-black.fnt"),FONT_SANS_32_BLACK:u.default.join(c,"fonts/open-sans/open-sans-32-black/open-sans-32-black.fnt"),FONT_SANS_64_BLACK:u.default.join(c,"fonts/open-sans/open-sans-64-black/open-sans-64-black.fnt"),FONT_SANS_128_BLACK:u.default.join(c,"fonts/open-sans/open-sans-128-black/open-sans-128-black.fnt"),FONT_SANS_8_WHITE:u.default.join(c,"fonts/open-sans/open-sans-8-white/open-sans-8-white.fnt"),FONT_SANS_16_WHITE:u.default.join(c,"fonts/open-sans/open-sans-16-white/open-sans-16-white.fnt"),FONT_SANS_32_WHITE:u.default.join(c,"fonts/open-sans/open-sans-32-white/open-sans-32-white.fnt"),FONT_SANS_64_WHITE:u.default.join(c,"fonts/open-sans/open-sans-64-white/open-sans-64-white.fnt"),FONT_SANS_128_WHITE:u.default.join(c,"fonts/open-sans/open-sans-128-white/open-sans-128-white.fnt"),loadFont:function(N,E){var k=this;return typeof N!="string"?s.throwError.call(this,"file must be a string",E):new Promise(function(S,R){E=E||function(M,B){M?R(M):S(B)},(0,f.default)(N,function(M,B){var I={},Y={};if(M)return s.throwError.call(k,M,E);for(var J=0;J<B.chars.length;J++)I[String.fromCharCode(B.chars[J].id)]=B.chars[J];for(var D=0;D<B.kernings.length;D++){var T=String.fromCharCode(B.kernings[D].first);Y[T]=Y[T]||{},Y[T][String.fromCharCode(B.kernings[D].second)]=B.kernings[D].amount}m(k,u.default.dirname(N),B.pages).then(function(G){E(null,{chars:I,kernings:Y,pages:G,common:B.common,info:B.info})})})})}},class:{print:function(N,E,k,S,R,M,B){var I=this;if(typeof R=="function"&&typeof B=="undefined"&&(B=R,R=1/0),typeof R=="undefined"&&(R=1/0),typeof M=="function"&&typeof B=="undefined"&&(B=M,M=1/0),typeof M=="undefined"&&(M=1/0),(0,g.default)(N)!=="object")return s.throwError.call(this,"font must be a Jimp loadFont",B);if(typeof E!="number"||typeof k!="number"||typeof R!="number")return s.throwError.call(this,"x, y and maxWidth must be numbers",B);if(typeof R!="number")return s.throwError.call(this,"maxWidth must be a number",B);if(typeof M!="number")return s.throwError.call(this,"maxHeight must be a number",B);var Y,J;if((0,g.default)(S)==="object"&&S.text!==null&&S.text!==void 0){Y=S.alignmentX||this.constructor.HORIZONTAL_ALIGN_LEFT,J=S.alignmentY||this.constructor.VERTICAL_ALIGN_TOP;var D=S;S=D.text}else Y=this.constructor.HORIZONTAL_ALIGN_LEFT,J=this.constructor.VERTICAL_ALIGN_TOP,S=S.toString();M!==1/0&&J===this.constructor.VERTICAL_ALIGN_BOTTOM?k+=M-(0,i.measureTextHeight)(N,S,R):M!==1/0&&J===this.constructor.VERTICAL_ALIGN_MIDDLE&&(k+=M/2-(0,i.measureTextHeight)(N,S,R)/2);var T=Object.entries(N.chars)[0][1].xadvance,G=l(N,S,R),U=G.lines,ie=G.longestLine;return U.forEach(function(se){var ae=se.join(" "),W=n(I.constructor,N,ae,R,Y);y.call(I,N,E+W,k,ae,T),k+=N.common.lineHeight}),(0,s.isNodePattern)(B)&&B.call(this,null,this,{x:E+ie,y:k}),this}}}};o.default=w,d.exports=o.default}).call(this,"/../../node_modules/@jimp/plugin-print/dist")},{"./measure-text":218,"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/toConsumableArray":20,"@babel/runtime/helpers/typeof":21,"@jimp/utils":235,"load-bmfont":219,path:107}],218:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.measureText=v,o.measureTextHeight=h;function v(g,b){for(var u=0,f=0;f<b.length;f++)if(g.chars[b[f]]){var s=g.kernings[b[f]]&&g.kernings[b[f]][b[f+1]]?g.kernings[b[f]][b[f+1]]:0;u+=(g.chars[b[f]].xadvance||0)+s}return u}function h(g,b,u){for(var f=b.split(" "),s="",i=g.common.lineHeight,n=0;n<f.length;n++){var p=s+f[n]+" ",y=v(g,p);y>u&&n>0?(i+=g.common.lineHeight,s=f[n]+" "):s=p}return i}},{}],219:[function(t,d,o){(function(v){var h=t("xhr"),g=function(){},b=t("parse-bmfont-ascii"),u=t("parse-bmfont-xml"),f=t("parse-bmfont-binary"),s=t("./lib/is-binary"),i=t("xtend"),n=function(){return self.XMLHttpRequest&&"withCredentials"in new XMLHttpRequest}();d.exports=function(l,m){m=typeof m=="function"?m:g,typeof l=="string"?l={uri:l}:l||(l={});var c=l.binary;c&&(l=y(l)),h(l,function(w,x,A){if(w)return m(w);if(!/^2/.test(x.statusCode))return m(new Error("http status code: "+x.statusCode));if(!A)return m(new Error("no body result"));var N=!1;if(p(A)){var E=new Uint8Array(A);A=new v(E,"binary")}s(A)&&(N=!0,typeof A=="string"&&(A=new v(A,"binary"))),N||(v.isBuffer(A)&&(A=A.toString(l.encoding)),A=A.trim());var k;try{var S=x.headers["content-type"];N?k=f(A):/json/.test(S)||A.charAt(0)==="{"?k=JSON.parse(A):/xml/.test(S)||A.charAt(0)==="<"?k=u(A):k=b(A)}catch(R){m(new Error("error parsing font "+R.message)),m=g}m(null,k)})};function p(l){var m=Object.prototype.toString;return m.call(l)==="[object ArrayBuffer]"}function y(l){if(n)return i(l,{responseType:"arraybuffer"});if(typeof self.XMLHttpRequest=="undefined")throw new Error("your browser does not support XHR loading");var m=new self.XMLHttpRequest;return m.overrideMimeType("text/plain; charset=x-user-defined"),i({xhr:m},l)}}).call(this,t("buffer").Buffer)},{"./lib/is-binary":220,buffer:48,"parse-bmfont-ascii":102,"parse-bmfont-binary":103,"parse-bmfont-xml":104,xhr:187,xtend:189}],220:[function(t,d,o){(function(v){var h=t("buffer-equal"),g=new v([66,77,70,3]);d.exports=function(b){return typeof b=="string"?b.substring(0,3)==="BMF":b.length>4&&h(b.slice(0,4),g)}}).call(this,t("buffer").Buffer)},{buffer:48,"buffer-equal":49}],221:[function(t,d,o){(function(v){var h=t("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var g=t("@jimp/utils"),b=h(t("./modules/resize")),u=h(t("./modules/resize2")),f=function(){return{constants:{RESIZE_NEAREST_NEIGHBOR:"nearestNeighbor",RESIZE_BILINEAR:"bilinearInterpolation",RESIZE_BICUBIC:"bicubicInterpolation",RESIZE_HERMITE:"hermiteInterpolation",RESIZE_BEZIER:"bezierInterpolation"},class:{resize:function(n,p,y,l){if(typeof n!="number"||typeof p!="number")return g.throwError.call(this,"w and h must be numbers",l);if(typeof y=="function"&&typeof l=="undefined"&&(l=y,y=null),n===this.constructor.AUTO&&p===this.constructor.AUTO)return g.throwError.call(this,"w and h cannot both be set to auto",l);if(n===this.constructor.AUTO&&(n=this.bitmap.width*(p/this.bitmap.height)),p===this.constructor.AUTO&&(p=this.bitmap.height*(n/this.bitmap.width)),n<0||p<0)return g.throwError.call(this,"w and h must be positive numbers",l);if(n=Math.round(n),p=Math.round(p),typeof u.default[y]=="function"){var m={data:v.alloc(n*p*4),width:n,height:p};u.default[y](this.bitmap,m),this.bitmap=m}else{var c=this,w=new b.default(this.bitmap.width,this.bitmap.height,n,p,!0,!0,function(x){c.bitmap.data=v.from(x),c.bitmap.width=n,c.bitmap.height=p});w.resize(this.bitmap.data)}return(0,g.isNodePattern)(l)&&l.call(this,null,this),this}}}};o.default=f,d.exports=o.default}).call(this,t("buffer").Buffer)},{"./modules/resize":222,"./modules/resize2":223,"@babel/runtime/helpers/interopRequireDefault":11,"@jimp/utils":235,buffer:48}],222:[function(t,d,o){function v(h,g,b,u,f,s,i){this.widthOriginal=Math.abs(Math.floor(h)||0),this.heightOriginal=Math.abs(Math.floor(g)||0),this.targetWidth=Math.abs(Math.floor(b)||0),this.targetHeight=Math.abs(Math.floor(u)||0),this.colorChannels=f?4:3,this.interpolationPass=Boolean(s),this.resizeCallback=typeof i=="function"?i:function(){},this.targetWidthMultipliedByChannels=this.targetWidth*this.colorChannels,this.originalWidthMultipliedByChannels=this.widthOriginal*this.colorChannels,this.originalHeightMultipliedByChannels=this.heightOriginal*this.colorChannels,this.widthPassResultSize=this.targetWidthMultipliedByChannels*this.heightOriginal,this.finalResultSize=this.targetWidthMultipliedByChannels*this.targetHeight,this.initialize()}v.prototype.initialize=function(){if(this.widthOriginal>0&&this.heightOriginal>0&&this.targetWidth>0&&this.targetHeight>0)this.configurePasses();else throw new Error("Invalid settings specified for the resizer.")},v.prototype.configurePasses=function(){this.widthOriginal===this.targetWidth?this.resizeWidth=this.bypassResizer:(this.ratioWeightWidthPass=this.widthOriginal/this.targetWidth,this.ratioWeightWidthPass<1&&this.interpolationPass?(this.initializeFirstPassBuffers(!0),this.resizeWidth=this.colorChannels===4?this.resizeWidthInterpolatedRGBA:this.resizeWidthInterpolatedRGB):(this.initializeFirstPassBuffers(!1),this.resizeWidth=this.colorChannels===4?this.resizeWidthRGBA:this.resizeWidthRGB)),this.heightOriginal===this.targetHeight?this.resizeHeight=this.bypassResizer:(this.ratioWeightHeightPass=this.heightOriginal/this.targetHeight,this.ratioWeightHeightPass<1&&this.interpolationPass?(this.initializeSecondPassBuffers(!0),this.resizeHeight=this.resizeHeightInterpolated):(this.initializeSecondPassBuffers(!1),this.resizeHeight=this.colorChannels===4?this.resizeHeightRGBA:this.resizeHeightRGB))},v.prototype._resizeWidthInterpolatedRGBChannels=function(h,g){var b=g?4:3,u=this.ratioWeightWidthPass,f=this.widthBuffer,s=0,i=0,n=0,p=0,y=0,l;for(l=0;s<1/3;l+=b,s+=u)for(i=l,n=0;i<this.widthPassResultSize;n+=this.originalWidthMultipliedByChannels,i+=this.targetWidthMultipliedByChannels)f[i]=h[n],f[i+1]=h[n+1],f[i+2]=h[n+2],g&&(f[i+3]=h[n+3]);s-=1/3;var m;for(m=this.widthOriginal-1;s<m;l+=b,s+=u)for(y=s%1,p=1-y,i=l,n=Math.floor(s)*b;i<this.widthPassResultSize;n+=this.originalWidthMultipliedByChannels,i+=this.targetWidthMultipliedByChannels)f[i+0]=h[n+0]*p+h[n+b+0]*y,f[i+1]=h[n+1]*p+h[n+b+1]*y,f[i+2]=h[n+2]*p+h[n+b+2]*y,g&&(f[i+3]=h[n+3]*p+h[n+b+3]*y);for(m=this.originalWidthMultipliedByChannels-b;l<this.targetWidthMultipliedByChannels;l+=b)for(i=l,n=m;i<this.widthPassResultSize;n+=this.originalWidthMultipliedByChannels,i+=this.targetWidthMultipliedByChannels)f[i]=h[n],f[i+1]=h[n+1],f[i+2]=h[n+2],g&&(f[i+3]=h[n+3]);return f},v.prototype._resizeWidthRGBChannels=function(h,g){var b=g?4:3,u=this.ratioWeightWidthPass,f=1/u,s=this.originalWidthMultipliedByChannels-b+1,i=this.targetWidthMultipliedByChannels-b+1,n=this.outputWidthWorkBench,p=this.widthBuffer,y=this.outputWidthWorkBenchOpaquePixelsCount,l=0,m=0,c=0,w=0,x=0,A=0,N=0,E=1,k=0,S=0,R=0,M=0;do{for(x=0;x<this.originalHeightMultipliedByChannels;)n[x++]=0,n[x++]=0,n[x++]=0,g&&(n[x++]=0,y[x/b-1]=0);l=u;do{for(m=1+c-w,E=Math.min(l,m),x=0,A=c;x<this.originalHeightMultipliedByChannels;A+=s)k=h[A],S=h[++A],R=h[++A],M=g?h[++A]:255,n[x++]+=(M?k:0)*E,n[x++]+=(M?S:0)*E,n[x++]+=(M?R:0)*E,g&&(n[x++]+=M*E,y[x/b-1]+=M?E:0);if(l>=m)c+=b,w=c,l-=m;else{w+=l;break}}while(l>0&&c<this.originalWidthMultipliedByChannels);for(x=0,A=N;x<this.originalHeightMultipliedByChannels;A+=i)l=g?y[x/b]:1,E=g?l?1/l:0:f,p[A]=n[x++]*E,p[++A]=n[x++]*E,p[++A]=n[x++]*E,g&&(p[++A]=n[x++]*f);N+=b}while(N<this.targetWidthMultipliedByChannels);return p},v.prototype._resizeHeightRGBChannels=function(h,g){var b=this.ratioWeightHeightPass,u=1/b,f=this.outputHeightWorkBench,s=this.heightBuffer,i=this.outputHeightWorkBenchOpaquePixelsCount,n=0,p=0,y=0,l=0,m=0,c=0,w=0,x=1,A=0,N=0,E=0,k=0;do{for(m=0;m<this.targetWidthMultipliedByChannels;)f[m++]=0,f[m++]=0,f[m++]=0,g&&(f[m++]=0,i[m/4-1]=0);n=b;do{for(p=1+y-l,x=Math.min(n,p),w=y,m=0;m<this.targetWidthMultipliedByChannels;)A=h[w++],N=h[w++],E=h[w++],k=g?h[w++]:255,f[m++]+=(k?A:0)*x,f[m++]+=(k?N:0)*x,f[m++]+=(k?E:0)*x,g&&(f[m++]+=k*x,i[m/4-1]+=k?x:0);if(n>=p)y=w,l=y,n-=p;else{l+=n;break}}while(n>0&&y<this.widthPassResultSize);for(m=0;m<this.targetWidthMultipliedByChannels;)n=g?i[m/4]:1,x=g?n?1/n:0:u,s[c++]=Math.round(f[m++]*x),s[c++]=Math.round(f[m++]*x),s[c++]=Math.round(f[m++]*x),g&&(s[c++]=Math.round(f[m++]*u))}while(c<this.finalResultSize);return s},v.prototype.resizeWidthInterpolatedRGB=function(h){return this._resizeWidthInterpolatedRGBChannels(h,!1)},v.prototype.resizeWidthInterpolatedRGBA=function(h){return this._resizeWidthInterpolatedRGBChannels(h,!0)},v.prototype.resizeWidthRGB=function(h){return this._resizeWidthRGBChannels(h,!1)},v.prototype.resizeWidthRGBA=function(h){return this._resizeWidthRGBChannels(h,!0)},v.prototype.resizeHeightInterpolated=function(h){for(var g=this.ratioWeightHeightPass,b=this.heightBuffer,u=0,f=0,s=0,i=0,n=0,p=0,y=0,l;u<1/3;u+=g)for(s=0;s<this.targetWidthMultipliedByChannels;)b[f++]=Math.round(h[s++]);for(u-=1/3,l=this.heightOriginal-1;u<l;u+=g)for(y=u%1,p=1-y,i=Math.floor(u)*this.targetWidthMultipliedByChannels,n=i+this.targetWidthMultipliedByChannels,s=0;s<this.targetWidthMultipliedByChannels;++s)b[f++]=Math.round(h[i++]*p+h[n++]*y);for(;f<this.finalResultSize;)for(s=0,i=l*this.targetWidthMultipliedByChannels;s<this.targetWidthMultipliedByChannels;++s)b[f++]=Math.round(h[i++]);return b},v.prototype.resizeHeightRGB=function(h){return this._resizeHeightRGBChannels(h,!1)},v.prototype.resizeHeightRGBA=function(h){return this._resizeHeightRGBChannels(h,!0)},v.prototype.resize=function(h){this.resizeCallback(this.resizeHeight(this.resizeWidth(h)))},v.prototype.bypassResizer=function(h){return h},v.prototype.initializeFirstPassBuffers=function(h){this.widthBuffer=this.generateFloatBuffer(this.widthPassResultSize),h||(this.outputWidthWorkBench=this.generateFloatBuffer(this.originalHeightMultipliedByChannels),this.colorChannels>3&&(this.outputWidthWorkBenchOpaquePixelsCount=this.generateFloat64Buffer(this.heightOriginal)))},v.prototype.initializeSecondPassBuffers=function(h){this.heightBuffer=this.generateUint8Buffer(this.finalResultSize),h||(this.outputHeightWorkBench=this.generateFloatBuffer(this.targetWidthMultipliedByChannels),this.colorChannels>3&&(this.outputHeightWorkBenchOpaquePixelsCount=this.generateFloat64Buffer(this.targetWidth)))},v.prototype.generateFloatBuffer=function(h){try{return new Float32Array(h)}catch{return[]}},v.prototype.generateFloat64Buffer=function(h){try{return new Float64Array(h)}catch{return[]}},v.prototype.generateUint8Buffer=function(h){try{return new Uint8Array(h)}catch{return[]}},d.exports=v},{}],223:[function(t,d,o){(function(v){d.exports={nearestNeighbor:function(g,b){for(var u=g.width,f=g.height,s=b.width,i=b.height,n=g.data,p=b.data,y=0;y<i;y++)for(var l=0;l<s;l++){var m=(y*s+l)*4,c=Math.floor(y*f/i),w=Math.floor(l*u/s),x=(c*u+w)*4;p[m++]=n[x++],p[m++]=n[x++],p[m++]=n[x++],p[m++]=n[x++]}},bilinearInterpolation:function(g,b){for(var u=g.width,f=g.height,s=b.width,i=b.height,n=g.data,p=b.data,y=function(M,B,I,Y,J){return B===Y?I:Math.round((M-B)*J+(Y-M)*I)},l=function(M,B,I,Y,J,D,T,G){var U=(T*u+Y)*4+B,ie=(T*u+J)*4+B,se=y(I,Y,n[U],J,n[ie]);if(G===T)p[M+B]=se;else{U=(G*u+Y)*4+B,ie=(G*u+J)*4+B;var ae=y(I,Y,n[U],J,n[ie]);p[M+B]=y(D,T,se,G,ae)}},m=0;m<i;m++)for(var c=0;c<s;c++){var w=(m*s+c)*4,x=c*u/s,A=Math.floor(x),N=Math.min(Math.ceil(x),u-1),E=m*f/i,k=Math.floor(E),S=Math.min(Math.ceil(E),f-1);l(w,0,x,A,N,E,k,S),l(w,1,x,A,N,E,k,S),l(w,2,x,A,N,E,k,S),l(w,3,x,A,N,E,k,S)}},_interpolate2D:function(g,b,u,f){for(var s=g.data,i=b.data,n=g.width,p=g.height,y=b.width,l=b.height,m=Math.max(1,Math.floor(n/y)),c=y*m,w=Math.max(1,Math.floor(p/l)),x=l*w,A=v.alloc(c*p*4),N=0;N<p;N++)for(var E=0;E<c;E++)for(var k=E*(n-1)/c,S=Math.floor(k),R=k-S,M=(N*n+S)*4,B=(N*c+E)*4,I=0;I<4;I++){var Y=M+I,J=S>0?s[Y-4]:2*s[Y]-s[Y+4],D=s[Y],T=s[Y+4],G=S<n-2?s[Y+8]:2*s[Y+4]-s[Y];A[B+I]=f(J,D,T,G,R)}for(var U=v.alloc(c*x*4),ie=0;ie<x;ie++)for(var se=0;se<c;se++)for(var ae=ie*(p-1)/x,W=Math.floor(ae),ee=ae-W,_=(W*c+se)*4,re=(ie*c+se)*4,fe=0;fe<4;fe++){var pe=_+fe,he=W>0?A[pe-c*4]:2*A[pe]-A[pe+c*4],oe=A[pe],ce=A[pe+c*4],X=W<p-2?A[pe+c*8]:2*A[pe+c*4]-A[pe];U[re+fe]=f(he,oe,ce,X,ee)}var K=m*w;if(K>1)for(var L=0;L<l;L++)for(var $=0;$<y;$++){for(var te=0,V=0,z=0,F=0,q=0,H=0;H<w;H++)for(var O=L*w+H,C=0;C<m;C++){var Q=$*m+C,le=(O*c+Q)*4,ge=U[le+3];ge&&(te+=U[le],V+=U[le+1],z+=U[le+2],q++),F+=ge}var ye=(L*y+$)*4;i[ye]=q?Math.round(te/q):0,i[ye+1]=q?Math.round(V/q):0,i[ye+2]=q?Math.round(z/q):0,i[ye+3]=Math.round(F/K)}else b.data=U},bicubicInterpolation:function(g,b,u){var f=function(i,n,p,y,l){var m=y-p-i+n,c=i-n-m,w=p-i,x=n;return Math.max(0,Math.min(255,m*(l*l*l)+c*(l*l)+w*l+x))};return this._interpolate2D(g,b,u,f)},hermiteInterpolation:function(g,b,u){var f=function(i,n,p,y,l){var m=n,c=.5*(p-i),w=i-2.5*n+2*p-.5*y,x=.5*(y-i)+1.5*(n-p);return Math.max(0,Math.min(255,Math.round(((x*l+w)*l+c)*l+m)))};return this._interpolate2D(g,b,u,f)},bezierInterpolation:function(g,b,u){var f=function(i,n,p,y,l){var m=n+(p-i)/4,c=p-(y-n)/4,w=1-l,x=n*w*w*w,A=3*m*w*w*l,N=3*c*w*l*l,E=p*l*l*l;return Math.max(0,Math.min(255,Math.round(x+A+N+E)))};return this._interpolate2D(g,b,u,f)}}}).call(this,t("buffer").Buffer)},{buffer:48}],224:[function(t,d,o){(function(v){Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var h=t("@jimp/utils");function g(u,f){u%=360;var s=u*Math.PI/180,i=Math.cos(s),n=Math.sin(s),p=this.bitmap.width,y=this.bitmap.height;if(f===!0||typeof f=="string"){p=Math.ceil(Math.abs(this.bitmap.width*i)+Math.abs(this.bitmap.height*n))+1,y=Math.ceil(Math.abs(this.bitmap.width*n)+Math.abs(this.bitmap.height*i))+1,p%2!==0&&p++,y%2!==0&&y++;var l=this.cloneQuiet();this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(T,G,U){this.bitmap.data.writeUInt32BE(this._background,U)});var m=Math.max(p,y,this.bitmap.width,this.bitmap.height);this.resize(m,m,f),this.blit(l,this.bitmap.width/2-l.bitmap.width/2,this.bitmap.height/2-l.bitmap.height/2)}var c=this.bitmap.width,w=this.bitmap.height,x=v.alloc(this.bitmap.data.length);function A(T,G){return function(U,ie){return{x:U+T,y:ie+G}}}for(var N=A(-(c/2),-(w/2)),E=A(c/2+.5,w/2+.5),k=1;k<=w;k++)for(var S=1;S<=c;S++){var R=N(S,k),M=E(i*R.x-n*R.y,i*R.y+n*R.x),B=c*(k-1)+S-1<<2;if(M.x>=0&&M.x<c&&M.y>=0&&M.y<w){var I=(c*(M.y|0)+M.x|0)<<2,Y=this.bitmap.data.readUInt32BE(I);x.writeUInt32BE(Y,B)}else x.writeUInt32BE(this._background,B)}if(this.bitmap.data=x,f===!0||typeof f=="string"){var J=c/2-p/2,D=w/2-y/2;this.crop(J,D,p,y)}}var b=function(){return{rotate:function(s,i,n){return(typeof i=="undefined"||i===null)&&(i=!0),typeof i=="function"&&typeof n=="undefined"&&(n=i,i=!0),typeof s!="number"?h.throwError.call(this,"deg must be a number",n):typeof i!="boolean"&&typeof i!="string"?h.throwError.call(this,"mode must be a boolean or a string",n):(g.call(this,s,i,n),(0,h.isNodePattern)(n)&&n.call(this,null,this),this)}}};o.default=b,d.exports=o.default}).call(this,t("buffer").Buffer)},{"@jimp/utils":235,buffer:48}],225:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var v=t("@jimp/utils"),h=function(){return{scale:function(u,f,s){if(typeof u!="number")return v.throwError.call(this,"f must be a number",s);if(u<0)return v.throwError.call(this,"f must be a positive number",s);typeof f=="function"&&typeof s=="undefined"&&(s=f,f=null);var i=this.bitmap.width*u,n=this.bitmap.height*u;return this.resize(i,n,f),(0,v.isNodePattern)(s)&&s.call(this,null,this),this},scaleToFit:function(u,f,s,i){if(typeof u!="number"||typeof f!="number")return v.throwError.call(this,"w and h must be numbers",i);typeof s=="function"&&typeof i=="undefined"&&(i=s,s=null);var n=u/f>this.bitmap.width/this.bitmap.height?f/this.bitmap.height:u/this.bitmap.width;return this.scale(n,s),(0,v.isNodePattern)(i)&&i.call(this,null,this),this}}};o.default=h,d.exports=o.default},{"@jimp/utils":235}],226:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var v=t("@jimp/utils"),h=function(){return{shadow:function(){var u=this,f=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},s=arguments.length>1?arguments[1]:void 0;typeof f=="function"&&(s=f,f={});var i=f,n=i.opacity,p=n===void 0?.7:n,y=i.size,l=y===void 0?1.1:y,m=i.x,c=m===void 0?-25:m,w=i.y,x=w===void 0?25:w,A=i.blur,N=A===void 0?5:A,E=this.clone(),k=this.clone();return k.scan(0,0,k.bitmap.width,k.bitmap.height,function(S,R,M){k.bitmap.data[M]=0,k.bitmap.data[M+1]=0,k.bitmap.data[M+2]=0,k.bitmap.data[M+3]=k.constructor.limit255(k.bitmap.data[M+3]*p),u.bitmap.data[M]=0,u.bitmap.data[M+1]=0,u.bitmap.data[M+2]=0,u.bitmap.data[M+3]=0}),k.resize(k.bitmap.width*l,k.bitmap.height*l).blur(N),this.composite(k,c,x),this.composite(E,0,0),(0,v.isNodePattern)(s)&&s.call(this,null,this),this}}};o.default=h,d.exports=o.default},{"@jimp/utils":235}],227:[function(t,d,o){Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var v=t("@jimp/utils"),h=function(){return{threshold:function(u,f){var s=this,i=u.max,n=u.replace,p=n===void 0?255:n,y=u.autoGreyscale,l=y===void 0?!0:y;return typeof i!="number"?v.throwError.call(this,"max must be a number",f):typeof p!="number"?v.throwError.call(this,"replace must be a number",f):typeof l!="boolean"?v.throwError.call(this,"autoGreyscale must be a boolean",f):(i=this.constructor.limit255(i),p=this.constructor.limit255(p),l&&this.greyscale(),this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(m,c,w){var x=s.bitmap.data[w]<i?s.bitmap.data[w]:p;s.bitmap.data[w]=x,s.bitmap.data[w+1]=x,s.bitmap.data[w+2]=x}),(0,v.isNodePattern)(f)&&f.call(this,null,this),this)}}};o.default=h,d.exports=o.default},{"@jimp/utils":235}],228:[function(t,d,o){var v=t("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var h=v(t("@babel/runtime/helpers/toConsumableArray")),g=t("timm"),b=v(t("@jimp/plugin-blit")),u=v(t("@jimp/plugin-blur")),f=v(t("@jimp/plugin-circle")),s=v(t("@jimp/plugin-color")),i=v(t("@jimp/plugin-contain")),n=v(t("@jimp/plugin-cover")),p=v(t("@jimp/plugin-crop")),y=v(t("@jimp/plugin-displace")),l=v(t("@jimp/plugin-dither")),m=v(t("@jimp/plugin-fisheye")),c=v(t("@jimp/plugin-flip")),w=v(t("@jimp/plugin-gaussian")),x=v(t("@jimp/plugin-invert")),A=v(t("@jimp/plugin-mask")),N=v(t("@jimp/plugin-normalize")),E=v(t("@jimp/plugin-print")),k=v(t("@jimp/plugin-resize")),S=v(t("@jimp/plugin-rotate")),R=v(t("@jimp/plugin-scale")),M=v(t("@jimp/plugin-shadow")),B=v(t("@jimp/plugin-threshold")),I=[b.default,u.default,f.default,s.default,i.default,n.default,p.default,y.default,l.default,m.default,c.default,w.default,x.default,A.default,N.default,E.default,k.default,S.default,R.default,M.default,B.default],Y=function(D){var T=I.map(function(G){var U=G(D)||{};return!U.class&&!U.constants&&(U={class:U}),U});return g.mergeDeep.apply(void 0,(0,h.default)(T))};o.default=Y,d.exports=o.default},{"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/helpers/toConsumableArray":20,"@jimp/plugin-blit":201,"@jimp/plugin-blur":203,"@jimp/plugin-circle":204,"@jimp/plugin-color":205,"@jimp/plugin-contain":206,"@jimp/plugin-cover":207,"@jimp/plugin-crop":208,"@jimp/plugin-displace":209,"@jimp/plugin-dither":210,"@jimp/plugin-fisheye":211,"@jimp/plugin-flip":212,"@jimp/plugin-gaussian":213,"@jimp/plugin-invert":214,"@jimp/plugin-mask":215,"@jimp/plugin-normalize":216,"@jimp/plugin-print":217,"@jimp/plugin-resize":221,"@jimp/plugin-rotate":224,"@jimp/plugin-scale":225,"@jimp/plugin-shadow":226,"@jimp/plugin-threshold":227,timm:177}],229:[function(t,d,o){var v=t("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var h=v(t("@babel/runtime/helpers/defineProperty")),g=v(t("bmp-js")),b=t("@jimp/utils"),u="image/bmp",f="image/x-ms-bmp";function s(l){return(0,b.scan)(l,0,0,l.bitmap.width,l.bitmap.height,function(m,c,w){var x=this.bitmap.data[w+0],A=this.bitmap.data[w+1],N=this.bitmap.data[w+2],E=this.bitmap.data[w+3];this.bitmap.data[w+0]=E,this.bitmap.data[w+1]=N,this.bitmap.data[w+2]=A,this.bitmap.data[w+3]=x}).bitmap}function i(l){return(0,b.scan)({bitmap:l},0,0,l.width,l.height,function(m,c,w){var x=this.bitmap.data[w+0],A=this.bitmap.data[w+1],N=this.bitmap.data[w+2],E=this.bitmap.data[w+3];this.bitmap.data[w+0]=E,this.bitmap.data[w+1]=N,this.bitmap.data[w+2]=A,this.bitmap.data[w+3]=l.is_with_alpha?x:255}).bitmap}var n=function(m){return i(g.default.decode(m))},p=function(m){return g.default.encode(s(m)).data},y=function(){var m,c;return{mime:(0,h.default)({},u,["bmp"]),constants:{MIME_BMP:u,MIME_X_MS_BMP:f},decoders:(m={},(0,h.default)(m,u,n),(0,h.default)(m,f,n),m),encoders:(c={},(0,h.default)(c,u,p),(0,h.default)(c,f,p),c)}};o.default=y,d.exports=o.default},{"@babel/runtime/helpers/defineProperty":7,"@babel/runtime/helpers/interopRequireDefault":11,"@jimp/utils":235,"bmp-js":30}],230:[function(t,d,o){(function(v){var h=t("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var g=h(t("@babel/runtime/helpers/defineProperty")),b=h(t("omggif")),u=t("gifwrap"),f="image/gif",s=function(){return{mime:(0,g.default)({},f,["gif"]),constants:{MIME_GIF:f},decoders:(0,g.default)({},f,function(n){var p=new b.default.GifReader(n),y=v.alloc(p.width*p.height*4);return p.decodeAndBlitFrameRGBA(0,y),{data:y,width:p.width,height:p.height}}),encoders:(0,g.default)({},f,function(n){var p=new u.BitmapImage(n.bitmap);u.GifUtil.quantizeDekker(p,256);var y=new u.GifFrame(p),l=new u.GifCodec;return l.encodeGif([y],{}).then(function(m){return m.buffer})})}};o.default=s,d.exports=o.default}).call(this,t("buffer").Buffer)},{"@babel/runtime/helpers/defineProperty":7,"@babel/runtime/helpers/interopRequireDefault":11,buffer:48,gifwrap:70,omggif:85}],231:[function(t,d,o){var v=t("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var h=v(t("@babel/runtime/helpers/defineProperty")),g=v(t("jpeg-js")),b=t("@jimp/utils"),u="image/jpeg",f=function(){return{mime:(0,h.default)({},u,["jpeg","jpg","jpe"]),constants:{MIME_JPEG:u},decoders:(0,h.default)({},u,g.default.decode),encoders:(0,h.default)({},u,function(i){return g.default.encode(i.bitmap,i._quality).data}),class:{_quality:100,quality:function(n,p){return typeof n!="number"?b.throwError.call(this,"n must be a number",p):n<0||n>100?b.throwError.call(this,"n must be a number 0 - 100",p):(this._quality=Math.round(n),(0,b.isNodePattern)(p)&&p.call(this,null,this),this)}}}};o.default=f,d.exports=o.default},{"@babel/runtime/helpers/defineProperty":7,"@babel/runtime/helpers/interopRequireDefault":11,"@jimp/utils":235,"jpeg-js":80}],232:[function(t,d,o){var v=t("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var h=v(t("@babel/runtime/helpers/defineProperty")),g=t("pngjs"),b=t("@jimp/utils"),u="image/png",f=-1,s=0,i=1,n=2,p=3,y=4,l=function(){return{mime:(0,h.default)({},u,["png"]),constants:{MIME_PNG:u,PNG_FILTER_AUTO:f,PNG_FILTER_NONE:s,PNG_FILTER_SUB:i,PNG_FILTER_UP:n,PNG_FILTER_AVERAGE:p,PNG_FILTER_PATH:y},hasAlpha:(0,h.default)({},u,!0),decoders:(0,h.default)({},u,g.PNG.sync.read),encoders:(0,h.default)({},u,function(c){var w=new g.PNG({width:c.bitmap.width,height:c.bitmap.height});return w.data=c.bitmap.data,g.PNG.sync.write(w,{width:c.bitmap.width,height:c.bitmap.height,deflateLevel:c._deflateLevel,deflateStrategy:c._deflateStrategy,filterType:c._filterType,colorType:typeof c._colorType=="number"?c._colorType:c._rgba?6:2,inputHasAlpha:c._rgba})}),class:{_deflateLevel:9,_deflateStrategy:3,_filterType:f,_colorType:null,deflateLevel:function(w,x){return typeof w!="number"?b.throwError.call(this,"l must be a number",x):w<0||w>9?b.throwError.call(this,"l must be a number 0 - 9",x):(this._deflateLevel=Math.round(w),(0,b.isNodePattern)(x)&&x.call(this,null,this),this)},deflateStrategy:function(w,x){return typeof w!="number"?b.throwError.call(this,"s must be a number",x):w<0||w>3?b.throwError.call(this,"s must be a number 0 - 3",x):(this._deflateStrategy=Math.round(w),(0,b.isNodePattern)(x)&&x.call(this,null,this),this)},filterType:function(w,x){return typeof w!="number"?b.throwError.call(this,"n must be a number",x):w<-1||w>4?b.throwError.call(this,"n must be -1 (auto) or a number 0 - 4",x):(this._filterType=Math.round(w),(0,b.isNodePattern)(x)&&x.call(this,null,this),this)},colorType:function(w,x){return typeof w!="number"?b.throwError.call(this,"s must be a number",x):w!==0&&w!==2&&w!==4&&w!==6?b.throwError.call(this,"s must be a number 0, 2, 4, 6.",x):(this._colorType=Math.round(w),(0,b.isNodePattern)(x)&&x.call(this,null,this),this)}}}};o.default=l,d.exports=o.default},{"@babel/runtime/helpers/defineProperty":7,"@babel/runtime/helpers/interopRequireDefault":11,"@jimp/utils":235,pngjs:129}],233:[function(t,d,o){(function(v){var h=t("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var g=h(t("@babel/runtime/helpers/defineProperty")),b=h(t("utif")),u="image/tiff",f=function(){return{mime:(0,g.default)({},u,["tiff","tif"]),constants:{MIME_TIFF:u},decoders:(0,g.default)({},u,function(i){var n=b.default.decode(i),p=n[0];b.default.decodeImages(i,n);var y=b.default.toRGBA8(p);return{data:v.from(y),width:p.t256[0],height:p.t257[0]}}),encoders:(0,g.default)({},u,function(i){var n=b.default.encodeImage(i.bitmap.data,i.bitmap.width,i.bitmap.height);return v.from(n)})}};o.default=f,d.exports=o.default}).call(this,t("buffer").Buffer)},{"@babel/runtime/helpers/defineProperty":7,"@babel/runtime/helpers/interopRequireDefault":11,buffer:48,utif:182}],234:[function(t,d,o){var v=t("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var h=t("timm"),g=v(t("@jimp/jpeg")),b=v(t("@jimp/png")),u=v(t("@jimp/bmp")),f=v(t("@jimp/tiff")),s=v(t("@jimp/gif")),i=function(){return(0,h.mergeDeep)((0,g.default)(),(0,b.default)(),(0,u.default)(),(0,f.default)(),(0,s.default)())};o.default=i,d.exports=o.default},{"@babel/runtime/helpers/interopRequireDefault":11,"@jimp/bmp":229,"@jimp/gif":230,"@jimp/jpeg":231,"@jimp/png":232,"@jimp/tiff":233,timm:177}],235:[function(t,d,o){var v=t("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(o,"__esModule",{value:!0}),o.isNodePattern=b,o.throwError=u,o.scan=f,o.scanIterator=s;var h=v(t("@babel/runtime/regenerator")),g=h.default.mark(s);function b(i){if(typeof i=="undefined")return!1;if(typeof i!="function")throw new TypeError("Callback must be a function");return!0}function u(i,n){if(typeof i=="string"&&(i=new Error(i)),typeof n=="function")return n.call(this,i);throw i}function f(i,n,p,y,l,m){n=Math.round(n),p=Math.round(p),y=Math.round(y),l=Math.round(l);for(var c=p;c<p+l;c++)for(var w=n;w<n+y;w++){var x=i.bitmap.width*c+w<<2;m.call(i,w,c,x)}return i}function s(i,n,p,y,l){var m,c,w;return h.default.wrap(function(A){for(;;)switch(A.prev=A.next){case 0:n=Math.round(n),p=Math.round(p),y=Math.round(y),l=Math.round(l),m=p;case 5:if(!(m<p+l)){A.next=17;break}c=n;case 7:if(!(c<n+y)){A.next=14;break}return w=i.bitmap.width*m+c<<2,A.next=11,{x:c,y:m,idx:w,image:i};case 11:c++,A.next=7;break;case 14:m++,A.next=5;break;case 17:case"end":return A.stop()}},g)}},{"@babel/runtime/helpers/interopRequireDefault":11,"@babel/runtime/regenerator":22}]},{},[200])(200)})})(Si);var zd={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]};const Zn=zd,Zf={};for(const e of Object.keys(Zn))Zf[Zn[e]]=e;const je={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};var jf=je;for(const e of Object.keys(je)){if(!("channels"in je[e]))throw new Error("missing channels property: "+e);if(!("labels"in je[e]))throw new Error("missing channel labels property: "+e);if(je[e].labels.length!==je[e].channels)throw new Error("channel and label counts mismatch: "+e);const{channels:r,labels:a}=je[e];delete je[e].channels,delete je[e].labels,Object.defineProperty(je[e],"channels",{value:r}),Object.defineProperty(je[e],"labels",{value:a})}je.rgb.hsl=function(e){const r=e[0]/255,a=e[1]/255,t=e[2]/255,d=Math.min(r,a,t),o=Math.max(r,a,t),v=o-d;let h,g;o===d?h=0:r===o?h=(a-t)/v:a===o?h=2+(t-r)/v:t===o&&(h=4+(r-a)/v),h=Math.min(h*60,360),h<0&&(h+=360);const b=(d+o)/2;return o===d?g=0:b<=.5?g=v/(o+d):g=v/(2-o-d),[h,g*100,b*100]};je.rgb.hsv=function(e){let r,a,t,d,o;const v=e[0]/255,h=e[1]/255,g=e[2]/255,b=Math.max(v,h,g),u=b-Math.min(v,h,g),f=function(s){return(b-s)/6/u+1/2};return u===0?(d=0,o=0):(o=u/b,r=f(v),a=f(h),t=f(g),v===b?d=t-a:h===b?d=1/3+r-t:g===b&&(d=2/3+a-r),d<0?d+=1:d>1&&(d-=1)),[d*360,o*100,b*100]};je.rgb.hwb=function(e){const r=e[0],a=e[1];let t=e[2];const d=je.rgb.hsl(e)[0],o=1/255*Math.min(r,Math.min(a,t));return t=1-1/255*Math.max(r,Math.max(a,t)),[d,o*100,t*100]};je.rgb.cmyk=function(e){const r=e[0]/255,a=e[1]/255,t=e[2]/255,d=Math.min(1-r,1-a,1-t),o=(1-r-d)/(1-d)||0,v=(1-a-d)/(1-d)||0,h=(1-t-d)/(1-d)||0;return[o*100,v*100,h*100,d*100]};function Td(e,r){return(e[0]-r[0])**2+(e[1]-r[1])**2+(e[2]-r[2])**2}je.rgb.keyword=function(e){const r=Zf[e];if(r)return r;let a=1/0,t;for(const d of Object.keys(Zn)){const o=Zn[d],v=Td(e,o);v<a&&(a=v,t=d)}return t};je.keyword.rgb=function(e){return Zn[e]};je.rgb.xyz=function(e){let r=e[0]/255,a=e[1]/255,t=e[2]/255;r=r>.04045?((r+.055)/1.055)**2.4:r/12.92,a=a>.04045?((a+.055)/1.055)**2.4:a/12.92,t=t>.04045?((t+.055)/1.055)**2.4:t/12.92;const d=r*.4124+a*.3576+t*.1805,o=r*.2126+a*.7152+t*.0722,v=r*.0193+a*.1192+t*.9505;return[d*100,o*100,v*100]};je.rgb.lab=function(e){const r=je.rgb.xyz(e);let a=r[0],t=r[1],d=r[2];a/=95.047,t/=100,d/=108.883,a=a>.008856?a**(1/3):7.787*a+16/116,t=t>.008856?t**(1/3):7.787*t+16/116,d=d>.008856?d**(1/3):7.787*d+16/116;const o=116*t-16,v=500*(a-t),h=200*(t-d);return[o,v,h]};je.hsl.rgb=function(e){const r=e[0]/360,a=e[1]/100,t=e[2]/100;let d,o,v;if(a===0)return v=t*255,[v,v,v];t<.5?d=t*(1+a):d=t+a-t*a;const h=2*t-d,g=[0,0,0];for(let b=0;b<3;b++)o=r+1/3*-(b-1),o<0&&o++,o>1&&o--,6*o<1?v=h+(d-h)*6*o:2*o<1?v=d:3*o<2?v=h+(d-h)*(2/3-o)*6:v=h,g[b]=v*255;return g};je.hsl.hsv=function(e){const r=e[0];let a=e[1]/100,t=e[2]/100,d=a;const o=Math.max(t,.01);t*=2,a*=t<=1?t:2-t,d*=o<=1?o:2-o;const v=(t+a)/2,h=t===0?2*d/(o+d):2*a/(t+a);return[r,h*100,v*100]};je.hsv.rgb=function(e){const r=e[0]/60,a=e[1]/100;let t=e[2]/100;const d=Math.floor(r)%6,o=r-Math.floor(r),v=255*t*(1-a),h=255*t*(1-a*o),g=255*t*(1-a*(1-o));switch(t*=255,d){case 0:return[t,g,v];case 1:return[h,t,v];case 2:return[v,t,g];case 3:return[v,h,t];case 4:return[g,v,t];case 5:return[t,v,h]}};je.hsv.hsl=function(e){const r=e[0],a=e[1]/100,t=e[2]/100,d=Math.max(t,.01);let o,v;v=(2-a)*t;const h=(2-a)*d;return o=a*d,o/=h<=1?h:2-h,o=o||0,v/=2,[r,o*100,v*100]};je.hwb.rgb=function(e){const r=e[0]/360;let a=e[1]/100,t=e[2]/100;const d=a+t;let o;d>1&&(a/=d,t/=d);const v=Math.floor(6*r),h=1-t;o=6*r-v,(v&1)!==0&&(o=1-o);const g=a+o*(h-a);let b,u,f;switch(v){default:case 6:case 0:b=h,u=g,f=a;break;case 1:b=g,u=h,f=a;break;case 2:b=a,u=h,f=g;break;case 3:b=a,u=g,f=h;break;case 4:b=g,u=a,f=h;break;case 5:b=h,u=a,f=g;break}return[b*255,u*255,f*255]};je.cmyk.rgb=function(e){const r=e[0]/100,a=e[1]/100,t=e[2]/100,d=e[3]/100,o=1-Math.min(1,r*(1-d)+d),v=1-Math.min(1,a*(1-d)+d),h=1-Math.min(1,t*(1-d)+d);return[o*255,v*255,h*255]};je.xyz.rgb=function(e){const r=e[0]/100,a=e[1]/100,t=e[2]/100;let d,o,v;return d=r*3.2406+a*-1.5372+t*-.4986,o=r*-.9689+a*1.8758+t*.0415,v=r*.0557+a*-.204+t*1.057,d=d>.0031308?1.055*d**(1/2.4)-.055:d*12.92,o=o>.0031308?1.055*o**(1/2.4)-.055:o*12.92,v=v>.0031308?1.055*v**(1/2.4)-.055:v*12.92,d=Math.min(Math.max(0,d),1),o=Math.min(Math.max(0,o),1),v=Math.min(Math.max(0,v),1),[d*255,o*255,v*255]};je.xyz.lab=function(e){let r=e[0],a=e[1],t=e[2];r/=95.047,a/=100,t/=108.883,r=r>.008856?r**(1/3):7.787*r+16/116,a=a>.008856?a**(1/3):7.787*a+16/116,t=t>.008856?t**(1/3):7.787*t+16/116;const d=116*a-16,o=500*(r-a),v=200*(a-t);return[d,o,v]};je.lab.xyz=function(e){const r=e[0],a=e[1],t=e[2];let d,o,v;o=(r+16)/116,d=a/500+o,v=o-t/200;const h=o**3,g=d**3,b=v**3;return o=h>.008856?h:(o-16/116)/7.787,d=g>.008856?g:(d-16/116)/7.787,v=b>.008856?b:(v-16/116)/7.787,d*=95.047,o*=100,v*=108.883,[d,o,v]};je.lab.lch=function(e){const r=e[0],a=e[1],t=e[2];let d;d=Math.atan2(t,a)*360/2/Math.PI,d<0&&(d+=360);const v=Math.sqrt(a*a+t*t);return[r,v,d]};je.lch.lab=function(e){const r=e[0],a=e[1],d=e[2]/360*2*Math.PI,o=a*Math.cos(d),v=a*Math.sin(d);return[r,o,v]};je.rgb.ansi16=function(e,r=null){const[a,t,d]=e;let o=r===null?je.rgb.hsv(e)[2]:r;if(o=Math.round(o/50),o===0)return 30;let v=30+(Math.round(d/255)<<2|Math.round(t/255)<<1|Math.round(a/255));return o===2&&(v+=60),v};je.hsv.ansi16=function(e){return je.rgb.ansi16(je.hsv.rgb(e),e[2])};je.rgb.ansi256=function(e){const r=e[0],a=e[1],t=e[2];return r===a&&a===t?r<8?16:r>248?231:Math.round((r-8)/247*24)+232:16+36*Math.round(r/255*5)+6*Math.round(a/255*5)+Math.round(t/255*5)};je.ansi16.rgb=function(e){let r=e%10;if(r===0||r===7)return e>50&&(r+=3.5),r=r/10.5*255,[r,r,r];const a=(~~(e>50)+1)*.5,t=(r&1)*a*255,d=(r>>1&1)*a*255,o=(r>>2&1)*a*255;return[t,d,o]};je.ansi256.rgb=function(e){if(e>=232){const o=(e-232)*10+8;return[o,o,o]}e-=16;let r;const a=Math.floor(e/36)/5*255,t=Math.floor((r=e%36)/6)/5*255,d=r%6/5*255;return[a,t,d]};je.rgb.hex=function(e){const a=(((Math.round(e[0])&255)<<16)+((Math.round(e[1])&255)<<8)+(Math.round(e[2])&255)).toString(16).toUpperCase();return"000000".substring(a.length)+a};je.hex.rgb=function(e){const r=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!r)return[0,0,0];let a=r[0];r[0].length===3&&(a=a.split("").map(h=>h+h).join(""));const t=parseInt(a,16),d=t>>16&255,o=t>>8&255,v=t&255;return[d,o,v]};je.rgb.hcg=function(e){const r=e[0]/255,a=e[1]/255,t=e[2]/255,d=Math.max(Math.max(r,a),t),o=Math.min(Math.min(r,a),t),v=d-o;let h,g;return v<1?h=o/(1-v):h=0,v<=0?g=0:d===r?g=(a-t)/v%6:d===a?g=2+(t-r)/v:g=4+(r-a)/v,g/=6,g%=1,[g*360,v*100,h*100]};je.hsl.hcg=function(e){const r=e[1]/100,a=e[2]/100,t=a<.5?2*r*a:2*r*(1-a);let d=0;return t<1&&(d=(a-.5*t)/(1-t)),[e[0],t*100,d*100]};je.hsv.hcg=function(e){const r=e[1]/100,a=e[2]/100,t=r*a;let d=0;return t<1&&(d=(a-t)/(1-t)),[e[0],t*100,d*100]};je.hcg.rgb=function(e){const r=e[0]/360,a=e[1]/100,t=e[2]/100;if(a===0)return[t*255,t*255,t*255];const d=[0,0,0],o=r%1*6,v=o%1,h=1-v;let g=0;switch(Math.floor(o)){case 0:d[0]=1,d[1]=v,d[2]=0;break;case 1:d[0]=h,d[1]=1,d[2]=0;break;case 2:d[0]=0,d[1]=1,d[2]=v;break;case 3:d[0]=0,d[1]=h,d[2]=1;break;case 4:d[0]=v,d[1]=0,d[2]=1;break;default:d[0]=1,d[1]=0,d[2]=h}return g=(1-a)*t,[(a*d[0]+g)*255,(a*d[1]+g)*255,(a*d[2]+g)*255]};je.hcg.hsv=function(e){const r=e[1]/100,a=e[2]/100,t=r+a*(1-r);let d=0;return t>0&&(d=r/t),[e[0],d*100,t*100]};je.hcg.hsl=function(e){const r=e[1]/100,t=e[2]/100*(1-r)+.5*r;let d=0;return t>0&&t<.5?d=r/(2*t):t>=.5&&t<1&&(d=r/(2*(1-t))),[e[0],d*100,t*100]};je.hcg.hwb=function(e){const r=e[1]/100,a=e[2]/100,t=r+a*(1-r);return[e[0],(t-r)*100,(1-t)*100]};je.hwb.hcg=function(e){const r=e[1]/100,a=e[2]/100,t=1-a,d=t-r;let o=0;return d<1&&(o=(t-d)/(1-d)),[e[0],d*100,o*100]};je.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]};je.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]};je.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]};je.gray.hsl=function(e){return[0,0,e[0]]};je.gray.hsv=je.gray.hsl;je.gray.hwb=function(e){return[0,100,e[0]]};je.gray.cmyk=function(e){return[0,0,0,e[0]]};je.gray.lab=function(e){return[e[0],0,0]};je.gray.hex=function(e){const r=Math.round(e[0]/100*255)&255,t=((r<<16)+(r<<8)+r).toString(16).toUpperCase();return"000000".substring(t.length)+t};je.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]};const Ci=jf;function Hd(){const e={},r=Object.keys(Ci);for(let a=r.length,t=0;t<a;t++)e[r[t]]={distance:-1,parent:null};return e}function Bd(e){const r=Hd(),a=[e];for(r[e].distance=0;a.length;){const t=a.pop(),d=Object.keys(Ci[t]);for(let o=d.length,v=0;v<o;v++){const h=d[v],g=r[h];g.distance===-1&&(g.distance=r[t].distance+1,g.parent=t,a.unshift(h))}}return r}function Dd(e,r){return function(a){return r(e(a))}}function Zd(e,r){const a=[r[e].parent,e];let t=Ci[r[e].parent][e],d=r[e].parent;for(;r[d].parent;)a.unshift(r[d].parent),t=Dd(Ci[r[d].parent][d],t),d=r[d].parent;return t.conversion=a,t}var jd=function(e){const r=Bd(e),a={},t=Object.keys(r);for(let d=t.length,o=0;o<d;o++){const v=t[o];r[v].parent!==null&&(a[v]=Zd(v,r))}return a};const Da=jf,Gd=jd,_r={},Vd=Object.keys(Da);function Ld(e){const r=function(...a){const t=a[0];return t==null?t:(t.length>1&&(a=t),e(a))};return"conversion"in e&&(r.conversion=e.conversion),r}function Yd(e){const r=function(...a){const t=a[0];if(t==null)return t;t.length>1&&(a=t);const d=e(a);if(typeof d=="object")for(let o=d.length,v=0;v<o;v++)d[v]=Math.round(d[v]);return d};return"conversion"in e&&(r.conversion=e.conversion),r}Vd.forEach(e=>{_r[e]={},Object.defineProperty(_r[e],"channels",{value:Da[e].channels}),Object.defineProperty(_r[e],"labels",{value:Da[e].labels});const r=Gd(e);Object.keys(r).forEach(t=>{const d=r[t];_r[e][t]=Yd(d),_r[e][t].raw=Ld(d)})});var Jd=_r;function Gf(e,r){this.x1=e,this.x2=r}Gf.prototype.getDeltaE=function(){var e=this.x1,r=this.x2;return Math.sqrt(Math.pow(r.L-e.L,2)+Math.pow(r.A-e.A,2)+Math.pow(r.B-e.B,2))};var Xd=Gf;function Xn(e,r,a){this.x1=e,this.x2=r,this.weights=a||{},this.weights.lightness=this.weights.lightness||1,this.weights.chroma=this.weights.chroma||1,this.weights.hue=this.weights.hue||1,this.weights.lightness===1?(this.weights.K1=.045,this.weights.K2=.015):(this.weights.K1=.048,this.weights.K2=.014)}Xn.prototype.getDeltaE=function(){var e=this.x1,r=this.x2,a=Math.sqrt,t=Math.pow;return a(t(this.calculateL(e,r),2)+t(this.calculateA(e,r),2)+t(this.calculateB(e,r),2))};Xn.prototype.calculateL=function(e,r){return(e.L-r.L)/this.weights.lightness};Xn.prototype.calculateA=function(e,r){var a=Math.sqrt,t=Math.pow,d=a(t(e.A,2)+t(e.B,2)),o=a(t(r.A,2)+t(r.B,2)),v=d-o,h=1+this.weights.K1*d;return v/(this.weights.chroma*h)};Xn.prototype.calculateB=function(e,r){var a=Math.sqrt,t=Math.pow,b=a(t(e.A,2)+t(e.B,2)),d=a(t(r.A,2)+t(r.B,2)),o=b-d,v=e.A-r.A,h=e.B-r.B,g=a(t(v,2)+t(h,2)-t(o,2))||0,b=a(t(e.A,2)+t(e.B,2)),u=1+this.weights.K2*b;return g/u};var qd=Xn;function qt(e,r,a){var t=Math.sqrt,d=Math.pow;this.x1=e,this.x2=r,this.weights=a||{},this.ksubL=this.weights.lightness||1,this.ksubC=this.weights.chroma||1,this.ksubH=this.weights.hue||1,this.deltaLPrime=r.L-e.L,this.LBar=(e.L+r.L)/2,this.C1=t(d(e.A,2)+d(e.B,2)),this.C2=t(d(r.A,2)+d(r.B,2)),this.CBar=(this.C1+this.C2)/2,this.aPrime1=e.A+e.A/2*(1-t(d(this.CBar,7)/(d(this.CBar,7)+d(25,7)))),this.aPrime2=r.A+r.A/2*(1-t(d(this.CBar,7)/(d(this.CBar,7)+d(25,7)))),this.CPrime1=t(d(this.aPrime1,2)+d(e.B,2)),this.CPrime2=t(d(this.aPrime2,2)+d(r.B,2)),this.CBarPrime=(this.CPrime1+this.CPrime2)/2,this.deltaCPrime=this.CPrime2-this.CPrime1,this.SsubL=1+.015*d(this.LBar-50,2)/t(20+d(this.LBar-50,2)),this.SsubC=1+.045*this.CBarPrime,this.hPrime1=0,this.hPrime2=0,this.deltahPrime=0,this.deltaHPrime=0,this.HBarPrime=0,this.T=0,this.SsubH=0,this.RsubT=0}qt.prototype.getDeltaE=function(){var e=Math.sqrt,r=Math.sin,a=Math.pow;this.hPrime1=this.gethPrime1(),this.hPrime2=this.gethPrime2(),this.deltahPrime=this.getDeltahPrime(),this.deltaHPrime=2*e(this.CPrime1*this.CPrime2)*r(this.degreesToRadians(this.deltahPrime)/2),this.HBarPrime=this.getHBarPrime(),this.T=this.getT(),this.SsubH=1+.015*this.CBarPrime*this.T,this.RsubT=this.getRsubT();var t=this.deltaLPrime/(this.ksubL*this.SsubL),d=this.deltaCPrime/(this.ksubC*this.SsubC),o=this.deltaHPrime/(this.ksubH*this.SsubH);return e(a(t,2)+a(d,2)+a(o,2)+this.RsubT*d*o)};qt.prototype.getRsubT=function(){var e=Math.sin,r=Math.sqrt,a=Math.pow,t=Math.exp;return-2*r(a(this.CBarPrime,7)/(a(this.CBarPrime,7)+a(25,7)))*e(this.degreesToRadians(60*t(-a((this.HBarPrime-275)/25,2))))};qt.prototype.getT=function(){var e=Math.cos;return 1-.17*e(this.degreesToRadians(this.HBarPrime-30))+.24*e(this.degreesToRadians(2*this.HBarPrime))+.32*e(this.degreesToRadians(3*this.HBarPrime+6))-.2*e(this.degreesToRadians(4*this.HBarPrime-63))};qt.prototype.getHBarPrime=function(){var e=Math.abs;return e(this.hPrime1-this.hPrime2)>180?(this.hPrime1+this.hPrime2+360)/2:(this.hPrime1+this.hPrime2)/2};qt.prototype.getDeltahPrime=function(){var e=Math.abs;return this.C1===0||this.C2===0?0:e(this.hPrime1-this.hPrime2)<=180?this.hPrime2-this.hPrime1:this.hPrime2<=this.hPrime1?this.hPrime2-this.hPrime1+360:this.hPrime2-this.hPrime1-360};qt.prototype.gethPrime1=function(){return this._gethPrimeFn(this.x1.B,this.aPrime1)};qt.prototype.gethPrime2=function(){return this._gethPrimeFn(this.x2.B,this.aPrime2)};qt.prototype._gethPrimeFn=function(e,r){var a;return e===0&&r===0?0:(a=this.radiansToDegrees(Math.atan2(e,r)),a>=0?a:a+360)};qt.prototype.radiansToDegrees=function(e){return e*(180/Math.PI)};qt.prototype.degreesToRadians=function(e){return e*(Math.PI/180)};var Ud=qt,Wd=Xd,Kd=qd,Qd=Ud;function Wi(){}Wi.prototype.getDeltaE76=function(e,r){var a=new Wd(e,r);return a.getDeltaE()};Wi.prototype.getDeltaE94=function(e,r){var a=new Kd(e,r);return a.getDeltaE()};Wi.prototype.getDeltaE00=function(e,r){var a=new Qd(e,r);return a.getDeltaE()};var _d=new Wi;const Vf=String.prototype;Vf.capitalize=function(){return`${this[0].toUpperCase()}${this.substring(1).toLowerCase()}`};Vf.equals=function(e){return this.toLowerCase()===(e==null?void 0:e.toLowerCase())};class Ki{constructor(r,a=!0){Array.isArray(r)?r.forEach((t,d)=>{const o=this.valueToKey(t);a?this[o]=d:this[o]=t}):Object.assign(this,r)}valueToKey(r){return String(r).split(/(?=[A-Z])|-/).map(a=>a.capitalize()).join("")}get count(){return this.keys.length}get keys(){return Object.keys(this)}get values(){return Object.keys(this).map(r=>this[r])}get options(){return Object.keys(this).map(r=>({id:this[r],value:r}))}toString(){const r=[];return Object.keys(this).forEach(t=>{const d=typeof this[t];r.push(`* @property {${d.capitalize()}} ${t}`)}),`/**
`+r.join(`
`)+`
 */`}}const Rt=new Ki(["January","February","March","April","May","June","July","August","September","October","November","December"]),Za=new Ki(["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]),Er=Date.prototype,Vs=Rt.count,$d=Za.count;Er.getWeekStart=function(e={}){const{year:r=this.getFullYear(),yearOffset:a=0,month:t=this.getMonth(),dateOffset:d=0,isEnd:o=!1,startingDay:v=Za.Monday,isWeek:h=!0}=e;let{monthOffset:g=0,date:b=this.getDate()}=e;!h&&o&&(g=1,b=0);const u=new Date(r+a,t+g,b+d);if(h){const f=u.getDay();v<f?u.setDate(u.getDate()-(f-v)):v>f&&u.setDate(u.getDate()-(f+($d-v))),o&&u.setDate(u.getDate()+Za.Saturday)}return u};Er.getMonthStart=function(e={}){return e.isWeek=e.isWeek||!1,e.date=1,this.getWeekStart(e)};Er.getMonthEnd=function(e={}){return e.isEnd=!0,this.getMonthStart(e)};Er.getYearStart=function(e={}){return e.month=Rt.January,this.getMonthStart(e)};Er.getYearEnd=function(e={}){return e.isEnd=!0,e.month=Rt.December,this.getMonthStart(e)};Er.getQuarterStart=function(e={}){const{isEnd:r=!1}=e;let{month:a=this.getMonth()}=e;if(a=a+(e.monthOffset||0),a<0||a>Rt.December){const t=a<0?-1:1,d=Math.abs(a)/Vs,o=t===-1?Math.ceil(d):Math.floor(d);a-=o*Vs*t,e.yearOffset=(e.yearOffset||0)+o*t}return a<Rt.April?a=r?Rt.March:Rt.January:a<Rt.July?a=r?Rt.June:Rt.April:a<Rt.October?a=r?Rt.September:Rt.July:a=r?Rt.December:Rt.October,e.month=a,e.monthOffset=0,this.getMonthStart(e)};Er.getQuarterEnd=function(e={}){return e.isEnd=!0,this.getQuarterStart(e)};Er.toMMDDYYYY=function(){return Intl.DateTimeFormat("en-US",{month:"2-digit",day:"2-digit",year:"numeric"}).format(this)};function ep(e){return typeof e=="string"}function tp(e){return Array.isArray(e)}function rp(e){return typeof e=="function"}const Fo=Array.prototype;Fo.remove=function(e){let r=e;rp(r)||(r=t=>t===e);const a=this.findIndex(r);a!==-1&&this.splice(a,1)};Fo.add=function(e,r=this.length){return this.splice(r,0,e),e};Fo.addUnique=function(e,r){const a=this.find(t=>t===e);return a||(this.add(e,r),e)};new Ki(["String","Integer","Decimal","Boolean","Date","Model","Collection","Array","Object"]);const Ls={},np=new Ki(["E00","E94","E76"],!1);function ip(e,r,a){return _d[`getDelta${a}`]({L:e[0],A:e[1],B:e[2]},{L:r[0],A:r[1],B:r[2]})}function pa(e,r,a){let t=null;return e==="hex"&&a.length===9&&(t=a.slice(1,3),a=a.slice(0,1)+a.slice(3),t=parseInt(t,16)),e==="rgb"&&a.length===4&&(t=a.pop(),t=Math.round(t*255)),e===r?[...a,t]:[...Jd[e][r](a),t]}async function ap({image:e,replaceColors:r,targetColors:a,formula:t=np.E00,deltaE:d=2.3}){if(ep(e)&&(e=await Lf(e)),!(ki(r)||ki(a))){Array.isArray(r)||(r=[r]),Array.isArray(a)||(a=[a]);const o=[],v=[],{bitmap:h}=e,{data:g}=h;a.forEach((b,u)=>{o.push(pa("hex","lab",b)),v.push(pa("hex","rgb",r[u]))}),e.scan(0,0,h.width,h.height,(b,u,f)=>{const s=pa("rgb","lab",[g[f],g[f+1],g[f+2]]);for(let i=0;i<o.length;i++){const n=o[i],p=v[i];if(ip(s,n,t)<=d){g[f]=p[0],g[f+1]=p[1],g[f+2]=p[2],p[3]!==null&&(g[f+3]=p[3]);break}}})}return e.getBase64Async(Si.exports.MIME_PNG)}async function Lf(e,r=!1){if(ki(e))return"";let a=Ls[e];return a||(a=await Si.exports.read({url:`Tiles/${e}.png`}),Ls[e]=a),r?a.getBase64Async(Si.exports.MIME_PNG):a.clone()}class op extends Jn{constructor(a){super(a);_e(this,"Type",Be.None);_e(this,"TargetColors",null);_e(this,"Coordinates",[]);_e(this,"Transition",null);_e(this,"Rotation",0);_e(this,"FlipX",!1);_e(this,"FlipY",!1);_e(this,"Children",[]);_e(this,"grid",null);_e(this,"tileImage","");this.set(a),this.id=Gs(),this.updateType(this.TargetColors)}get excluded(){return["grid","tileSrc"]}get Tile(){return this.Type}set Tile(a){this.Type=a,this.updateType()}isTransition(){return this.Type===Be.Transition}getTileKey(){let a;const t=this.Type;return t!==Be.None&&(this.isTransition()?a="Transparent":a=Be.getKey(t)),a}async updateType(a){const t=this.getTileKey();this.isTransition()&&(this.Transition=this.Transition||{X:0,Y:0,TileType:Be.Transition,Name:null,Template:null,IsFloating:!1}),this.tileSrc=await Lf(t,!0),this.setTargetColors(a)}get x(){return this.Coordinates[0]}get y(){return this.Coordinates[1]}getTargetColors(a){const t=this.TargetColors.filter(d=>!!d.Value);return a?t.reduce((d,o)=>(d.push(Ke.getKey(o.Target),Ke.getKey(o.Value)),d),[]):t.map(d=>{let o=d.Value,v=d.Target;return v===Ke.None&&(v="00000000"),o===Ke.None&&(o="00000000"),{Target:v,Value:o}})}getIndex(){return this.x+this.y*this.grid.totalColumns}setTargetColors(a){if(!a){let t;switch(this.Type){case Be.StairsKeep:case Be.WallKeep:case Be.Transition:case Be.None:t=[];break;case Be.Block:case Be.CastleSand:case Be.DoorClosedY:case Be.DoorClosedX:case Be.DoorUnlockedX:case Be.DoorUnlockedY:case Be.DoorLockedX:case Be.DoorLockedY:case Be.Statue1:case Be.Statue2:case Be.WallLeftX:case Be.WallLeftY:case Be.WallLeftYFlip:case Be.WallRightX:case Be.WallRightY:case Be.WallRightYFlip:case Be.WallX:case Be.WallY:t=[Ke.PureWhite,Ke.PureBlue,Ke.PureRed];break;case Be.WallHoleX:case Be.WallHoleY:t=[Ke.PureWhite,Ke.Black,Ke.PureBlue,Ke.PureRed];break;case Be.Fire:case Be.FireAlt:t=[Ke.FireOuter,Ke.FireInner,Ke.PureWhite];break;case Be.CastleBottomLeft:case Be.CastleBottomRight:case Be.CastleTop:case Be.CastleTopAlt:case Be.CastleTopLeftAlt:case Be.CastleTopRightAlt:case Be.CastleTopLeft:case Be.CastleTopRight:case Be.Dock:case Be.Grave:case Be.StairsUp:case Be.Statue:case Be.TreeBottomRight:case Be.TreeTopLeft:case Be.Water:case Be.WaterTopLeft:case Be.WaterTopRight:case Be.WaterBottomLeft:case Be.WaterBottomRight:t=[Ke.PureWhite,Ke.PureBlue,Ke.Black];break;case Be.GroundTile:t=[Ke.PureWhite,Ke.PureRed,Ke.Black];break;case Be.CastleWater:t=[Ke.PureBlue];break;case Be.Door:t=[Ke.Black];break;case Be.SandBottom:case Be.SandCenter:t=[Ke.PureWhite];break;case Be.PondBottom:case Be.PondBottomLeft:case Be.PondBottomRight:case Be.PondTop:case Be.PondTopLeft:case Be.PondTopRight:case Be.PondCenter:case Be.PondCenterLeft:case Be.PondCenterRight:t=[Ke.PureWhite,Ke.PureBlue];break;case Be.Bush:default:t=[Ke.PureWhite,Ke.Black]}a=t.map(d=>({Target:d,id:Gs()}))}this.TargetColors=a,this.getTileImage()}async getTileImage(){const a=this.getTileKey();if(ki(a))return"";const t=this.getTargetColors();this.tileImage=await ap({image:a,targetColors:js(t,"Target"),replaceColors:js(t,"Value")})}getConfig(){return{Type:Be.getKey(this.Type),Children:[{Transition:this.Transition,Coordinates:this.Coordinates,ReplaceColors:this.getTargetColors(!0)}]}}}class sp extends Jn{constructor(a){super(a);_e(this,"Name","");_e(this,"X",0);_e(this,"Y",0);_e(this,"AccentColor",Ke.Brown);_e(this,"GroundColor",Ke.Tan);_e(this,"Tiles",[]);_e(this,"Enemies",[]);_e(this,"Characters",[]);_e(this,"Items",[]);_e(this,"IsCastle",!1);_e(this,"IsFloating",!1);_e(this,"Template",null);_e(this,"cells",null);_e(this,"totalRows",0);_e(this,"totalColumns",0);this.set(a)}static initialize(a,t){const d=[],o=new this;for(let v=0;v<a;v++)for(let h=0;h<t;h++)d.push(new op({Coordinates:[h,v],grid:o}));return o.set({cells:d,totalRows:a,totalColumns:t}),o}getConfig(){const a=[],t=this.cells;for(let d=0;d<t.length;d++){const o=t[d];o.Type!==Be.None&&a.push(o.getConfig())}return{X:this.X,Y:this.Y,Name:this.Name,GroundColor:Ke.getKey(this.GroundColor),AccentColor:Ke.getKey(this.AccentColor),Tiles:a}}}var Qi=(e,r)=>{const a=e.__vccOpts||e;for(const[t,d]of r)a[t]=d;return a};const lp={name:"BaseContextMenu",setup(){const e=Ue(null);function r(t){e.value.style.left=`${t.pageX}px`,e.value.style.top=`${t.pageY}px`,e.value.classList.remove("hidden"),t.preventDefault()}function a(){e.value.classList.add("hidden")}return{self:e,show:r,hide:a}}},fp={ref:"self",class:"hidden context-menu"};function up(e,r,a,t,d,o){return We(),ct("div",fp,[mt(e.$slots,"default")],512)}var cp=Qi(lp,[["render",up]]),hp=Object.defineProperty,dp=Object.defineProperties,pp=Object.getOwnPropertyDescriptors,Ys=Object.getOwnPropertySymbols,vp=Object.prototype.hasOwnProperty,mp=Object.prototype.propertyIsEnumerable,Js=(e,r,a)=>r in e?hp(e,r,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[r]=a,Ri=(e,r)=>{for(var a in r||(r={}))vp.call(r,a)&&Js(e,a,r[a]);if(Ys)for(var a of Ys(r))mp.call(r,a)&&Js(e,a,r[a]);return e},Fi=(e,r)=>dp(e,pp(r)),jt=(e,r)=>{const a=e.__vccOpts||e;for(const[t,d]of r)a[t]=d;return a};const gp={name:"BaseOverlay",setup(){const e=Ue(null),r=Hr("OverlayManager");return cn(()=>{r.add(e.value)}),Vn(()=>{r.remove(e.value)}),{rootEl:e}}},bp={ref:"rootEl",class:"overlay-container"};function yp(e,r,a,t,d,o){return We(),ct("div",bp,[mt(e.$slots,"default")],512)}var Yf=jt(gp,[["render",yp]]);const Wt=new dn(["right-middle","right-top","right-bottom","middle","middle-top","middle-bottom","left-middle","left-top","left-bottom"],!1);Wt.RIGHT_MIDDLE;const wp={name:"BaseLabel",props:{value:{type:String,required:!0},separator:{type:String,default:":"}}},xp={class:"base-label"};function Ap(e,r,a,t,d,o){return We(),ct("label",xp,ir(a.value)+ir(a.separator),1)}var Jf=jt(wp,[["render",Ap]]);const Xs="base-list-item-selected",Pp={name:"BaseList",emits:["update:selections","click:item"],props:{options:{type:Array,default:()=>[]},valueField:{type:String,default:""},selections:{type:Array,default:()=>[]}},setup(e,{emit:r}){function a(d,o){d.stopPropagation(),d.preventDefault(),r("update:selections",o,d.target.classList.contains(Xs)),r("click:item",o)}function t(d,o){let v="";const{valueField:h}=e,g=d[h];for(const b of o)if(g===b[h]){v=Xs;break}return v}return{onClickListItem:a,isSelected:t}}},Np={class:"base-list"},Ep=["onClick"];function kp(e,r,a,t,d,o){return We(),ct("ul",Np,[(We(!0),ct(Pt,null,hn(a.options,(v,h)=>(We(),ct("li",{key:h,class:Bt(["base-list-item",t.isSelected(v,a.selections)]),onClick:g=>t.onClickListItem(g,v)},ir(a.valueField?v[a.valueField]:v),11,Ep))),128))])}var Sp=jt(Pp,[["render",kp]]);/*!
 * Font Awesome Free 6.1.1 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2022 Fonticons, Inc.
 */function qs(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter(function(d){return Object.getOwnPropertyDescriptor(e,d).enumerable})),a.push.apply(a,t)}return a}function Ze(e){for(var r=1;r<arguments.length;r++){var a=arguments[r]!=null?arguments[r]:{};r%2?qs(Object(a),!0).forEach(function(t){Fp(e,t,a[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):qs(Object(a)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))})}return e}function Oi(e){return Oi=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(r){return typeof r}:function(r){return r&&typeof Symbol=="function"&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r},Oi(e)}function Cp(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}function Us(e,r){for(var a=0;a<r.length;a++){var t=r[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function Rp(e,r,a){return r&&Us(e.prototype,r),a&&Us(e,a),Object.defineProperty(e,"prototype",{writable:!1}),e}function Fp(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function Oo(e,r){return Ip(e)||zp(e,r)||Xf(e,r)||Hp()}function _i(e){return Op(e)||Mp(e)||Xf(e)||Tp()}function Op(e){if(Array.isArray(e))return ja(e)}function Ip(e){if(Array.isArray(e))return e}function Mp(e){if(typeof Symbol!="undefined"&&e[Symbol.iterator]!=null||e["@@iterator"]!=null)return Array.from(e)}function zp(e,r){var a=e==null?null:typeof Symbol!="undefined"&&e[Symbol.iterator]||e["@@iterator"];if(a!=null){var t=[],d=!0,o=!1,v,h;try{for(a=a.call(e);!(d=(v=a.next()).done)&&(t.push(v.value),!(r&&t.length===r));d=!0);}catch(g){o=!0,h=g}finally{try{!d&&a.return!=null&&a.return()}finally{if(o)throw h}}return t}}function Xf(e,r){if(!!e){if(typeof e=="string")return ja(e,r);var a=Object.prototype.toString.call(e).slice(8,-1);if(a==="Object"&&e.constructor&&(a=e.constructor.name),a==="Map"||a==="Set")return Array.from(e);if(a==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return ja(e,r)}}function ja(e,r){(r==null||r>e.length)&&(r=e.length);for(var a=0,t=new Array(r);a<r;a++)t[a]=e[a];return t}function Tp(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Hp(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var Ws=function(){},Io={},qf={},Uf=null,Wf={mark:Ws,measure:Ws};try{typeof window!="undefined"&&(Io=window),typeof document!="undefined"&&(qf=document),typeof MutationObserver!="undefined"&&(Uf=MutationObserver),typeof performance!="undefined"&&(Wf=performance)}catch{}var Bp=Io.navigator||{},Ks=Bp.userAgent,Qs=Ks===void 0?"":Ks,xr=Io,st=qf,_s=Uf,ii=Wf;xr.document;var hr=!!st.documentElement&&!!st.head&&typeof st.addEventListener=="function"&&typeof st.createElement=="function",Kf=~Qs.indexOf("MSIE")||~Qs.indexOf("Trident/"),lr="___FONT_AWESOME___",Ga=16,Qf="fa",_f="svg-inline--fa",Gr="data-fa-i2svg",Va="data-fa-pseudo-element",Dp="data-fa-pseudo-element-pending",Mo="data-prefix",zo="data-icon",$s="fontawesome-i2svg",Zp="async",jp=["HTML","HEAD","STYLE","SCRIPT"],$f=function(){try{return!0}catch{return!1}}(),To={fas:"solid","fa-solid":"solid",far:"regular","fa-regular":"regular",fal:"light","fa-light":"light",fat:"thin","fa-thin":"thin",fad:"duotone","fa-duotone":"duotone",fab:"brands","fa-brands":"brands",fak:"kit","fa-kit":"kit",fa:"solid"},Ii={solid:"fas",regular:"far",light:"fal",thin:"fat",duotone:"fad",brands:"fab",kit:"fak"},eu={fab:"fa-brands",fad:"fa-duotone",fak:"fa-kit",fal:"fa-light",far:"fa-regular",fas:"fa-solid",fat:"fa-thin"},Gp={"fa-brands":"fab","fa-duotone":"fad","fa-kit":"fak","fa-light":"fal","fa-regular":"far","fa-solid":"fas","fa-thin":"fat"},Vp=/fa[srltdbk\-\ ]/,tu="fa-layers-text",Lp=/Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Kit)?.*/i,Yp={"900":"fas","400":"far",normal:"far","300":"fal","100":"fat"},ru=[1,2,3,4,5,6,7,8,9,10],Jp=ru.concat([11,12,13,14,15,16,17,18,19,20]),Xp=["class","data-prefix","data-icon","data-fa-transform","data-fa-mask"],zr={GROUP:"duotone-group",SWAP_OPACITY:"swap-opacity",PRIMARY:"primary",SECONDARY:"secondary"},qp=[].concat(_i(Object.keys(Ii)),["2xs","xs","sm","lg","xl","2xl","beat","border","fade","beat-fade","bounce","flip-both","flip-horizontal","flip-vertical","flip","fw","inverse","layers-counter","layers-text","layers","li","pull-left","pull-right","pulse","rotate-180","rotate-270","rotate-90","rotate-by","shake","spin-pulse","spin-reverse","spin","stack-1x","stack-2x","stack","ul",zr.GROUP,zr.SWAP_OPACITY,zr.PRIMARY,zr.SECONDARY]).concat(ru.map(function(e){return"".concat(e,"x")})).concat(Jp.map(function(e){return"w-".concat(e)})),nu=xr.FontAwesomeConfig||{};function Up(e){var r=st.querySelector("script["+e+"]");if(r)return r.getAttribute(e)}function Wp(e){return e===""?!0:e==="false"?!1:e==="true"?!0:e}if(st&&typeof st.querySelector=="function"){var Kp=[["data-family-prefix","familyPrefix"],["data-style-default","styleDefault"],["data-replacement-class","replacementClass"],["data-auto-replace-svg","autoReplaceSvg"],["data-auto-add-css","autoAddCss"],["data-auto-a11y","autoA11y"],["data-search-pseudo-elements","searchPseudoElements"],["data-observe-mutations","observeMutations"],["data-mutate-approach","mutateApproach"],["data-keep-original-source","keepOriginalSource"],["data-measure-performance","measurePerformance"],["data-show-missing-icons","showMissingIcons"]];Kp.forEach(function(e){var r=Oo(e,2),a=r[0],t=r[1],d=Wp(Up(a));d!=null&&(nu[t]=d)})}var Qp={familyPrefix:Qf,styleDefault:"solid",replacementClass:_f,autoReplaceSvg:!0,autoAddCss:!0,autoA11y:!0,searchPseudoElements:!1,observeMutations:!0,mutateApproach:"async",keepOriginalSource:!0,measurePerformance:!1,showMissingIcons:!0},Rn=Ze(Ze({},Qp),nu);Rn.autoReplaceSvg||(Rn.observeMutations=!1);var Ve={};Object.keys(Rn).forEach(function(e){Object.defineProperty(Ve,e,{enumerable:!0,set:function(a){Rn[e]=a,ui.forEach(function(t){return t(Ve)})},get:function(){return Rn[e]}})});xr.FontAwesomeConfig=Ve;var ui=[];function _p(e){return ui.push(e),function(){ui.splice(ui.indexOf(e),1)}}var pr=Ga,_t={size:16,x:0,y:0,rotate:0,flipX:!1,flipY:!1};function $p(e){if(!(!e||!hr)){var r=st.createElement("style");r.setAttribute("type","text/css"),r.innerHTML=e;for(var a=st.head.childNodes,t=null,d=a.length-1;d>-1;d--){var o=a[d],v=(o.tagName||"").toUpperCase();["STYLE","LINK"].indexOf(v)>-1&&(t=o)}return st.head.insertBefore(r,t),e}}var ev="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";function jn(){for(var e=12,r="";e-- >0;)r+=ev[Math.random()*62|0];return r}function vn(e){for(var r=[],a=(e||[]).length>>>0;a--;)r[a]=e[a];return r}function Ho(e){return e.classList?vn(e.classList):(e.getAttribute("class")||"").split(" ").filter(function(r){return r})}function iu(e){return"".concat(e).replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function tv(e){return Object.keys(e||{}).reduce(function(r,a){return r+"".concat(a,'="').concat(iu(e[a]),'" ')},"").trim()}function $i(e){return Object.keys(e||{}).reduce(function(r,a){return r+"".concat(a,": ").concat(e[a].trim(),";")},"")}function Bo(e){return e.size!==_t.size||e.x!==_t.x||e.y!==_t.y||e.rotate!==_t.rotate||e.flipX||e.flipY}function rv(e){var r=e.transform,a=e.containerWidth,t=e.iconWidth,d={transform:"translate(".concat(a/2," 256)")},o="translate(".concat(r.x*32,", ").concat(r.y*32,") "),v="scale(".concat(r.size/16*(r.flipX?-1:1),", ").concat(r.size/16*(r.flipY?-1:1),") "),h="rotate(".concat(r.rotate," 0 0)"),g={transform:"".concat(o," ").concat(v," ").concat(h)},b={transform:"translate(".concat(t/2*-1," -256)")};return{outer:d,inner:g,path:b}}function nv(e){var r=e.transform,a=e.width,t=a===void 0?Ga:a,d=e.height,o=d===void 0?Ga:d,v=e.startCentered,h=v===void 0?!1:v,g="";return h&&Kf?g+="translate(".concat(r.x/pr-t/2,"em, ").concat(r.y/pr-o/2,"em) "):h?g+="translate(calc(-50% + ".concat(r.x/pr,"em), calc(-50% + ").concat(r.y/pr,"em)) "):g+="translate(".concat(r.x/pr,"em, ").concat(r.y/pr,"em) "),g+="scale(".concat(r.size/pr*(r.flipX?-1:1),", ").concat(r.size/pr*(r.flipY?-1:1),") "),g+="rotate(".concat(r.rotate,"deg) "),g}var iv=`:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Solid";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Regular";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Light";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Thin";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  -webkit-transform-origin: center center;
          transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  -webkit-transform-origin: center center;
          transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  -webkit-transform: scale(var(--fa-counter-scale, 0.25));
          transform: scale(var(--fa-counter-scale, 0.25));
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: bottom right;
          transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: bottom left;
          transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: top left;
          transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(var(--fa-li-width, 2em) * -1);
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  -webkit-animation-name: fa-beat;
          animation-name: fa-beat;
  -webkit-animation-delay: var(--fa-animation-delay, 0);
          animation-delay: var(--fa-animation-delay, 0);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);
          animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  -webkit-animation-name: fa-bounce;
          animation-name: fa-bounce;
  -webkit-animation-delay: var(--fa-animation-delay, 0);
          animation-delay: var(--fa-animation-delay, 0);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  -webkit-animation-name: fa-fade;
          animation-name: fa-fade;
  -webkit-animation-delay: var(--fa-animation-delay, 0);
          animation-delay: var(--fa-animation-delay, 0);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  -webkit-animation-name: fa-beat-fade;
          animation-name: fa-beat-fade;
  -webkit-animation-delay: var(--fa-animation-delay, 0);
          animation-delay: var(--fa-animation-delay, 0);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  -webkit-animation-name: fa-flip;
          animation-name: fa-flip;
  -webkit-animation-delay: var(--fa-animation-delay, 0);
          animation-delay: var(--fa-animation-delay, 0);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);
          animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  -webkit-animation-name: fa-shake;
          animation-name: fa-shake;
  -webkit-animation-delay: var(--fa-animation-delay, 0);
          animation-delay: var(--fa-animation-delay, 0);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, linear);
          animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  -webkit-animation-name: fa-spin;
          animation-name: fa-spin;
  -webkit-animation-delay: var(--fa-animation-delay, 0);
          animation-delay: var(--fa-animation-delay, 0);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 2s);
          animation-duration: var(--fa-animation-duration, 2s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, linear);
          animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  -webkit-animation-name: fa-spin;
          animation-name: fa-spin;
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, steps(8));
          animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    -webkit-animation-delay: -1ms;
            animation-delay: -1ms;
    -webkit-animation-duration: 1ms;
            animation-duration: 1ms;
    -webkit-animation-iteration-count: 1;
            animation-iteration-count: 1;
    transition-delay: 0s;
    transition-duration: 0s;
  }
}
@-webkit-keyframes fa-beat {
  0%, 90% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  45% {
    -webkit-transform: scale(var(--fa-beat-scale, 1.25));
            transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-beat {
  0%, 90% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  45% {
    -webkit-transform: scale(var(--fa-beat-scale, 1.25));
            transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@-webkit-keyframes fa-bounce {
  0% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  10% {
    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  100% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-bounce {
  0% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  10% {
    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  100% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
}
@-webkit-keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@-webkit-keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  50% {
    opacity: 1;
    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));
            transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  50% {
    opacity: 1;
    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));
            transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@-webkit-keyframes fa-flip {
  50% {
    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-flip {
  50% {
    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@-webkit-keyframes fa-shake {
  0% {
    -webkit-transform: rotate(-15deg);
            transform: rotate(-15deg);
  }
  4% {
    -webkit-transform: rotate(15deg);
            transform: rotate(15deg);
  }
  8%, 24% {
    -webkit-transform: rotate(-18deg);
            transform: rotate(-18deg);
  }
  12%, 28% {
    -webkit-transform: rotate(18deg);
            transform: rotate(18deg);
  }
  16% {
    -webkit-transform: rotate(-22deg);
            transform: rotate(-22deg);
  }
  20% {
    -webkit-transform: rotate(22deg);
            transform: rotate(22deg);
  }
  32% {
    -webkit-transform: rotate(-12deg);
            transform: rotate(-12deg);
  }
  36% {
    -webkit-transform: rotate(12deg);
            transform: rotate(12deg);
  }
  40%, 100% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
}
@keyframes fa-shake {
  0% {
    -webkit-transform: rotate(-15deg);
            transform: rotate(-15deg);
  }
  4% {
    -webkit-transform: rotate(15deg);
            transform: rotate(15deg);
  }
  8%, 24% {
    -webkit-transform: rotate(-18deg);
            transform: rotate(-18deg);
  }
  12%, 28% {
    -webkit-transform: rotate(18deg);
            transform: rotate(18deg);
  }
  16% {
    -webkit-transform: rotate(-22deg);
            transform: rotate(-22deg);
  }
  20% {
    -webkit-transform: rotate(22deg);
            transform: rotate(22deg);
  }
  32% {
    -webkit-transform: rotate(-12deg);
            transform: rotate(-12deg);
  }
  36% {
    -webkit-transform: rotate(12deg);
            transform: rotate(12deg);
  }
  40%, 100% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
}
@-webkit-keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
@keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
}

.fa-rotate-180 {
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.fa-rotate-270 {
  -webkit-transform: rotate(270deg);
          transform: rotate(270deg);
}

.fa-flip-horizontal {
  -webkit-transform: scale(-1, 1);
          transform: scale(-1, 1);
}

.fa-flip-vertical {
  -webkit-transform: scale(1, -1);
          transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  -webkit-transform: scale(-1, -1);
          transform: scale(-1, -1);
}

.fa-rotate-by {
  -webkit-transform: rotate(var(--fa-rotate-angle, none));
          transform: rotate(var(--fa-rotate-angle, none));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}

.fad.fa-inverse,
.fa-duotone.fa-inverse {
  color: var(--fa-inverse, #fff);
}`;function au(){var e=Qf,r=_f,a=Ve.familyPrefix,t=Ve.replacementClass,d=iv;if(a!==e||t!==r){var o=new RegExp("\\.".concat(e,"\\-"),"g"),v=new RegExp("\\--".concat(e,"\\-"),"g"),h=new RegExp("\\.".concat(r),"g");d=d.replace(o,".".concat(a,"-")).replace(v,"--".concat(a,"-")).replace(h,".".concat(t))}return d}var el=!1;function va(){Ve.autoAddCss&&!el&&($p(au()),el=!0)}var av={mixout:function(){return{dom:{css:au,insertCss:va}}},hooks:function(){return{beforeDOMElementCreation:function(){va()},beforeI2svg:function(){va()}}}},fr=xr||{};fr[lr]||(fr[lr]={});fr[lr].styles||(fr[lr].styles={});fr[lr].hooks||(fr[lr].hooks={});fr[lr].shims||(fr[lr].shims=[]);var Yt=fr[lr],ou=[],ov=function e(){st.removeEventListener("DOMContentLoaded",e),Mi=1,ou.map(function(r){return r()})},Mi=!1;hr&&(Mi=(st.documentElement.doScroll?/^loaded|^c/:/^loaded|^i|^c/).test(st.readyState),Mi||st.addEventListener("DOMContentLoaded",ov));function sv(e){!hr||(Mi?setTimeout(e,0):ou.push(e))}function qn(e){var r=e.tag,a=e.attributes,t=a===void 0?{}:a,d=e.children,o=d===void 0?[]:d;return typeof e=="string"?iu(e):"<".concat(r," ").concat(tv(t),">").concat(o.map(qn).join(""),"</").concat(r,">")}function tl(e,r,a){if(e&&e[r]&&e[r][a])return{prefix:r,iconName:a,icon:e[r][a]}}var lv=function(r,a){return function(t,d,o,v){return r.call(a,t,d,o,v)}},ma=function(r,a,t,d){var o=Object.keys(r),v=o.length,h=d!==void 0?lv(a,d):a,g,b,u;for(t===void 0?(g=1,u=r[o[0]]):(g=0,u=t);g<v;g++)b=o[g],u=h(u,r[b],b,r);return u};function fv(e){for(var r=[],a=0,t=e.length;a<t;){var d=e.charCodeAt(a++);if(d>=55296&&d<=56319&&a<t){var o=e.charCodeAt(a++);(o&64512)==56320?r.push(((d&1023)<<10)+(o&1023)+65536):(r.push(d),a--)}else r.push(d)}return r}function La(e){var r=fv(e);return r.length===1?r[0].toString(16):null}function uv(e,r){var a=e.length,t=e.charCodeAt(r),d;return t>=55296&&t<=56319&&a>r+1&&(d=e.charCodeAt(r+1),d>=56320&&d<=57343)?(t-55296)*1024+d-56320+65536:t}function rl(e){return Object.keys(e).reduce(function(r,a){var t=e[a],d=!!t.icon;return d?r[t.iconName]=t.icon:r[a]=t,r},{})}function Ya(e,r){var a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},t=a.skipHooks,d=t===void 0?!1:t,o=rl(r);typeof Yt.hooks.addPack=="function"&&!d?Yt.hooks.addPack(e,rl(r)):Yt.styles[e]=Ze(Ze({},Yt.styles[e]||{}),o),e==="fas"&&Ya("fa",r)}var Fn=Yt.styles,cv=Yt.shims,hv=Object.values(eu),Do=null,su={},lu={},fu={},uu={},cu={},dv=Object.keys(To);function pv(e){return~qp.indexOf(e)}function vv(e,r){var a=r.split("-"),t=a[0],d=a.slice(1).join("-");return t===e&&d!==""&&!pv(d)?d:null}var hu=function(){var r=function(o){return ma(Fn,function(v,h,g){return v[g]=ma(h,o,{}),v},{})};su=r(function(d,o,v){if(o[3]&&(d[o[3]]=v),o[2]){var h=o[2].filter(function(g){return typeof g=="number"});h.forEach(function(g){d[g.toString(16)]=v})}return d}),lu=r(function(d,o,v){if(d[v]=v,o[2]){var h=o[2].filter(function(g){return typeof g=="string"});h.forEach(function(g){d[g]=v})}return d}),cu=r(function(d,o,v){var h=o[2];return d[v]=v,h.forEach(function(g){d[g]=v}),d});var a="far"in Fn||Ve.autoFetchSvg,t=ma(cv,function(d,o){var v=o[0],h=o[1],g=o[2];return h==="far"&&!a&&(h="fas"),typeof v=="string"&&(d.names[v]={prefix:h,iconName:g}),typeof v=="number"&&(d.unicodes[v.toString(16)]={prefix:h,iconName:g}),d},{names:{},unicodes:{}});fu=t.names,uu=t.unicodes,Do=ea(Ve.styleDefault)};_p(function(e){Do=ea(e.styleDefault)});hu();function Zo(e,r){return(su[e]||{})[r]}function mv(e,r){return(lu[e]||{})[r]}function $r(e,r){return(cu[e]||{})[r]}function du(e){return fu[e]||{prefix:null,iconName:null}}function gv(e){var r=uu[e],a=Zo("fas",e);return r||(a?{prefix:"fas",iconName:a}:null)||{prefix:null,iconName:null}}function Ar(){return Do}var jo=function(){return{prefix:null,iconName:null,rest:[]}};function ea(e){var r=To[e],a=Ii[e]||Ii[r],t=e in Yt.styles?e:null;return a||t||null}function ta(e){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},a=r.skipLookups,t=a===void 0?!1:a,d=null,o=e.reduce(function(v,h){var g=vv(Ve.familyPrefix,h);if(Fn[h]?(h=hv.includes(h)?Gp[h]:h,d=h,v.prefix=h):dv.indexOf(h)>-1?(d=h,v.prefix=ea(h)):g?v.iconName=g:h!==Ve.replacementClass&&v.rest.push(h),!t&&v.prefix&&v.iconName){var b=d==="fa"?du(v.iconName):{},u=$r(v.prefix,v.iconName);b.prefix&&(d=null),v.iconName=b.iconName||u||v.iconName,v.prefix=b.prefix||v.prefix,v.prefix==="far"&&!Fn.far&&Fn.fas&&!Ve.autoFetchSvg&&(v.prefix="fas")}return v},jo());return(o.prefix==="fa"||d==="fa")&&(o.prefix=Ar()||"fas"),o}var bv=function(){function e(){Cp(this,e),this.definitions={}}return Rp(e,[{key:"add",value:function(){for(var a=this,t=arguments.length,d=new Array(t),o=0;o<t;o++)d[o]=arguments[o];var v=d.reduce(this._pullDefinitions,{});Object.keys(v).forEach(function(h){a.definitions[h]=Ze(Ze({},a.definitions[h]||{}),v[h]),Ya(h,v[h]);var g=eu[h];g&&Ya(g,v[h]),hu()})}},{key:"reset",value:function(){this.definitions={}}},{key:"_pullDefinitions",value:function(a,t){var d=t.prefix&&t.iconName&&t.icon?{0:t}:t;return Object.keys(d).map(function(o){var v=d[o],h=v.prefix,g=v.iconName,b=v.icon,u=b[2];a[h]||(a[h]={}),u.length>0&&u.forEach(function(f){typeof f=="string"&&(a[h][f]=b)}),a[h][g]=b}),a}}]),e}(),nl=[],en={},an={},yv=Object.keys(an);function wv(e,r){var a=r.mixoutsTo;return nl=e,en={},Object.keys(an).forEach(function(t){yv.indexOf(t)===-1&&delete an[t]}),nl.forEach(function(t){var d=t.mixout?t.mixout():{};if(Object.keys(d).forEach(function(v){typeof d[v]=="function"&&(a[v]=d[v]),Oi(d[v])==="object"&&Object.keys(d[v]).forEach(function(h){a[v]||(a[v]={}),a[v][h]=d[v][h]})}),t.hooks){var o=t.hooks();Object.keys(o).forEach(function(v){en[v]||(en[v]=[]),en[v].push(o[v])})}t.provides&&t.provides(an)}),a}function Ja(e,r){for(var a=arguments.length,t=new Array(a>2?a-2:0),d=2;d<a;d++)t[d-2]=arguments[d];var o=en[e]||[];return o.forEach(function(v){r=v.apply(null,[r].concat(t))}),r}function Vr(e){for(var r=arguments.length,a=new Array(r>1?r-1:0),t=1;t<r;t++)a[t-1]=arguments[t];var d=en[e]||[];d.forEach(function(o){o.apply(null,a)})}function ur(){var e=arguments[0],r=Array.prototype.slice.call(arguments,1);return an[e]?an[e].apply(null,r):void 0}function Xa(e){e.prefix==="fa"&&(e.prefix="fas");var r=e.iconName,a=e.prefix||Ar();if(!!r)return r=$r(a,r)||r,tl(pu.definitions,a,r)||tl(Yt.styles,a,r)}var pu=new bv,xv=function(){Ve.autoReplaceSvg=!1,Ve.observeMutations=!1,Vr("noAuto")},Av={i2svg:function(){var r=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};return hr?(Vr("beforeI2svg",r),ur("pseudoElements2svg",r),ur("i2svg",r)):Promise.reject("Operation requires a DOM of some kind.")},watch:function(){var r=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},a=r.autoReplaceSvgRoot;Ve.autoReplaceSvg===!1&&(Ve.autoReplaceSvg=!0),Ve.observeMutations=!0,sv(function(){Nv({autoReplaceSvgRoot:a}),Vr("watch",r)})}},Pv={icon:function(r){if(r===null)return null;if(Oi(r)==="object"&&r.prefix&&r.iconName)return{prefix:r.prefix,iconName:$r(r.prefix,r.iconName)||r.iconName};if(Array.isArray(r)&&r.length===2){var a=r[1].indexOf("fa-")===0?r[1].slice(3):r[1],t=ea(r[0]);return{prefix:t,iconName:$r(t,a)||a}}if(typeof r=="string"&&(r.indexOf("".concat(Ve.familyPrefix,"-"))>-1||r.match(Vp))){var d=ta(r.split(" "),{skipLookups:!0});return{prefix:d.prefix||Ar(),iconName:$r(d.prefix,d.iconName)||d.iconName}}if(typeof r=="string"){var o=Ar();return{prefix:o,iconName:$r(o,r)||r}}}},Zt={noAuto:xv,config:Ve,dom:Av,parse:Pv,library:pu,findIconDefinition:Xa,toHtml:qn},Nv=function(){var r=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},a=r.autoReplaceSvgRoot,t=a===void 0?st:a;(Object.keys(Yt.styles).length>0||Ve.autoFetchSvg)&&hr&&Ve.autoReplaceSvg&&Zt.dom.i2svg({node:t})};function ra(e,r){return Object.defineProperty(e,"abstract",{get:r}),Object.defineProperty(e,"html",{get:function(){return e.abstract.map(function(t){return qn(t)})}}),Object.defineProperty(e,"node",{get:function(){if(!!hr){var t=st.createElement("div");return t.innerHTML=e.html,t.children}}}),e}function Ev(e){var r=e.children,a=e.main,t=e.mask,d=e.attributes,o=e.styles,v=e.transform;if(Bo(v)&&a.found&&!t.found){var h=a.width,g=a.height,b={x:h/g/2,y:.5};d.style=$i(Ze(Ze({},o),{},{"transform-origin":"".concat(b.x+v.x/16,"em ").concat(b.y+v.y/16,"em")}))}return[{tag:"svg",attributes:d,children:r}]}function kv(e){var r=e.prefix,a=e.iconName,t=e.children,d=e.attributes,o=e.symbol,v=o===!0?"".concat(r,"-").concat(Ve.familyPrefix,"-").concat(a):o;return[{tag:"svg",attributes:{style:"display: none;"},children:[{tag:"symbol",attributes:Ze(Ze({},d),{},{id:v}),children:t}]}]}function Go(e){var r=e.icons,a=r.main,t=r.mask,d=e.prefix,o=e.iconName,v=e.transform,h=e.symbol,g=e.title,b=e.maskId,u=e.titleId,f=e.extra,s=e.watchable,i=s===void 0?!1:s,n=t.found?t:a,p=n.width,y=n.height,l=d==="fak",m=[Ve.replacementClass,o?"".concat(Ve.familyPrefix,"-").concat(o):""].filter(function(k){return f.classes.indexOf(k)===-1}).filter(function(k){return k!==""||!!k}).concat(f.classes).join(" "),c={children:[],attributes:Ze(Ze({},f.attributes),{},{"data-prefix":d,"data-icon":o,class:m,role:f.attributes.role||"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 ".concat(p," ").concat(y)})},w=l&&!~f.classes.indexOf("fa-fw")?{width:"".concat(p/y*16*.0625,"em")}:{};i&&(c.attributes[Gr]=""),g&&(c.children.push({tag:"title",attributes:{id:c.attributes["aria-labelledby"]||"title-".concat(u||jn())},children:[g]}),delete c.attributes.title);var x=Ze(Ze({},c),{},{prefix:d,iconName:o,main:a,mask:t,maskId:b,transform:v,symbol:h,styles:Ze(Ze({},w),f.styles)}),A=t.found&&a.found?ur("generateAbstractMask",x)||{children:[],attributes:{}}:ur("generateAbstractIcon",x)||{children:[],attributes:{}},N=A.children,E=A.attributes;return x.children=N,x.attributes=E,h?kv(x):Ev(x)}function il(e){var r=e.content,a=e.width,t=e.height,d=e.transform,o=e.title,v=e.extra,h=e.watchable,g=h===void 0?!1:h,b=Ze(Ze(Ze({},v.attributes),o?{title:o}:{}),{},{class:v.classes.join(" ")});g&&(b[Gr]="");var u=Ze({},v.styles);Bo(d)&&(u.transform=nv({transform:d,startCentered:!0,width:a,height:t}),u["-webkit-transform"]=u.transform);var f=$i(u);f.length>0&&(b.style=f);var s=[];return s.push({tag:"span",attributes:b,children:[r]}),o&&s.push({tag:"span",attributes:{class:"sr-only"},children:[o]}),s}function Sv(e){var r=e.content,a=e.title,t=e.extra,d=Ze(Ze(Ze({},t.attributes),a?{title:a}:{}),{},{class:t.classes.join(" ")}),o=$i(t.styles);o.length>0&&(d.style=o);var v=[];return v.push({tag:"span",attributes:d,children:[r]}),a&&v.push({tag:"span",attributes:{class:"sr-only"},children:[a]}),v}var ga=Yt.styles;function qa(e){var r=e[0],a=e[1],t=e.slice(4),d=Oo(t,1),o=d[0],v=null;return Array.isArray(o)?v={tag:"g",attributes:{class:"".concat(Ve.familyPrefix,"-").concat(zr.GROUP)},children:[{tag:"path",attributes:{class:"".concat(Ve.familyPrefix,"-").concat(zr.SECONDARY),fill:"currentColor",d:o[0]}},{tag:"path",attributes:{class:"".concat(Ve.familyPrefix,"-").concat(zr.PRIMARY),fill:"currentColor",d:o[1]}}]}:v={tag:"path",attributes:{fill:"currentColor",d:o}},{found:!0,width:r,height:a,icon:v}}var Cv={found:!1,width:512,height:512};function Rv(e,r){!$f&&!Ve.showMissingIcons&&e&&console.error('Icon with name "'.concat(e,'" and prefix "').concat(r,'" is missing.'))}function Ua(e,r){var a=r;return r==="fa"&&Ve.styleDefault!==null&&(r=Ar()),new Promise(function(t,d){if(ur("missingIconAbstract"),a==="fa"){var o=du(e)||{};e=o.iconName||e,r=o.prefix||r}if(e&&r&&ga[r]&&ga[r][e]){var v=ga[r][e];return t(qa(v))}Rv(e,r),t(Ze(Ze({},Cv),{},{icon:Ve.showMissingIcons&&e?ur("missingIconAbstract")||{}:{}}))})}var al=function(){},Wa=Ve.measurePerformance&&ii&&ii.mark&&ii.measure?ii:{mark:al,measure:al},An='FA "6.1.1"',Fv=function(r){return Wa.mark("".concat(An," ").concat(r," begins")),function(){return vu(r)}},vu=function(r){Wa.mark("".concat(An," ").concat(r," ends")),Wa.measure("".concat(An," ").concat(r),"".concat(An," ").concat(r," begins"),"".concat(An," ").concat(r," ends"))},Vo={begin:Fv,end:vu},ci=function(){};function ol(e){var r=e.getAttribute?e.getAttribute(Gr):null;return typeof r=="string"}function Ov(e){var r=e.getAttribute?e.getAttribute(Mo):null,a=e.getAttribute?e.getAttribute(zo):null;return r&&a}function Iv(e){return e&&e.classList&&e.classList.contains&&e.classList.contains(Ve.replacementClass)}function Mv(){if(Ve.autoReplaceSvg===!0)return hi.replace;var e=hi[Ve.autoReplaceSvg];return e||hi.replace}function zv(e){return st.createElementNS("http://www.w3.org/2000/svg",e)}function Tv(e){return st.createElement(e)}function mu(e){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},a=r.ceFn,t=a===void 0?e.tag==="svg"?zv:Tv:a;if(typeof e=="string")return st.createTextNode(e);var d=t(e.tag);Object.keys(e.attributes||[]).forEach(function(v){d.setAttribute(v,e.attributes[v])});var o=e.children||[];return o.forEach(function(v){d.appendChild(mu(v,{ceFn:t}))}),d}function Hv(e){var r=" ".concat(e.outerHTML," ");return r="".concat(r,"Font Awesome fontawesome.com "),r}var hi={replace:function(r){var a=r[0];if(a.parentNode)if(r[1].forEach(function(d){a.parentNode.insertBefore(mu(d),a)}),a.getAttribute(Gr)===null&&Ve.keepOriginalSource){var t=st.createComment(Hv(a));a.parentNode.replaceChild(t,a)}else a.remove()},nest:function(r){var a=r[0],t=r[1];if(~Ho(a).indexOf(Ve.replacementClass))return hi.replace(r);var d=new RegExp("".concat(Ve.familyPrefix,"-.*"));if(delete t[0].attributes.id,t[0].attributes.class){var o=t[0].attributes.class.split(" ").reduce(function(h,g){return g===Ve.replacementClass||g.match(d)?h.toSvg.push(g):h.toNode.push(g),h},{toNode:[],toSvg:[]});t[0].attributes.class=o.toSvg.join(" "),o.toNode.length===0?a.removeAttribute("class"):a.setAttribute("class",o.toNode.join(" "))}var v=t.map(function(h){return qn(h)}).join(`
`);a.setAttribute(Gr,""),a.innerHTML=v}};function sl(e){e()}function gu(e,r){var a=typeof r=="function"?r:ci;if(e.length===0)a();else{var t=sl;Ve.mutateApproach===Zp&&(t=xr.requestAnimationFrame||sl),t(function(){var d=Mv(),o=Vo.begin("mutate");e.map(d),o(),a()})}}var Lo=!1;function bu(){Lo=!0}function Ka(){Lo=!1}var zi=null;function ll(e){if(!!_s&&!!Ve.observeMutations){var r=e.treeCallback,a=r===void 0?ci:r,t=e.nodeCallback,d=t===void 0?ci:t,o=e.pseudoElementsCallback,v=o===void 0?ci:o,h=e.observeMutationsRoot,g=h===void 0?st:h;zi=new _s(function(b){if(!Lo){var u=Ar();vn(b).forEach(function(f){if(f.type==="childList"&&f.addedNodes.length>0&&!ol(f.addedNodes[0])&&(Ve.searchPseudoElements&&v(f.target),a(f.target)),f.type==="attributes"&&f.target.parentNode&&Ve.searchPseudoElements&&v(f.target.parentNode),f.type==="attributes"&&ol(f.target)&&~Xp.indexOf(f.attributeName))if(f.attributeName==="class"&&Ov(f.target)){var s=ta(Ho(f.target)),i=s.prefix,n=s.iconName;f.target.setAttribute(Mo,i||u),n&&f.target.setAttribute(zo,n)}else Iv(f.target)&&d(f.target)})}}),hr&&zi.observe(g,{childList:!0,attributes:!0,characterData:!0,subtree:!0})}}function Bv(){!zi||zi.disconnect()}function Dv(e){var r=e.getAttribute("style"),a=[];return r&&(a=r.split(";").reduce(function(t,d){var o=d.split(":"),v=o[0],h=o.slice(1);return v&&h.length>0&&(t[v]=h.join(":").trim()),t},{})),a}function Zv(e){var r=e.getAttribute("data-prefix"),a=e.getAttribute("data-icon"),t=e.innerText!==void 0?e.innerText.trim():"",d=ta(Ho(e));return d.prefix||(d.prefix=Ar()),r&&a&&(d.prefix=r,d.iconName=a),d.iconName&&d.prefix||d.prefix&&t.length>0&&(d.iconName=mv(d.prefix,e.innerText)||Zo(d.prefix,La(e.innerText))),d}function jv(e){var r=vn(e.attributes).reduce(function(d,o){return d.name!=="class"&&d.name!=="style"&&(d[o.name]=o.value),d},{}),a=e.getAttribute("title"),t=e.getAttribute("data-fa-title-id");return Ve.autoA11y&&(a?r["aria-labelledby"]="".concat(Ve.replacementClass,"-title-").concat(t||jn()):(r["aria-hidden"]="true",r.focusable="false")),r}function Gv(){return{iconName:null,title:null,titleId:null,prefix:null,transform:_t,symbol:!1,mask:{iconName:null,prefix:null,rest:[]},maskId:null,extra:{classes:[],styles:{},attributes:{}}}}function fl(e){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{styleParser:!0},a=Zv(e),t=a.iconName,d=a.prefix,o=a.rest,v=jv(e),h=Ja("parseNodeAttributes",{},e),g=r.styleParser?Dv(e):[];return Ze({iconName:t,title:e.getAttribute("title"),titleId:e.getAttribute("data-fa-title-id"),prefix:d,transform:_t,mask:{iconName:null,prefix:null,rest:[]},maskId:null,symbol:!1,extra:{classes:o,styles:g,attributes:v}},h)}var Vv=Yt.styles;function yu(e){var r=Ve.autoReplaceSvg==="nest"?fl(e,{styleParser:!1}):fl(e);return~r.extra.classes.indexOf(tu)?ur("generateLayersText",e,r):ur("generateSvgReplacementMutation",e,r)}function ul(e){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;if(!hr)return Promise.resolve();var a=st.documentElement.classList,t=function(f){return a.add("".concat($s,"-").concat(f))},d=function(f){return a.remove("".concat($s,"-").concat(f))},o=Ve.autoFetchSvg?Object.keys(To):Object.keys(Vv),v=[".".concat(tu,":not([").concat(Gr,"])")].concat(o.map(function(u){return".".concat(u,":not([").concat(Gr,"])")})).join(", ");if(v.length===0)return Promise.resolve();var h=[];try{h=vn(e.querySelectorAll(v))}catch{}if(h.length>0)t("pending"),d("complete");else return Promise.resolve();var g=Vo.begin("onTree"),b=h.reduce(function(u,f){try{var s=yu(f);s&&u.push(s)}catch(i){$f||i.name==="MissingIcon"&&console.error(i)}return u},[]);return new Promise(function(u,f){Promise.all(b).then(function(s){gu(s,function(){t("active"),t("complete"),d("pending"),typeof r=="function"&&r(),g(),u()})}).catch(function(s){g(),f(s)})})}function Lv(e){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;yu(e).then(function(a){a&&gu([a],r)})}function Yv(e){return function(r){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},t=(r||{}).icon?r:Xa(r||{}),d=a.mask;return d&&(d=(d||{}).icon?d:Xa(d||{})),e(t,Ze(Ze({},a),{},{mask:d}))}}var Jv=function(r){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},t=a.transform,d=t===void 0?_t:t,o=a.symbol,v=o===void 0?!1:o,h=a.mask,g=h===void 0?null:h,b=a.maskId,u=b===void 0?null:b,f=a.title,s=f===void 0?null:f,i=a.titleId,n=i===void 0?null:i,p=a.classes,y=p===void 0?[]:p,l=a.attributes,m=l===void 0?{}:l,c=a.styles,w=c===void 0?{}:c;if(!!r){var x=r.prefix,A=r.iconName,N=r.icon;return ra(Ze({type:"icon"},r),function(){return Vr("beforeDOMElementCreation",{iconDefinition:r,params:a}),Ve.autoA11y&&(s?m["aria-labelledby"]="".concat(Ve.replacementClass,"-title-").concat(n||jn()):(m["aria-hidden"]="true",m.focusable="false")),Go({icons:{main:qa(N),mask:g?qa(g.icon):{found:!1,width:null,height:null,icon:{}}},prefix:x,iconName:A,transform:Ze(Ze({},_t),d),symbol:v,title:s,maskId:u,titleId:n,extra:{attributes:m,styles:w,classes:y}})})}},Xv={mixout:function(){return{icon:Yv(Jv)}},hooks:function(){return{mutationObserverCallbacks:function(a){return a.treeCallback=ul,a.nodeCallback=Lv,a}}},provides:function(r){r.i2svg=function(a){var t=a.node,d=t===void 0?st:t,o=a.callback,v=o===void 0?function(){}:o;return ul(d,v)},r.generateSvgReplacementMutation=function(a,t){var d=t.iconName,o=t.title,v=t.titleId,h=t.prefix,g=t.transform,b=t.symbol,u=t.mask,f=t.maskId,s=t.extra;return new Promise(function(i,n){Promise.all([Ua(d,h),u.iconName?Ua(u.iconName,u.prefix):Promise.resolve({found:!1,width:512,height:512,icon:{}})]).then(function(p){var y=Oo(p,2),l=y[0],m=y[1];i([a,Go({icons:{main:l,mask:m},prefix:h,iconName:d,transform:g,symbol:b,maskId:f,title:o,titleId:v,extra:s,watchable:!0})])}).catch(n)})},r.generateAbstractIcon=function(a){var t=a.children,d=a.attributes,o=a.main,v=a.transform,h=a.styles,g=$i(h);g.length>0&&(d.style=g);var b;return Bo(v)&&(b=ur("generateAbstractTransformGrouping",{main:o,transform:v,containerWidth:o.width,iconWidth:o.width})),t.push(b||o.icon),{children:t,attributes:d}}}},qv={mixout:function(){return{layer:function(a){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},d=t.classes,o=d===void 0?[]:d;return ra({type:"layer"},function(){Vr("beforeDOMElementCreation",{assembler:a,params:t});var v=[];return a(function(h){Array.isArray(h)?h.map(function(g){v=v.concat(g.abstract)}):v=v.concat(h.abstract)}),[{tag:"span",attributes:{class:["".concat(Ve.familyPrefix,"-layers")].concat(_i(o)).join(" ")},children:v}]})}}}},Uv={mixout:function(){return{counter:function(a){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},d=t.title,o=d===void 0?null:d,v=t.classes,h=v===void 0?[]:v,g=t.attributes,b=g===void 0?{}:g,u=t.styles,f=u===void 0?{}:u;return ra({type:"counter",content:a},function(){return Vr("beforeDOMElementCreation",{content:a,params:t}),Sv({content:a.toString(),title:o,extra:{attributes:b,styles:f,classes:["".concat(Ve.familyPrefix,"-layers-counter")].concat(_i(h))}})})}}}},Wv={mixout:function(){return{text:function(a){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},d=t.transform,o=d===void 0?_t:d,v=t.title,h=v===void 0?null:v,g=t.classes,b=g===void 0?[]:g,u=t.attributes,f=u===void 0?{}:u,s=t.styles,i=s===void 0?{}:s;return ra({type:"text",content:a},function(){return Vr("beforeDOMElementCreation",{content:a,params:t}),il({content:a,transform:Ze(Ze({},_t),o),title:h,extra:{attributes:f,styles:i,classes:["".concat(Ve.familyPrefix,"-layers-text")].concat(_i(b))}})})}}},provides:function(r){r.generateLayersText=function(a,t){var d=t.title,o=t.transform,v=t.extra,h=null,g=null;if(Kf){var b=parseInt(getComputedStyle(a).fontSize,10),u=a.getBoundingClientRect();h=u.width/b,g=u.height/b}return Ve.autoA11y&&!d&&(v.attributes["aria-hidden"]="true"),Promise.resolve([a,il({content:a.innerHTML,width:h,height:g,transform:o,title:d,extra:v,watchable:!0})])}}},Kv=new RegExp('"',"ug"),cl=[1105920,1112319];function Qv(e){var r=e.replace(Kv,""),a=uv(r,0),t=a>=cl[0]&&a<=cl[1],d=r.length===2?r[0]===r[1]:!1;return{value:La(d?r[0]:r),isSecondary:t||d}}function hl(e,r){var a="".concat(Dp).concat(r.replace(":","-"));return new Promise(function(t,d){if(e.getAttribute(a)!==null)return t();var o=vn(e.children),v=o.filter(function(A){return A.getAttribute(Va)===r})[0],h=xr.getComputedStyle(e,r),g=h.getPropertyValue("font-family").match(Lp),b=h.getPropertyValue("font-weight"),u=h.getPropertyValue("content");if(v&&!g)return e.removeChild(v),t();if(g&&u!=="none"&&u!==""){var f=h.getPropertyValue("content"),s=~["Solid","Regular","Light","Thin","Duotone","Brands","Kit"].indexOf(g[2])?Ii[g[2].toLowerCase()]:Yp[b],i=Qv(f),n=i.value,p=i.isSecondary,y=g[0].startsWith("FontAwesome"),l=Zo(s,n),m=l;if(y){var c=gv(n);c.iconName&&c.prefix&&(l=c.iconName,s=c.prefix)}if(l&&!p&&(!v||v.getAttribute(Mo)!==s||v.getAttribute(zo)!==m)){e.setAttribute(a,m),v&&e.removeChild(v);var w=Gv(),x=w.extra;x.attributes[Va]=r,Ua(l,s).then(function(A){var N=Go(Ze(Ze({},w),{},{icons:{main:A,mask:jo()},prefix:s,iconName:m,extra:x,watchable:!0})),E=st.createElement("svg");r==="::before"?e.insertBefore(E,e.firstChild):e.appendChild(E),E.outerHTML=N.map(function(k){return qn(k)}).join(`
`),e.removeAttribute(a),t()}).catch(d)}else t()}else t()})}function _v(e){return Promise.all([hl(e,"::before"),hl(e,"::after")])}function $v(e){return e.parentNode!==document.head&&!~jp.indexOf(e.tagName.toUpperCase())&&!e.getAttribute(Va)&&(!e.parentNode||e.parentNode.tagName!=="svg")}function dl(e){if(!!hr)return new Promise(function(r,a){var t=vn(e.querySelectorAll("*")).filter($v).map(_v),d=Vo.begin("searchPseudoElements");bu(),Promise.all(t).then(function(){d(),Ka(),r()}).catch(function(){d(),Ka(),a()})})}var e1={hooks:function(){return{mutationObserverCallbacks:function(a){return a.pseudoElementsCallback=dl,a}}},provides:function(r){r.pseudoElements2svg=function(a){var t=a.node,d=t===void 0?st:t;Ve.searchPseudoElements&&dl(d)}}},pl=!1,t1={mixout:function(){return{dom:{unwatch:function(){bu(),pl=!0}}}},hooks:function(){return{bootstrap:function(){ll(Ja("mutationObserverCallbacks",{}))},noAuto:function(){Bv()},watch:function(a){var t=a.observeMutationsRoot;pl?Ka():ll(Ja("mutationObserverCallbacks",{observeMutationsRoot:t}))}}}},vl=function(r){var a={size:16,x:0,y:0,flipX:!1,flipY:!1,rotate:0};return r.toLowerCase().split(" ").reduce(function(t,d){var o=d.toLowerCase().split("-"),v=o[0],h=o.slice(1).join("-");if(v&&h==="h")return t.flipX=!0,t;if(v&&h==="v")return t.flipY=!0,t;if(h=parseFloat(h),isNaN(h))return t;switch(v){case"grow":t.size=t.size+h;break;case"shrink":t.size=t.size-h;break;case"left":t.x=t.x-h;break;case"right":t.x=t.x+h;break;case"up":t.y=t.y-h;break;case"down":t.y=t.y+h;break;case"rotate":t.rotate=t.rotate+h;break}return t},a)},r1={mixout:function(){return{parse:{transform:function(a){return vl(a)}}}},hooks:function(){return{parseNodeAttributes:function(a,t){var d=t.getAttribute("data-fa-transform");return d&&(a.transform=vl(d)),a}}},provides:function(r){r.generateAbstractTransformGrouping=function(a){var t=a.main,d=a.transform,o=a.containerWidth,v=a.iconWidth,h={transform:"translate(".concat(o/2," 256)")},g="translate(".concat(d.x*32,", ").concat(d.y*32,") "),b="scale(".concat(d.size/16*(d.flipX?-1:1),", ").concat(d.size/16*(d.flipY?-1:1),") "),u="rotate(".concat(d.rotate," 0 0)"),f={transform:"".concat(g," ").concat(b," ").concat(u)},s={transform:"translate(".concat(v/2*-1," -256)")},i={outer:h,inner:f,path:s};return{tag:"g",attributes:Ze({},i.outer),children:[{tag:"g",attributes:Ze({},i.inner),children:[{tag:t.icon.tag,children:t.icon.children,attributes:Ze(Ze({},t.icon.attributes),i.path)}]}]}}}},ba={x:0,y:0,width:"100%",height:"100%"};function ml(e){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return e.attributes&&(e.attributes.fill||r)&&(e.attributes.fill="black"),e}function n1(e){return e.tag==="g"?e.children:[e]}var i1={hooks:function(){return{parseNodeAttributes:function(a,t){var d=t.getAttribute("data-fa-mask"),o=d?ta(d.split(" ").map(function(v){return v.trim()})):jo();return o.prefix||(o.prefix=Ar()),a.mask=o,a.maskId=t.getAttribute("data-fa-mask-id"),a}}},provides:function(r){r.generateAbstractMask=function(a){var t=a.children,d=a.attributes,o=a.main,v=a.mask,h=a.maskId,g=a.transform,b=o.width,u=o.icon,f=v.width,s=v.icon,i=rv({transform:g,containerWidth:f,iconWidth:b}),n={tag:"rect",attributes:Ze(Ze({},ba),{},{fill:"white"})},p=u.children?{children:u.children.map(ml)}:{},y={tag:"g",attributes:Ze({},i.inner),children:[ml(Ze({tag:u.tag,attributes:Ze(Ze({},u.attributes),i.path)},p))]},l={tag:"g",attributes:Ze({},i.outer),children:[y]},m="mask-".concat(h||jn()),c="clip-".concat(h||jn()),w={tag:"mask",attributes:Ze(Ze({},ba),{},{id:m,maskUnits:"userSpaceOnUse",maskContentUnits:"userSpaceOnUse"}),children:[n,l]},x={tag:"defs",children:[{tag:"clipPath",attributes:{id:c},children:n1(s)},w]};return t.push(x,{tag:"rect",attributes:Ze({fill:"currentColor","clip-path":"url(#".concat(c,")"),mask:"url(#".concat(m,")")},ba)}),{children:t,attributes:d}}}},a1={provides:function(r){var a=!1;xr.matchMedia&&(a=xr.matchMedia("(prefers-reduced-motion: reduce)").matches),r.missingIconAbstract=function(){var t=[],d={fill:"currentColor"},o={attributeType:"XML",repeatCount:"indefinite",dur:"2s"};t.push({tag:"path",attributes:Ze(Ze({},d),{},{d:"M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"})});var v=Ze(Ze({},o),{},{attributeName:"opacity"}),h={tag:"circle",attributes:Ze(Ze({},d),{},{cx:"256",cy:"364",r:"28"}),children:[]};return a||h.children.push({tag:"animate",attributes:Ze(Ze({},o),{},{attributeName:"r",values:"28;14;28;28;14;28;"})},{tag:"animate",attributes:Ze(Ze({},v),{},{values:"1;0;1;1;0;1;"})}),t.push(h),t.push({tag:"path",attributes:Ze(Ze({},d),{},{opacity:"1",d:"M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"}),children:a?[]:[{tag:"animate",attributes:Ze(Ze({},v),{},{values:"1;0;0;0;0;1;"})}]}),a||t.push({tag:"path",attributes:Ze(Ze({},d),{},{opacity:"0",d:"M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"}),children:[{tag:"animate",attributes:Ze(Ze({},v),{},{values:"0;0;1;1;0;0;"})}]}),{tag:"g",attributes:{class:"missing"},children:t}}}},o1={hooks:function(){return{parseNodeAttributes:function(a,t){var d=t.getAttribute("data-fa-symbol"),o=d===null?!1:d===""?!0:d;return a.symbol=o,a}}}},s1=[av,Xv,qv,Uv,Wv,e1,t1,r1,i1,a1,o1];wv(s1,{mixoutsTo:Zt});Zt.noAuto;var wu=Zt.config;Zt.library;Zt.dom;var xu=Zt.parse;Zt.findIconDefinition;Zt.toHtml;var l1=Zt.icon;Zt.layer;var f1=Zt.text;Zt.counter;var u1=typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function c1(e,r){return r={exports:{}},e(r,r.exports),r.exports}var h1=c1(function(e){(function(r){var a=function(l,m,c){if(!b(m)||f(m)||s(m)||i(m)||g(m))return m;var w,x=0,A=0;if(u(m))for(w=[],A=m.length;x<A;x++)w.push(a(l,m[x],c));else{w={};for(var N in m)Object.prototype.hasOwnProperty.call(m,N)&&(w[l(N,c)]=a(l,m[N],c))}return w},t=function(l,m){m=m||{};var c=m.separator||"_",w=m.split||/(?=[A-Z])/;return l.split(w).join(c)},d=function(l){return n(l)?l:(l=l.replace(/[\-_\s]+(.)?/g,function(m,c){return c?c.toUpperCase():""}),l.substr(0,1).toLowerCase()+l.substr(1))},o=function(l){var m=d(l);return m.substr(0,1).toUpperCase()+m.substr(1)},v=function(l,m){return t(l,m).toLowerCase()},h=Object.prototype.toString,g=function(l){return typeof l=="function"},b=function(l){return l===Object(l)},u=function(l){return h.call(l)=="[object Array]"},f=function(l){return h.call(l)=="[object Date]"},s=function(l){return h.call(l)=="[object RegExp]"},i=function(l){return h.call(l)=="[object Boolean]"},n=function(l){return l=l-0,l===l},p=function(l,m){var c=m&&"process"in m?m.process:m;return typeof c!="function"?l:function(w,x){return c(w,l,x)}},y={camelize:d,decamelize:v,pascalize:o,depascalize:v,camelizeKeys:function(l,m){return a(p(d,m),l)},decamelizeKeys:function(l,m){return a(p(v,m),l,m)},pascalizeKeys:function(l,m){return a(p(o,m),l)},depascalizeKeys:function(){return this.decamelizeKeys.apply(this,arguments)}};e.exports?e.exports=y:r.humps=y})(u1)}),d1=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Pn=function(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e},Ti=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var a=arguments[r];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e},p1=function(e,r){var a={};for(var t in e)r.indexOf(t)>=0||!Object.prototype.hasOwnProperty.call(e,t)||(a[t]=e[t]);return a},Qa=function(e){if(Array.isArray(e)){for(var r=0,a=Array(e.length);r<e.length;r++)a[r]=e[r];return a}else return Array.from(e)};function v1(e){return e.split(";").map(function(r){return r.trim()}).filter(function(r){return r}).reduce(function(r,a){var t=a.indexOf(":"),d=h1.camelize(a.slice(0,t)),o=a.slice(t+1).trim();return r[d]=o,r},{})}function m1(e){return e.split(/\s+/).reduce(function(r,a){return r[a]=!0,r},{})}function Yo(e){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};if(typeof e=="string")return e;var t=(e.children||[]).map(function(g){return Yo(g)}),d=Object.keys(e.attributes||{}).reduce(function(g,b){var u=e.attributes[b];switch(b){case"class":g.class=m1(u);break;case"style":g.style=v1(u);break;default:g.attrs[b]=u}return g},{attrs:{},class:{},style:{}});a.class;var o=a.style,v=o===void 0?{}:o,h=p1(a,["class","style"]);return sn(e.tag,Ti({},r,{class:d.class,style:Ti({},d.style,v)},d.attrs,h),t)}var Au=!1;try{Au=!0}catch{}function g1(){if(!Au&&console&&typeof console.error=="function"){var e;(e=console).error.apply(e,arguments)}}function On(e,r){return Array.isArray(r)&&r.length>0||!Array.isArray(r)&&r?Pn({},e,r):{}}function b1(e){var r,a=(r={"fa-spin":e.spin,"fa-pulse":e.pulse,"fa-fw":e.fixedWidth,"fa-border":e.border,"fa-li":e.listItem,"fa-inverse":e.inverse,"fa-flip-horizontal":e.flip==="horizontal"||e.flip==="both","fa-flip-vertical":e.flip==="vertical"||e.flip==="both"},Pn(r,"fa-"+e.size,e.size!==null),Pn(r,"fa-rotate-"+e.rotation,e.rotation!==null),Pn(r,"fa-pull-"+e.pull,e.pull!==null),Pn(r,"fa-swap-opacity",e.swapOpacity),r);return Object.keys(a).map(function(t){return a[t]?t:null}).filter(function(t){return t})}function gl(e){if(e===null)return null;if((typeof e=="undefined"?"undefined":d1(e))==="object"&&e.prefix&&e.iconName)return e;if(Array.isArray(e)&&e.length===2)return{prefix:e[0],iconName:e[1]};if(typeof e=="string")return{prefix:"fas",iconName:e}}var y1=Xr({name:"FontAwesomeIcon",props:{border:{type:Boolean,default:!1},fixedWidth:{type:Boolean,default:!1},flip:{type:String,default:null,validator:function(r){return["horizontal","vertical","both"].indexOf(r)>-1}},icon:{type:[Object,Array,String],required:!0},mask:{type:[Object,Array,String],default:null},listItem:{type:Boolean,default:!1},pull:{type:String,default:null,validator:function(r){return["right","left"].indexOf(r)>-1}},pulse:{type:Boolean,default:!1},rotation:{type:[String,Number],default:null,validator:function(r){return[90,180,270].indexOf(Number.parseInt(r,10))>-1}},swapOpacity:{type:Boolean,default:!1},size:{type:String,default:null,validator:function(r){return["lg","xs","sm","1x","2x","3x","4x","5x","6x","7x","8x","9x","10x"].indexOf(r)>-1}},spin:{type:Boolean,default:!1},transform:{type:[String,Object],default:null},symbol:{type:[Boolean,String],default:!1},title:{type:String,default:null},inverse:{type:Boolean,default:!1}},setup:function(r,a){var t=a.attrs,d=Ye(function(){return gl(r.icon)}),o=Ye(function(){return On("classes",b1(r))}),v=Ye(function(){return On("transform",typeof r.transform=="string"?xu.transform(r.transform):r.transform)}),h=Ye(function(){return On("mask",gl(r.mask))}),g=Ye(function(){return l1(d.value,Ti({},o.value,v.value,h.value,{symbol:r.symbol,title:r.title}))});et(g,function(u){if(!u)return g1("Could not find one or more icon(s)",d.value,h.value)},{immediate:!0});var b=Ye(function(){return g.value?Yo(g.value.abstract[0],{},t):null});return function(){return b.value}}});Xr({name:"FontAwesomeLayers",props:{fixedWidth:{type:Boolean,default:!1}},setup:function(r,a){var t=a.slots,d=wu.familyPrefix,o=Ye(function(){return[d+"-layers"].concat(Qa(r.fixedWidth?[d+"-fw"]:[]))});return function(){return sn("div",{class:o.value},t.default?t.default():[])}}});Xr({name:"FontAwesomeLayersText",props:{value:{type:[String,Number],default:""},transform:{type:[String,Object],default:null},counter:{type:Boolean,default:!1},position:{type:String,default:null,validator:function(r){return["bottom-left","bottom-right","top-left","top-right"].indexOf(r)>-1}}},setup:function(r,a){var t=a.attrs,d=wu.familyPrefix,o=Ye(function(){return On("classes",[].concat(Qa(r.counter?[d+"-layers-counter"]:[]),Qa(r.position?[d+"-layers-"+r.position]:[])))}),v=Ye(function(){return On("transform",typeof r.transform=="string"?xu.transform(r.transform):r.transform)}),h=Ye(function(){var b=f1(r.value.toString(),Ti({},v.value,o.value)),u=b.abstract;return r.counter&&(u[0].attributes.class=u[0].attributes.class.replace("fa-layers-text","")),u[0]}),g=Ye(function(){return Yo(h.value,{},t)});return function(){return g.value}}});const w1={name:"BaseIcon",components:{FontAwesomeIcon:y1},props:{icon:{type:Object,required:!0}}},x1={class:"base-icon"};function A1(e,r,a,t,d,o){const v=it("FontAwesomeIcon");return We(),ct("div",x1,[mt(e.$slots,"default",{},()=>[Je(v,{"fixed-width":!0,icon:a.icon},null,8,["icon"])],!0),mt(e.$slots,"tooltip",{},void 0,!0)])}var mn=jt(w1,[["render",A1],["__scopeId","data-v-50cc951a"]]);const P1={name:"BaseItems",components:{BaseIcon:mn},emits:["remove:selection"],setup(e,{emit:r}){function a(t){r("remove:selection",t)}return{onClickRemoveOption:a}}},N1={class:"field-tags-wrapper"},E1={class:"item-text"};function k1(e,r,a,t,d,o){const v=it("BaseIcon");return We(),ct("div",N1,[ot("span",E1,[mt(e.$slots,"default")]),Je(v,{icon:e.Icon.Close,class:"fields-tags-close-icon",onClick:t.onClickRemoveOption},null,8,["icon","onClick"])])}var S1=jt(P1,[["render",k1]]);const C1={name:"BaseButton",emits:["update:toggled"],components:{BaseIcon:mn},props:{text:{type:String,default:""},icon:{type:String,default:""},toggleable:{type:Boolean,default:!1},toggled:{type:Boolean,default:!1}},setup(e,{emit:r}){const a=Ue(null),t=Ue(e.toggled);function d({target:g,pointerId:b}){g.setPointerCapture(b)}function o(){var g;t.value||(g=a.value)==null||g.blur()}function v({target:g,pointerId:b}){g.releasePointerCapture(b),e.toggleable&&(t.value=!t.value,r("update:toggled",t.value)),o()}et(t,()=>o()),et(()=>e.toggled,g=>t.value=g),et(()=>e.toggleable,g=>{g||(t.value=!1)});const h=Ye(()=>{const g=[];return t.value&&g.push("toggled"),g});return{element:a,elementCls:h,onMouseUpButton:v,onMouseDownButton:d}}},R1={class:"base-button-text"};function F1(e,r,a,t,d,o){const v=it("BaseIcon");return We(),ct("button",{ref:"element",class:Bt(["base-button",t.elementCls]),onMousedown:r[0]||(r[0]=(...h)=>t.onMouseDownButton&&t.onMouseDownButton(...h)),onMouseup:r[1]||(r[1]=(...h)=>t.onMouseUpButton&&t.onMouseUpButton(...h))},[mt(e.$slots,"icon",{},()=>[a.icon?(We(),zt(v,{key:0,icon:a.icon},null,8,["icon"])):or("",!0)],!0),mt(e.$slots,"default",{},()=>[ot("span",R1,ir(a.text),1)],!0),mt(e.$slots,"menu",{},void 0,!0)],34)}var O1=jt(C1,[["render",F1],["__scopeId","data-v-b2d0edd0"]]);function Pu(e){return{required:e.required,whitespace:!e.allowEmptyWhitespace}}function Nu(e){return{required:e.required,type:e.inputType}}const I1=new dn(["left","right","top","down"],!1);let M1=1;const z1={name:"BaseField",components:{BaseLabel:Jf,BaseIcon:mn},emits:["update:modelValue","change:validity","change:dirty","click:field","blur:field","focus:field","input:field"],props:{label:{type:String,default:""},labelWidth:{type:String,default:"w-24"},modelValue:{type:[String,Number,Boolean],default:""},inputType:{type:String,default:"text"},inputCls:{type:[Object,String],default:"w-full"},inputWidth:{type:String,default:"flex-1"},labelAlign:{type:String,default:I1.Left},required:{type:Boolean,default:!1},allowEmptyWhitespace:{type:Boolean,default:!1},minLength:{type:Number,default:void 0},maxLength:{type:Number,default:void 0},minValue:{type:Number,default:void 0},maxValue:{type:Number,default:void 0},step:{type:Number,default:void 0},validateOnInit:{type:Boolean,default:!1},inputAttrsCfg:{type:Function,default:e=>Fi(Ri({},Nu(e)),{minlength:e.minLength,maxlength:e.maxLength})},rulesCfg:{type:Function,default:e=>Fi(Ri({},Pu(e)),{minLength:e.minLength?[e.minLength]:!1,maxLength:e.maxLength?[e.maxLength]:!1})},parseValue:{type:Function,default:y0},id:{type:String,default:()=>`input-${M1++}`}},setup(e,{emit:r}){const a=Ue(null),t=Ue(null),d=Ye(()=>e.rulesCfg(e)),o=Tf(e.label||`field-${e.inputType}`,d,{initialValue:e.modelValue,validateOnMount:e.validateOnInit,type:e.inputType,checkedValue:!0,uncheckedValue:!1});o.setTouched(e.validateOnInit);function v(p){r("update:modelValue",p)}et(Ye(()=>e.modelValue),p=>{o.handleChange(p,!1)});const h=Ye(()=>({"field-invalid":o.meta.touched&&o.meta.valid===!1}));et(d,async p=>{p&&(await Ir(),await o.validate())}),et(Ye(()=>o.meta.valid),p=>{o.meta.touched&&r("change:validity",p)}),et(Ye(()=>o.meta.dirty),p=>{o.meta.touched&&r("change:dirty",p)});const g=Ye(()=>o.errors.value),b=Ye(()=>o.meta.touched&&g.value.length);function u(p){r("click:field",p)}function f(p){r("input:field",p.target.value)}function s(){a.value.select(),r("focus:field")}function i(){o.setTouched(!0);const p=e.parseValue(e.modelValue);p!==e.modelValue&&v(p),o.validate(),r("blur:field")}const n=Ye({get(){return o.value.value},set(p){v(p)}});return{field:o,value:n,inputWrapper:t,inputWrapperCls:h,fieldErrors:g,showErrors:b,inputEl:a,onBlurField:i,onFocusField:s,onClickField:u,onInputField:f,inputAttrs:e.inputAttrsCfg(e)}}},T1=["id"];function H1(e,r,a,t,d,o){const v=it("BaseLabel"),h=it("BaseIcon");return We(),ct("div",{class:Bt(["base-field",a.labelAlign])},[a.label?(We(),zt(v,{key:0,value:a.label,class:Bt(a.labelWidth),for:a.id},null,8,["value","class","for"])):or("",!0),ot("div",{class:Bt(["relative",a.inputWidth])},[ot("div",{ref:"inputWrapper",class:Bt(["field-text",t.inputWrapperCls])},[mt(e.$slots,"beforeItems",{},void 0,!0),Ht(ot("input",Ln(t.inputAttrs,{id:a.id,ref:"inputEl","onUpdate:modelValue":r[0]||(r[0]=g=>t.value=g),class:["field-text-input",a.inputCls],onClick:r[1]||(r[1]=(...g)=>t.onClickField&&t.onClickField(...g)),onFocus:r[2]||(r[2]=(...g)=>t.onFocusField&&t.onFocusField(...g)),onBlur:r[3]||(r[3]=(...g)=>t.onBlurField&&t.onBlurField(...g)),onInput:r[4]||(r[4]=(...g)=>t.onInputField&&t.onInputField(...g))}),null,16,T1),[[r0,t.value]]),mt(e.$slots,"afterItems",{},void 0,!0)],2),Ht(Je(h,{icon:e.Icon.AlertTriangle,class:"text-red-800"},{default:Ft(()=>[ot("ul",null,[(We(!0),ct(Pt,null,hn(t.fieldErrors,(g,b)=>(We(),ct("li",{key:b},ir(g),1))),128))])]),_:1},8,["icon"]),[[Lt,t.showErrors]])],2)],2)}var na=jt(z1,[["render",H1],["__scopeId","data-v-684bea85"]]);const B1={name:"FieldCheckBox",components:{BaseField:na},props:{parseValue:{type:Function,default:b0}}};function D1(e,r,a,t,d,o){const v=it("BaseField");return We(),zt(v,{"input-type":"checkbox","input-width":"w-auto",class:"checkbox","parse-value":a.parseValue},null,8,["parse-value"])}var Z1=jt(B1,[["render",D1],["__scopeId","data-v-92dd509a"]]);const j1={name:"FieldNumber",components:{BaseField:na},props:{step:{type:Number,default:.01},inputAttrsCfg:{type:Function,default:e=>Fi(Ri({},Nu(e)),{min:e.minValue,max:e.maxValue,step:e.step})},rulesCfg:{type:Function,default:e=>Fi(Ri({},Pu(e)),{minValue:e.minValue?[e.minValue]:!1,maxValue:e.maxValue?[e.maxValue]:!1})}},setup(){return{parseNumber:Sf}}};function G1(e,r,a,t,d,o){const v=it("BaseField");return We(),zt(v,Ln({ref:"fieldEl"},e.$props,{class:"field-number","input-type":"number","parse-value":t.parseNumber,onKeydown:[r[0]||(r[0]=Pi(fa(()=>{},["prevent"]),["down"])),r[1]||(r[1]=Pi(fa(()=>{},["prevent"]),["up"]))],onWheel:r[2]||(r[2]=fa(()=>{},["prevent"]))}),yh({_:2},[hn(e.$slots,(h,g)=>({name:g,fn:Ft(b=>[mt(e.$slots,g,Bu(vf(b)))])}))]),1040,["parse-value"])}var V1=jt(j1,[["render",G1]]);const L1={name:"FieldInteger",components:{FieldNumber:V1},setup(){return{parseInteger:g0}}};function Y1(e,r,a,t,d,o){const v=it("FieldNumber");return We(),zt(v,Ln(e.$props,{step:1,"parse-value":t.parseInteger}),null,16,["parse-value"])}var J1=jt(L1,[["render",Y1]]);new dn({Above:"tags-above",Below:"tags-below",Inline:"tags-inline"});const X1={name:"FieldComboBox",components:{BaseOverlay:Yf,BaseList:Sp,BaseIcon:mn,BaseItems:S1,BaseField:na},emits:["update:expanded","update:modelValue"],props:{modelValue:{type:[String,Number,Array],default:null},multiSelect:{type:Boolean,default:!1},options:{type:Array,default:()=>[]},expanded:{type:Boolean,default:!1},idField:{type:String,default:"id"},valueField:{type:String,default:"value"},maxSelectedTags:{type:Number,default:2},filterSelections:{type:Boolean,default:!1},filterFn:{type:Function,default:null}},setup(e,{emit:r}){const a=Ue(null),t=Ue(null),d=Ue(i()),o=Ue(e.expanded),v=Ue(null),h=Ue(!1),g=Ye(()=>d.value.length-e.maxSelectedTags),b=Ye(()=>g.value>0&&!h.value),u=Ye(()=>{let{options:B}=e;const{filterFn:I,valueField:Y,idField:J}=e,D=Ge(v);if(D)if(I)B=I({search:D,options:B,valueField:Y,idField:J});else{const T=new RegExp(D,"i");B=B.filter(G=>T.test(G[Y]))}if(e.multiSelect&&e.filterSelections){const T=Ge(d);er(T)||(B=B.filter(G=>T.indexOf(G)===-1))}return B}),f=Ye({get(){var B;const I=Ge(v);return er(I)?e.multiSelect?"":(B=d.value[0])==null?void 0:B[e.valueField]:I},set(B){v.value=B}}),s=Ye(()=>e.multiSelect?"multi-select":"");function i(){const B=[],{idField:I}=e;let{modelValue:Y}=e;return er(Y)||(Y=Ma(Y)?Y:[Y],Y.forEach(J=>{var D;const T=(D=e.options)==null?void 0:D.find(G=>G[I]===J);T&&B.push(T)})),B}et(()=>e.modelValue,()=>{d.value=i()},{immediate:!0}),et(()=>e.expanded,B=>{n(B)}),et(()=>e.multiSelect,B=>{var I;B||E({option:(I=d.value)==null?void 0:I[0]})});function n(B=!o.value){if(o.value=B,B){const{inputWrapper:I}=a.value,{style:Y}=t.value.$el,J=I.getBoundingClientRect();Y.top=`${J.bottom+8}px`,Y.left=`${J.left-2}px`,Y.width=`${J.width+4}px`}r("update:expanded",B)}function p(){var B;if(!e.multiSelect)return;let{modelValue:I}=e;er(I)||!er(v.value)||(I=I[I.length-1],E({option:(B=e.options)==null?void 0:B.find(Y=>Y[e.idField]===I),remove:!0}))}function y(){n()}function l(B){e.multiSelect||er(B)&&E({shouldBlur:!1})}function m(){c()}function c(){n(!1),v.value=null}function w(){n()}function x(B){E({option:B,remove:!0})}function A(B){const{target:I}=B;o.value&&Is(t.value.$el,I)?(B.stopPropagation(),B.preventDefault()):Is(a.value.$el,I)||c()}function N({target:B}){o.value&&!t.value.$el.contains(B)&&n(!1)}function E({option:B,remove:I,shouldBlur:Y=!e.multiSelect}={}){let J=null;const{multiSelect:D}=e;let{modelValue:T}=e;const G=B==null?void 0:B[e.idField];D?(Ma(T)||(T=[T]),I?J=T.filter(U=>U!==G):J=T.concat(G)):I||(J=G),Y&&c(),r("update:modelValue",J)}function k(B,I){E({option:B,remove:I})}function S(){h.value=!1}function R(){h.value=!0}function M(B,I){return h.value||I<e.maxSelectedTags}return{selections:d,showExpandTags:b,showCollapseTags:h,collapsedTagCount:g,isExpanded:o,fieldEl:a,dropdownListEl:t,displayValue:f,componentCls:s,optionsAvailable:u,isTagVisible:M,onClickPicker:w,onClickField:y,onInputField:l,onTabField:m,onUpdateSelections:k,onClickItemRemove:x,onKeyBackspace:p,onClickExpandTags:R,onClickCollapseTags:S,onMouseDownDocument:A,onScrollDocument:N}}},q1={key:0};function U1(e,r,a,t,d,o){const v=it("BaseItems"),h=it("BaseIcon"),g=it("BaseList"),b=it("BaseOverlay"),u=it("BaseField"),f=vs("mousedown-document"),s=vs("scroll-document");return Ht((We(),zt(u,{ref:"fieldEl",modelValue:t.displayValue,"onUpdate:modelValue":r[2]||(r[2]=i=>t.displayValue=i),class:Bt(["field-combo-box",t.componentCls]),onKeydown:[Pi(t.onKeyBackspace,["delete"]),Pi(t.onTabField,["tab"])],"onInput:field":t.onInputField,"onClick:field":t.onClickField},{beforeItems:Ft(()=>[a.multiSelect?(We(),ct("div",q1,[mt(e.$slots,"itemsDisplay",{},()=>[(We(!0),ct(Pt,null,hn(t.selections,(i,n)=>Ht((We(),zt(v,{key:i[a.valueField],"onRemove:selection":p=>t.onClickItemRemove(i)},{default:Ft(()=>[mf(ir(i[a.valueField]),1)]),_:2},1032,["onRemove:selection"])),[[Lt,t.isTagVisible(i,n)]])),128))],!0),Ht(ot("div",{class:"field-tags-wrapper-collapse",onClick:r[0]||(r[0]=(...i)=>t.onClickExpandTags&&t.onClickExpandTags(...i))},[ot("span",null,"+ "+ir(t.collapsedTagCount),1)],512),[[Lt,t.showExpandTags]]),Ht(ot("div",{class:"field-tags-wrapper-expand",onClick:r[1]||(r[1]=(...i)=>t.onClickCollapseTags&&t.onClickCollapseTags(...i))},[ot("span",null,"- "+ir(t.collapsedTagCount),1)],512),[[Lt,t.showCollapseTags]])])):or("",!0)]),afterItems:Ft(()=>[Je(h,{class:"field-combo-box-picker",icon:e.Icon.PickerDown,onClick:t.onClickPicker},null,8,["icon","onClick"]),Ht(Je(b,{ref:"dropdownListEl",class:"field-combo-box-list-wrapper",tabindex:"-1"},{default:Ft(()=>[mt(e.$slots,"list",{expanded:t.isExpanded,options:t.optionsAvailable,valueField:a.valueField,selections:t.selections},()=>[Je(g,{selections:t.selections,options:t.optionsAvailable,"value-field":a.valueField,"onUpdate:selections":t.onUpdateSelections},null,8,["selections","options","value-field","onUpdate:selections"])],!0)]),_:3},512),[[Lt,t.isExpanded]])]),_:3},8,["modelValue","class","onKeydown","onInput:field","onClick:field"])),[[f,t.onMouseDownDocument],[s,t.onScrollDocument]])}var W1=jt(X1,[["render",U1],["__scopeId","data-v-91b5fca2"]]);const K1={name:"BaseDialog",emits:["update:open","click:close","click:minimize","click:maximize","click:restore"],components:{BaseIcon:mn,BaseOverlay:Yf},props:{open:{type:Boolean,default:!0},minimizable:{type:Boolean,default:!0},maximizable:{type:Boolean,default:!0},title:{type:String,default:""}},setup(e,{emit:r}){const a=Ue(e.open),t=Ue(!0);et(a,f=>r("update:open",f)),et(()=>e.open,f=>{a.value=f});const d=Ye(()=>e.maximizable&&t.value),o=Ye(()=>e.maximizable&&!t.value);function v(){a.value=!1}function h(){r("click:close")}function g(){v(),t.value=!1,r("click:minimize")}function b(){t.value=!0,r("click:maximize")}function u(){t.value=!1,r("click:restore")}return{showMaximized:o,showRestoreDown:d,onClickClose:h,onClickMinimize:g,onClickMaximize:b,onClickRestoreDown:u}}},Q1={class:"base-dialog"},_1={class:"base-dialog-header"},$1={class:"base-dialog-header-title"},em={class:"base-dialog-header-toolbar"};function tm(e,r,a,t,d,o){const v=it("BaseIcon"),h=it("BaseOverlay");return We(),zt(h,null,{default:Ft(()=>[ot("div",Q1,[ot("header",_1,[mt(e.$slots,"title",{},()=>[ot("span",$1,ir(a.title),1)],!0),ot("div",em,[mt(e.$slots,"toolbar",{},void 0,!0),a.minimizable?(We(),zt(v,{key:0,icon:e.Icon.Minus,class:"base-dialog-minimize-icon toolbar",onClick:t.onClickMinimize},null,8,["icon","onClick"])):or("",!0),Ht(Je(v,{icon:e.Icon.Maximize,class:"base-dialog-maximize-icon toolbar",onClick:t.onClickMaximize},null,8,["icon","onClick"]),[[Lt,t.showMaximized]]),Ht(Je(v,{icon:e.Icon.Restore,class:"base-dialog-maximize-icon toolbar",onClick:t.onClickRestoreDown},null,8,["icon","onClick"]),[[Lt,t.showRestoreDown]]),Je(v,{icon:e.Icon.Close,class:"base-dialog-close-icon toolbar",onClick:t.onClickClose},null,8,["icon","onClick"])])]),mt(e.$slots,"body",{},void 0,!0),mt(e.$slots,"footer",{},void 0,!0)])]),_:3})}var rm=jt(K1,[["render",tm],["__scopeId","data-v-25732f10"]]);const nm={name:"BaseGrid",components:{BaseField:na,BaseContextMenu:cp,BaseDialog:rm},inheritAttrs:!1,props:{cells:{type:Array,default:()=>[]},totalRows:{type:Number,required:!0},totalColumns:{type:Number,required:!0},selectedCell:{type:Object,default:()=>null},getCellColor:{type:Function,default:()=>null},showGridLines:{type:Boolean,default:!0}},emits:["update:selectedCell","replaceCell"],setup(e,{emit:r}){const a=Ue(null),t=Ue(null),d=Ue(null),o=Ue("Hello"),v=Hr("pressedKeys"),h=Ue("cursor-pointer"),g=Ue(null),b=Ue(null),u=Ue(null),f=Ue(null),s=Ue(!1);et(()=>v.shift||v.ctrl,()=>{v.shift?h.value="cursor-cell":v.ctrl?h.value="cursor-copy":h.value="cursor-pointer"}),et(()=>v.copy,w=>{w&&(g.value=e.selectedCell)}),et(()=>v.paste,w=>{const x=e.selectedCell,A=g.value;if(w&&x&&A&&x!==A){const N=e.cells.indexOf(x);r("replaceCell",{indices:N,replacement:A})}});function i(w){let x=!1;if(e.selectedCell&&v.shift){const A=w.y,N=w.x;let E=e.selectedCell.x,k=e.selectedCell.y,S=b.value.x,R=b.value.y;E>S&&(E=S,S=e.selectedCell.x),k>R&&(k=R,R=e.selectedCell.y),N<=S&&A<=R&&N>=E&&A>=k&&(x=!0)}return{[`grid-cell row-start-${e.totalRows-w.y}`]:!0,"grid-cell-selected":w===e.selectedCell,"grid-cell-hover":x,[h.value]:!0}}function n(){const w=[],x=e.totalColumns,A=e.selectedCell;let N=A.x,E=A.y,k=b.value.x,S=b.value.y;N>k&&(N=k,k=A.x),E>S&&(E=S,S=A.y);for(let R=N;R<=k;R++)for(let M=E;M<=S;M++){const B=R+M*x;B!==A.getIndex()&&w.push(B)}return w}function p(w,x){const A=e.selectedCell;if(v.ctrl&&v.mouseDown&&A){r("replaceCell",{indices:x.getIndex(),replacement:A});return}if(v.shift){const N=n();r("replaceCell",{indices:N,replacement:A}),document.getSelection().removeAllRanges();return}x===A&&(x=null),r("update:selectedCell",x)}function y(w){t.value.show(w)}function l(){t.value.hide()}function m(w){b.value=w,u.value=w.y,f.value=w.x}cn(()=>{c(e.showGridLines)}),et(()=>e.showGridLines,w=>{c(w)});function c(w){w?a.value.classList.add("grid-show-lines"):a.value.classList.remove("grid-show-lines")}return{contextMenu:t,self:a,showTestDialog:s,testDialog:d,testValue:o,activeCursor:h,getCellCls:i,pressedKeys:v,onMouseUpCell:p,onContextMenuCell:y,onMouseOverCell:m,onClickTilesMenu(){s.value=!0,l()}}}},im=["onMouseup","onMouseover"],am=["src"];function om(e,r,a,t,d,o){const v=it("BaseContextMenu"),h=it("BaseField"),g=it("BaseDialog");return We(),ct(Pt,null,[ot("div",Ln({ref:"self",class:"base-grid"},e.$attrs),[(We(!0),ct(Pt,null,hn(a.cells,b=>(We(),ct("div",{key:b.id,class:Bt(t.getCellCls(b)),style:Gn(a.getCellColor()),onMouseup:u=>t.onMouseUpCell(u,b),onContextmenu:r[0]||(r[0]=(...u)=>t.onContextMenuCell&&t.onContextMenuCell(...u)),onMouseover:u=>t.onMouseOverCell(b)},[b.tileImage?(We(),ct("img",{key:0,src:b.tileImage,class:"w-full h-full"},null,8,am)):or("",!0)],46,im))),128))],16),Je(v,{ref:"contextMenu"},{default:Ft(()=>[ot("ul",null,[ot("li",{class:"context-menu-item",onClick:r[1]||(r[1]=(...b)=>t.onClickTilesMenu&&t.onClickTilesMenu(...b))}," Tiles ")])]),_:1},512),Ht(Je(g,{ref:"testDialog",open:t.showTestDialog,"onUpdate:open":r[3]||(r[3]=b=>t.showTestDialog=b),title:"Hello World",class:"view-dialog header-blue"},{body:Ft(()=>[Je(h,{modelValue:t.testValue,"onUpdate:modelValue":r[2]||(r[2]=b=>t.testValue=b),label:"Hello"},null,8,["modelValue"])]),_:1},8,["open"]),[[Lt,t.showTestDialog]])],64)}var sm=Qi(nm,[["render",om]]);const Gt=Pr({shift:!1,ctrl:!1,copy:!1,paste:!1,mouseDown:!1});function lm(){return document.addEventListener("mousedown",wl),document.addEventListener("mouseup",xl),document.addEventListener("keydown",bl),document.addEventListener("keyup",yl),mo(()=>{document.removeEventListener("mousedown",wl),document.removeEventListener("mouseup",xl),document.removeEventListener("keydown",bl),document.removeEventListener("keyup",yl)}),Gt}function bl(e){Gt.shift=e.shiftKey,Gt.ctrl=e.ctrlKey,e.shiftKey&&(document.onselectstart=function(){return!1}),e.ctrlKey&&e.code==="KeyC"&&(Gt.copy=!1,setTimeout(()=>{Gt.copy=!0})),e.ctrlKey&&e.code==="KeyV"&&(Gt.paste=!1,setTimeout(()=>{Gt.paste=!0}))}function yl(e){Gt.shift=e.shiftKey,Gt.ctrl=e.ctrlKey,e.shiftKey&&(document.onselectstart=null)}function wl(){Gt.mouseDown=!0}function xl(){Gt.mouseDown=!1}const fm=new Ro({Base:-1,Plain:0,Entrance:1,Blocks2X3Columns:2,Blocks2X3Column:3,Blocks4:4,Blocks4Alt:5,Blocks1:6,BlocksX:7,Blocks3Rows:8,WaterMaze:9,BlocksAquamentus:10,Exit:11,BlocksStairsCenter:12,WaterBrackets:13,PlainStatues:14,Sand:15,BlocksStairsEnd:16,BlocksDiagonal:17,BlocksHorizontal:18,BlocksC:19,Blocks2:20,BlocksMaze:21,WaterHorizontal:22,WaterT:23,Blocks4Statues:24,BlocksGleeok:25,WaterLadder:26,Blocks6Alt:27,WaterVertical:28,Blocks3Horizontal:29,WaterRectangle:30,PlainStatues2:31,BlocksRectangle:32,WaterHorizontal2:33,BlocksSpiral:34,Ganon:35,Ending:36,Blocks2Vertical:37,Blocks6Vertical:38,Blocks4Way:39,WaterH:40,Black:41,BlocksArrow:42,WaterHAlt:43,KeepItem:44,KeepPath:45,Shop:46});const um={name:"BaseCard",components:{BaseLabel:Jf,BaseIcon:mn},props:{title:{type:String,default:""},layout:{type:String,default:"horizontal"},collapsible:{type:Boolean,default:!1}},setup(){const e=Ue(!0);function r(){e.value=!e.value}return{onClickCollapse:r,isExpanded:e}}},cm={class:"base-card-title-wrapper"},hm={class:"base-card-body"};function dm(e,r,a,t,d,o){const v=it("BaseLabel"),h=it("BaseIcon");return We(),ct("section",{class:Bt(["base-card",a.layout])},[ot("div",cm,[a.title?mt(e.$slots,"title",{key:0},()=>[Je(v,{value:a.title,separator:"",class:"base-card-title"},null,8,["value"])],!0):or("",!0),Je(h,{icon:e.Icon.PickerDown,class:"cursor-pointer",onClick:t.onClickCollapse},null,8,["icon","onClick"])]),Ht(ot("div",hm,[mt(e.$slots,"default",{},void 0,!0)],512),[[Lt,t.isExpanded]])],2)}var pm=Qi(um,[["render",dm],["__scopeId","data-v-ceb4e96e"]]);const vm={name:"App",components:{BaseCard:pm,FieldInteger:J1,BaseButton:O1,BaseGrid:sm,FieldComboBox:W1,FieldCheckBox:Z1},setup(){const e=Ue(null),r=Ue(null),a=Ue(null),t=Ue(null),d=Ye(()=>{var s;return(s=a.value)==null?void 0:s.isTransition()}),o=Ye(()=>!d.value&&a.value.Tile!==Be.None),v=Pr({groundColorsStore:Ke,accentColorsStore:Ke,screenTemplatesStore:fm,tilesStore:Be,showGridLines:!0,record:sp.initialize(11,16)});Li("pressedKeys",lm());function h(){var s;return(s=v.accentColorsStore.findRecord(v.record.GroundColor))==null?void 0:s.backgroundStyle}function g(){a.value.getTileImage()}const b=Ye(()=>[...v.record.cells]);function u({indices:s,replacement:i}){tp(s)||(s=[s],a.value=i),s.forEach(n=>{let p=v.record.cells[n];p=v.record.cells[n]=i.clone({Coordinates:p.Coordinates}),p.grid=i.grid})}function f(){console.log(v.record.getConfig())}return _o(Wn({},Pc(v)),{isTransition:d,contextMenu:e,theDialog:r,grid:t,store:b,selectedCell:a,showReplaceColors:o,getCellColor:h,WorldColors:Ke,onReplaceCell:u,onClickSaveBtn:f,onUpdateTargetValue:g})}},mm={class:"flex"},gm={class:"p-4 space-y-2"},bm={class:"flex justify-between"},ym={class:"flex justify-between space-x-4"},wm={class:"w-16 h-16 bg-blue-100"},xm=["src"];function Am(e,r,a,t,d,o){const v=it("BaseGrid"),h=it("FieldCheckBox"),g=it("BaseButton"),b=it("FieldInteger"),u=it("BaseCard"),f=it("FieldComboBox");return We(),ct("div",mm,[Je(v,{ref:"grid","selected-cell":t.selectedCell,"onUpdate:selected-cell":r[0]||(r[0]=s=>t.selectedCell=s),cells:t.store,"total-columns":e.record.totalColumns,"total-rows":e.record.totalRows,"show-grid-lines":e.showGridLines,"get-cell-color":t.getCellColor,onReplaceCell:t.onReplaceCell},null,8,["selected-cell","cells","total-columns","total-rows","show-grid-lines","get-cell-color","onReplaceCell"]),ot("div",gm,[ot("div",bm,[Je(h,{modelValue:e.showGridLines,"onUpdate:modelValue":r[1]||(r[1]=s=>e.showGridLines=s),label:"Grid Lines"},null,8,["modelValue"]),Je(g,{text:"Save",class:"justify-self-end rounded default",onClick:t.onClickSaveBtn},null,8,["onClick"])]),Je(u,{title:"Screen Coordinates"},{default:Ft(()=>[Je(b,{modelValue:e.record.X,"onUpdate:modelValue":r[2]||(r[2]=s=>e.record.X=s),label:"X","label-width":"auto","input-width":"w-12",width:"w-28"},null,8,["modelValue"]),Je(b,{modelValue:e.record.Y,"onUpdate:modelValue":r[3]||(r[3]=s=>e.record.Y=s),label:"Y","label-width":"auto","input-width":"w-12",width:"w-28"},null,8,["modelValue"])]),_:1}),Je(u,{title:"Colors"},{default:Ft(()=>[Je(f,{modelValue:e.record.GroundColor,"onUpdate:modelValue":r[4]||(r[4]=s=>e.record.GroundColor=s),label:"Ground","label-width":"auto",options:e.groundColorsStore,width:"w-28"},null,8,["modelValue","options"]),Je(f,{modelValue:e.record.AccentColor,"onUpdate:modelValue":r[5]||(r[5]=s=>e.record.AccentColor=s),label:"Accent","label-width":"auto",options:e.accentColorsStore,width:"w-28"},null,8,["modelValue","options"])]),_:1}),t.selectedCell?(We(),zt(u,{key:t.selectedCell.id,title:"Cell",layout:"vertical"},{default:Ft(()=>[ot("div",ym,[Je(f,{modelValue:t.selectedCell.Tile,"onUpdate:modelValue":r[6]||(r[6]=s=>t.selectedCell.Tile=s),label:"Tile","label-width":"auto",options:e.tilesStore},null,8,["modelValue","options"]),Ht(ot("div",wm,[t.selectedCell.tileSrc?(We(),ct("img",{key:0,src:t.selectedCell.tileSrc,class:"w-full h-full"},null,8,xm)):or("",!0)],512),[[Lt,t.showReplaceColors]])]),Ht(Je(u,{title:"Replace Colors",layout:"vertical"},{default:Ft(()=>[(We(!0),ct(Pt,null,hn(t.selectedCell.TargetColors,s=>(We(),zt(f,{key:s.id,modelValue:s.Value,"onUpdate:modelValue":[i=>s.Value=i,t.onUpdateTargetValue],label:t.WorldColors.getKey(s.Target),options:e.accentColorsStore},null,8,["modelValue","onUpdate:modelValue","label","options"]))),128))]),_:1},512),[[Lt,t.showReplaceColors]]),t.isTransition?(We(),zt(u,{key:0,title:"Transition Properties",layout:"vertical"},{default:Ft(()=>[Je(b,{modelValue:t.selectedCell.Transition.X,"onUpdate:modelValue":r[7]||(r[7]=s=>t.selectedCell.Transition.X=s),label:"X Change",width:"w-24"},null,8,["modelValue"]),Je(b,{modelValue:t.selectedCell.Transition.Y,"onUpdate:modelValue":r[8]||(r[8]=s=>t.selectedCell.Transition.Y=s),label:"Y Change",width:"w-24"},null,8,["modelValue"]),Je(f,{modelValue:t.selectedCell.Transition.TileType,"onUpdate:modelValue":r[9]||(r[9]=s=>t.selectedCell.Transition.TileType=s),label:"Tile",options:e.tilesStore},null,8,["modelValue","options"]),Je(f,{modelValue:t.selectedCell.Transition.Template,"onUpdate:modelValue":r[10]||(r[10]=s=>t.selectedCell.Transition.Template=s),label:"Template",options:e.screenTemplatesStore},null,8,["modelValue","options"]),Je(h,{modelValue:t.selectedCell.Transition.IsFloating,"onUpdate:modelValue":r[11]||(r[11]=s=>t.selectedCell.Transition.IsFloating=s),label:"Floating"},null,8,["modelValue"])]),_:1})):or("",!0)]),_:1})):or("",!0)])])}var Pm=Qi(vm,[["render",Am]]);const Eu=l0(Pm);Eu.use(Nd);Eu.mount("#app");
